CREATE OR REPLACE PACKAGE  BODY                       PKGEDMSDEALCREATIONV2_R14
is
/* Revision History:
1. Changes made by Lakshmi on 12/18/2014 for CR166557
        Issue: Deal created in V0 already Authorized.
        Fix:  Added additional condition:  to_number (a_out1) > 0  when checking for a_out3 (IF (upper(a_out3)='SUCCESS' )
2. Changes made by Lakshmi on 1/6/2014 for CR:187267 -
        Issue: IM19416651/SD21450844 GUS Ticket--Bundles are unauthorized after Revise quote for better price (TD # 2792874)
        Fix: Used variable l_line_nr to identify the line number in line_item table.
3. Changes made by Lakshmi on 1/6/2014 to fix the issue of "value larger than specified precision allowed for this column." as part of Hardening Task.
        Issue: Invalid value of requested BD Net Amount:
        Error Message: An error was encountered - -1438 -ERROR- ORA-01438: value larger than specified precision allowed for this column. Error at Line : ORA-06512: at "ECLIPSE.PKGEDMSDEALCREATIONV2_R10", line 16839
        Fix: Called function FCALCRQSTDISCPCT to fix the issue.
4. Changes made by Lakshmi on 1/14/2015 for CR:180261 --EDMS Deafult MCC Requirement Change - Need To Add Lead BU Column
        Issue: This is a design change, wherein Lead Bus Unit needed to be considered while deriving Default MC Charge.
        Fix: Changes made to consider Lead Bus Unit while deriving Default MC Charge.
        */
  --  pragma serially_reusable;
  --Global Constants for mebmssages
  C_DEAL_SOUCE_BMI              CONSTANT VARCHAR2(20)  :='BMI';
  c_m_type_warning              CONSTANT VARCHAR2(10)  :='WARNING';
  C_M_TYPE_ERROR                CONSTANT VARCHAR2(10)  :='ERROR';
  C_M_TYPE_SUCCESS              CONSTANT varchar2(10)  :='SUCCESS';
  c_m_type_info                 CONSTANT VARCHAR2(10)  :='INFO';
  c_m_err_zero_version_deal     CONSTANT VARCHAR2(100) := 'Product not found in GPSy. Cannot proceed. Only zero (0) version deal will be created' ;
  c_m_gypsy_high_price_mismatch CONSTANT VARCHAR2(100) := 'GPSy price is greater than BMI price for the product : ';--'GPSy price is greater than smart quote price for the product : ';
  c_m_gypsy_low_price_mismatch  CONSTANT VARCHAR2(100) := 'GPSy price is lesser than BMI price for the product : ' ;--'GPSy price is lesser than smart quote price for the product : ' ;
  C_M_CUST_IND_EMPTY            CONSTANT VARCHAR2(100) :='Customer Industry is mandatory for the deal and cannot be empty';
  c_m_cust_ind_invalid          CONSTANT VARCHAR2(100) :='Customer Industry does not exists in Eclipse ';
  c_deal_user_type_cd_oe        CONSTANT VARCHAR2(2)   :='OE';
  C_HIGH_TOUCH_DEALTYPE_DESC    CONSTANT VARCHAR2(15)  :='HIGH_TOUCH';
  C_LOW_TOUCH_DEALTYPE_DESC     CONSTANT VARCHAR2(15)  :='LOW_TOUCH';
  C_HT_RE_ROUTE_DEALTYPE_DESC   CONSTANT varchar2(21)  :='HIGH_TOUCH_REROUTED';
  c_request_type_add            CONSTANT VARCHAR2(3)   :='ADD';
  c_request_type_add_copy_src   constant varchar2(20)  :='ADD_COPY_SOURCE';---change New xml
  c_request_type_update         constant varchar2 (6)  :='UPDATE';
  --Bundle type constantsinsert_prod_line
  c_bundle_source_watson   CONSTANT VARCHAR2(10):='WATSON';
  c_bundle_source_ngce     constant varchar2(10):='NGCE';    --Added for ePrime and BMI
  c_bundle_source_ngce_fix CONSTANT VARCHAR2(10):='NGCE-FIX';--Added for ePrime and BMI
  c_bundle_source_ezconfig CONSTANT VARCHAR2(10):='EZCONFIG';--added for ePrime requirement
  c_bundle_source_ecfix    CONSTANT VARCHAR2(10):='EC-FIX';
  c_bundle_source_ecband   CONSTANT VARCHAR2(10):='EC-BAND';
  c_bundle_source_soft     CONSTANT VARCHAR2(10):='SOFT';
  --other global variables
  g_deal_creation_guid edms_deal_queue.deal_creation_guid%type;
  g_set_line_Authorizer_code NUMERIC(10);
  g_set_gnrc_line_authorizer NUMBER(10);
  g_line_auth_type line_item.line_auth_type%type;
  g_user_message EDMS_DEAL_ERROR_REPORT.ERROR_MSG%type;
  g_xmlnamespace VARCHAR2(32767) := 'xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://schemas.datacontract.org/2004/07/HP.Eclipse.Data.EDMS"' ; ---Used in  add_deal_comments
  g_err_src      VARCHAR2(20);                                                                                                                                    --added for generic messages
  g_deal_creator_dc_bmi deal.init_hp_emp_nr%type;
  g_default_bmi_user_id user_tab.user_id%type:='bmidef';

FUNCTION getsqtxmlvalue(
    i_xpathexpression IN VARCHAR2,
    i_guid            IN VARCHAR2 )
  RETURN VARCHAR2
  --this function returns the xml node value passed by the parameter
  -- i_xpathExpression
IS
  l_xpath_value  VARCHAR2 (2000);
  l_result       VARCHAR2 (1000);
  l_xmlnamespace VARCHAR2 (200);
BEGIN
  l_xpath_value  := i_xpathexpression || 'text()';
  l_xmlnamespace := 'xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://schemas.datacontract.org/2004/07/HP.Eclipse.Data.EDMS"' ;
  SELECT extract (xml_data_xml, l_xpath_value, l_xmlnamespace). getstringval () AS result
  INTO l_result
  FROM edms_deal_queue
  WHERE deal_creation_guid = i_guid;
  RETURN l_result;
EXCEPTION
WHEN no_data_found THEN
  --l_errors:='No data available for the deals GUID : ' || '''' ||i_guid ||'''');
  --inserterror_output_messages ( null,null, null,null, null, null, null, null, null,null,l_errors, c_m, i_deal_creation_guid, null,null,l_errors);
  raise_application_error (-20002, 'No data available for the deals GUID : ' || '''' ||i_guid ||'''');
WHEN OTHERS THEN
  raise_application_error ( -20001, 'An error was encountered - ' || SQLCODE || ' -ERROR- ' || sqlerrm);
END getsqtxmlvalue;
PROCEDURE inserterror_output_messages(
    i_bd_id IN NUMBER ,
    i_bd_nr             NUMBER,
    i_bd_version_nr     NUMBER,
    i_deal_prog_cd      VARCHAR2,
    i_bdme_aprvl_cd     VARCHAR2,
    i_quote_dist_cd     VARCHAR2,
    i_euv_stat_cd       VARCHAR2,
    i_high_risk_fl      VARCHAR2,
    i_risk_reason_desc  VARCHAR2,
    i_risk_desc         VARCHAR2,
    i_error_desc        VARCHAR2,
    i_msg_type          VARCHAR2,
    i_deal_guid         VARCHAR2,
    i_won_lost_stat_cd  VARCHAR2,
    I_QUOTE_DIST_DT_GMT DATE,
    i_user_message      VARCHAR2 )
IS
BEGIN
  --Insert messages into edms error table
  INSERT
  INTO edms_deal_error_report
    (
      deal_creation_guid,
      error_msg,
      bd_nr,
      bd_version_nr,
      bd_id,
      creation_dts
    )
    VALUES
    (
      i_deal_guid,
      i_error_desc,
      i_bd_nr,
      i_bd_version_nr,
      i_bd_id,
      sysdate
    );
  --insert messages for the output cursor.
  --insert into global temporary table.
  INSERT
  INTO gt_edms_smqt_err_results
    (
      bd_id,
      bd_nr,
      bd_version_nr,
      deal_prog_cd,
      bdme_aprvl_cd,
      quote_dist_cd,
      euv_stat_cd,
      high_risk_fl,
      risk_reason_desc,
      risk_desc,
      error_desc,
      msg_type,
      won_lost_stat_cd,
      quote_dist_dt_gmt
    )
    VALUES
    (
      NVL(i_bd_id,         -1),
      NVL(i_bd_nr,         -1),
      NVL(i_bd_version_nr ,-1),
      NVL(i_deal_prog_cd,'N') ,
      NVL(i_bdme_aprvl_cd,'N') ,
      NVL(i_quote_dist_cd,'N') ,
      NVL(i_euv_stat_cd ,'N'),
      NVL(i_high_risk_fl,'N') ,
      NVL(i_risk_reason_desc,'N') ,
      NVL(I_RISK_DESC,'N') ,
      NVL(I_USER_MESSAGE,'No Errors'),
      i_msg_type,
      NVL(i_won_lost_stat_cd,'N'),
      i_quote_dist_dt_gmt
    );
END inserterror_output_messages;
PROCEDURE updatedealeuv
  (
    i_bd_id IN NUMBER,
    i_send_quote_fl IN VARCHAR2,
    i_gen_opg_fl IN VARCHAR2,
    p_euvresult OUT sys_refcursor
  )
IS
  l_high_risk_fl  VARCHAR2(1):='N';
  l_bd_nr         deal.bd_nr%TYPE := -1; --NUMBER(10) :=-1; Commented NUMBER as part of EDMS Hardening process
  l_bd_version_nr deal.bd_version_nr%TYPE :=-1; --NUMBER(10) :=-1; Commented NUMBER as part of EDMS Hardening process
  l_errors        VARCHAR2(3000);
  l_msg_type      VARCHAR2(15);
  l_deal_prog_cd  deal.deal_prog_cd%TYPE :=NULL; --VARCHAR2(1):=NULL; Commented VARCHAR2 as part of EDMS Hardening process
  l_bdme_aprvl_cd deal.bdme_aprvl_cd%TYPE :=NULL; --VARCHAR2(1):=NULL;Commented VARCHAR2 as part of EDMS Hardening process
  l_quote_dist_cd deal.quote_dist_cd%TYPE :=NULL; --VARCHAR2(1):=NULL;Commented VARCHAR2 as part of EDMS Hardening process
  l_euv_stat_code VARCHAR2(1):='N';
  --l_risk_reasion_desc VARCHAR2(1):=NULL;
  --l_risk_desc VARCHAR2(1):=NULL;
  l_is_euv_exists_for_deal VARCHAR2(1):='N';
  l_euv_type_cd edms_update_euv.euv_type_cd%type;
  l_euv_reason_cd edms_update_euv.euv_reason_cd%type;
  l_euv_reason_txt edms_update_euv.euv_reason_txt%type;
  l_euv_emp_nr edms_update_euv.euv_emp_nr%type;
  l_records_updated NUMBER(5) :=0;
  l_bd_id           deal.bd_id%TYPE; --NUMBER(10):=0; --Commented NUMBER as part of EDMS Hardening process
  l_bus_model_cd deal.bus_model_cd%type;
  l_country_cd deal.control_cntry_cd%type;
  l_euv_at_won_fl bus_model.euv_at_won_fl%type; ---CR4322
  p_route_deal_messages sys_refcursor;           --CR4322
  l_route_user user_tab.user_id%type;            --CR4322
  l_wonlost_userid user_tab.user_id%TYPE; --VARCHAR2(100);
  l_new_opg_num deal.opg_num%type;
  o_send_quote_fl VARCHAR2(2);
  --Exception delcration
  reject_ EXCEPTION;
 l_tenantid deal.TENANTID_DATA_CD%type ;-- l_tenantid deal.tenantid%type; ---Added for SMO changes (06-Aug-2015 changes done to replace tenantid column with tenantid_data_cd column for federal project)
 l_tenantid_fed deal.tenantid%type; --added for Federal Project
BEGIN
  --l_bd_id:=i_bd_id;
  l_bd_id:=getlatest_ver_bd_id (i_bd_id);
  --delete global temporary table.
  DELETE FROM GT_EDMS_SMQT_ERR_RESULTS;
  BEGIN
    SELECT bd_nr,
      bd_version_nr,
      deal_risk_fl,
      deal_prog_cd,
      bdme_aprvl_cd,
      quote_dist_cd,
      bus_model_cd,
      control_cntry_cd,
     nvl(TENANTID_DATA_CD,'HPE') -- NVL(tenantid,'HPE')----Added for SMO changes (modified tenantid column with TENANTID_DATA_CD for Federal project)
    INTO l_bd_nr,
      l_bd_version_nr,
      l_high_risk_fl,
      l_deal_prog_cd,
      l_bdme_aprvl_cd,
      L_QUOTE_DIST_CD,
      l_bus_model_cd,
      l_country_cd,
      l_tenantid
    FROM deal
    WHERE bd_id=l_bd_id;
  EXCEPTION
  WHEN no_data_found THEN
    --ROLLBACK;
    l_errors  :=' Deal BD_ID : ' || l_bd_id || ' is invalid. No data found for this BD_ID.Unable to update EUV';
    l_msg_type:='ERRORS';
    raise reject_;
  WHEN OTHERS THEN
    --ROLLBACK;
    l_errors  :=' Error while getting EUV Details for the Deal BD_ID : ' || l_bd_id || ' Unable to update EUV';
    l_msg_type:='ERRORS';
    raise reject_;
  END;
  --check if the EUV details are available in EDMS_UPDATE_EUV table.
  BEGIN
    --Get EUV details.
    SELECT euv_type_cd,
      euv_reason_cd,
      euv_reason_txt,
      euv_emp_nr
    INTO l_euv_type_cd,
      l_euv_reason_cd,
      l_euv_reason_txt,
      l_euv_emp_nr
    FROM
      (SELECT euv_type_cd,
        euv_reason_cd,
        euv_reason_txt,
        euv_emp_nr
      FROM edms_update_euv
      WHERE BD_ID=I_BD_ID
      ORDER BY creation_dts DESC
      )
    WHERE rownum<2;
  EXCEPTION
  WHEN no_data_found THEN
    --ROLLBACK;
    l_errors  :=' Deal EUV Details are not found for the Deal BD_ID : ' || i_bd_id || ' Unable to update EUV. Check EDMS Web Serivce is working and has added required data for this BD_ID' ;
    l_msg_type:='ERRORS';
    raise reject_;
  END;
  SELECT DECODE (COUNT(*),0,'N','Y')
  INTO l_is_euv_exists_for_deal
  FROM deal_euv
  WHERE bd_id =l_bd_id;
  -- check if EUV Reason txt is null
  IF (l_euv_reason_txt IS NULL AND isEUVReasonRequired(l_bus_model_cd,l_country_cd,l_euv_reason_cd) >0 ) THEN
    --ROLLBACK;
    l_errors  := ' EUV Reason Text is empty. Please provide appropriate EUV Reason and re-try.' || l_bd_id || ' Unable to update EUV. Check EDMS Web Serivce is working and has added required data for this BD_ID' ;
    l_msg_type:='ERRORS';
    raise reject_;
  END IF;
  l_records_updated          :=0;
  IF (l_is_euv_exists_for_deal='N' OR l_is_euv_exists_for_deal=' ') THEN
    INSERT
    INTO deal_euv
      (
        bd_id,
        euv_type,
        euv_reason_cd,
        euv_reason_txt,
        euv_emp_nr,
        euv_comp_dts,
        creation_dts,
        update_dts,
        euv_high_risk_txt,
        euv_high_risk_type,
        euv_high_risk_reason
      )
      VALUES
      (
        l_bd_id,
        l_euv_type_cd,
        l_euv_reason_cd,
        l_euv_reason_txt,
        l_euv_emp_nr,
        sysdate,
        sysdate,
        sysdate,
        l_euv_reason_txt,
        l_euv_type_cd,
        l_euv_reason_cd
      );
    l_records_updated:=sql%rowcount;
  ELSE
    UPDATE deal_euv
    SET euv_type          =l_euv_type_cd,
      euv_reason_cd       =l_euv_reason_cd,
      euv_emp_nr          =l_euv_emp_nr,
      euv_high_risk_txt   =l_euv_reason_txt,
      euv_high_risk_type  =l_euv_type_cd,
      euv_high_risk_reason=l_euv_reason_cd
    WHERE bd_id           =l_bd_id;
    l_records_updated    :=sql%rowcount;
  END IF;
  IF l_records_updated >0 THEN
    l_errors          :='SUCCESS';
    l_msg_type        :='SUCCESS';
    --    l_high_risk_fl:='Y'; --temp hard coding
    L_EUV_STAT_CODE:='Y';
    inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr,l_deal_prog_cd ,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code,l_high_risk_fl, l_euv_reason_cd,l_euv_reason_txt,l_errors,l_msg_type,'',NULL,NULL,l_errors);
    UPDATE deal SET euv_comp_fl='Y' WHERE bd_id =l_bd_id;
    l_records_updated   :=sql%rowcount;
    IF l_records_updated >0 THEN
      ---CR 4322
      BEGIN
        SELECT euv_at_won_fl
        INTO l_euv_at_won_fl
        FROM bus_model
        WHERE bus_model_cd       = l_bus_model_cd
        AND country_cd = l_country_cd
        AND tenantid =l_tenantid;----Added for SMO Changes
        BEGIN
          SELECT ul.user_id
          INTO l_route_user
          FROM user_tab u ,
            user_login ul
          WHERE user_hp_emp_nr = l_euv_emp_nr
          AND u.user_id        = ul.user_id;
        EXCEPTION
        WHEN OTHERS THEN
          --dbms_output.put_line('Error in getting the routing user');
          null;
        END;
        IF (l_high_risk_fl='Y' AND l_euv_at_won_fl <>'Y' AND i_send_quote_fl='N') THEN

          routedeal(l_bd_id,l_route_user,p_route_deal_messages);
          --dbms_output.put_line ('Deal routed');
          l_msg_type :='SUCCESS';
          l_errors   :='High risk deal is routed after EUV update'; --'Deal Routed'; -- CR 4865 Nov release
          inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr,l_deal_prog_cd ,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code,l_high_risk_fl, l_euv_reason_cd,l_euv_reason_txt,l_errors,l_msg_type,'',NULL,NULL,l_errors);
          ELSIF (l_high_risk_fl='Y' AND l_euv_at_won_fl <>'Y' AND i_send_quote_fl='Y') THEN
            --Modified by harsh Shah 22-Dec-2013
            --added Gen OPG Flag
            sendquote(i_bd_id,l_bd_nr,l_bd_version_nr,NVL(l_wonlost_userid,'bmidef'),'Y','Y',i_gen_opg_fl,o_send_quote_fl,l_new_opg_num); --Changed by Lakshmi for CR:256810 --Defaulted to bmidef is wonlost user id is NULL
        END IF;

        UPDATE deal SET deal_lock_fl='N', deal_lock_user_id = NULL WHERE bd_id=l_bd_id;

      EXCEPTION
      WHEN OTHERS THEN
        l_msg_type :='WARNING';
        l_errors   :='Error in routing deal '||sqlerrm;
        inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr,l_deal_prog_cd ,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code,l_high_risk_fl, l_euv_reason_cd,l_euv_reason_txt,l_errors,l_msg_type,'',NULL,NULL,l_errors);
      END;
      --END CR4322
      COMMIT;
    ELSE
      l_errors  :=' Error while updating Deal table for EUV Completion ';
      l_msg_type:='ERROR';
      raise reject_;
    END IF;
  ELSE
    l_errors  := ' EUV Not updated, please check the deal details. 0 records updated ';
    l_msg_type:='ERROR';
    raise reject_;
  END IF;
  COMMIT;
  --return all the results
  OPEN p_euvresult FOR SELECT * FROM gt_edms_smqt_err_results;
EXCEPTION
WHEN reject_ THEN
  --ROLLBACK;
  --insert into error table and output table.
  inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr,l_deal_prog_cd, l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code,l_high_risk_fl, l_euv_reason_cd,l_euv_reason_txt,l_errors,l_msg_type,'',NULL,NULL,l_errors);
  COMMIT;
  OPEN p_euvresult FOR SELECT * FROM gt_edms_smqt_err_results;
END updatedealeuv;

PROCEDURE getdealstatus(
    i_bd_id NUMBER,
    p_dealstatus OUT sys_refcursor)
IS
  l_bd_id         deal.bd_id%TYPE; --NUMBER(10);  --Commented NUMBER as part of EDMS Hardening process
  l_bd_nr         deal.bd_nr%TYPE;--NUMBER(10); --Commented NUMBER as part of EDMS Hardening process
  l_bd_version_nr deal.bd_version_nr%TYPE; --NUMBER(10); --Commented NUMBER as part of EDMS Hardening process
  l_w_l_stat_cd deal.w_l_stat_cd%type;
  l_euv_stat_code deal.euv_comp_fl%type;
  l_high_risk_fl deal.deal_risk_fl%type  :='N';
  l_bdme_aprvl_cd deal.bdme_aprvl_cd%type:='N';
  l_deal_prog_cd deal.deal_prog_cd%type  :='N';
  l_quote_dist_cd deal.quote_dist_cd%type:='N';
  l_errors         VARCHAR2(2000);
  l_msg_type       VARCHAR2(10);
  l_euv_reason_cd  VARCHAR2(30):=NULL;
  l_euv_reason_txt VARCHAR2(30):=NULL;
  l_quote_dist_dt_gmt deal.quote_dist_dt_gmt%type;
BEGIN
  BEGIN
    SELECT bd_id,
      bd_nr,
      bd_version_nr,
      deal_prog_cd,
      bdme_aprvl_cd,
      quote_dist_cd,
      deal_risk_fl,
      euv_comp_fl,
      w_l_stat_cd,
      quote_dist_dt_gmt
    INTO l_bd_id,
      l_bd_nr,
      l_bd_version_nr,
      l_deal_prog_cd,
      l_bdme_aprvl_cd,
      l_quote_dist_cd,
      l_high_risk_fl,
      l_euv_stat_code,
      l_w_l_stat_cd,
      l_quote_dist_dt_gmt
    FROM deal
 --   WHERE bd_id = i_bd_id; --Changes made by Lakshmi on 10/17/2014 as part of EDMS Hardening process, wherein BD_ID will be passed as againt BD_NR.
  WHERE BD_NR=i_bd_id ORDER BY BD_VERSION_NR;  -- changes made by Chau to sync up with the current R10 release  from the above line
  /*   WHERE bd_nr            = i_bd_id
    AND current_version_fl = 'Y'; */
    l_msg_type            :='SUCCESS';
    L_ERRORS              :='SUCCESS';
    inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr,l_deal_prog_cd ,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code,l_high_risk_fl, l_euv_reason_cd,l_euv_reason_txt,l_errors,l_msg_type,'GET_DEAL_STATUS', l_w_l_stat_cd,l_quote_dist_dt_gmt,l_errors);
    COMMIT;
    --return all the results
    OPEN p_dealstatus FOR SELECT * FROM gt_edms_smqt_err_results;
  EXCEPTION
  WHEN no_data_found THEN
    l_errors       :=' Deal Details not found for the Deal BD ID ' || i_bd_id;
    l_msg_type     :='WARNING';
    l_bd_id        :=-1;
    l_bd_nr        :=-1;
    l_bd_version_nr:=-1;
    l_deal_prog_cd :='N';
    --insert into error table and output table.
    inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr,l_deal_prog_cd ,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code,l_high_risk_fl, l_euv_reason_cd,l_euv_reason_txt,l_errors,l_msg_type,'GET_DEAL_STATUS', l_w_l_stat_cd,l_quote_dist_dt_gmt,l_errors);
    COMMIT;
    --return all the results
    OPEN p_dealstatus FOR SELECT * FROM gt_edms_smqt_err_results;
  END;
EXCEPTION
WHEN OTHERS THEN
  l_msg_type     :='ERROR';
  l_bd_id        :=-1;
  l_bd_nr        :=-1;
  l_bd_version_nr:=-1;
  l_deal_prog_cd :='N';
  --insert into error table and output table
  --L_ERRORS      :='Unhandled Error : ' || SQLCODE || ' - ' || SQLERRM;
  L_ERRORS      := 'An error was encountered - ' || SQLCODE || ' -ERROR- ' || SQLERRM || '. Error at Line : ' || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE();
  g_user_message:='An error encountered while processing Get Deal Status request. Please contact Eclipse Administrator.';
  inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr,l_deal_prog_cd, l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code,l_high_risk_fl, l_euv_reason_cd,l_euv_reason_txt,l_errors,l_msg_type,'GET_DEAL_STATUS', l_w_l_stat_cd,l_quote_dist_dt_gmt,g_user_message);
  COMMIT;
  --return all the results
  OPEN p_dealstatus FOR SELECT * FROM gt_edms_smqt_err_results;
END getdealstatus;
PROCEDURE updatewonlost(
    i_bd_id           NUMBER,--90459415
    i_won_lost_code   VARCHAR2, --'W'
    i_won_lost_emp_email VARCHAR2, --'mohammed.ibadathulla@hp.com'
    i_gen_opg_fl varchar2, --'Y'
    i_won_lost_prob_pct IN NUMBER, --New parameter added by Lakshmi to update Won/Loss probability
    p_wonlost_results OUT sys_refcursor)
IS
  /*
  Purpose: This procedure updates the won/Lost status of the deal
  Created By: Harsh Shah
  Version: 1.0
  */
  l_bd_id         deal.bd_id%TYPE; --NUMBER(10); --Commented NUMBER as part of EDMS Hardening process
  l_bd_nr         deal.bd_nr%TYPE; --NUMBER(10);Commented NUMBER as part of EDMS Hardening process
  l_bd_version_nr deal.bd_version_nr%TYPE; --NUMBER(10); Commented NUMBER as part of EDMS Hardening process
  --bus_model table columns
  l_euv_at_won_fl bus_model.euv_at_won_fl%type;
  l_euv_required_fl bus_model.euv_required_fl%type;
  l_enable_deal_risk_fl bus_model.enable_deal_risk_fl%type;
  --deal_types table columns
  l_risk_assess_reqd_fl deal_types.risk_assess_reqd_fl%type;
  l_deal_type_cd deal_types.deal_type_cd%type;
  --deal table columns
  l_w_l_stat_cd deal.w_l_stat_cd%type;
  l_euv_stat_code deal.euv_comp_fl%type;
  l_deal_risk_fl deal.deal_risk_fl%type  :='N';
  l_bdme_aprvl_cd deal.bdme_aprvl_cd%type:='N';
  l_deal_prog_cd deal.deal_prog_cd%type  :='N';
  l_quote_dist_cd deal.quote_dist_cd%type:='N';
  l_bus_model_cd deal.bus_model_cd%type;
  l_control_cntry_cd deal.control_cntry_cd%type;
  l_euv_comp_fl deal.euv_comp_fl%type;
  -- deal table , won lost related fields
  l_deal_won_upd_emp_nr deal.deal_won_upd_emp_nr%type;
  l_w_l_upd_dt deal.w_l_upd_dt%type;
  l_w_l_upd_emp_nr deal.w_l_upd_emp_nr%type;
  l_w_l_crt_dt deal.w_l_crt_dt%type;
  l_w_l_crt_emp_nr deal.w_l_crt_emp_nr%type;
  --deal table, deal lock fields
  --DEAL_LOCK_DTS deal.DEAL_LOCK_DTS%type;
  l_deal_lock_fl deal.deal_lock_fl%type;
  l_deal_lock_user_id deal.deal_lock_user_id%type;
  --user_tab table columns
  l_user_hp_emp_nr user_tab.user_hp_emp_nr%type;
  --employee table columns
  l_full_name VARCHAR2(160);
  --Other general variables
  l_errors                VARCHAR2(2000);
  l_msg_type              VARCHAR2(10);
  l_euv_reason_cd         VARCHAR2(30):=NULL;
  l_euv_reason_txt        VARCHAR2(30):=NULL;
  l_is_won_lost_cd_exists NUMBER(2);
  l_is_emp_exists         NUMBER(3);
  l_asses_risk_fl         VARCHAR2(1):='N';
  l_quoted_status         VARCHAR2(15);
  l_opg_num deal.opg_num%type;                       ---CR4260
  l_gen_opg_fl bus_model.gen_opg_fl%type;            ---CR4260
  l_opg_num_ref bus_model.opg_num_ref%type;          ---CR4260
  l_quote_opg_won_fl bus_model.quote_opg_won_fl%type; --CR4260
  l_new_opg_num deal.opg_num%type;                   ---CR4260
  l_vstatus       VARCHAR2(10);                            ---CR4260
  l_send_quote_fl VARCHAR2(3);                             ---CR4260
  l_wonlost_userid user_login.user_id%type;                 --CR4260
  --user defined exception
  reject_won_lost_update EXCEPTION;
  --temp_table_failure EXCEPTION; -- BY Harsh Shah 23-Jan-2015
  i_won_lost_emp_nr NUMBER;
  l_region deal.region%TYPE;
  l_region_cd ww_cntry.region%TYPE;
  l_won_lost_emp_email VARCHAR2(2000);
  l_tenantid deal.tenantid_data_cd%type; --l_tenantid deal.tenantid%type;---Added for SMO Changes (Modified tenantid column with TENANTID_DATA_CD for Federal project)
  
    l_source_asset_id default_bmi_employee.source_asset_id%TYPE ; --Added for US-9408 --> Encore Retirement  
  BEGIN

 BEGIN
    --get basic deal details
    SELECT control_cntry_cd,
      region,
      deal_source_cd ----Added for US-9408 --> Encore Retirement  
    INTO l_control_cntry_cd,
      l_region
      ,l_source_asset_id --Added for US-9408 --> Encore Retirement  
    FROM deal
    WHERE bd_id=i_bd_id;
 --   DBMS_OUTPUT.PUT_LINE('Completed 1');
  EXCEPTION
  WHEN no_data_found THEN
  --DBMS_OUTPUT.PUT_LINE('Erorred at 1');
  --DBMS_OUTPUT.PUT_LINE('BD_ID: '||i_bd_id);
    l_errors  :='Deal Details not found for the Deal BD ID : ' || i_bd_id ;
    l_msg_type:='ERROR';
    --  inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr,l_deal_prog_cd ,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code,l_deal_risk_fl, l_euv_reason_cd,l_euv_reason_txt,l_errors,l_msg_type,'UPDATEWONLOST', l_w_l_stat_cd,NULL,l_errors);
    raise reject_won_lost_update;
  END;


  --initializing the global temporary table
  BEGIN
  i_won_lost_emp_nr := get_emp_nr(i_won_lost_emp_email);

  IF i_won_lost_emp_nr IS NULL  THEN
 SELECT GET_DEFAULT_EMP_NR_FROM_EMAIL (i_won_lost_emp_email,
                                      l_control_cntry_cd,
                                      l_region,
                                      'INDIRECT'
                                      ,l_source_asset_id --Added for US-9408 --> Encore Retirement  
                                      ) INTO i_won_lost_emp_nr FROM DUAL;
  --DBMS_OUTPUT.PUT_LINE('Completed 2');
  END IF;

  EXCEPTION
  WHEN OTHERS THEN
  --DBMS_OUTPUT.PUT_LINE('Erorred at 2');
  i_won_lost_emp_nr :=-1;
  END;

  DELETE
  FROM gt_edms_smqt_err_results;
  --l_bd_id:=i_bd_id;
  L_BD_ID:=getlatest_ver_bd_id(I_BD_ID);
  --dbms_output.put_line ('latest version of bd_id is : ' || l_bd_id || ' old bd_id is : ' || i_bd_id);
  BEGIN
    --get basic deal details
    SELECT deal_lock_fl,
      deal_lock_user_id,
      euv_comp_fl,
      bus_model_cd,
      control_cntry_cd,
      deal_type_cd ,
      bd_version_nr,
      bd_nr,
      w_l_stat_cd,
      deal_prog_cd,
      bdme_aprvl_cd,
      quote_dist_cd,
      deal_risk_fl
     , NVL(TENANTID_DATA_CD,'HPE')--,NVL(tenantid,'HPE')---Added for SMO Changes
    INTO l_deal_lock_fl,
      l_deal_lock_user_id,
      l_euv_comp_fl,
      l_bus_model_cd,
      l_control_cntry_cd,
      l_deal_type_cd,
      l_bd_version_nr,
      l_bd_nr,
      l_w_l_stat_cd ,
      l_deal_prog_cd,
      l_bdme_aprvl_cd,
      l_quote_dist_cd,
      l_deal_risk_fl
      ,l_tenantid---Added for SMO Changes
    FROM deal
    WHERE bd_id=l_bd_id;
  EXCEPTION
  WHEN no_data_found THEN
    l_errors  :='Deal Details not found for the Deal BD ID : ' || l_bd_id ;
    l_msg_type:='ERROR';
    --DBMS_OUTPUT.PUT_LINE('ERRORED AT 3');
    --  inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr,l_deal_prog_cd ,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code,l_deal_risk_fl, l_euv_reason_cd,l_euv_reason_txt,l_errors,l_msg_type,'UPDATEWONLOST', l_w_l_stat_cd,NULL,l_errors);
    raise reject_won_lost_update;
  END;
  --check the WON/Lost status code from the master table
  BEGIN
    SELECT 1
    INTO l_is_won_lost_cd_exists
    FROM w_l_stat_code
    WHERE w_l_stat_cd = i_won_lost_code;
  EXCEPTION
  WHEN NO_DATA_FOUND THEN
    l_is_won_lost_cd_exists:=0;
  WHEN TOO_MANY_ROWS THEN
    l_is_won_lost_cd_exists:=2;
  END;
  IF l_is_won_lost_cd_exists<=0 THEN
    l_errors                :=' Invalid Won/ Lost status code ' || i_won_lost_code || ' .Cannot perform update. Won / Lost Status code should be W,L,C or O .Please select the appropriate Won/Lost status and re-try.' ;
    l_msg_type              :='WARNING';
    -- inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr,l_deal_prog_cd ,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code,l_deal_risk_fl, l_euv_reason_cd,l_euv_reason_txt,l_errors,l_msg_type,'UPDATEWONLOST', l_w_l_stat_cd,NULL,l_errors);
    raise reject_won_lost_update;
  END IF;
  --dbms_output.put_line ('l_w_l_stat_cd ' || l_w_l_stat_cd);
  --check if the deal is already set to WON
  IF UPPER(I_WON_LOST_CODE) =UPPER(L_W_L_STAT_CD) THEN
    SELECT DECODE (L_W_L_STAT_CD, 'W','WON', 'O','OPEN', 'L','LOST', 'C','CANCEL',L_W_L_STAT_CD)
    INTO L_ERRORS
    FROM DUAL;
    L_ERRORS   := 'Deal is already set to ' || L_ERRORS || ' , no updates will be performed.';
    l_msg_type :='WARNING';
    -- inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr,l_deal_prog_cd ,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code,l_deal_risk_fl, l_euv_reason_cd,l_euv_reason_txt,l_errors,l_msg_type,'UPDATEWONLOST', l_w_l_stat_cd,NULL,l_errors);
    raise reject_won_lost_update;
  END IF;
  --get employee details
  BEGIN
    SELECT emp.fam_nm
      || ','
      || emp.given_nm
    INTO l_full_name
    FROM employee emp
    WHERE emp_nr              =i_won_lost_emp_nr
    AND upper(emp.emp_stat_cd)='ACTIVE';
  EXCEPTION
  WHEN no_data_found THEN
    IF ( i_won_lost_emp_email='eclipse_bmi_quote@hp.com') THEN -- OR i_won_lost_emp_email IS NULL ) THEN
    --dbms_output.PUT_LINE(' i_won_lost_emp_email: '||i_won_lost_emp_email);
        NULL;
    ELSE
    l_errors  :=' Invalid Won Loss Employee ' || i_won_lost_emp_nr || '. Cannot proceed with the update.';
    l_msg_type:='ERROR';
    -- inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr,l_deal_prog_cd ,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code,l_deal_risk_fl, l_euv_reason_cd,l_euv_reason_txt,l_errors,l_msg_type,'UPDATEWONLOST', l_w_l_stat_cd,NULL,l_errors);
    --dbms_output.put_line('Raising reject won lost update');
    raise reject_won_lost_update;
    END IF;
    -- inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr,l_deal_prog_cd ,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code,l_deal_risk_fl, l_euv_reason_cd,l_euv_reason_txt,l_errors,l_msg_type,'UPDATEWONLOST', l_w_l_stat_cd,NULL,l_errors);
   -- raise reject_won_lost_update;
  END;
  --check if deal is locked
  IF l_deal_lock_fl='Y' THEN
    --Get employee details who is performing WON/LOST update on the deal.
    BEGIN
      SELECT emp.fam_nm
        || ','
        || emp.given_nm
      INTO l_full_name
      FROM user_tab ut,
        employee emp
      WHERE ut.user_id      = l_deal_lock_user_id
      AND ut.user_hp_emp_nr = emp.emp_nr;
    EXCEPTION
    WHEN no_data_found THEN
      l_errors  := 'Deal is locked but unable to to retrieve user details.Cannot proceed with update. User ID: ' || l_deal_lock_user_id ;
      l_msg_type:='ERROR';
      -- inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr,l_deal_prog_cd ,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code,l_deal_risk_fl, l_euv_reason_cd,l_euv_reason_txt,l_errors,l_msg_type,'UPDATEWONLOST', l_w_l_stat_cd,NULL,l_errors);
      raise reject_won_lost_update;
    END;
    l_errors  :='Deal is locked by ' || l_full_name || ', cannot proceed with update. Please close the deal and re-try';
    l_msg_type:='ERROR';
    -- inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr,l_deal_prog_cd ,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code,l_deal_risk_fl, l_euv_reason_cd,l_euv_reason_txt,l_errors,l_msg_type,'UPDATEWONLOST', l_w_l_stat_cd,NULL,l_errors);
    raise reject_won_lost_update;
  END IF;
  BEGIN
    --get bus model details
    SELECT euv_at_won_fl,
      euv_required_fl ,
      enable_deal_risk_fl
    INTO l_euv_at_won_fl,
      l_euv_required_fl,
      l_enable_deal_risk_fl
    FROM bus_model
    WHERE bus_model_cd =l_bus_model_cd
    AND country_cd     =l_control_cntry_cd
    AND tenantid = l_tenantid;---Added for SMO Changes
    --dbms_output.put_line (' euv at won ' || l_euv_at_won_fl || ' euv required fl ' || l_euv_required_fl || ' ENABLE_DEAL_RISK_FL :' || l_enable_deal_risk_fl );
  EXCEPTION
  WHEN no_data_found THEN
    l_errors  :='Bus Model Details not found for the deal  BD' || l_bd_nr || ' and  Bus Model ' || l_bus_model_cd || ' and country ' || l_control_cntry_cd ;
    l_msg_type:='ERROR';
    -- inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr,l_deal_prog_cd ,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code,l_deal_risk_fl, l_euv_reason_cd,l_euv_reason_txt,l_errors,l_msg_type,'UPDATEWONLOST', l_w_l_stat_cd,NULL,l_errors);
    raise reject_won_lost_update;
  END;
  l_quoted_status:=l_deal_prog_cd||l_bdme_aprvl_cd||l_quote_dist_cd;
  --dbms_output.put_line (' Quoted Status '|| l_quoted_status);
  --risk management changes for WON/LOST
  IF (l_euv_at_won_fl='Y' AND l_euv_required_fl='Y') THEN
    -- Calculate Deal Risk types if its enabled in business model and deal is
    -- not marked High Risk.
    IF l_enable_deal_risk_fl ='Y' THEN
      BEGIN
        SELECT risk_assess_reqd_fl
        INTO l_risk_assess_reqd_fl
        FROM deal_types
        WHERE deal_type_cd=l_deal_type_cd;
      EXCEPTION
      WHEN no_data_found THEN
        l_errors  :='Deal Type Code details does not exists in reference table';
        l_msg_type:='ERROR';
        -- inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr,l_deal_prog_cd ,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code,l_deal_risk_fl, l_euv_reason_cd,l_euv_reason_txt,l_errors,l_msg_type,'UPDATEWONLOST', l_w_l_stat_cd,NULL,l_errors);
        raise reject_won_lost_update;
      END;
      --risk assesment starts.....
      IF l_risk_assess_reqd_fl='Y' THEN
        l_asses_risk_fl      :=performriskassesment(l_euv_required_fl , l_euv_comp_fl ,l_euv_at_won_fl ,l_deal_risk_fl ,l_bd_nr , l_bd_version_nr ,l_bd_id ,l_quoted_status, i_won_lost_code);
        --dbms_output.put_line ( ' l_asses_risk_fl :' ||l_asses_risk_fl) ;
      END IF;
    END IF;
  END IF; -- end if for IF  (l_euv_at_won_fl='Y' and l_euv_required_fl='Y')
  -- THEN
  --check if EUV is required
  IF l_euv_comp_fl ='N' AND ( l_euv_at_won_fl='Y' AND l_euv_required_fl='Y' ) THEN
    l_errors      :='Euv is not completed for this deal ' || l_bd_nr || ' Please complete EUV and re-try';
    l_msg_type    :='ERROR';
    --inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr,l_deal_prog_cd ,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code,l_deal_risk_fl, l_euv_reason_cd,l_euv_reason_txt,l_errors,l_msg_type,'UPDATEWONLOST', l_w_l_stat_cd,NULL,l_errors);
    raise reject_won_lost_update;
  END IF;
  --Write code for Locking the deal
  --PENDING
  --Update Deal WON/LOST status
  BEGIN
    UPDATE deal
    SET w_l_stat_cd       =i_won_lost_code,
      deal_won_upd_emp_nr = i_won_lost_emp_nr,
      w_l_upd_dt          = gmtdate,
      --w_l_prob            =DECODE( i_won_lost_code,'W',100,0), --Commented by Lakshmi
      w_l_prob   = NVL(i_won_lost_prob_pct,0),  --New parameter added by Lakshmi to update Won/Loss probability
      w_l_crt_dt          =DECODE(w_l_crt_dt,NULL,gmtdate,w_l_crt_dt),
      w_l_crt_emp_nr      =DECODE(w_l_crt_dt,NULL,i_won_lost_emp_nr, w_l_crt_emp_nr)
      WHERE bd_id           =l_bd_id;
    --update result table wiith success message
    IF sql%rowcount >0 THEN
      l_errors     :='Won /Lost status for the deal has been updated successfully by ' || l_full_name;
      L_MSG_TYPE   :='SUCCESS';
      inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr,l_deal_prog_cd, l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code,l_deal_risk_fl, l_euv_reason_cd,l_euv_reason_txt,l_errors,l_msg_type,'UPDATEWONLOST', l_w_l_stat_cd,NULL,l_errors);

    ELSE
      l_errors   :='Can not update won/lost status for the deal  ' || l_bd_nr;
      l_msg_type :='ERROR';
      --  inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr,l_deal_prog_cd ,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code,l_deal_risk_fl, l_euv_reason_cd,l_euv_reason_txt,l_errors,l_msg_type,'UPDATEWONLOST', l_w_l_stat_cd,NULL,l_errors);
      raise reject_won_lost_update;
    END IF;
  EXCEPTION
  WHEN OTHERS THEN
    l_errors   :='Error in updating won/lost status for the deal  ' || l_bd_nr;
    l_msg_type :='ERROR';
    -- inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr,l_deal_prog_cd ,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code,l_deal_risk_fl, l_euv_reason_cd,l_euv_reason_txt,l_errors,l_msg_type,'UPDATEWONLOST', l_w_l_stat_cd,NULL,l_errors);
    raise reject_won_lost_update;
  END;
  -----CR 4260--------
  BEGIN
    SELECT w_l_stat_cd INTO l_w_l_stat_cd FROM deal WHERE bd_id = l_bd_id;

    --commented by harsh Shah 22-Dec-2013
     SELECT
      d.opg_num,
      b.gen_opg_fl,
      b.opg_num_ref,
      b.quote_opg_won_fl
    INTO l_opg_num,
      l_gen_opg_fl,
      l_opg_num_ref,
      l_quote_opg_won_fl
    FROM DEAL D,
      BUS_MODEL B
    where D.BD_ID      = I_BD_ID
    AND B.BUS_MODEL_CD = D.BUS_MODEL_CD
    AND B.COUNTRY_CD   = D.CONTROL_CNTRY_CD
    AND b.tenantid = l_tenantid ;---Added for SMO Changes
    --dbms_output.put_line (' l_opg_num  ' ||l_opg_num);
    --dbms_output.put_line (' l_gen_opg_fl  ' ||l_gen_opg_fl);
    --dbms_output.put_line (' l_opg_num_ref  ' ||l_opg_num_ref);
    --dbms_output.put_line (' l_quote_opg_won_fl  '|| l_quote_opg_won_fl);

    IF (l_gen_opg_fl='N') THEN
    l_errors  :='As per Business Model settings, OPG will not be generated for the deal : ' || l_bd_nr || ' and  Bus Model ' || l_bus_model_cd || ' and country ' || l_control_cntry_cd ;
    l_msg_type:='WARNING';
     inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr,l_deal_prog_cd ,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code,l_deal_risk_fl, l_euv_reason_cd,l_euv_reason_txt,l_errors,l_msg_type,'UPDATEWONLOST', l_w_l_stat_cd,NULL,l_errors);
    END IF;

  EXCEPTION
  WHEN no_data_found THEN
    --l_errors  :='OPG details not found for the deal ' || l_bd_nr || ' and  Bus Model ' || l_bus_model_cd || ' and country ' || l_control_cntry_cd ;
    l_errors  :='Deal details not found WON/LOSS status ' || l_bd_nr || ' and  Bus Model ' || l_bus_model_cd || ' and country ' || l_control_cntry_cd ;
    l_msg_type:='WARNING';
    --  inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr,l_deal_prog_cd ,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code,l_deal_risk_fl, l_euv_reason_cd,l_euv_reason_txt,l_errors,l_msg_type,'UPDATEWONLOST', l_w_l_stat_cd,NULL,l_errors);
    raise reject_won_lost_update;
  END;



  BEGIN
    SELECT ul.user_id
    INTO l_wonlost_userid
    FROM user_tab u ,
      user_login ul
          WHERE user_hp_emp_nr = i_won_lost_emp_nr
    AND u.user_id        = ul.user_id
    AND Rownum<2;
  EXCEPTION
  WHEN OTHERS THEN
  SELECT dc_email INTO l_won_lost_emp_email FROM (SELECT dc_email, country_cd
                                    FROM default_bmi_employee   demp
                                    Where demp.region_cd in (select region from ww_cntry wc where wc.cntry_cd=l_control_cntry_cd)
                                    AND (country_cd=l_control_cntry_cd OR country_cd='*')
                                    AND route_to_market=(SELECT DECODE(direct_fl,'Y','DIRECT','INDIRECT') FROM bus_model WHERE bus_model_cd=l_bus_model_cd
                                    AND country_cd=l_control_cntry_cd
                                    AND tenantid =l_tenantid)
                                    AND tenantid =l_tenantid --Added for SMO 
                                    AND source_asset_ID =l_source_asset_id --Added for US-9408 --> Encore Retirement  
                                    ORDER BY COUNTRY_CD DESC) WHERE rownum<=1;
    IF l_won_lost_emp_email IS NOT NULL THEN
       l_wonlost_userid := 'bmidef';
    ELSE
    l_errors  :='Error in getting the wonlost user_id' ;
    l_msg_type:='ERROR';
    --  inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr,l_deal_prog_cd ,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code,l_deal_risk_fl, l_euv_reason_cd,l_euv_reason_txt,l_errors,l_msg_type,'UPDATEWONLOST', l_w_l_stat_cd,NULL,l_errors);
    raise reject_won_lost_update;
    END IF;
  END;

   --Commented by Harsh Shah, 22-Dec-2013
  IF ( l_gen_opg_fl   ='Y' AND (l_quote_dist_cd='A' OR l_quote_dist_cd='Q') AND l_w_l_stat_cd='W' AND LENGTH(l_opg_num)<2) THEN

    --dbms_output.PUT_LINE ('GENERATING OPG FROM UPDATE WON LOSS METHOD');
    GENERATEOPG(I_BD_ID,L_NEW_OPG_NUM,L_ERRORS);
    IF  L_ERRORS IS NOT NULL THEN

        inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr,l_deal_prog_cd ,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code,l_deal_risk_fl, l_euv_reason_cd,l_euv_reason_txt,l_errors,l_msg_type,'UPDATEWONLOST', l_w_l_stat_cd,NULL,l_errors);

        l_errors  :='Error in generating new OPG number for the deal ' || l_bd_nr || ' and  Bus Model ' || l_bus_model_cd || ' and country ' || l_control_cntry_cd ;
        l_msg_type:='ERROR';
        inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr,l_deal_prog_cd ,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code,l_deal_risk_fl, l_euv_reason_cd,l_euv_reason_txt,l_errors,l_msg_type,'UPDATEWONLOST', l_w_l_stat_cd,NULL,l_errors);
    ELSIF L_NEW_OPG_NUM is not null then

        UPDATE DEAL SET opg_num = l_new_opg_num WHERE bd_id = i_bd_id;
        IF sql%rowcount >0 THEN
          l_errors     :='new OPG '||l_new_opg_num||' is generated for the deal ' || l_bd_nr || ' and  Bus Model ' || l_bus_model_cd || ' and country ' || l_control_cntry_cd ;
          l_msg_type   :='SUCCESS';
          inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr,l_deal_prog_cd ,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code,l_deal_risk_fl, l_euv_reason_cd,l_euv_reason_txt,l_errors,l_msg_type,'UPDATEWONLOST', l_w_l_stat_cd,NULL,l_errors);
        ELSE
        l_errors     :='We could not update the deal with new OPG '||l_new_opg_num||' No.';
          l_msg_type   :='WARNING';
          inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr,l_deal_prog_cd ,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code,l_deal_risk_fl, l_euv_reason_cd,l_euv_reason_txt,l_errors,l_msg_type,'UPDATEWONLOST', l_w_l_stat_cd,NULL,l_errors);
        END IF;
    ELSE
        l_errors  :='Error in generating new OPG number for the deal ' || l_bd_nr || ' and  Bus Model ' || l_bus_model_cd || ' and country ' || l_control_cntry_cd ;
        l_msg_type:='ERROR';
        inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr,l_deal_prog_cd ,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code,l_deal_risk_fl, l_euv_reason_cd,l_euv_reason_txt,l_errors,l_msg_type,'UPDATEWONLOST', l_w_l_stat_cd,NULL,l_errors);

    END IF;


    IF (l_quote_dist_cd='A' OR l_quote_dist_cd='Q') THEN
        --by harsh Shah 21-Dec-2013
      --sendquote(i_bd_id,l_bd_nr,l_bd_version_nr,l_wonlost_userid,'Y','Y',l_send_quote_fl,l_new_opg_num);
      sendquote(i_bd_id,l_bd_nr,l_bd_version_nr,NVL(l_wonlost_userid,'bmidef'),'Y','Y',i_gen_opg_fl,l_send_quote_fl,l_new_opg_num); --Changed by Lakshmi for CR:256810 --Defaulted to bmidef is wonlost user id is NULL
      --dbms_output.put_line (' Send Quote Status :' || l_send_quote_fl);

      IF l_send_quote_fl ='Y' THEN
        l_errors        :='Quote resent for the deal ' || l_bd_nr || ' and  Bus Model ' || l_bus_model_cd || ' and country ' || l_control_cntry_cd ;
        l_msg_type      :='SUCCESS';
        inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr,l_deal_prog_cd ,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code,l_deal_risk_fl, l_euv_reason_cd,l_euv_reason_txt,l_errors,l_msg_type,'UPDATEWONLOST', l_w_l_stat_cd,NULL,l_errors);
      ELSE
        l_errors  :='Error in resend quote for the deal ' || l_bd_nr || ' and  Bus Model ' || l_bus_model_cd || ' and country ' || l_control_cntry_cd ;
        l_msg_type:='ERROR';
        inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr,l_deal_prog_cd ,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code,l_deal_risk_fl, l_euv_reason_cd,l_euv_reason_txt,l_errors,l_msg_type,'UPDATEWONLOST', l_w_l_stat_cd,NULL,l_errors);
      END IF;
    END IF;
  ELSIF ( l_w_l_stat_cd ='W' AND l_quote_opg_won_fl ='Y' AND (l_quote_dist_cd='A' OR l_quote_dist_cd='Q') AND i_won_lost_code='W') THEN
    --Modified by harsh Shah 22-Dec-2013
    --added Gen OPG Flag
    sendquote(i_bd_id,l_bd_nr,l_bd_version_nr,NVL(l_wonlost_userid,'bmidef'),'Y','Y',i_gen_opg_fl,l_send_quote_fl,l_new_opg_num);--Changed by Lakshmi for CR:256810 --Defaulted to bmidef is wonlost user id is NULL

    IF l_send_quote_fl ='Y' THEN
      l_errors        :='Quote resent for the deal ' || l_bd_nr || ' and  Bus Model ' || l_bus_model_cd || ' and country ' || l_control_cntry_cd ;
      l_msg_type      :='SUCCESS';
      inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr,l_deal_prog_cd ,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code,l_deal_risk_fl, l_euv_reason_cd,l_euv_reason_txt,l_errors,l_msg_type,'UPDATEWONLOST', l_w_l_stat_cd,NULL,l_errors);
    ELSE
      l_errors  :='Error in resend quote for the deal ' || l_bd_nr || ' and  Bus Model ' || l_bus_model_cd || ' and country ' || l_control_cntry_cd ;
      l_msg_type:='WARNING';
      inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr,l_deal_prog_cd ,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code,l_deal_risk_fl, l_euv_reason_cd,l_euv_reason_txt,l_errors,l_msg_type,'UPDATEWONLOST', l_w_l_stat_cd,NULL,l_errors);
    END IF;
  ELSE
    l_errors  :='deal ' || l_bd_nr || '  is not resent for quote ' ;
    l_msg_type:='WARNING';
    inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr,l_deal_prog_cd ,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code,l_deal_risk_fl, l_euv_reason_cd,l_euv_reason_txt,l_errors,l_msg_type,'UPDATEWONLOST', l_w_l_stat_cd,NULL,l_errors);
  END IF;
  --END IF;
  -----END CR 4260---------------
  --permanently save the update
  COMMIT;
  --return all the results
  OPEN p_wonlost_results FOR SELECT * FROM gt_edms_smqt_err_results;

EXCEPTION
WHEN reject_won_lost_update THEN
  BEGIN
    --insert into error table and output table.
    inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr,l_deal_prog_cd ,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code,l_deal_risk_fl, l_euv_reason_cd,l_euv_reason_txt,l_errors,l_msg_type,'UPDATEWONLOST', l_w_l_stat_cd,NULL,l_errors);
    COMMIT;
    --return all the results
    OPEN p_wonlost_results FOR SELECT * FROM gt_edms_smqt_err_results;
  END;
WHEN OTHERS THEN
  --ROLLBACK;
  --l_errors   :='Unhandled Error : ' || SQLCODE || ' - ' || sqlerrm;
  L_ERRORS   := 'An error was encountered - ' || SQLCODE || ' -ERROR- ' || SQLERRM || '. Error at Line : ' || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE();
  l_msg_type :='ERROR';
  --l_bd_id        :=l_bd_id;
  l_bd_nr        :=NULL;
  l_bd_version_nr:=NULL;
  L_DEAL_PROG_CD :=NULL;
  g_user_message :='An error was encountered while processing WON/LOST Update,please contact Eclipse Administrator';
  --insert into error table and output table.
  inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr,l_deal_prog_cd, l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code,l_deal_risk_fl, l_euv_reason_cd,l_euv_reason_txt,l_errors,l_msg_type,'UPDATEWONLOST', l_w_l_stat_cd,NULL,g_user_message);
  COMMIT;
  --return all the results
  OPEN p_wonlost_results FOR SELECT * FROM gt_edms_smqt_err_results;
END updatewonlost;

FUNCTION performriskassesment(
    i_euv_required_fl VARCHAR2,
    i_euv_comp_fl     VARCHAR2,
    i_euv_at_won_fl   VARCHAR2,
    i_deal_risk_fl    VARCHAR2,
    i_bd_nr           NUMBER,
    i_bd_version_nr   NUMBER,
    i_bd_id           NUMBER,
    i_quoted_status   VARCHAR2,
    i_wl_stat_cd      VARCHAR2)
  RETURN VARCHAR2
IS
  --Other general variables
  l_errors                VARCHAR2(3000);
  l_msg_type              VARCHAR2(10);
  l_prev_vr_deal_risk_fl  VARCHAR2(1):='N';
  l_risk_assesment_result VARCHAR2(1):='N';
BEGIN
  --check if deal is high risk
  --dbms_output.put_line (' risk assesment starts...');
  IF i_deal_risk_fl='Y' THEN
    --dbms_output.put_line ('Deal is high risk ');
    IF( (i_quoted_status='FSA' OR i_quoted_status='FSQ') AND i_bd_version_nr<2 ) THEN
      --dbms_output.put_line (' deal quoted status is ' || i_quoted_status);
      l_risk_assesment_result:='Y';
      RETURN ( l_risk_assesment_result); -- Perform Risk Assesment is set to
      -- True
    elsif i_euv_at_won_fl='Y' THEN
      BEGIN
        --dbms_output.put_line (' EUV at won is true ' );
        SELECT deal_risk_fl
        INTO l_prev_vr_deal_risk_fl
        FROM deal
        WHERE w_l_stat_cd  = 'W'
        AND deal_risk_fl   = 'Y'
        AND bd_nr          = i_bd_nr
        AND bd_version_nr <= (i_bd_version_nr-1)
        AND euv_comp_fl    ='Y';
        --dbms_output.put_line (' prev deal risk flag ' || l_prev_vr_deal_risk_fl );
        IF l_prev_vr_deal_risk_fl ='N' THEN
          l_risk_assesment_result:='N';
          RETURN (l_risk_assesment_result) ;
        ELSE
          l_risk_assesment_result:='N';
          RETURN (l_risk_assesment_result);
        END IF;
      EXCEPTION
      WHEN no_data_found THEN
        --dbms_output.put_line (' no data found for EUV AT WON condition');
        l_risk_assesment_result:='N';
        RETURN (l_risk_assesment_result);
      END;
    elsif i_euv_at_won_fl='N' THEN
      --dbms_output.put_line (' EUV at won is false');
      BEGIN
        SELECT deal_risk_fl
        INTO l_prev_vr_deal_risk_fl
        FROM deal
        WHERE bd_nr               = i_bd_nr
        AND bd_version_nr         = (i_bd_version_nr-1);
        IF l_prev_vr_deal_risk_fl ='N' THEN
          l_risk_assesment_result:='Y';
          RETURN (l_risk_assesment_result);
        ELSE
          l_risk_assesment_result:='N';
          RETURN (l_risk_assesment_result);
        END IF;
      EXCEPTION
      WHEN no_data_found THEN
        l_risk_assesment_result:='Y';
        RETURN (l_risk_assesment_result);
      END;
    END IF;
  elsif i_euv_at_won_fl='Y' THEN
    BEGIN
      IF (i_wl_stat_cd         <>'W' AND i_bd_version_nr<2 ) THEN
        l_risk_assesment_result:='Y';
        RETURN (l_risk_assesment_result);
      elsif i_wl_stat_cd<>'W' AND i_bd_version_nr>=2 THEN -- check with manju
        -- on this condition >2 or >=2
        BEGIN
          SELECT deal_risk_fl
          INTO l_prev_vr_deal_risk_fl
          FROM deal
          WHERE w_l_stat_cd         = 'W'
          AND deal_risk_fl          = 'Y'
          AND bd_nr                 = i_bd_nr
          AND bd_version_nr        <= (i_bd_version_nr-1)
          AND euv_comp_fl           ='Y';
          IF l_prev_vr_deal_risk_fl ='N' THEN
            l_risk_assesment_result:='Y';
            RETURN (l_risk_assesment_result);
          ELSE
            l_risk_assesment_result:='N';
            RETURN (l_risk_assesment_result);
          END IF;
        EXCEPTION
        WHEN no_data_found THEN
          l_risk_assesment_result:='Y';
          RETURN (l_risk_assesment_result);
        END;
      END IF;
    END;
  END IF;
  RETURN (l_risk_assesment_result);
EXCEPTION
when OTHERS then
  ROLLBACK;
  l_errors      :='Unhandled Error : ' || SQLCODE || ' - ' || sqlerrm;
  L_MSG_TYPE    :='ERROR';
  g_user_message:='An error encountered while processing Risk Assesment,please contact Eclipse Administrator.';
  ---insert into error table and output table.
  inserterror_output_messages (i_bd_id,i_bd_nr,i_bd_version_nr,NULL,NULL,NULL, NULL,i_deal_risk_fl,NULL,NULL,l_errors,l_msg_type,'PERFORMRISKASSESMENT', i_wl_stat_cd,NULL,g_user_message);
  l_risk_assesment_result:='N';
  COMMIT;
  --return all the results
  RETURN (l_risk_assesment_result);
END performriskassesment;

PROCEDURE routedeal(
    i_bd_id   NUMBER,
    i_user_id VARCHAR2,
    p_route_deal_result OUT sys_refcursor)
IS
  --Other general variables
  l_errors   VARCHAR2(3000);
  l_msg_type VARCHAR2(10);
  l_bd_nr deal.bd_nr%type;
  l_bd_version_nr deal.bd_version_nr%type;
  L_User_Exists     NUMBER(5)  :=0;
  L_Reccount        NUMERIC(10):=0;
  reject_route_deal EXCEPTION;
  l_user_id user_tab.user_id%TYPE; --ARCHAR2(50); Commented VARCHAR2 as part of EDMS Hardening process
BEGIN
  --get basic deal details
  BEGIN
    SELECT bd_version_nr,
      bd_nr
    INTO l_bd_version_nr,
      l_bd_nr
    FROM deal
    WHERE bd_id=i_bd_id;
  EXCEPTION
  WHEN no_data_found THEN
    l_errors  :=' Deal Details not found for the Deal BD ID ' || i_bd_id ;
    l_msg_type:='ERROR';
    raise reject_route_deal;
  END;

  l_user_id := NVL(i_user_id,'bmidef');
  --verify user_id
  BEGIN
  --dbms_output.PUT_LINE('Default BMI User ID: '||g_default_bmi_user_id);
  --dbms_output.PUT_LINE('Input user id: '||i_user_id);
    IF l_user_id <> 'bmidef' THEN
          SELECT 1 INTO l_user_exists FROM user_tab WHERE user_id =i_user_id;
  ELSif l_user_id='bmidef' then
    --dbms_output.put_line('Input user id is null and is defaulted to default bmi user id: bmidef');
        l_user_exists:=1;
  else
          l_user_exists:=0;
  end if;
  EXCEPTION
  WHEN NO_DATA_FOUND THEN
    l_user_exists:=0;
  WHEN TOO_MANY_ROWS THEN
    l_user_exists:=2;
  END;
  IF l_user_exists <=0 THEN
    l_errors       := 'User does not exists in Eclipse, Deal cannot be routed, Invalid User ID : ' || i_user_id;
    l_msg_type     :='ERROR';
    raise reject_route_deal;
  END IF;
    BEGIN
    SELECT 1
    INTO L_Reccount
    FROM Route_Log
    WHERE bd_id =i_bd_id
    AND User_Id =NVL(i_user_id,g_default_bmi_user_id);
  EXCEPTION
  WHEN NO_DATA_FOUND THEN
    l_reccount :=0;
  WHEN TOO_MANY_ROWS THEN
    l_reccount :=2;
  END;
  IF l_Reccount>0 THEN
    L_ERRORS  :='Deal Routed Successfully';
    L_MSG_TYPE:='INFO';
    --select deal_prog_cd,bdme_aprvl_cd,quote_dist_cd into l_deal_prog_cd,l_bdme_aprvl_cd,l_quote_dist_cd from GT_EDMS_SMQT_ERR_RESULTS where msg_type='SUCCESS';
    Inserterror_Output_Messages (I_Bd_Id,L_Bd_Nr,L_Bd_Version_Nr,NULL,NULL,NULL, NULL,NULL,NULL,NULL,L_Errors,L_Msg_Type,'ROUTEDEAL',NULL,NULL,l_errors);
  ELSE
    INSERT
    INTO route_log
      (
        bd_id,
        user_id,
        route_type,
        submit_time,
        status
      )
      VALUES
      (
        i_bd_id,
        l_user_id ,
        'M',
        sysdate,
        'OPEN'
      );
    IF sql%rowcount<=0 THEN
      l_errors     := 'Could not route the deal. Record cannot be inserted into Route Log. Please check the deal BD_ID ' || i_bd_id ;
      l_msg_type   :='ERROR';
      raise reject_route_deal;
    END IF;
    l_errors  :='Deal Routed Successfully';
    L_Msg_Type:='SUCCESS';
    Inserterror_Output_Messages (I_Bd_Id,L_Bd_Nr,L_Bd_Version_Nr,NULL,NULL,NULL, NULL,NULL,NULL,NULL,L_Errors,L_Msg_Type,'ROUTEDEAL',NULL,NULL,l_errors);
  END IF;
  --return all the results
  OPEN P_Route_Deal_Result FOR SELECT * FROM Gt_Edms_Smqt_Err_Results;
  COMMIT;
EXCEPTION
WHEN reject_route_deal THEN
  BEGIN
    --insert into error table and output table.
    inserterror_output_messages (i_bd_id,l_bd_nr,l_bd_version_nr,NULL,NULL,NULL ,NULL,NULL,NULL,NULL,l_errors,l_msg_type,'ROUTEDEAL',NULL,NULL,l_errors);
    --commit;
    --return all the results
    OPEN p_route_deal_result FOR SELECT * FROM gt_edms_smqt_err_results;
  END;
WHEN OTHERS THEN
  --rollback;
  --l_errors      :='Unhandled Error : ' || SQLCODE || ' - ' || sqlerrm;
  L_ERRORS      := 'An error was encountered - ' || SQLCODE || ' -ERROR- ' || SQLERRM || '. Error at Line : ' || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE();
  L_MSG_TYPE    :='ERROR';
  g_user_message:='An error was encountered while Routing the Deal,please contact Eclipse Administrator.';
  --insert into error table and output table.
  inserterror_output_messages (i_bd_id,l_bd_nr,l_bd_version_nr,NULL,NULL,NULL, NULL,NULL,NULL,NULL,l_errors,l_msg_type,'ROUTEDEAL',NULL,NULL,g_user_message);
  --commit;
  OPEN p_route_deal_result FOR SELECT * FROM gt_edms_smqt_err_results;
END routedeal;

PROCEDURE insert_prod_line
(
    i_bd_id                   NUMBER,
    i_bd_nr                   NUMBER,
    i_bd_version_nr           NUMBER,
    i_line_prog_cd            VARCHAR2,
    i_deal_prog_cd            VARCHAR2,
    i_bdme_aprvl_cd           VARCHAR2,
    i_quote_dist_cd           VARCHAR2,
    i_euv_stat_code           VARCHAR2,
    i_high_risk_fl            VARCHAR2,
    i_risk_reasion_desc       VARCHAR2,
    i_risk_desc               VARCHAR2,
    i_deal_creation_guid      VARCHAR2,
    i_countrycd               VARCHAR2,
    i_pricelistcd             VARCHAR2,
    i_currencycd              VARCHAR2,
    i_pricetermcd             VARCHAR2,
    i_prod_string             VARCHAR2,
    i_globai_fl               VARCHAR2,
    i_hierarchy_cd            VARCHAR2,
    i_enddate                 VARCHAR2,
    i_line_type_cd            VARCHAR2,
    i_prod_list_price         NUMBER,
    i_prod_auth_basis_text    VARCHAR2,
    i_prod_qty                NUMBER,
    i_bdnetamt                NUMBER,
    i_auth_emp_nr             NUMBER,
    i_auth_mc_hp_emp_nr       NUMBER,
    i_line_added_by_emp_nr    NUMBER,
    i_pricingtypecd           VARCHAR2,
    i_line_nr                 NUMBER,
    i_begindate               VARCHAR2,
    i_add_bundles             VARCHAR2,
    i_add_bundleheader        VARCHAR2,
    i_config_src              VARCHAR2,
    i_config_id               VARCHAR2,-- NUMBER,  commented as part of CR5020
    i_source_config_id        VARCHAR2,
    i_stddiscpct              NUMBER,
    i_line_item_nr_for_bundle NUMBER,
    i_auth_stat_cd            VARCHAR2,
    i_opt_cd                  VARCHAR2,
    I_ROLLOUTMONTHQTYS        VARCHAR2,
    --i_authdategmt             VARCHAR2,
    --i_auth_mc_date            VARCHAR2,
    i_authdategmt             DATE, --Changed as per CR:236715
    i_auth_mc_date            DATE, --Changed as per CR:236715
    i_dealsourcedealtype      VARCHAR2,
    i_bd_line_qty_for_hdr_sku NUMBER,
    i_bundle_desc             VARCHAR2,
    i_sku_pl                  VARCHAR2, ---Added for CR3236
    I_BD_HDR_LINE_AUTH_BD_NET LINE_DISC_SCALE.RQST_BD_NET_PRC_AM%type,
    I_PROD_COST_PRICE          NUMBER,
    I_PROD_COST_PRICE_HDR_PROD NUMBER,
    I_BUSMODELCD               varchar2,          ---Added  for CR 4774
    i_minorder_qty             VARCHAR2 ,         ---Added for CR4735
    i_line_auth_type line_item.line_auth_type%type,--added for new auth changes
    i_line_authdesc VARCHAR2 ,
    i_line_AuthStat bundle_line.ITEM_PROG_CD%type,
    i_line_AuthDtGMT DATE,
    o_create_new_version OUT VARCHAR,
    i_banded_fl varchar2,
    i_bmi_doc_no varchar2,
    i_prod_desc  LINE_ITEM.PROD_GNRC_DESC_TX%TYPE , --Added by Ramesh on 17-Feb-2014 for proddesc for R8
    i_EXT_PRE_APPRV_PRC_AM  LINE_DISC_SCALE.EXT_PRE_APPRV_PRC_AM%TYPE,
    i_total_hdr_listprice_value NUMBER,
    i_total_hdr_bdnet_value number,
    I_DisplayCompPrcFl VARCHAR2,--Added for US6037 --> Show Component Level Pricing
    i_guidance_available_fl VARCHAR2,--Added by Lakshmi for CR6012
    i_guidance_details_id NUMBER,--Added by Lakshmi for CR6012
    i_guidance_expert_pct NUMBER,--Added by Lakshmi for CR6012
    i_guidance_floor_pct NUMBER,--Added by Lakshmi for CR6012
    i_guidance_typical_pct NUMBER,--Added by Lakshmi for CR6012
    i_guidance_last_refresh_dt VARCHAR2, --Added by Lakshmi for CR6012
    i_non_discount_fl VARCHAR2-- Added by Lakshmi for CR83540 - The Non-discountable attribute in Eclipse is displayed incorrect for non-discountable product which set in Optimus
    ,i_InstantPrcMethod  bundle_line.INSTANT_PRC_METHOD%TYPE  --Added for UsS7301
    ,i_InstantPrcAmount  bundle_line.INSTANT_PRC_AMT%TYPE --Added for US 7301
    ,i_ContraAmt bundle_line_contra.CONTRA_AMT%TYPE---Added for 7301
    ,i_use_ext_list_price    GT_XML_line_item.use_ext_list_price%TYPE --New variable added by Lakshmi for HP SW Project
  )
IS
  l_auth_bdnet_amt LINE_DISC_SCALE.RQST_BD_NET_PRC_AM%TYPE;
  L_EXT_PRE_APPRV_PRC_AM    LINE_DISC_SCALE.EXT_PRE_APPRV_PRC_AM%TYPE;
  l_rollout_ins_qry VARCHAR2(4000);
  l_no_of_months    NUMBER;
  l_rollout_mnths t_rollout_mnths:=t_rollout_mnths();
  l_gypsy_prod_string VARCHAR2(50);
  p_gypsy_price sys_refcursor; --Contains the GPSy price details - fetched
  -- through DARTWWI
  --l_auth_basis_text line_disc_scale.auth_basis_text%type;
  --l_rollout_mnths t_rollout_mnths:=t_rollout_mnths();
  --l_line_nr number(10);
  l_scale_id               line_disc_scale.scale_id%TYPE; --NUMBER(10); Commented NUMBER as part of EDMS Hardening process
  l_errors                 VARCHAR2(3000);
  l_msg_type               VARCHAR2(20);
  L_LINE_PROD_GNRC_DESC_TX prod_line.prod_line_desc_tx%TYPE; --VARCHAR2(200); -- Commented VARCHAR2 as part of EDMS Hardening process
  l_line_bus_unit_cd       prod_line.bus_unit_cd%TYPE; --VARCHAR2(10); Commented VARCHAR2 as part of EDMS Hardening process
  L_LINE_BUS_GROUP_CD      bus_unit.bus_group_cd%TYPE; --VARCHAR2(10); Commented VARCHAR2 as part of EDMS Hardening process
  l_auth_disc_otc_pc       BUNDLE_line.auth_disc_ot_pc%TYPE:=0; --NUMBER(5,2) :=0; Commented NUMBER as part of EDMS Hardening process
  l_rqst_disc_otc_pc       bundle_line.rqst_disc_ot_pc%TYPE:=0; --NUMBER(5,2) :=0; Commented NUMBER as part of EDMS Hardening process
  l_config_src bundle.config_src%type;
  gprice gypsy_rec;
  l_createnewversion     VARCHAR2(1)                    :='N';
  L_BUNDLE_LINE_SCALE_ID NUMBER(5)                      :=0;
  L_SET_LINE_AUTH_CODE   VARCHAR2(1)                    :='N';
  l_rqst_margin_pct line_disc_scale.rqst_margin_pct%type:=0;
  l_disp_comp_prc_fl_BM bus_model.DISP_COMP_PRC_FL%type;
  l_disp_comp_prc_fl  bus_model.DISP_COMP_PRC_FL%type; --Added with CR 4774
  l_i_line_item_nr_for_bundle NUMBER;
  l_tenantid deal.TENANTID_DATA_CD%type;--l_tenantid deal.tenantid%type;---Added for SMO Changes ( Modified tenantid column with TENANTID_DATA_CD for Federal project changes)
 input_prod_string VARCHAR2(200);
 REJECT_DEAL EXCEPTION;
 l_log_messages VARCHAR2(1); --New variable added by Lakshmi HP SW Project
 BEGIN
 
 SELECT app_value
  INTO l_log_messages
  FROM APP_CONFIG_KEYS
 WHERE app_key='LOG_EXT_LP_MSG';
 
  o_create_new_version:='Y';
  l_i_line_item_nr_for_bundle:= i_line_item_nr_for_bundle;
   --DBMS_OUTPUT.PUT_LINE('Product checked in gt_product_bundles_prices: '||i_prod_string);
  --DBMS_OUTPUT.PUT_LINE('Opt Code checked in gt_product_bundles_prices: '||i_opt_cd);
  ---Changes for CR 3156 (Invalid products are not allowed to be added to a deal)----
   l_price :=NULL;
   l_prod_desc:=NULL;
   l_prod_nr:=NULL;
   l_stat:=NULL;
   l_prod_line:=NULL;
   l_non_discount_fl :=NULL;
   l_ref_price_fl:=NULL;
   l_prod_family:=NULL; 
  BEGIN
  SELECT price, prod_desc , prod_nr, stat, prod_line, non_discount_fl , ref_price_fl , prod_family
  INTO l_price, l_prod_desc , l_prod_nr, l_stat, l_prod_line , l_non_discount_fl, l_ref_price_fl, l_prod_family
  FROM gt_product_bundles_prices
  WHERE prod_nr=i_prod_string
  AND prod_opt_cd= DECODE(i_opt_cd,NULL,'1',i_opt_cd);
  --DBMS_OUTPUT.PUT_LINE('Price found for the product: '|| i_prod_string ||' and opt_cd: '||i_opt_cd||'__is: '||l_price);
  EXCEPTION
  --Below exception added for CR:282430-ORA-01422: exact fetch returns more than requested number of rows
  WHEN TOO_MANY_ROWS THEN
  BEGIN
  SELECT DISTINCT price, prod_desc , prod_nr, stat, prod_line, non_discount_fl , ref_price_fl , prod_family
  INTO l_price, l_prod_desc , l_prod_nr, l_stat, l_prod_line , l_non_discount_fl, l_ref_price_fl, l_prod_family
  FROM gt_product_bundles_prices
  WHERE prod_nr=i_prod_string
  AND prod_opt_cd= DECODE(i_opt_cd,NULL,'1',i_opt_cd)
  AND prod_line IN (SELECT prod_line_cd FROM prod_line WHERE tenantid =(SELECT tenantid FROM deal WHERE bd_id=i_bd_id));
  EXCEPTION 
  WHEN TOO_MANY_ROWS THEN
  l_price :=NULL;
   l_prod_desc:=NULL;
   l_prod_nr:=NULL;
   l_stat:=NULL;
   l_prod_line:=NULL;
   l_non_discount_fl :=NULL;
   l_ref_price_fl:=NULL;
   l_prod_family:=NULL;
   END;
  WHEN NO_DATA_FOUND THEN
  --DBMS_OUTPUT.PUT_LINE('Data not found for: '|| i_opt_cd||','||i_prod_string);
   l_price :=NULL;
   l_prod_desc:=NULL;
   l_prod_nr:=NULL;
   l_stat:=NULL;
   l_prod_line:=NULL;
   l_non_discount_fl :=NULL;
   l_ref_price_fl:=NULL;
   l_prod_family:=NULL;
  WHEN OTHERS THEN
  --DBMS_OUTPUT.PUT_LINE('Error occured while querying gt_product_bundles_prices: '||SQLERRM);
   l_price :=NULL;
   l_prod_desc:=NULL;
   l_prod_nr:=NULL;
   l_stat:=NULL;
   l_prod_line:=NULL;
   l_non_discount_fl :=NULL;
   l_ref_price_fl:=NULL;
   l_prod_family:=NULL;
  END;
  
  --Below block added by Lakshmi for HP SW Project
  IF i_use_ext_list_price ='Y' THEN
  IF l_log_messages='Y' THEN
    l_errors  :='Gpsy List price: '||l_price||' of Product : ' || i_prod_string||' '||i_opt_cd || ' is overwritten by External List Price: '||i_prod_list_price;
    l_msg_type :='WARNING';
    inserterror_output_messages (i_bd_id,i_bd_nr,i_bd_version_nr, i_deal_prog_cd,i_bdme_aprvl_cd,i_quote_dist_cd,i_euv_stat_code, 
        i_high_risk_fl,i_risk_reasion_desc,i_risk_desc,l_errors,l_msg_type, i_deal_creation_guid,NULL,NULL,l_errors);
    END IF;
    l_price := i_prod_list_price;
  END IF;
  
    --  FETCH p_gypsy_price INTO gprice;
      IF i_prod_desc is not null THEN  --Added by Ramesh on 17-Feb-2014 for R8
         l_prod_desc := i_prod_desc;
    END IF;

    --Changes made as per CR83540--Overwrite the Gpsy value with the value from XML.
    --CR83540 The Non-discountable attribute in Eclipse is displayed incorrect for non-discountable product which set in Optimus
    l_non_discount_fl := i_non_discount_fl;

    --dbms_output.put_line (' insert prod line -- 2  ');
    IF l_price IS NULL THEN
      ----dbms_output.put_line (' insert prod line -- 3  ');
      l_createnewversion:='N';
     l_errors          :='Product : ' || i_prod_string || ' does not exists in GPSy. Cannot create new version of deal. Check Bundle Config : '
     || i_config_id ||'  Bundle Source config id: '|| i_source_config_id ||',Bundle Source : ' || i_config_src || ', Bundle Line : '|| i_line_nr;
      --dbms_output.put_line (l_errors);
      --l_i_line_item_nr_for_bundle := l_i_line_item_nr_for_bundle-1;--This is done as part of CR:44121 Error:  BMI quote (A000015209-01) line items from my bundle are not being added to --my Eclipse (100013240) shell deal.
     l_msg_type          :='ERROR';
      o_create_new_version:='N';
      --dbms_output.PUT_LINE (' Error from GPSy ---Cannot proceed .. Create New Version Flag : ' || o_create_new_version);
      --insert into message repository
      inserterror_output_messages (i_bd_id,i_bd_nr,i_bd_version_nr, i_deal_prog_cd,i_bdme_aprvl_cd,i_quote_dist_cd,i_euv_stat_code, i_high_risk_fl,i_risk_reasion_desc,i_risk_desc,l_errors,l_msg_type, i_deal_creation_guid,NULL,NULL,l_errors);
      raise REJECT_DEAL;---Added to reject the deal when the product not found in gypsy --CR 209817
    END IF;
        --EXIT  WHEN P_GYPSY_PRICE%NOTFOUND;
    --get the product line details
    --dbms_output.put_line (' insert prod line -- 4  ');
    IF (to_number(l_price) >to_number(i_prod_list_price)) THEN
      -- l_errors                 := 'GPSy price is greater than smart quote price for the product : ' || gprice.prod_nr ||'  ' || gprice.prod_desc ||'  GPSy Price : '|| gprice.price || ' , SmartQuote Price : ' || i_prod_list_price;
      l_errors := 'GPSy price is greater than BMI price for the product : ' || l_prod_nr ||'  ' || l_prod_desc ||'  GPSy Price : '|| l_price || ' , bmi Price : ' || i_prod_list_price;
      --dbms_output.put_line (l_errors);
      L_MSG_TYPE:='WARNING';
      inserterror_output_messages (i_bd_id,i_bd_nr,i_bd_version_nr, i_deal_prog_cd,i_bdme_aprvl_cd,i_quote_dist_cd,i_euv_stat_code, i_high_risk_fl,i_risk_reasion_desc,i_risk_desc,l_errors,l_msg_type, i_deal_creation_guid,NULL,NULL,l_errors);
    END IF;
    IF (to_number(l_price) <to_number(i_prod_list_price)) THEN
      --l_errors                 := 'GPSy price is lesser than smart quote price for the product : ' || gprice.prod_nr ||'  ' || gprice.prod_desc ||'  GPSy Price : '|| gprice.price || ' , SmartQuote Price : ' || i_prod_list_price ;
      l_errors := 'GPSy price is lesser than BMI price for the product : ' || l_prod_nr ||'  ' || l_prod_desc ||'  GPSy Price : '|| l_price || ' , bmi Price : ' || i_prod_list_price ;
      --dbms_output.put_line (l_errors);
      --L_MSG_TYPE:='WARNING'; Commented as part of CR74200
      L_MSG_TYPE:='ERROR';
      inserterror_output_messages (i_bd_id,i_bd_nr,i_bd_version_nr, i_deal_prog_cd,i_bdme_aprvl_cd,i_quote_dist_cd,i_euv_stat_code, i_high_risk_fl,i_risk_reasion_desc,i_risk_desc,l_errors,l_msg_type, i_deal_creation_guid,NULL,NULL,l_errors);
      --RAISE REJECT_DEAL;
    END IF;
    --Check product status - Active /Obsolete
    IF (l_stat='O') THEN
      l_errors    :='Product : ' || l_prod_nr||'  ' || l_prod_desc ||'  is obsolete ' ;
      --dbms_output.put_line (l_errors);
      L_MSG_TYPE:='WARNING';
      inserterror_output_messages (i_bd_id,i_bd_nr,i_bd_version_nr, i_deal_prog_cd,i_bdme_aprvl_cd,i_quote_dist_cd,i_euv_stat_code, i_high_risk_fl,i_risk_reasion_desc,i_risk_desc,l_errors,l_msg_type, i_deal_creation_guid,NULL,NULL,l_errors);
    END IF;
    --if deal is a high touch deal then
    --auth bd net should be null
    --and bdnet amount should be populated to rqst_bd_net_prc_am
    --QC2554
    --DBMS_OUTPUT.PUT_LINE('QC2554');
    IF (i_dealsourcedealtype   <>c_high_touch_dealtype_desc ) THEN
      l_auth_bdnet_amt         :=i_bdnetamt;
      L_EXT_PRE_APPRV_PRC_AM    := I_EXT_PRE_APPRV_PRC_AM;
      elsif (i_dealsourcedealtype = c_high_touch_dealtype_desc AND i_line_prog_cd ='Y') THEN--added for ePrime requorement as auith amt should not be null if product is added with authoriszation
      l_auth_bdnet_amt         :=i_bdnetamt;
       L_EXT_PRE_APPRV_PRC_AM    := I_EXT_PRE_APPRV_PRC_AM;
    ELSE
      l_auth_bdnet_amt:=NULL;
       --L_EXT_PRE_APPRV_PRC_AM    := NULL;
    END IF;
     --DBMS_OUTPUT.PUT_lINE('Getting details from prod_line table');
    BEGIN
      SELECT pl.prod_line_desc_tx,
        pl.bus_unit_cd,
        bu.bus_group_cd
      INTO l_line_prod_gnrc_desc_tx,
        l_line_bus_unit_cd,
        l_line_bus_group_cd
      FROM prod_line pl,
        bus_unit bu
      WHERE PL.BUS_UNIT_CD =BU.BUS_UNIT_CD
      AND pl.prod_line_cd  =l_prod_line;
    EXCEPTION
    WHEN NO_DATA_FOUND THEN
      l_errors :=' Prod line ' || l_prod_line || ' details does not exists in prodcut line master ';
      ----dbms_output.PUT_LINE (L_ERRORS);
      L_MSG_TYPE:='WARNING';
      inserterror_output_messages (i_bd_id,i_bd_nr,i_bd_version_nr, i_deal_prog_cd,i_bdme_aprvl_cd,i_quote_dist_cd,i_euv_stat_code, i_high_risk_fl,i_risk_reasion_desc,i_risk_desc,l_errors,l_msg_type, i_deal_creation_guid,NULL,NULL,l_errors);
    END;
    --**************************************************************************
    --Adding Non Header Bundles
    --**************************************************************************
     --DBMS_OUTPUT.PUT_lINE('Adding Non Header Bundles');
     --DBMS_OUTPUT.PUT_LINE('i_add_bundles: '||i_add_bundles);
     --DBMS_OUTPUT.PUT_LINE('i_add_bundleheader: '||i_add_bundleheader);
    IF (i_add_bundles='Y' AND i_add_bundleheader ='N') THEN
      --get the new scale id for the line
      SELECT NVL(MAX(scale_id),0)
      INTO l_scale_id
      FROM line_disc_scale
      WHERE bd_id =i_bd_id
      AND line_nr =i_line_item_nr_for_bundle;
          --**************************************************************************
      --DBMS_OUTPUT.PUT_LINE('Insert into Bundle_line table - Non Header.');
      --**************************************************************************
      BEGIN
        G_SET_LINE_AUTHORIZER_CODE:=NULL;
        --decide on whether to authorize the line
        -----------
        --dbms_output.put_line (' --------- outputs for the bundle  line - g_set_line_authorizer_code fields');
        --dbms_output.PUT_LINE (' i_bdnetamt ' || I_BDNETAMT);
        --dbms_output.PUT_LINE (' GPRICE.PRICE ' || GPRICE.PRICE );
        --dbms_output.PUT_LINE (' I_AUTH_MC_HP_EMP_NR ' || I_AUTH_MC_HP_EMP_NR);
        --dbms_output.PUT_LINE ('I_LINE_ADDED_BY_EMP_NR      ' || I_LINE_ADDED_BY_EMP_NR );
        --dbms_output.PUT_LINE (' i_auth_stat_cd ' || I_AUTH_STAT_CD);
        --dbms_output.PUT_LINE (' i_auth_emp_nr ' || I_AUTH_EMP_NR);
        --dbms_output.PUT_LINE (' ------------outputs for the bundle  line - g_set_line_authorizer_code fields .. ends');
        IF ( I_BDNETAMT             IS NULL OR l_PRICE IS NULL OR I_AUTH_MC_HP_EMP_NR IS NULL OR I_LINE_ADDED_BY_EMP_NR IS NULL OR I_AUTH_STAT_CD IS NULL OR I_AUTH_EMP_NR IS NULL ) THEN
          g_set_line_authorizer_code:=NULL;
          g_set_gnrc_line_authorizer:= NULL;
          g_line_auth_type          := NULL;
        ELSIF (I_AUTH_STAT_CD        ='Y') THEN
          g_set_line_authorizer_code:= i_auth_emp_nr;
          g_set_gnrc_line_authorizer:= i_auth_mc_hp_emp_nr;
          g_line_auth_type          := i_line_auth_type;
        ELSE
          g_set_line_authorizer_code:=NULL;
          g_set_gnrc_line_authorizer:= NULL;
          g_line_auth_type          := NULL;
        END IF;
        ----dbms_output.put_line (' Non Header bundle auth code g_set_line_authorizer_code' ||g_set_line_authorizer_code);
        -----------------------------------
        --calculate Auth Disc PCT
        -----------------------------------
        --dbms_output.PUT_LINE (' in bundle line - std disc is : ' || I_STDDISCPCT || ' Non Header product ');
        --dbms_output.put_line ('i_dealsourcedealtype : ' || i_dealsourcedealtype);
        --IF (I_PROD_LIST_PRICE>0 AND GPRICE.PRICE>0 AND i_dealsourcedealtype<>c_high_touch_dealtype_desc) THEN
        IF l_PRICE>0 THEN
          --dbms_output.PUT_LINE (' Calculated Auth Disc % for Each Bundle LIne is : ' || (ROUND(100- (( I_BDNETAMT/l_PRICE) *100)- NVL(I_STDDISCPCT,0),2)) );
          --l_auth_disc_otc_pc:=ROUND(((gprice.price-i_bdnetamt)/gprice.price) *100 ,2);
          IF ( (ROUND(100 - (( I_BDNETAMT/l_PRICE) *100)- NVL(I_STDDISCPCT,0),2))>99.99 OR ROUND(100- (( I_BDNETAMT/l_PRICE) *100)- NVL(I_STDDISCPCT,0),2) <-99.99 ) THEN
            IF I_DEALSOURCEDEALTYPE                                                   =C_HIGH_TOUCH_DEALTYPE_DESC THEN
              L_ERRORS                                                               :=' Invalid Rqst Disc % for Bundle Line SKU: '||i_prod_string||CASE WHEN i_opt_cd IS NOT NULL THEN ','||i_opt_cd END || ' Rqst BDNet :' || I_BDNETAMT || ' List price :' || l_PRICE || ' Rqst Disc Amt is : ' || (ROUND(100- (( I_BDNETAMT/l_PRICE) *100)- NVL(I_STDDISCPCT,0),2));
            ELSE
              L_ERRORS :=' Invalid Auth Disc % for Bundle Line SKU: '|| i_prod_string||CASE WHEN i_opt_cd IS NOT NULL THEN ','||i_opt_cd END|| ' Auth BDNet :' || I_BDNETAMT || ' List price :' || l_PRICE || ' Auth Disc Amt is : ' || (ROUND(100- (( I_BDNETAMT/l_PRICE) *100)- NVL(I_STDDISCPCT,0),2));
            END IF;
            L_MSG_TYPE :=C_M_TYPE_WARNING;
            --dbms_output.PUT_LINE (l_errors);
            --log errors
            inserterror_output_messages ( i_bd_id,i_bd_nr,i_bd_version_nr, NULL, NULL, NULL, NULL, NULL,NULL, NULL, l_errors, l_msg_type, i_deal_creation_guid, NULL, NULL,l_errors );
            l_auth_disc_otc_pc:=NULL;
            l_rqst_disc_otc_pc:=0;
             --Condition added by Lakshmi for CR:3268 - NGQ: When Eclipse receives a BDNet of -0- with list price greater than -0- the Rqst% should be recalculated
            IF ((I_BDNETAMT = 0 AND I_STDDISCPCT=0) OR (ROUND(100 - (( I_BDNETAMT/l_PRICE) *100)- NVL(I_STDDISCPCT,0),2))>99.99) THEN 
               l_rqst_disc_otc_pc :=100;
               L_ERRORS                                                                 :='Adjusting Rqst Disc % to 100, for Bundle Line SKU: '|| i_prod_string||CASE WHEN i_opt_cd IS NOT NULL THEN ','||i_opt_cd END||
                     ' Line: '||i_line_nr ||
                     ' ,Item: '||i_line_item_nr_for_bundle ||
                     ' Rqst BDNet :' || I_BDNETAMT || ' List price :' || l_PRICE|| ' Rqst Disc Amt is : ' || 
                     (ROUND(100- (( I_BDNETAMT/l_PRICE) *100)- NVL(I_STDDISCPCT,0),2));
                     L_MSG_TYPE                                                               :=C_M_TYPE_WARNING;
                     inserterror_output_messages ( i_bd_id,i_bd_nr,i_bd_version_nr,  NULL, NULL, NULL, NULL, NULL,NULL, NULL, l_errors, l_msg_type, i_deal_creation_guid, NULL, NULL,l_errors );
                    ELSE 
                l_rqst_disc_otc_pc:=0;
            END IF; --End of Condition added for CR:3268 - NGQ: When Eclipse receives a BDNet of -0- with list price greater than -0- the Rqst% should be recalculated
            ELSE
            L_AUTH_DISC_OTC_PC:=ROUND(100- (( I_BDNETAMT/l_PRICE) *100)- NVL(I_STDDISCPCT,0),2);
            l_rqst_disc_otc_pc:=L_AUTH_DISC_OTC_PC;
          END IF;
        ELSE
          l_auth_disc_otc_pc  :=NULL;
          IF l_PRICE      =0 THEN
            l_auth_disc_otc_pc:=0;
            l_rqst_disc_otc_pc:=0;
          END IF; 
        END IF;
        --set auth Disc % to Null in case of High Touch Deal
        IF i_dealsourcedealtype=c_high_touch_dealtype_desc AND i_line_prog_cd <> 'Y' THEN --i_line_prog_cd condition is added for ePrime as ePrime can approve high touch deal products
          L_AUTH_DISC_OTC_PC  :=NULL;
        END IF;
        ----dbms_output.PUT_LINE (' Bundle line Auth disc % value ' || L_AUTH_DISC_OTC_PC );
        ----dbms_output.put_line ('Bundle Line Auth Stat Code I_AUTH_STAT_CD : ' || I_AUTH_STAT_CD || ' AND auth date gmt is : ' || I_AUTHDATEGMT);
        ---Added on 23-Jan for CR3236
        IF I_SKU_PL <> l_PROD_LINE THEN
          L_MSG_TYPE:='WARNING';
          --l_errors                 :='PL '||i_sku_pl ||'does not tally between SQ and Eclipse' || '(SQ PL :'|| i_sku_pl||' GPSy PL :'||gprice.prod_line||')'||'PL '||i_sku_pl ||'Is Overriden';
          l_errors :='PL for SKU '||i_prod_string ||' does not tally between '||g_err_src||' and Eclipse ' || '( '||g_err_src||' PL :'|| i_sku_pl||' GPSy PL :'||l_prod_line||' )'||' PL for SKU '||i_prod_string ||' is overriden';
          --dbms_output.put_line (l_errors);
          inserterror_output_messages (i_bd_id,i_bd_nr,i_bd_version_nr, i_deal_prog_cd,i_bdme_aprvl_cd,i_quote_dist_cd,i_euv_stat_code, i_high_risk_fl,i_risk_reasion_desc,i_risk_desc,l_errors,l_msg_type, i_deal_creation_guid,NULL,NULL,l_errors);
        END IF;
        ---End of add CR3236
        ---------------------------------------------------------------
        --DBMS_OUTPUT.PUT_lINE('zero list price management for the bundle products');
        ---------------------------------------------------------------
        IF l_price    =0 THEN
        --Added by Lakshmi to use LP and BDNet from XML when LP from Gpsy = 0    
        l_price := NVL(i_prod_list_price,0);
        l_auth_bdnet_amt         :=NVL(i_bdnetamt,0);
        
 --         L_AUTH_BDNET_AMT:=NULL;--Commented as part of CR81079
 
 --Commented the below code to support List price= 0 in Gpsy - Lakshmi 
          --L_AUTH_BDNET_AMT:=0;--Added as part of CR81079
           --L_EXT_PRE_APPRV_PRC_AM    := NULL;
          --L_ERRORS                 := 'Zero list Price for GPSy product (Bundle Product ) :' ||' Bundle Line - ' ||  I_LINE_ITEM_NR_FOR_BUNDLE ||' ' || GPRICE.PROD_NR ||'  ' || GPRICE.PROD_DESC ||'  GPSy Price : '|| GPRICE.PRICE || ' , SmartQuote Price : ' || I_PROD_LIST_PRICE || ' , BD Net values will be marked as zero';
          --L_ERRORS  := 'Zero list Price for GPSy product (Bundle Product ) :' ||' Bundle Line - ' || I_LINE_ITEM_NR_FOR_BUNDLE ||' ' || l_PROD_NR ||'  ' || l_PROD_DESC ||'  GPSy Price : '|| l_PRICE || ' , bmi Price : ' || I_PROD_LIST_PRICE || ' , BD Net values will be marked as zero';
          L_ERRORS  := 'Zero list Price for GPSy product (Bundle Product ) :' ||' Bundle Line - ' || I_LINE_ITEM_NR_FOR_BUNDLE ||' ' || l_PROD_NR ||'  ' || l_PROD_DESC ||'  GPSy Price : '|| l_PRICE || ' , bmi Price : ' || I_PROD_LIST_PRICE ;
          L_MSG_TYPE:='WARNING';
          INSERTERROR_OUTPUT_MESSAGES (I_BD_ID,I_BD_NR,I_BD_VERSION_NR, I_DEAL_PROG_CD,I_BDME_APRVL_CD,I_QUOTE_DIST_CD,I_EUV_STAT_CODE, I_HIGH_RISK_FL,I_RISK_REASION_DESC,I_RISK_DESC,L_ERRORS,L_MSG_TYPE, I_DEAL_CREATION_GUID,NULL,NULL,L_ERRORS);
        END IF;
        --inserting bundle line details
        --done
        --DBMS_OUTPUT.PUT_LINE('MARGINS');
        IF I_PROD_COST_PRICE                                                                                                          >0 THEN
          IF ((L_AUTH_BDNET_AMT                                                                                                      IS NULL OR L_AUTH_BDNET_AMT=0) AND l_price>0 ) THEN
            IF I_BDNETAMT                                                                                                             >0 THEN
              IF (ROUND((( (I_BDNETAMT                                                 - I_PROD_COST_PRICE) / I_BDNETAMT) * 100), 2)) < -99 THEN --CR 1262 Nov release  (ROUND(((  (I_BDNETAMT - I_PROD_COST_PRICE) / I_BDNETAMT) * 100), 2) <0 AND length(ROUND(((  (I_BDNETAMT - I_PROD_COST_PRICE) / I_BDNETAMT) * 100), 2))>3 ) THEN ---CR4717
                L_RQST_MARGIN_PCT                                                                                                    :=-99.99;                                                   --CR4717
              ELSIF (ROUND((( (I_BDNETAMT                                              - I_PROD_COST_PRICE) / I_BDNETAMT) * 100), 2)) > 100 THEN                                                 --CR 1262 Nov release (ROUND(((  (I_BDNETAMT - I_PROD_COST_PRICE) / I_BDNETAMT) * 100), 2) >0 AND length(ROUND(((  (I_BDNETAMT - I_PROD_COST_PRICE) / I_BDNETAMT) * 100), 2))>3 ) THEN ---CR4717
                L_RQST_MARGIN_PCT                                                                                                    :=999.99;                                                   --CR4717
              ELSE                                                                                                                                                                              ---CR4717
                L_RQST_MARGIN_PCT:=ROUND((( (I_BDNETAMT - I_PROD_COST_PRICE) / I_BDNETAMT) * 100), 2);
              END IF;
            END IF;
          elsif ((L_AUTH_BDNET_AMT                                                                                                                   IS NOT NULL AND L_AUTH_BDNET_AMT > 0) ) THEN
            IF (ROUND((( (L_AUTH_BDNET_AMT                                                       - I_PROD_COST_PRICE) / L_AUTH_BDNET_AMT) * 100), 2)) < -99 THEN -- CR 1262 Nov release (ROUND(((  (L_AUTH_BDNET_AMT - I_PROD_COST_PRICE) / L_AUTH_BDNET_AMT) * 100), 2) <0 AND LENGTH(ROUND(((  (L_AUTH_BDNET_AMT - I_PROD_COST_PRICE) / L_AUTH_BDNET_AMT) * 100), 2))>3 ) THEN --CR4717
              L_RQST_MARGIN_PCT                                                                                                                      :=-99.99;                                                         --CR4717
            ELSIF (ROUND((( (L_AUTH_BDNET_AMT                                                    - I_PROD_COST_PRICE) / L_AUTH_BDNET_AMT) * 100), 2)) > 100 THEN                                                       -- CR 1262 Nov release (ROUND(((  (L_AUTH_BDNET_AMT - I_PROD_COST_PRICE) / L_AUTH_BDNET_AMT) * 100), 2) >0 AND LENGTH(ROUND(((  (L_AUTH_BDNET_AMT - I_PROD_COST_PRICE) / L_AUTH_BDNET_AMT) * 100), 2))>3 ) THEN --CR4717
              L_RQST_MARGIN_PCT                                                                                                                      :=999.99;                                                         --CR4717
            ELSE                                                                                                                                                                                                       --CR4717
              L_RQST_MARGIN_PCT:=ROUND((( (L_AUTH_BDNET_AMT - I_PROD_COST_PRICE) / L_AUTH_BDNET_AMT) * 100), 2);
            END IF;
          ELSE
            L_RQST_MARGIN_PCT:=0;
          END IF;
        ELSE
          L_RQST_MARGIN_PCT:=0;
        END IF;
        --DBMS_OUTPUT.PUT_LINE('MARGINS END');
        --Modified by Harsh Shah , 23-Jan-2013
        --CR 4786 - [APJ MTP] ???Auth Amt? and ???Auth%?  populated with some data after creating the deal via EIS.
        --updating extended_price column with Null when list price is zero.
        --updating AUTH_DISC_OT_PCT column with Null when list price is zero.
        -- 8-feb-2013 by Harsh Shah
        -- modified the Auth amount for the bundle_line table. If list price is 0 then auth amount should be null
        --dbms_output.put_line ( ' bundle line test L_AUTH_BDNET_AMT for bundle line ' || L_AUTH_BDNET_AMT || ' prod_gnrc_nr_tx ' ||gprice.prod_nr );
        INSERT /*+APPEND */
        INTO BUNDLE_LINE
          (
            bd_id,
            line_nr,
            prod_gnrc_nr_tx,
            prod_opt_cd,
            disc_bndry_id,
            scale_id,
            qty,
            prod_type,
            prod_gnrc_desc_tx,
            disc_pc,
            list_price,
            extended_price,
            rqst_bd_net_prc_am,
            auth_bd_net_prc_am,
            rqst_incr_disc_am,
            auth_incr_disc_am,
            version_created,
            assoc_pl,
            item_prog_cd,
            auth_mc_date ,
            auth_mc_hp_emp_nr,
            disc_as_pct,
            disc_type_cd,
            rqst_disc_ot_pc,
            auth_disc_ot_pc,
            prev_auth_cd,
            creation_dts,
            update_dts,
            ref_price_fl,
            price_list_cd,
            currency_cd,
            price_term_cd,
            banded_fl,
            SPCL_CONFIG_FL,
            PROD_COST_AM,
            prod_cost_date,
            rqst_margin_pct,
            auth_margin_pct,
            cost_avail_fl,
            auth_dt_gmt,
            future_prod_fl,
            mult_cntry_vrfy_fl,
            ship_charge_fl,
            bus_group_cd,
            bus_unit_cd,
            item_nr,
            AUTH_BASIS_TEXT,
            NON_DISCOUNT_FL,
            line_auth_type,
            auth_generic_emp_nr,
            EXT_PRE_APPRV_PRC_AM,
            GUIDANCE_AVAILABLE_FL,
            GUIDANCE_DETAILS_ID,
            GUIDANCE_EXPERT_PCT,
            GUIDANCE_FLOOR_PCT,
            GUIDANCE_TYPICAL_PCT,
            GUIDANCE_LAST_REFRESH_DT
            ,INSTANT_PRC_METHOD --Added for UsS7301
            ,INSTANT_PRC_AMT  --Added for UsS7301
          )
          VALUES
          (
            i_bd_id,
            i_line_item_nr_for_bundle,
            TRIM(l_prod_nr),--gprice.prod_nr,--Changes made by Lakshmi to remove extra spaces in SQ deals
            DECODE(i_opt_cd,NULL,' ',i_opt_cd),
            1, --disc boundry
            1, --SCALE ID
            I_PROD_QTY,
            NULL,
            SUBSTRB(l_prod_desc,1,65),
            NULL,                                                                                               --prod_type
            l_PRICE,                                                                                       --list price
            DECODE(l_PRICE,0,NULL,DECODE(L_AUTH_BDNET_AMT,NULL,i_bdnetamt,L_AUTH_BDNET_AMT) * i_prod_qty), --extended price gprice
            DECODE (L_AUTH_BDNET_AMT,NULL,I_BDNETAMT,L_AUTH_BDNET_AMT),                                         --rqst_bd_net_prc_am
            --DECODE(I_AUTH_STAT_CD,'Y',DECODE(l_PRICE,0,0,L_AUTH_BDNET_AMT),NULL),    --Changed by Lakshmi for CR96402                                                   --auth amt  --Commented the code to support List price= 0 in Gpsy - Lakshmi 
            DECODE(I_AUTH_STAT_CD,'Y',L_AUTH_BDNET_AMT,NULL),    --Changed by Lakshmi for CR96402                                                   --auth amt
            DECODE(l_PRICE,0,0,NULL),                                                                      --RQST_INCR_DISC_AM
            NULL,
            i_bd_version_nr,
            l_prod_line,
            I_AUTH_STAT_CD, --item_prog_cd
            DECODE (I_AUTH_STAT_CD,'Y',i_auth_mc_date,NULL),
            G_SET_LINE_AUTHORIZER_CODE,
            DECODE(I_STDDISCPCT,NULL,0, I_STDDISCPCT),             --disc_as_pct
            DECODE(i_pricingtypecd,NULL,'B',i_pricingtypecd),      -- disc_type
            DECODE (l_rqst_disc_otc_pc,NULL,0,l_rqst_disc_otc_pc), --rqst_disc_ot_pc
            DECODE(I_AUTH_STAT_CD,'Y',DECODE(l_price,0,0,L_AUTH_DISC_OTC_PC),NULL), --auth_disc_ot_pc --Changes made by Lakshmi as part of CR96402 
            'N',
            sysdate,
            sysdate,
            l_ref_price_fl,
            i_pricelistcd,
            i_currencycd,
            i_pricetermcd,
            i_banded_fl,                                                --BANDED -- modified byHarsh Shah 16-Oct-2013 to cater to the requirement of BMI r7
            'N',                                                -- SPCL CONFIG
            I_PROD_COST_PRICE,                                  --PROD COST
            sysdate,                                            --PROD COST DATE
            L_RQST_MARGIN_PCT,                                  --RQST MARGIN
            DECODE (L_AUTH_BDNET_AMT,NULL,0,L_RQST_MARGIN_PCT), --AUTH MARGIN
            DECODE(I_PROD_COST_PRICE,NULL,'N',0,'N','Y'),       --COST AVAIL FL
            DECODE (I_AUTH_STAT_CD,'Y',I_AUTHDATEGMT,NULL),
            'N',
            'N',
            'N',
            l_line_bus_group_cd,
            L_LINE_BUS_UNIT_CD,
            I_LINE_NR,
            DECODE (I_AUTH_STAT_CD,'Y',I_PROD_AUTH_BASIS_TEXT,NULL),
            l_NON_DISCOUNT_FL, -- Modified by Lakshmi for CR83540-The Non-discountable attribute in Eclipse is displayed incorrect for non-discountable product which set in Optimus
            g_line_auth_type,
            g_set_gnrc_line_authorizer,
            L_EXT_PRE_APPRV_PRC_AM,-- DECODE(L_EXT_PRE_APPRV_PRC_AM ,NULL, 0,L_EXT_PRE_APPRV_PRC_AM)
            i_guidance_available_fl,
            DECODE(i_guidance_available_fl,'Y',i_guidance_details_id,NULL),
            DECODE(i_guidance_available_fl,'Y',i_guidance_expert_pct,NULL),
            DECODE(i_guidance_available_fl,'Y',i_guidance_floor_pct,NULL),
            DECODE(i_guidance_available_fl,'Y',i_guidance_typical_pct,NULL),
            DECODE(i_guidance_available_fl,'Y',TO_TIMESTAMP (SUBSTR(i_guidance_last_refresh_dt,1,19),'YYYY-MM-DD"T"HH24:MI:SS'),NULL)
           ,i_InstantPrcMethod  --Added for UsS7301
           ,i_InstantPrcAmount  --Added for US 7301
          );
          insert into bundle_line_contra(bd_id,
                                                     line_nr,
                                                     item_nr,
                                                     disc_bndry_id,
                                                     scale_id,
                                                     contra_type,
                                                     contra_amt)
                                                     Values
                                                     (i_bd_id,
                                                     i_line_item_nr_for_bundle,
                                                     i_line_nr,
                                                     1,
                                                     1,
                                                     'MANUAL',
                                                     i_ContraAmt);
      EXCEPTION
      WHEN dup_val_on_index THEN
        l_errors            := 'Duplicate Bundle Line. Bundle Line :'|| i_line_item_nr_for_bundle || ' Prod Nr : ' || l_prod_nr || ' OptCd :' || i_opt_cd;
        l_msg_type          :=c_m_type_warning;
        o_create_new_version:='N';
        --insert into error and output table
        INSERTERROR_OUTPUT_MESSAGES ( i_bd_id, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, l_errors, l_msg_type, g_deal_creation_guid, NULL, NULL,l_errors );
      END;
    END IF;
    --adding line item details.rollout details, line_disc_scale details
    --********************************************************************************
    -- Adding bundle Header and Bundle line Details
    --********************************************************************************
    IF (I_ADD_BUNDLES='Y' AND I_ADD_BUNDLEHEADER ='Y') THEN
      --dbms_output.PUT_LINE (' Adding bundle header item ');
      /*
      IF (i_dealsourcedealtype<>c_high_touch_dealtype_desc ) THEN
      l_auth_bdnet_amt      :=I_BD_HDR_LINE_AUTH_BD_NET;
      else
      L_AUTH_BDNET_AMT:=null;
      END IF;
      */
      IF ( i_bdnetamt             IS NULL OR l_price IS NULL OR i_auth_mc_hp_emp_nr IS NULL OR i_line_added_by_emp_nr IS NULL OR i_auth_stat_cd IS NULL OR i_auth_emp_nr IS NULL-- OR recbd.ExtPreApprvPrice IS NULL
      ) THEN
        G_SET_LINE_AUTHORIZER_CODE:=NULL;
        g_set_gnrc_line_authorizer:= NULL; --added for new auth changes for line_items
        g_line_auth_type          := NULL;
      ELSIF (I_AUTH_STAT_CD        ='Y' ) THEN
        g_set_line_authorizer_code:= i_auth_emp_nr;
        g_set_gnrc_line_authorizer:= i_auth_mc_hp_emp_nr; --added for new auth changes for line_items
        g_line_auth_type          := i_line_auth_type;
      ELSE
        g_set_line_authorizer_code:=NULL;
        g_set_gnrc_line_authorizer:= NULL; --added for new auth changes for line_items
        g_line_auth_type          := NULL;
      END IF;
      --dbms_output.PUT_LINE (' bundle header item g_set_line_authorizer_code ' || G_SET_LINE_AUTHORIZER_CODE);
      --insert into line_item
      ---Added on 23-Jan for CR3236
      IF i_sku_pl <> l_prod_line THEN
        L_MSG_TYPE:='WARNING';
        --l_errors                 :='PL '||i_sku_pl ||'does not tally between SQ and Eclipse' || '(SQ PL :'|| i_sku_pl||' GPSy PL :'||gprice.prod_line||')'||'PL '||i_sku_pl ||'Is Overriden';
        l_errors :='PL for SKU '||i_prod_string ||' does not tally between '||g_err_src||' and Eclipse ' || '( '||g_err_src||' PL :'|| i_sku_pl||' GPSy PL :'||l_prod_line||' )'||' PL for SKU '||i_prod_string ||' is overriden';
        --dbms_output.put_line (l_errors);
        inserterror_output_messages (i_bd_id,i_bd_nr,i_bd_version_nr, i_deal_prog_cd,i_bdme_aprvl_cd,i_quote_dist_cd,i_euv_stat_code, i_high_risk_fl,i_risk_reasion_desc,i_risk_desc,l_errors,l_msg_type, i_deal_creation_guid,NULL,NULL,l_errors);
      END IF;

      ---End of add CR3236
      --dbms_output.PUT_LINE ('Adding Line -' || ' i_line_type_cd :' || i_line_type_cd || ' line_nr ' || i_line_nr  || 'prod_nr : ' || TRIM(gprice.prod_nr));

      --by Harsh Shah 18-Jan-2014
      --added bmi doc no.
      INSERT
      INTO line_item
        (
          line_prog_cd,
          support_pack_fl,
          future_prod_fl,
          change_pndg_fl,
          version_created,
          bd_id,
          LINE_NR,
          LINE_TYPE_CD,
          prod_gnrc_desc_tx,
          prod_gnrc_nr_tx,
          line_added_by_emp_nr,
          bus_group_cd,
          bus_unit_cd,
          assoc_pl_cd,
          assoc_pf_cd,
          estmtd_qt,
          estmtd_dlr_am,
          price_list_cd,
          price_term_cd,
          currency_cd,
          auth_mc_hp_emp_nr,
          AUTH_MC_DATE,
          AUTH_DT_GMT,
          prod_opt_cd,
          REMAINING_AMT,
         -- SQ_AUTH_EMP_NR,
          SRC_BUNDLE_DESC_TX,
          AUTH_GENERIC_EMP_NR,
          line_auth_type,
          bmi_doc_no
        )
        VALUES
        (
         DECODE( i_line_prog_cd,NULL,'N',i_line_prog_cd),
          'N',
          'N',
          'N',
          i_bd_version_nr,
          i_bd_id,
          i_line_nr,
          i_line_type_cd,
          SUBSTRB(l_prod_desc,1,65),    -- l_line_prod_gnrc_desc_tx,  CR 4744
          --i_bundle_desc,
          TRIM(l_prod_nr),--gprice.prod_nr Changes made by Lakshmi to remove extra spaces in SQ deals
          i_line_added_by_emp_nr ,
          l_line_bus_group_cd,
          l_line_bus_unit_cd,
          l_prod_line,
          l_prod_family,
          i_prod_qty,
          NULL,
          i_pricelistcd,
          i_pricetermcd,
          I_CURRENCYCD,
          g_set_line_authorizer_code,
          --DECODE (I_LINE_PROG_CD,'Y',I_AUTHDATEGMT,NULL),
          --DECODE (I_LINE_PROG_CD,'Y',I_AUTH_MC_DATE,NULL),
          --DECODE (I_LINE_PROG_CD,'Y',I_AUTH_MC_DATE,NULL), --Commented for CR 236715 ---   RE: BMI Instant deals still have line item authorization stamped as earlier than Deal Creation Date?
          DECODE (I_LINE_PROG_CD,'Y',I_AUTH_MC_DATE,NULL),
          DECODE (I_LINE_PROG_CD,'Y',I_AUTHDATEGMT,NULL),
          DECODE(LTRIM(RTRIM(I_OPT_CD)),NULL,' ',I_OPT_CD),
          DECODE (L_AUTH_BDNET_AMT,0,0,NULL,i_bdnetamt * I_PROD_QTY,L_AUTH_BDNET_AMT * I_PROD_QTY),
        --  DECODE (I_AUTH_STAT_CD,'Y',i_auth_emp_nr,NULL),
          i_bundle_desc,
          G_SET_GNRC_LINE_AUTHORIZER,
          g_line_auth_type,
          i_bmi_doc_no
        ) ;
      --DBMS_OUTPUT.PUT_LINE('adding one entry into line_disc_bndry table - per line');
      INSERT
      INTO line_disc_bndry
        (
          bd_id,
          line_nr,
          disc_bndry_id,
          disc_bndry_type_cd,
          creation_dts,
          update_dts
        )
        VALUES
        (
          i_bd_id,
          i_line_nr,
          1,
          'D',
          sysdate,
          sysdate
        );
      --get the new scale id for the line
      SELECT NVL(MAX(scale_id),0)+1
      INTO l_scale_id
      FROM line_disc_scale
      WHERE BD_ID =I_BD_ID
      and LINE_NR =I_LINE_NR;
      --dbms_output.put_line (' bundle header sku list price check ');
      --dbms_output.put_line (' bundle header sku list price ' || i_prod_list_price || ' and GPSy price ' || gprice.price);
      --IF (i_prod_list_price>0 AND gprice.price>0 AND i_dealsourcedealtype<>c_high_touch_dealtype_desc)THEN
      --dbms_output.PUT_LINE (' GPRICE ' || GPRICE.PRICE || 'PROD : ' || gprice.prod_nr || ' Auth bd net Header bundle sku is ' || i_total_hdr_bdnet_value ) ;


      --Calculate Header Auth/Rqst disc pct.
      --By harsh Shah 10-Mar-2014
       --i_total_hdr_listprice_value NUMBER,
      --i_total_hdr_bdnet_value number
      L_RQST_DISC_OTC_PC:=FCALCRQSTDISCPCT(i_total_hdr_bdnet_value,i_total_hdr_listprice_value,I_STDDISCPCT);
      l_auth_disc_otc_pc:=l_rqst_disc_otc_pc;

      --dbms_output.PUT_LINE ('Calculated Auth / rqst discount pct with new formula ' || l_rqst_disc_otc_pc || ' header auth bdnet' || i_total_hdr_bdnet_value || ' header sku list price ' || i_total_hdr_listprice_value );

       --set auth Disc % to Null in case of High Touch Deal
      IF i_dealsourcedealtype=c_high_touch_dealtype_desc AND i_line_prog_cd <> 'Y' THEN ---i_line_prog_cd condition is added for ePrime as ePrime can approve the products in HIGH_touch deals
        L_AUTH_DISC_OTC_PC  :=NULL;
      END IF;
      --dbms_output.PUT_LINE ('calculated auth disc pct for bundle header SKU ' || GPRICE.PROD_NR || ' Auth disc % is ' || L_AUTH_DISC_OTC_PC || ' LIST PRICE IS: ' || GPRICE.PRICE);
      ----Insert data into LINE_DISC_SCALE table.
      --done
      --MARGIN
      L_RQST_MARGIN_PCT:=0;
         --calculating Margin Pct
      IF i_prod_cost_price_hdr_prod                                                                                     >0 THEN
        IF ( I_BD_HDR_LINE_AUTH_BD_NET                                                                                  >0 AND l_price >0 ) THEN
          IF( ROUND((( (I_BD_HDR_LINE_AUTH_BD_NET - I_PROD_COST_PRICE_HDR_PROD) / I_BD_HDR_LINE_AUTH_BD_NET) * 100), 2) < -99.99 ) THEN --- CR 1262 Nov release
            --ROUND(((  (I_BD_HDR_LINE_AUTH_BD_NET - I_PROD_COST_PRICE_HDR_PROD) / I_BD_HDR_LINE_AUTH_BD_NET) * 100), 2) <0 AND
            --           LENGTH(ROUND(((  (I_BD_HDR_LINE_AUTH_BD_NET - I_PROD_COST_PRICE_HDR_PROD) / I_BD_HDR_LINE_AUTH_BD_NET) * 100), 2)) >3) THEN --CR4717
            L_RQST_MARGIN_PCT                                                                                             :=                     -99.99; --CR4717
          ELSIF (ROUND((( (I_BD_HDR_LINE_AUTH_BD_NET - I_PROD_COST_PRICE_HDR_PROD) / I_BD_HDR_LINE_AUTH_BD_NET) * 100), 2) >100 ) THEN                  --- CR 1262 Nov release
            ---- ROUND(((  (I_BD_HDR_LINE_AUTH_BD_NET - I_PROD_COST_PRICE_HDR_PROD) / I_BD_HDR_LINE_AUTH_BD_NET) * 100), 2) >0 AND
            --      LENGTH(ROUND(((  (I_BD_HDR_LINE_AUTH_BD_NET - I_PROD_COST_PRICE_HDR_PROD) / I_BD_HDR_LINE_AUTH_BD_NET) * 100), 2)) >3) THEN      --CR4717
            L_RQST_MARGIN_PCT :=999.99; --CR4717
          ELSE
            L_RQST_MARGIN_PCT:=ROUND((( (I_BD_HDR_LINE_AUTH_BD_NET - I_PROD_COST_PRICE_HDR_PROD) / I_BD_HDR_LINE_AUTH_BD_NET) * 100), 2);
          END IF;
        elsif (L_AUTH_BDNET_AMT                                                                       IS NOT NULL AND L_AUTH_BDNET_AMT > 0) THEN
          IF ( ROUND((( (L_AUTH_BDNET_AMT - I_PROD_COST_PRICE_HDR_PROD) / L_AUTH_BDNET_AMT) * 100), 2) < -99.99 ) THEN
            --ROUND(((  (L_AUTH_BDNET_AMT - I_PROD_COST_PRICE_HDR_PROD) / L_AUTH_BDNET_AMT) * 100), 2) <0 AND
            --     LENGTH(ROUND(((  (L_AUTH_BDNET_AMT - I_PROD_COST_PRICE_HDR_PROD) / L_AUTH_BDNET_AMT) * 100), 2))>3 ) THEN --CR4717
            L_RQST_MARGIN_PCT                                                                           :=            -99.99; --CR4717
          ELSIF (ROUND((( (L_AUTH_BDNET_AMT - I_PROD_COST_PRICE_HDR_PROD) / L_AUTH_BDNET_AMT) * 100), 2) > 100) THEN
            --ROUND(((  (L_AUTH_BDNET_AMT - I_PROD_COST_PRICE_HDR_PROD) / L_AUTH_BDNET_AMT) * 100), 2) >0 AND
            --LENGTH(ROUND(((  (L_AUTH_BDNET_AMT - I_PROD_COST_PRICE_HDR_PROD) / L_AUTH_BDNET_AMT) * 100), 2))>3 ) THEN --CR4717
            L_RQST_MARGIN_PCT:=999.99; --CR4717
          ELSE
            L_RQST_MARGIN_PCT:=ROUND((( (L_AUTH_BDNET_AMT - I_PROD_COST_PRICE_HDR_PROD) / L_AUTH_BDNET_AMT) * 100), 2);
          END IF;
        ELSE
          L_RQST_MARGIN_PCT:=0;
        END IF;
      ELSE
        L_RQST_MARGIN_PCT:=0;
      END IF;
      --Modified by Harsh Shah , 23-Jan-2013
      --CR 4786 - [APJ MTP] ???Auth Amt? and ???Auth%?  populated with some data after creating the deal via EIS.
      --DBMS_OUTPUT.PUT_LINE('updating AUTH_DISC_OT_PC column with Null when list price is zero.');
      INSERT
      INTO line_disc_scale
        (
          bd_id,
          line_nr,
          disc_bndry_id,
          scale_id,
          disc_type_cd,
          upper_bndry_dt,
          lower_bndry_dt,
          auth_fl,
          rqst_disc_ot_pc,
          auth_disc_ot_pc,
          disc_as_pc_rqst,
          version_created,
          auth_bd_net_prc_am,
          prod_lst_prc_am,
          rqst_bd_net_prc_am,
          cost_avail_fl,
          updated_by_emp_nr,
          auth_basis_text,
          non_discount_fl,
          disc_as_pc,
          high_rslr_a_sd_pc,
          RQST_INCR_DISC_AM,
          RQST_MARGIN_PCT,
          AUTH_MARGIN_PCT,
          PROD_COST_AM,
          PROD_COST_DATE,
          EXT_PRE_APPRV_PRC_AM,
          GUIDANCE_AVAILABLE_FL,
          GUIDANCE_DETAILS_ID,
          GUIDANCE_EXPERT_PCT,
          GUIDANCE_FLOOR_PCT,
          GUIDANCE_TYPICAL_PCT,
          GUIDANCE_LAST_REFRESH_DT
           ,INSTANT_PRC_METHOD --Added for UsS7301
            ,INSTANT_PRC_AMT  --Added for UsS7301
        )
        VALUES
        (
          i_bd_id,
          i_line_nr,
          1,
          l_scale_id,
          DECODE(i_pricingtypecd,NULL,'B',i_pricingtypecd),
          i_enddate,
          i_begindate,
          I_AUTH_STAT_CD,                                          --auth_fl
          DECODE (L_RQST_DISC_OTC_PC,NULL,0, L_RQST_DISC_OTC_PC) , --rqst_disc_ot_pc
          DECODE(I_AUTH_STAT_CD,'Y',DECODE(l_PRICE,0,0,L_AUTH_DISC_OTC_PC),NULL), --auth_disc_ot_pc 
          0,
          i_bd_version_nr,
          --DECODE (I_AUTH_STAT_CD,'Y',L_AUTH_BDNET_AMT,NULL),
          DECODE(I_AUTH_STAT_CD,'Y',L_AUTH_BDNET_AMT,null),--DECODE(l_PRICE,0,0,L_AUTH_BDNET_AMT),NULL),    --Changed by Lakshmi for CR96402           --auth bd net
--Changes made by Lakshmi for CR175816 on 11/18/2014
          l_PRICE,                                              -- list price
          DECODE(L_AUTH_BDNET_AMT,NULL,i_bdnetamt,L_AUTH_BDNET_AMT), --rqst bd net amout
          DECODE(I_PROD_COST_PRICE_HDR_PROD,NULL,'N',0,'N','Y'),     --COST AVAIL FL
          DECODE (I_AUTH_STAT_CD,'Y',I_AUTH_EMP_NR,NULL),
          DECODE(i_auth_stat_cd,'Y',i_prod_auth_basis_text,NULL),
          l_NON_DISCOUNT_FL,-- Modified by Lakshmi for CR83540 The Non-discountable attribute in Eclipse is displayed incorrect for non-discountable product which set in Optimus
          0,                                        -- disc_as_pc
          DECODE(I_STDDISCPCT,NULL,0,I_STDDISCPCT), --HIGH_RSLR_A_SD_PC
          DECODE(l_PRICE,0,0,NULL),            --RQST_INCR_DISC_AM
          L_RQST_MARGIN_PCT,
          DECODE(L_AUTH_BDNET_AMT,NULL,0,L_RQST_MARGIN_PCT) , --auth margin
          I_PROD_COST_PRICE_HDR_PROD,                         --PROD COST AM,
          SYSDATE ,                                            --PROD COST DATE
          L_EXT_PRE_APPRV_PRC_AM,--DECODE(l_EXT_PRE_APPRV_PRC_AM, NULL, 0, l_EXT_PRE_APPRV_PRC_AM)
          i_guidance_available_fl,
          DECODE(i_guidance_available_fl,'Y',i_guidance_details_id,NULL),
          DECODE(i_guidance_available_fl,'Y',i_guidance_expert_pct,NULL),
          DECODE(i_guidance_available_fl,'Y',i_guidance_floor_pct,NULL),
          DECODE(i_guidance_available_fl,'Y',i_guidance_typical_pct,NULL),
          DECODE(i_guidance_available_fl,'Y',TO_TIMESTAMP (SUBSTR(i_guidance_last_refresh_dt,1,19),'YYYY-MM-DD"T"HH24:MI:SS'),NULL)
           ,i_InstantPrcMethod  --Added for UsS7301
           ,i_InstantPrcAmount  --Added for US 7301
          );


      --******************************************************
      -- Insert into Rollout Schedule for bundle Header
      --******************************************************
      --dbms_output.PUT_LINE (' bundle Header Rollout  1 ' );
      l_rollout_mnths :=t_rollout_mnths();
      ----dbms_output.put_line('Rollout month qtys   :'||i_rolloutmonthqtys);
      get_rollout_months(i_rolloutmonthqtys,l_rollout_mnths );
      --dbms_output.PUT_LINE (' bundle Header Rollout  2 ' );
      l_rollout_ins_qry        := 'insert into rollout_schedule (bd_id,
line_nr,
prod_base_nr,
ro_bgn_dt,
ro_end_dt,
load_type,
est_qty,
pct_prob,
mth1_qty,
mth2_qty,
mth3_qty,
mth4_qty,
mth5_qty,
mth6_qty,
mth7_qty,
mth8_qty,
mth9_qty,
mth10_qty,
mth11_qty,
mth12_qty,
mth13_qty,
mth14_qty,
mth15_qty,
schedule_change_fl,
ordr_min_qty,
line_max_qty,
creation_dts,
update_dts,
remaining_qty,
rtqty,
prod_opt_cd )
values ( ' ||i_bd_id||',' ||i_line_nr||',' ||'''' || TRIM(l_prod_nr) ||'''' ||',' || 'to_date('||''''||i_begindate||''''||','||'''DD-MON-YY'''||')'||',' || 'to_date('||''''||i_enddate||''''||','||'''DD-MON-YY'''||')'||',' || '''Even'''||',' || i_prod_qty||',' ||100||',';
      l_no_of_months           :=1;
      IF l_rollout_mnths.first IS NOT NULL THEN
        FOR months_rec IN l_rollout_mnths.first..l_rollout_mnths.last
        LOOP
          IF LENGTH
            (
              l_rollout_mnths(months_rec)
            )
                              =0 THEN
            l_rollout_ins_qry:=l_rollout_ins_qry||'NULL'||',';
          ELSE
            l_rollout_ins_qry:=l_rollout_ins_qry||l_rollout_mnths(months_rec) ||',';
          END IF;
          l_no_of_months:=l_no_of_months+1;
        END LOOP;
      END IF;
      FOR i IN l_no_of_months-1 ..14
      LOOP
        l_rollout_ins_qry:=l_rollout_ins_qry||'NULL'||',';
      END LOOP;
      l_rollout_ins_qry:=l_rollout_ins_qry|| '''N'''||','||NVL(i_minorder_qty,'NULL')||',' || i_prod_qty ||',' || 'SYSDATE'||',' ||' SYSDATE'||',' ||i_prod_qty||',' ||i_prod_qty ||',' || '''' ||NVL(ltrim(rtrim(I_OPT_CD)),' ') || '''' || ')';
      ----dbms_output.put_line(' Rollout query length ' || LENGTH(l_rollout_ins_qry));
      --dbms_output.put_line( 'Bundle rollout query   '||l_rollout_ins_qry);
      EXECUTE immediate (l_rollout_ins_qry);
         --************************************************
      --Adding Bundle Header Details
      --insert into Bundle Table - Inserting Bundle Header
      --************************************************
      --dbms_output.put_line ('adding bundle header');
      ----Added with CR 4774
      --select nvl(tenantid,'HPE') into l_tenantid from deal where bd_id =i_bd_id; ---Added for SMO Changes TENANTID_DATA_CD
      select nvl(TENANTID_DATA_CD,'HPE') into l_tenantid from deal where bd_id =i_bd_id; -- tenantid column is replaced with tenantid_data_cd  for Federal project)
      SELECT b.disp_comp_prc_fl
      INTO l_disp_comp_prc_fl_BM
      FROM bus_model b
      WHERE b.bus_model_cd = i_busmodelcd
      AND b.country_cd     = i_countrycd
      AND tenantid =l_tenantid;---Added for SMO Changes.

      --Changes done for US6037 --> Show Component Level Pricing
    IF (I_DisplayCompPrcFl IN ('Y','N') AND l_disp_comp_prc_fl_BM='N') THEN
    l_disp_comp_prc_fl := 'N';
    ELSIF (I_DisplayCompPrcFl='N' AND l_disp_comp_prc_fl_BM='Y') THEN
    l_disp_comp_prc_fl :='N';
    ELSE
    l_disp_comp_prc_fl :='Y';
    END IF;

     l_config_src        :=i_config_src;
      IF i_config_src      = c_bundle_source_ezconfig THEN --Added as part of ePrime as ePrime sends EZconfigs.
        l_config_src      :='EC-BAND';
      END IF;
      INSERT
      INTO bundle
        (
          bd_id,
          line_nr,
          prod_base_nr,
          prod_base_desc,
          config_src,
          config_id,
          source_config_id,
          supply_chain,
          disp_comp_prc_fl,
          creation_dts,
          update_dts,
          add_to_deal_dt,
          component_change_dt
        )
        VALUES
        (
          i_bd_id,
          i_line_nr,
          TRIM(l_prod_nr),--gprice.prod_nr--Changes made by Lakshmi to remove extra spaces in SQ deals
         SUBSTRB(l_prod_desc,1,65),
--            i_bundle_desc,
          l_config_src,--i_config_src,
          i_config_id,
          i_source_config_id,
          NULL,
          l_disp_comp_prc_fl,--'Y',  ----Added with CR 4774.
          sysdate,
          sysdate,
          sysdate,
          sysdate
        );
      --dbms_output.put_line (' Inserting into bundle line with Header details ' || i_line_nr);
         -------------------------------------------
      -- Insert data into Bundle Line table
      -----------------------------------------
      --dbms_output.put_line (' I_BD_HDR_LINE_AUTH_BD_NET : ' || i_bd_hdr_line_auth_bd_net || ' I_BD_LINE_QTY_FOR_HDR_SKU ' || i_bd_line_qty_for_hdr_sku);
      --dbms_output.PUT_LINE ('AUTH DISC % FOR BUNDLE HEADERS LINE  ' || l_auth_disc_otc_pc || ' LIST PRICE IS:' ||  GPrICE.PRICE );
    END IF;
    --i_line_item_nr_for_bundle:= l_i_line_item_nr_for_bundle;
  --END LOOP;
  --DBMS_OUTPUT.PUT_LINE('Insert_prod_line completes');
  EXCEPTION
  WHEN REJECT_DEAL THEN   ---Added CR 209817
  DBMS_OUTPUT.PUT_LINE('Insert prod line failed as product line not found in Gypsy ');
  WHEN OTHERS THEN
    RAISE;
    --DBMS_OUTPUT.PUT_LINE('Insert prod line failed: '||sqlerrm);
END insert_prod_line;

FUNCTION convert_to_us_currency
  (
    i_curr_cd          VARCHAR2,
    i_pl_cd            VARCHAR2,
    i_deal_est_value   NUMBER,
    i_exchange_rate_cd VARCHAR2,
    i_tenantid VARCHAR2
  )
  RETURN NUMBER
IS
  l_errors            VARCHAR2(3000);
  l_exc_rate          NUMBER(12,2);
  --L_CONVERTEDUSAMOUNT NUMBER (12,2);
  L_CONVERTEDUSAMOUNT NUMBER (18,2); --Added by Lakshmi on 11/27 to handle huge values of converted deal values.
  L_MSG_TYPE          VARCHAR2(20);
  --exception
  reject_currency_conversion EXCEPTION;
BEGIN
  IF i_curr_cd IS NULL THEN
    l_errors   :='Invalid Currency Code : ''' || i_curr_cd ||'''';
    raise reject_currency_conversion;
  END IF;
  IF i_curr_cd='UD' THEN
    RETURN i_deal_est_value;
  END IF;
  --Get exchange rate details
  --ASK MAX if there are no exchange rate available then what action needs to
  -- be taken.
  SELECT COUNT (exchange_rate)
  INTO l_exc_rate
  FROM exchange_rate
  WHERE curr_cd            =i_curr_cd
  AND pl_cd                =i_pl_cd
  AND exchange_rate_type_cd=i_exchange_rate_cd
  AND tenantid =i_tenantid; ---Added for SMO changes
  IF l_exc_rate            >0 THEN
    SELECT exchange_rate
    INTO l_exc_rate
    FROM exchange_rate
    WHERE curr_cd            =i_curr_cd
    AND pl_cd                =i_pl_cd
    AND exchange_rate_type_cd=i_exchange_rate_cd
     AND tenantid =i_tenantid; ---Added for SMO changes
  ELSE
    --if there is no exchange rate for the PL then check if there is an
    -- exchagne rate with pl code as '*'
    SELECT exchange_rate
    INTO l_exc_rate
    FROM exchange_rate
    WHERE curr_cd            =i_curr_cd
    AND pl_cd                ='*'
    AND exchange_rate_type_cd=i_exchange_rate_cd
     AND tenantid =i_tenantid; ---Added for SMO changes
  END IF;
  --do the conversion
  IF l_exc_rate          >0 THEN
    l_convertedusamount := i_deal_est_value / l_exc_rate;
  ELSE
    l_errors:= 'Cannot perform Exchange Rate Conversion. Exchange Rate is 0 for the currency code : ' ||'''' ||i_curr_cd ||'''' || ' and PL Code ''' || i_pl_cd ||'''' ;
    raise reject_currency_conversion;
  END IF;
  --dbms_output.put_line (' l_exc_rate ' || l_exc_rate);
  --dbms_output.put_line (' l_convertedusamount '|| l_convertedusamount);
  RETURN l_convertedusamount;
EXCEPTION
WHEN no_data_found THEN
  raise_application_error ( -20001, 'Convert To US Currency : Exchange Rate details not found for the currency code : ' ||'''' ||i_curr_cd ||'''' || ' and PL Code ''' || i_pl_cd ||'''' );
WHEN reject_currency_conversion THEN
  --dbms_output.put_line ('REJECT_CURRENCY_CONVERSION');
  --dbms_output.put_line (l_errors);
  raise_application_error ( -20004, l_errors);
WHEN OTHERS THEN
  --L_ERRORS  :='An error was encountered while Converting Currency to US Currency - ' || SQLCODE || ' -ERROR- ' || SQLERRM;
  L_ERRORS  := 'An error was encountered - ' || SQLCODE || ' -ERROR- ' || SQLERRM || '. Error at Line : ' || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE();
  L_MSG_TYPE:='ERROR';
  RAISE_APPLICATION_ERROR ( -20003, 'An error was encountered while Converting Currency to US Currency');
  inserterror_output_messages ( NULL,NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, l_msg_type, g_deal_creation_guid, NULL,NULL,l_errors);
END convert_to_us_currency;
PROCEDURE geteconomicrows(
    i_bus_unit_cd             VARCHAR2,
    i_region_cd               VARCHAR2,
    i_country_cd              VARCHAR2,
    i_model_grp_cd            VARCHAR2,
    i_get_std_disc_fl         VARCHAR2,
    i_lead_bus_grp            VARCHAR2,
    i_deal_est_value          NUMBER,
    i_est_deal_value_disc_pct NUMBER ,
    i_first_tier_row          VARCHAR2,
    p_ecoresults OUT sys_refcursor )
IS
  l_first_tier_condition VARCHAR2(300);
  I_TEST_DYNAMIC_SQL     VARCHAR2(4000);
  RECBME BUS_MODEL_ECONOMIC_RISK_LEVEL%ROWTYPE;
BEGIN
  --add first tier row condition
  --not a first tier Row
  IF (i_first_tier_row     ='N' ) THEN
    l_first_tier_condition:= ' bme.LOW_DISC_PCT <= ' || i_est_deal_value_disc_pct ||' AND bme.HIGH_DISC_PCT >= ' || i_est_deal_value_disc_pct || ' AND bme.LOW_DEAL_VALUE <= '|| i_deal_est_value ||'  AND bme.HIGH_DEAL_VALUE >= ' || i_deal_est_value ;
  ELSE
    l_first_tier_condition:= ' bme.LOW_DEAL_VALUE = 0' ;
  END IF;
  ----dbms_output.put_line (' i_first_tier_row ' || i_first_tier_row || ' , First Tier condition is ' || l_first_tier_condition);
   --call get_economic_data method to get economic data.
  IF i_bus_unit_cd IS NULL THEN
    --// Level 1  All Match
    --parameters            i_region_cd, i_country_cd, i_model_grp_cd,
    -- i_get_std_disc_fl, i_lead_bus_grp, i_bus_unit_cd, i_first_tier_row,
    -- i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults
    GET_ECONOMIC_DATA (I_REGION_CD, I_COUNTRY_CD, I_MODEL_GRP_CD, I_GET_STD_DISC_FL, I_LEAD_BUS_GRP, I_BUS_UNIT_CD, I_FIRST_TIER_ROW, I_DEAL_EST_VALUE, I_EST_DEAL_VALUE_DISC_PCT, P_ECORESULTS );
    FETCH P_ECORESULTS INTO RECBME;
    IF RECBME.country_cd IS NOT NULL THEN
      --dbms_output.put_line ('Got data for 1');
      --calling agian to refill the cursor; -- this is just a temp solution. Permanent fix is required
      GET_ECONOMIC_DATA (I_REGION_CD, I_COUNTRY_CD, I_MODEL_GRP_CD, I_GET_STD_DISC_FL, I_LEAD_BUS_GRP, I_BUS_UNIT_CD, I_FIRST_TIER_ROW, I_DEAL_EST_VALUE, I_EST_DEAL_VALUE_DISC_PCT, P_ECORESULTS );
      RETURN;
    ELSE
      --dbms_output.put_line ('No data for 1');
      null;
    END IF;
    --IF p_ecoresults%notfound IS NULL THEN
    --      --dbms_output.put_line ('No data for 1');
    --  ELSE
    --  RETURN;
    --end if;
    --//business group *
    --parameters            i_region_cd, i_country_cd, i_model_grp_cd,
    -- i_get_std_disc_fl, i_lead_bus_grp, i_bus_unit_cd, i_first_tier_row,
    -- i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults
    GET_ECONOMIC_DATA (I_REGION_CD, I_COUNTRY_CD, I_MODEL_GRP_CD, I_GET_STD_DISC_FL, '*', I_BUS_UNIT_CD, I_FIRST_TIER_ROW, I_DEAL_EST_VALUE, I_EST_DEAL_VALUE_DISC_PCT, P_ECORESULTS );
    FETCH P_ECORESULTS INTO RECBME;
    IF RECBME.country_cd IS NOT NULL THEN
      --dbms_output.put_line ('Got data for 2');
      GET_ECONOMIC_DATA (I_REGION_CD, I_COUNTRY_CD, I_MODEL_GRP_CD, I_GET_STD_DISC_FL, '*', I_BUS_UNIT_CD, I_FIRST_TIER_ROW, I_DEAL_EST_VALUE, I_EST_DEAL_VALUE_DISC_PCT, P_ECORESULTS );
      RETURN;
    ELSE
    null;
      --dbms_output.put_line ('No data for 2');
    END IF;
    --// indirect flag *
    --parameters            i_region_cd, i_country_cd, i_model_grp_cd,
    -- i_get_std_disc_fl, i_lead_bus_grp, i_bus_unit_cd, i_first_tier_row,
    -- i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults
    get_economic_data (i_region_cd, i_country_cd, i_model_grp_cd, '*', i_lead_bus_grp, i_bus_unit_cd, i_first_tier_row, i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults );
    FETCH P_ECORESULTS INTO RECBME;
    IF RECBME.country_cd IS NOT NULL THEN
      --dbms_output.put_line ('Got data for 3 ');
      get_economic_data (i_region_cd, i_country_cd, i_model_grp_cd, '*', i_lead_bus_grp, i_bus_unit_cd, i_first_tier_row, i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults );
      RETURN;
    ELSE
      --dbms_output.put_line ('No data for 3 INDIRECT FLAG IS * ');
      null;
    END IF;
    --// mod bus group *
    --parameters            i_region_cd, i_country_cd, i_model_grp_cd,
    -- i_get_std_disc_fl, i_lead_bus_grp, i_bus_unit_cd, i_first_tier_row,
    -- i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults
    GET_ECONOMIC_DATA (I_REGION_CD, I_COUNTRY_CD, '*', I_GET_STD_DISC_FL, I_LEAD_BUS_GRP, I_BUS_UNIT_CD, I_FIRST_TIER_ROW, I_DEAL_EST_VALUE, I_EST_DEAL_VALUE_DISC_PCT, P_ECORESULTS );
    FETCH P_ECORESULTS INTO RECBME;
    IF RECBME.country_cd IS NOT NULL THEN
      --dbms_output.put_line ('Got data for 4');
      null;
      GET_ECONOMIC_DATA (I_REGION_CD, I_COUNTRY_CD, '*', I_GET_STD_DISC_FL, I_LEAD_BUS_GRP, I_BUS_UNIT_CD, I_FIRST_TIER_ROW, I_DEAL_EST_VALUE, I_EST_DEAL_VALUE_DISC_PCT, P_ECORESULTS );
      RETURN;

    ELSE
      --dbms_output.put_line ('No data for 4');
      null;
    END IF;
    --//country *
    --parameters            i_region_cd, i_country_cd, i_model_grp_cd,
    -- i_get_std_disc_fl, i_lead_bus_grp, i_bus_unit_cd, i_first_tier_row,
    -- i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults
    get_economic_data (i_region_cd, '*', i_model_grp_cd, i_get_std_disc_fl, i_lead_bus_grp, i_bus_unit_cd, i_first_tier_row, i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults );
    FETCH P_ECORESULTS INTO RECBME;
    IF RECBME.country_cd IS NOT NULL THEN
      --dbms_output.put_line ('Got data for 5');
      null;
      RETURN;
    ELSE
      --dbms_output.put_line ('No data for 5');
      null;
    END IF;
    --// Region *
    --parameters            i_region_cd, i_country_cd, i_model_grp_cd,
    -- i_get_std_disc_fl, i_lead_bus_grp, i_bus_unit_cd, i_first_tier_row,
    -- i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults
    get_economic_data ('*', i_country_cd, i_model_grp_cd, i_get_std_disc_fl, i_lead_bus_grp, i_bus_unit_cd, i_first_tier_row, i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults );
    FETCH P_ECORESULTS INTO RECBME;
    IF RECBME.country_cd IS NOT NULL THEN
    null;
      --dbms_output.put_line ('Got data for 6');
      get_economic_data ('*', i_country_cd, i_model_grp_cd, i_get_std_disc_fl, i_lead_bus_grp, i_bus_unit_cd, i_first_tier_row, i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults );
      RETURN;
    ELSE
    null;
      --dbms_output.put_line ('No data for 6');
    END IF;
    --// Level 2
    --//business group * and indirect flag *
    --parameters            i_region_cd, i_country_cd, i_model_grp_cd,
    -- i_get_std_disc_fl, i_lead_bus_grp, i_bus_unit_cd, i_first_tier_row,
    -- i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults
    get_economic_data (i_region_cd, i_country_cd, i_model_grp_cd, '*', '*', i_bus_unit_cd, i_first_tier_row, i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults );
    FETCH P_ECORESULTS INTO RECBME;
    IF RECBME.country_cd IS NOT NULL THEN
      --dbms_output.put_line ('Got data for 7');
      null;
      get_economic_data (i_region_cd, i_country_cd, i_model_grp_cd, '*', '*', i_bus_unit_cd, i_first_tier_row, i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults );
      RETURN;
    ELSE
      --dbms_output.put_line ('No data for 7');
      null;
    END IF;
    --//business group * and  mod bus group *
    --parameters            i_region_cd, i_country_cd, i_model_grp_cd,
    -- i_get_std_disc_fl, i_lead_bus_grp, i_bus_unit_cd, i_first_tier_row,
    -- i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults
    get_economic_data (i_region_cd, i_country_cd, '*', i_get_std_disc_fl, '*', i_bus_unit_cd, i_first_tier_row, i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults );
    FETCH P_ECORESULTS INTO RECBME;
    IF RECBME.country_cd IS NOT NULL THEN
      --dbms_output.put_line ('Got data for 8');
      get_economic_data (i_region_cd, i_country_cd, '*', i_get_std_disc_fl, '*', i_bus_unit_cd, i_first_tier_row, i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults );
      RETURN;
    ELSE
      --dbms_output.put_line ('No data for 8');
      null;
    END IF;
    --// bus group *,country *
    --parameters            i_region_cd, i_country_cd, i_model_grp_cd,
    -- i_get_std_disc_fl, i_lead_bus_grp, i_bus_unit_cd, i_first_tier_row,
    -- i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults
    get_economic_data (i_region_cd, '*', i_model_grp_cd, i_get_std_disc_fl, '*' , i_bus_unit_cd, i_first_tier_row, i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults );
    FETCH P_ECORESULTS INTO RECBME;
    IF RECBME.country_cd IS NOT NULL THEN
      --dbms_output.put_line ('Got data for 9');
      get_economic_data (i_region_cd, '*', i_model_grp_cd, i_get_std_disc_fl, '*' , i_bus_unit_cd, i_first_tier_row, i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults );
      RETURN;
    ELSE
      --dbms_output.put_line ('No data for 9');
      null;
    END IF;
    --//bus group *,region *
    --parameters            i_region_cd, i_country_cd, i_model_grp_cd,
    -- i_get_std_disc_fl, i_lead_bus_grp, i_bus_unit_cd, i_first_tier_row,
    -- i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults
    get_economic_data ('*', i_country_cd, i_model_grp_cd, i_get_std_disc_fl, '*', i_bus_unit_cd, i_first_tier_row, i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults );
    FETCH P_ECORESULTS INTO RECBME;
    IF RECBME.country_cd IS NOT NULL THEN
      --dbms_output.put_line ('data for 10');
      get_economic_data ('*', i_country_cd, i_model_grp_cd, i_get_std_disc_fl, '*', i_bus_unit_cd, i_first_tier_row, i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults );
      RETURN;
    ELSE
      --dbms_output.put_line ('No data for 10');
      null;
    END IF;
    --// Level 3
    --parameters            i_region_cd, i_country_cd, i_model_grp_cd,
    -- i_get_std_disc_fl, i_lead_bus_grp, i_bus_unit_cd, i_first_tier_row,
    -- i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults
    get_economic_data (i_region_cd, i_country_cd, i_model_grp_cd, '*', '*', i_bus_unit_cd, i_first_tier_row, i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults );
    FETCH P_ECORESULTS INTO RECBME;
    IF RECBME.country_cd IS NOT NULL THEN
      get_economic_data (i_region_cd, i_country_cd, i_model_grp_cd, '*', '*', i_bus_unit_cd, i_first_tier_row, i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults );
      RETURN;
    ELSE
      --dbms_output.put_line ('No data for 11');
      null;
    END IF;
    --//business group *  indirect flag * and mode bus group *
    --parameters            i_region_cd, i_country_cd, i_model_grp_cd,
    -- i_get_std_disc_fl, i_lead_bus_grp, i_bus_unit_cd, i_first_tier_row,
    -- i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults
    get_economic_data (i_region_cd, i_country_cd, '*','*', '*', i_bus_unit_cd, i_first_tier_row, i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults );
    FETCH P_ECORESULTS INTO RECBME;
    IF RECBME.country_cd IS NOT NULL THEN
      get_economic_data (i_region_cd, i_country_cd, '*','*', '*', i_bus_unit_cd, i_first_tier_row, i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults );
      RETURN;
    ELSE
      --dbms_output.put_line ('No data for 12');
      null;
    END IF;
    --//business group * indirect flag * and country *
    --parameters            i_region_cd, i_country_cd, i_model_grp_cd,
    -- i_get_std_disc_fl, i_lead_bus_grp, i_bus_unit_cd, i_first_tier_row,
    -- i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults
    get_economic_data (i_region_cd, '*', i_model_grp_cd, '*', '*', i_bus_unit_cd, i_first_tier_row, i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults );
    FETCH P_ECORESULTS INTO RECBME;
    IF RECBME.country_cd IS NOT NULL THEN
      get_economic_data (i_region_cd, '*', i_model_grp_cd, '*', '*', i_bus_unit_cd, i_first_tier_row, i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults );
      RETURN;
    ELSE
      --dbms_output.put_line ('No data for 13');
      null;
    END IF;
    --// bus group * indirect flag * and ,region *
    --parameters            i_region_cd, i_country_cd, i_model_grp_cd,
    -- i_get_std_disc_fl, i_lead_bus_grp, i_bus_unit_cd, i_first_tier_row,
    -- i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults
    get_economic_data ('*', i_country_cd, i_model_grp_cd, '*', '*', i_bus_unit_cd, i_first_tier_row, i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults );
    FETCH P_ECORESULTS INTO RECBME;
    IF RECBME.country_cd IS NOT NULL THEN
      get_economic_data ('*', i_country_cd, i_model_grp_cd, '*', '*', i_bus_unit_cd, i_first_tier_row, i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults );
      RETURN;
    ELSE
      --dbms_output.put_line ('No data for 14');
      null;
    END IF;
    --// Level4
    --//business group *  indirect flag *  mode bus group * and country *
    --parameters            i_region_cd, i_country_cd, i_model_grp_cd,
    -- i_get_std_disc_fl, i_lead_bus_grp, i_bus_unit_cd, i_first_tier_row,
    -- i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults
    GET_ECONOMIC_DATA (I_REGION_CD, '*', '*', '*', '*', I_BUS_UNIT_CD, I_FIRST_TIER_ROW, I_DEAL_EST_VALUE, I_EST_DEAL_VALUE_DISC_PCT, P_ECORESULTS );
    FETCH P_ECORESULTS INTO RECBME;
    IF RECBME.country_cd IS NOT NULL THEN
      GET_ECONOMIC_DATA (I_REGION_CD, '*', '*', '*', '*', I_BUS_UNIT_CD, I_FIRST_TIER_ROW, I_DEAL_EST_VALUE, I_EST_DEAL_VALUE_DISC_PCT, P_ECORESULTS );
      RETURN;
    ELSE
      --dbms_output.put_line ('No data for 15');
      null;
    END IF;
    --//business group * indirect flag *, mod bus group * and Region *
    --parameters            i_region_cd, i_country_cd, i_model_grp_cd,
    -- i_get_std_disc_fl, i_lead_bus_grp, i_bus_unit_cd, i_first_tier_row,
    -- i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults
    get_economic_data ('*', i_country_cd, '*', '*', '*', i_bus_unit_cd, i_first_tier_row, i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults );
    FETCH P_ECORESULTS INTO RECBME;
    IF RECBME.country_cd IS NOT NULL THEN
      get_economic_data ('*', i_country_cd, '*', '*', '*', i_bus_unit_cd, i_first_tier_row, i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults );
      RETURN;
    ELSE
      --dbms_output.put_line ('No data for 16');
      NULL;
    END IF;
    --// Level 5
    --//business group *  indirect flag *  mode bus group * country * and
    -- Region *
    --parameters            i_region_cd, i_country_cd, i_model_grp_cd,
    -- i_get_std_disc_fl, i_lead_bus_grp, i_bus_unit_cd, i_first_tier_row,
    -- i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults
    get_economic_data ('*', '*', '*', '*', '*', i_bus_unit_cd, i_first_tier_row , i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults );
    FETCH P_ECORESULTS INTO RECBME;
    IF RECBME.country_cd IS NOT NULL THEN
      get_economic_data ('*', '*', '*', '*', '*', i_bus_unit_cd, i_first_tier_row , i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults );
      RETURN;
    ELSE
      --dbms_output.put_line ('No data for 17');
      NULL;
    END IF;
  ELSIF (I_BUS_UNIT_CD IS NOT NULL ) THEN
    --Level 1
    --all matches
    --parameters            i_region_cd, i_country_cd, i_model_grp_cd,
    -- i_get_std_disc_fl, i_lead_bus_grp, i_bus_unit_cd, i_first_tier_row,
    -- i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults
    GET_ECONOMIC_DATA (I_REGION_CD, I_COUNTRY_CD, I_MODEL_GRP_CD, I_GET_STD_DISC_FL, I_LEAD_BUS_GRP, I_BUS_UNIT_CD, I_FIRST_TIER_ROW, I_DEAL_EST_VALUE, I_EST_DEAL_VALUE_DISC_PCT, P_ECORESULTS );
    FETCH P_ECORESULTS INTO RECBME;
    IF RECBME.country_cd IS NOT NULL THEN
      GET_ECONOMIC_DATA (I_REGION_CD, I_COUNTRY_CD, I_MODEL_GRP_CD, I_GET_STD_DISC_FL, I_LEAD_BUS_GRP, I_BUS_UNIT_CD, I_FIRST_TIER_ROW, I_DEAL_EST_VALUE, I_EST_DEAL_VALUE_DISC_PCT, P_ECORESULTS );
      RETURN;
    ELSE
      --dbms_output.put_line ('No data for 18');
            NULL;
    END IF;
    --//business unit *
    --parameters            i_region_cd, i_country_cd, i_model_grp_cd,
    -- i_get_std_disc_fl, i_lead_bus_grp, i_bus_unit_cd, i_first_tier_row,
    -- i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults
    get_economic_data (i_region_cd, i_country_cd, i_model_grp_cd, i_get_std_disc_fl, i_lead_bus_grp, '*', i_first_tier_row, i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults );
    FETCH P_ECORESULTS INTO RECBME;
    IF RECBME.country_cd IS NOT NULL THEN
      get_economic_data (i_region_cd, i_country_cd, i_model_grp_cd, i_get_std_disc_fl, i_lead_bus_grp, '*', i_first_tier_row, i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults );
      RETURN;
    ELSE
      --dbms_output.put_line ('No data for 19');
            NULL;
    END IF;
    --//business group *
    --parameters            i_region_cd, i_country_cd, i_model_grp_cd,
    -- i_get_std_disc_fl, i_lead_bus_grp, i_bus_unit_cd, i_first_tier_row,
    -- i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults
    get_economic_data (i_region_cd, i_country_cd, i_model_grp_cd, i_get_std_disc_fl, '*', i_bus_unit_cd, i_first_tier_row, i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults );
    FETCH P_ECORESULTS INTO RECBME;
    IF RECBME.country_cd IS NOT NULL THEN
      get_economic_data (i_region_cd, i_country_cd, i_model_grp_cd, i_get_std_disc_fl, '*', i_bus_unit_cd, i_first_tier_row, i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults );
      RETURN;
    ELSE
      --dbms_output.put_line ('No data for 20');
            NULL;
    END IF;
    --// indirect flag *
    --parameters            i_region_cd, i_country_cd, i_model_grp_cd,
    -- i_get_std_disc_fl, i_lead_bus_grp, i_bus_unit_cd, i_first_tier_row,
    -- i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults
    get_economic_data (i_region_cd, i_country_cd, i_model_grp_cd, '*', i_lead_bus_grp, i_bus_unit_cd, i_first_tier_row, i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults );
    FETCH P_ECORESULTS INTO RECBME;
    IF RECBME.country_cd IS NOT NULL THEN
      get_economic_data (i_region_cd, i_country_cd, i_model_grp_cd, '*', i_lead_bus_grp, i_bus_unit_cd, i_first_tier_row, i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults );
      RETURN;
    ELSE
      --dbms_output.put_line ('No data for 21');
      NULL;
    END IF;
    --// mod bus group *
    --parameters            i_region_cd, i_country_cd, i_model_grp_cd,
    -- i_get_std_disc_fl, i_lead_bus_grp, i_bus_unit_cd, i_first_tier_row,
    -- i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults
    get_economic_data (i_region_cd, i_country_cd, '*', i_get_std_disc_fl, i_lead_bus_grp, i_bus_unit_cd, i_first_tier_row, i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults );
    FETCH P_ECORESULTS INTO RECBME;
    IF RECBME.country_cd IS NOT NULL THEN
      get_economic_data (i_region_cd, i_country_cd, '*', i_get_std_disc_fl, i_lead_bus_grp, i_bus_unit_cd, i_first_tier_row, i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults );
      RETURN;
    ELSE
          NULL;
      --dbms_output.put_line ('No data for 22');
    END IF;
    --//country *
    --parameters            i_region_cd, i_country_cd, i_model_grp_cd,
    -- i_get_std_disc_fl, i_lead_bus_grp, i_bus_unit_cd, i_first_tier_row,
    -- i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults
    get_economic_data (i_region_cd, '*', i_model_grp_cd, i_get_std_disc_fl, i_lead_bus_grp, i_bus_unit_cd, i_first_tier_row, i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults );
    FETCH P_ECORESULTS INTO RECBME;
    IF RECBME.country_cd IS NOT NULL THEN
      get_economic_data (i_region_cd, '*', i_model_grp_cd, i_get_std_disc_fl, i_lead_bus_grp, i_bus_unit_cd, i_first_tier_row, i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults );
      RETURN;
    ELSE
      --dbms_output.put_line ('No data for 23');
            NULL;
    END IF;
    --// Region *
    --parameters            i_region_cd, i_country_cd, i_model_grp_cd,
    -- i_get_std_disc_fl, i_lead_bus_grp, i_bus_unit_cd, i_first_tier_row,
    -- i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults
    get_economic_data ('*', i_country_cd, i_model_grp_cd, i_get_std_disc_fl, i_lead_bus_grp, i_bus_unit_cd, i_first_tier_row, i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults );
    FETCH P_ECORESULTS INTO RECBME;
    IF RECBME.country_cd IS NOT NULL THEN
      get_economic_data ('*', i_country_cd, i_model_grp_cd, i_get_std_disc_fl, i_lead_bus_grp, i_bus_unit_cd, i_first_tier_row, i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults );
      RETURN;
    ELSE
      --dbms_output.PUT_LINE ('No data for 24');
            NULL;
    END IF;
    --// Level 2
    --//business unit and business group *
    --parameters            i_region_cd, i_country_cd, i_model_grp_cd,
    -- i_get_std_disc_fl, i_lead_bus_grp, i_bus_unit_cd, i_first_tier_row,
    -- i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults
    get_economic_data (i_region_cd, i_country_cd, i_model_grp_cd, i_get_std_disc_fl, '*', '*', i_first_tier_row, i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults );
    FETCH P_ECORESULTS INTO RECBME;
    IF RECBME.country_cd IS NOT NULL THEN
      get_economic_data (i_region_cd, i_country_cd, i_model_grp_cd, i_get_std_disc_fl, '*', '*', i_first_tier_row, i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults );
      RETURN;
    ELSE
      --dbms_output.put_line ('No data for 25');
            NULL;
    END IF;
    --//business unit * indirect flag *
    --parameters            i_region_cd, i_country_cd, i_model_grp_cd,
    -- i_get_std_disc_fl, i_lead_bus_grp, i_bus_unit_cd, i_first_tier_row,
    -- i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults
    get_economic_data (i_region_cd, i_country_cd, i_model_grp_cd, '*', i_lead_bus_grp, '*', i_first_tier_row, i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults );
    FETCH P_ECORESULTS INTO RECBME;
    IF RECBME.country_cd IS NOT NULL THEN
      get_economic_data (i_region_cd, i_country_cd, i_model_grp_cd, '*', i_lead_bus_grp, '*', i_first_tier_row, i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults );
      RETURN;
    ELSE
      --dbms_output.put_line ('No data for 26');
            NULL;
    END IF;
    --// business unit * mod bus group *
    --parameters            i_region_cd, i_country_cd, i_model_grp_cd,
    -- i_get_std_disc_fl, i_lead_bus_grp, i_bus_unit_cd, i_first_tier_row,
    -- i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults
    get_economic_data (i_region_cd, i_country_cd, '*', i_get_std_disc_fl, i_lead_bus_grp, '*', i_first_tier_row, i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults );
    FETCH P_ECORESULTS INTO RECBME;
    IF RECBME.country_cd IS NOT NULL THEN
      get_economic_data (i_region_cd, i_country_cd, '*', i_get_std_disc_fl, i_lead_bus_grp, '*', i_first_tier_row, i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults );
      RETURN;
    ELSE
      --dbms_output.put_line ('No data for 27');
            NULL;
    END IF;
    --// business unit * and country *
    --parameters            i_region_cd, i_country_cd, i_model_grp_cd,
    -- i_get_std_disc_fl, i_lead_bus_grp, i_bus_unit_cd, i_first_tier_row,
    -- i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults
    get_economic_data (i_region_cd, '*', i_model_grp_cd, i_get_std_disc_fl, i_lead_bus_grp, '*', i_first_tier_row, i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults );
    FETCH P_ECORESULTS INTO RECBME;
    IF RECBME.country_cd IS NOT NULL THEN
      get_economic_data (i_region_cd, '*', i_model_grp_cd, i_get_std_disc_fl, i_lead_bus_grp, '*', i_first_tier_row, i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults );
      RETURN;
    ELSE
      --dbms_output.put_line ('No data for 28');
            NULL;
    END IF;
    --//  business unit * and Region *
    --parameters            i_region_cd, i_country_cd, i_model_grp_cd,
    -- i_get_std_disc_fl, i_lead_bus_grp, i_bus_unit_cd, i_first_tier_row,
    -- i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults
    get_economic_data ('*', i_country_cd, i_model_grp_cd, i_get_std_disc_fl, i_lead_bus_grp, '*', i_first_tier_row, i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults );
    FETCH P_ECORESULTS INTO RECBME;
    IF RECBME.country_cd IS NOT NULL THEN
      get_economic_data ('*', i_country_cd, i_model_grp_cd, i_get_std_disc_fl, i_lead_bus_grp, '*', i_first_tier_row, i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults );
      RETURN;
    ELSE
      --dbms_output.put_line ('No data for 29');
            NULL;
    END IF;
    --// Level 3
    --//business unit ,business group * and indirect flag *
    --parameters            i_region_cd, i_country_cd, i_model_grp_cd,
    -- i_get_std_disc_fl, i_lead_bus_grp, i_bus_unit_cd, i_first_tier_row,
    -- i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults
    GET_ECONOMIC_DATA (I_REGION_CD, I_COUNTRY_CD, I_MODEL_GRP_CD, '*', '*', '*' , I_FIRST_TIER_ROW, I_DEAL_EST_VALUE, I_EST_DEAL_VALUE_DISC_PCT, P_ECORESULTS );
    FETCH P_ECORESULTS INTO RECBME;
    IF RECBME.country_cd IS NOT NULL THEN
      GET_ECONOMIC_DATA (I_REGION_CD, I_COUNTRY_CD, I_MODEL_GRP_CD, '*', '*', '*' , I_FIRST_TIER_ROW, I_DEAL_EST_VALUE, I_EST_DEAL_VALUE_DISC_PCT, P_ECORESULTS );
      RETURN;
    ELSE
      --dbms_output.put_line ('No data for 30');
            NULL;
    END IF;
    --//business unit ,business group * and  mod bus group *
    --parameters            i_region_cd, i_country_cd, i_model_grp_cd,
    -- i_get_std_disc_fl, i_lead_bus_grp, i_bus_unit_cd, i_first_tier_row,
    -- i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults
    GET_ECONOMIC_DATA (I_REGION_CD, I_COUNTRY_CD, '*', I_GET_STD_DISC_FL, '*', '*', I_FIRST_TIER_ROW, I_DEAL_EST_VALUE, I_EST_DEAL_VALUE_DISC_PCT, P_ECORESULTS );
    FETCH P_ECORESULTS INTO RECBME;
    IF RECBME.country_cd IS NOT NULL THEN
      GET_ECONOMIC_DATA (I_REGION_CD, I_COUNTRY_CD, '*', I_GET_STD_DISC_FL, '*', '*', I_FIRST_TIER_ROW, I_DEAL_EST_VALUE, I_EST_DEAL_VALUE_DISC_PCT, P_ECORESULTS );
      RETURN;
    ELSE
      --dbms_output.put_line ('No data for 31');
      NULL;
    END IF;
    --// business unit * , bus group *,country *
    --parameters            i_region_cd, i_country_cd, i_model_grp_cd,
    -- i_get_std_disc_fl, i_lead_bus_grp, i_bus_unit_cd, i_first_tier_row,
    -- i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults
    get_economic_data (i_region_cd, '*', i_model_grp_cd, i_get_std_disc_fl, '*' , '*', i_first_tier_row, i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults );
    FETCH P_ECORESULTS INTO RECBME;
    IF RECBME.country_cd IS NOT NULL THEN
      get_economic_data (i_region_cd, '*', i_model_grp_cd, i_get_std_disc_fl, '*' , '*', i_first_tier_row, i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults );
      RETURN;
    ELSE
      --dbms_output.put_line ('No data for 32');
            NULL;
    END IF;
    --// business unit * , bus group *,region *
    --parameters            i_region_cd, i_country_cd, i_model_grp_cd,
    -- i_get_std_disc_fl, i_lead_bus_grp, i_bus_unit_cd, i_first_tier_row,
    -- i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults
    GET_ECONOMIC_DATA ('*', I_COUNTRY_CD, I_MODEL_GRP_CD, I_GET_STD_DISC_FL, '*', '*', I_FIRST_TIER_ROW, I_DEAL_EST_VALUE, I_EST_DEAL_VALUE_DISC_PCT, P_ECORESULTS );
    FETCH P_ECORESULTS INTO RECBME;
    IF RECBME.country_cd IS NOT NULL THEN
      GET_ECONOMIC_DATA ('*', I_COUNTRY_CD, I_MODEL_GRP_CD, I_GET_STD_DISC_FL, '*', '*', I_FIRST_TIER_ROW, I_DEAL_EST_VALUE, I_EST_DEAL_VALUE_DISC_PCT, P_ECORESULTS );
      RETURN;
    ELSE
      --dbms_output.put_line ('No data for 33');
            NULL;
    END IF;
    --// Level 4
    --//business unit ,business group *  indirect flag * and mode bus group *
    --parameters            i_region_cd, i_country_cd, i_model_grp_cd,
    -- i_get_std_disc_fl, i_lead_bus_grp, i_bus_unit_cd, i_first_tier_row,
    -- i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults
    get_economic_data (i_region_cd, i_country_cd, '*', '*', '*', '*', i_first_tier_row, i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults );
    FETCH P_ECORESULTS INTO RECBME;
    IF RECBME.country_cd IS NOT NULL THEN
      get_economic_data (i_region_cd, i_country_cd, '*', '*', '*', '*', i_first_tier_row, i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults );
      RETURN;
    ELSE
      --dbms_output.put_line ('No data for 34');
            NULL;
    END IF;
    --//business unit ,business group * indirect flag * and country *
    --parameters            i_region_cd, i_country_cd, i_model_grp_cd,
    -- i_get_std_disc_fl, i_lead_bus_grp, i_bus_unit_cd, i_first_tier_row,
    -- i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults
    get_economic_data (i_region_cd, '*', i_model_grp_cd, '*', '*', '*', i_first_tier_row, i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults );
    FETCH P_ECORESULTS INTO RECBME;
    IF RECBME.country_cd IS NOT NULL THEN
      get_economic_data (i_region_cd, '*', i_model_grp_cd, '*', '*', '*', i_first_tier_row, i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults );
      RETURN;
    ELSE
      --dbms_output.put_line ('No data for 35');
      NULL;
    END IF;
    --// business unit * , bus group * indirect flag * and ,region *
    --parameters            i_region_cd, i_country_cd, i_model_grp_cd,
    -- i_get_std_disc_fl, i_lead_bus_grp, i_bus_unit_cd, i_first_tier_row,
    -- i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults
    GET_ECONOMIC_DATA ('*', I_COUNTRY_CD, I_MODEL_GRP_CD, '*', '*', '*', I_FIRST_TIER_ROW, I_DEAL_EST_VALUE, I_EST_DEAL_VALUE_DISC_PCT, P_ECORESULTS );
    FETCH P_ECORESULTS INTO RECBME;
    IF RECBME.country_cd IS NOT NULL THEN
      GET_ECONOMIC_DATA ('*', I_COUNTRY_CD, I_MODEL_GRP_CD, '*', '*', '*', I_FIRST_TIER_ROW, I_DEAL_EST_VALUE, I_EST_DEAL_VALUE_DISC_PCT, P_ECORESULTS );
      RETURN;
    ELSE
      --dbms_output.put_line ('No data for 36');
      NULL;
    END IF;
    --// Level 5
    --//business unit ,business group *  indirect flag *  mode bus group * and
    -- country *
    --parameters            i_region_cd, i_country_cd, i_model_grp_cd,
    -- i_get_std_disc_fl, i_lead_bus_grp, i_bus_unit_cd, i_first_tier_row,
    -- i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults
    get_economic_data (i_region_cd, '*', '*', '*', '*', '*', i_first_tier_row, i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults );
    FETCH P_ECORESULTS INTO RECBME;
    IF RECBME.country_cd IS NOT NULL THEN
      get_economic_data (i_region_cd, '*', '*', '*', '*', '*', i_first_tier_row, i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults );
      RETURN;
    ELSE
      --dbms_output.put_line ('No data for 37');
      NULL;
    END IF;
    --//business unit ,business group * indirect flag *, mod bus group * and
    -- Region *
    --parameters            i_region_cd, i_country_cd, i_model_grp_cd,
    -- i_get_std_disc_fl, i_lead_bus_grp, i_bus_unit_cd, i_first_tier_row,
    -- i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults
    get_economic_data ('*', i_country_cd, '*', '*', '*', '*', i_first_tier_row, i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults );
    FETCH P_ECORESULTS INTO RECBME;
    IF RECBME.country_cd IS NOT NULL THEN
      get_economic_data ('*', i_country_cd, '*', '*', '*', '*', i_first_tier_row, i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults );
      RETURN;
    ELSE
      --dbms_output.put_line ('No data for 38');
      NULL;
    END IF;
    --// Level 6
    --//business unit ,business group *  indirect flag *  mode bus group *
    -- country * and Region *
    --parameters            i_region_cd, i_country_cd, i_model_grp_cd,
    -- i_get_std_disc_fl, i_lead_bus_grp, i_bus_unit_cd, i_first_tier_row,
    -- i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults
    get_economic_data ('*', '*', '*', '*', '*', '*', i_first_tier_row, i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults );
    FETCH P_ECORESULTS INTO RECBME;
    IF RECBME.country_cd IS NOT NULL THEN
      --dbms_output.put_line ('data for 39');
      get_economic_data ('*', '*', '*', '*', '*', '*', i_first_tier_row, i_deal_est_value, i_est_deal_value_disc_pct, p_ecoresults );
      RETURN;
    ELSE
    NULL;
      --dbms_output.put_line ('No data for 39');
    END IF;
  END IF;
END geteconomicrows;
PROCEDURE get_economic_data(
    i_region_cd               VARCHAR2,
    i_country_cd              VARCHAR2,
    i_model_grp_cd            VARCHAR2,
    i_get_std_disc_fl         VARCHAR2,
    i_lead_bus_grp            VARCHAR2,
    i_bus_unit_cd             VARCHAR2,
    i_first_tier_row          VARCHAR2,
    i_deal_est_value          NUMBER,
    i_est_deal_value_disc_pct NUMBER ,
    p_ecoresults OUT sys_refcursor )
IS
  l_first_tier_condition VARCHAR2(300);
  l_test_dynamic_sql     VARCHAR2(4000);
BEGIN
  IF (i_first_tier_row     ='N' ) THEN
    l_first_tier_condition:= ' bme.LOW_DISC_PCT <= ' || i_est_deal_value_disc_pct ||' AND bme.HIGH_DISC_PCT >= ' || i_est_deal_value_disc_pct || ' AND bme.LOW_DEAL_VALUE <= '|| i_deal_est_value ||'  AND bme.HIGH_DEAL_VALUE >= ' || i_deal_est_value ;
  ELSE
    l_first_tier_condition:= ' bme.LOW_DEAL_VALUE = 0' ;
  END IF;
  ----dbms_output.put_line (' i_first_tier_row ' || i_first_tier_row || ' , First Tier condition is ' || l_first_tier_condition);
  IF (i_bus_unit_cd IS NULL) THEN
    --dbms_output.put_line (' BUS UNIT code is null');
    --dbms_output.put_line (' region_cd   :' ||i_region_cd);
    --dbms_output.put_line (' country_cd  :'|| i_country_cd);
    --dbms_output.put_line (' model grp cd :'||i_model_grp_cd);
    --dbms_output.put_line (' std disc fl :'||i_get_std_disc_fl);
    --dbms_output.put_line (' lead bus group :'||i_LEAD_BUS_GRP);
    l_test_dynamic_sql:= '  SELECT *  FROM BUS_MODEL_ECONOMIC_RISK_LEVEL  bme
where bme.region_cd= :i_region_cd
and bme.country_cd =:i_country_cd
and bme.model_grp_cd =:i_model_grp_cd
and bme.indirect_fl = :i_get_std_disc_fl
AND bme.BUS_GRP_CD = :i_LEAD_BUS_GRP
and ' || l_first_tier_condition ;
    ----dbms_output.put_line ('query when bus unit code is available ' || l_test_dynamic_sql );
    OPEN p_ecoresults FOR '  SELECT *  FROM BUS_MODEL_ECONOMIC_RISK_LEVEL  bme
where bme.region_cd= :i_region_cd
and bme.country_cd =:i_country_cd
and bme.model_grp_cd =:i_model_grp_cd
and bme.indirect_fl = :i_get_std_disc_fl
AND bme.BUS_GRP_CD = :i_LEAD_BUS_GRP
and ' || l_first_tier_condition || '' USING i_region_cd,
    i_country_cd,
    i_model_grp_cd,
    i_get_std_disc_fl,
    i_lead_bus_grp ;
    --dbms_output.put_line (' Executed ');
  ELSE
    --dbms_output.put_line (' BUS UNIT code is available :' || i_bus_unit_cd);
    --pring the generated sql
    l_test_dynamic_sql:= '  SELECT *  FROM BUS_MODEL_ECONOMIC_RISK_LEVEL  bme
where bme.region_cd= :i_region_cd
and bme.country_cd =:i_country_cd
and bme.model_grp_cd =:i_model_grp_cd
and bme.indirect_fl = :i_get_std_disc_fl
AND bme.BUS_GRP_CD = :i_LEAD_BUS_GRP
and bus_unit_cd=:i_bus_unit_cd
and ' || l_first_tier_condition;
    ----dbms_output.put_line ('query when bus unit code is available ' || l_test_dynamic_sql );
    OPEN p_ecoresults FOR '  SELECT *  FROM BUS_MODEL_ECONOMIC_RISK_LEVEL  bme
where bme.region_cd= :i_region_cd
and bme.country_cd =:i_country_cd
and bme.model_grp_cd =:i_model_grp_cd
and bme.indirect_fl = :i_get_std_disc_fl
AND bme.BUS_GRP_CD = :i_LEAD_BUS_GRP
and bus_unit_cd=:i_bus_unit_cd
and ' || l_first_tier_condition || '' USING i_region_cd,
    i_country_cd,
    i_model_grp_cd,
    i_get_std_disc_fl,
    i_lead_bus_grp ,
    i_bus_unit_cd;
    --dbms_output.put_line (' Executed ');
  END IF;
END get_economic_data;
PROCEDURE calculate_deal_risk(
    i_bd_id NUMBER,
    i_risk_reason OUT VARCHAR2,
    i_error_message OUT VARCHAR2 )
IS
  /*
  **************************************************************************
  This procedure calculates deal risk based on follwoing factor
  1. Economic Values
  2.
  Developed by Harsh Shah
  ***************************************************************************
  */
  --Local Variables
  l_est_deal_value_disc_pct deal.est_deal_value_disc_pct%type;
  l_est_deal_value deal.est_deal_value%type;
  l_deal_estimated_amt_in_usd NUMBER (18,2):=0;
  l_errors                    VARCHAR2(3000);
  l_curr_cd deal.curr_cd%type;
  p_economic_rows_list sys_refcursor;
  p_low_risk_rows sys_refcursor;
  l_bus_unit_cd deal.bus_unit_cd%type;
  l_region_cd deal.region%type;
  l_country_cd deal.control_cntry_cd%type;
  l_model_grp_cd bus_model.model_grp_cd%type;
  l_get_std_disc_fl bus_model.get_std_disc_fl%type;
  l_lead_bus_grp deal.lead_bus_grp%type;
  l_first_tier_condition VARCHAR2(300);
  i_test_dynamic_sql     VARCHAR2(4000);
  l_first_tier_row       VARCHAR2(1):='N';
  p_economic_row bus_model_economic_risk_level%rowtype;
  --p_low_ris_row BUS_MODEL_ECONOMIC_RISK_LEVEL%ROWTYPE;
  L_HIGH_RISK_ECONOMIC           VARCHAR2(1):='N';
  l_high_risk_plpf_status        VARCHAR2(1):='N';
  l_line_item_margin_risk_status VARCHAR2(1):='N';
  --Risk Reasons
  l_economic_risk          VARCHAR2(20):= 'Economic Value';
  l_deal_gross_margin_risk VARCHAR2(20):= 'Deal Gross Margin';
  l_high_risk_reseller     VARCHAR2(20):= 'High Risk Reseller';
  l_high_risk_sku          VARCHAR2(20):= 'High Risk SKU';
  l_high_risk_mc_charge    VARCHAR2(20):= 'High Risk MC';
  l_high_risk_plpf         VARCHAR2(20):= 'High Risk PL/PF';
  l_line_item_margin_risk  VARCHAR2(20):= 'Line Item Margin';
  --Other variables
  l_high_deal_gross_margin VARCHAR2(1):='N';
  l_est_deal_value_margin_pct deal.est_deal_value_margin_pct%type;
  l_deal_min_margin_pct bus_model_economic_risk_level.deal_min_margin_pct%type;
  l_deal_mc_charge_code deal.mc_charge%type;
  l_bus_model_cd deal.bus_model_cd%type;
  l_high_risk_mc VARCHAR2(1):='N';
  l_reccount     NUMERIC(10):=0;
  l_tenantid deal.tenantid_data_cd%type;-- l_tenantid deal.tenantid%type; (Modified tenantid with TENANTID_DATA_CD for Federal project changes)
  --User Defined Exceptions
  reject_deal_risk_calc EXCEPTION;
BEGIN
  --check if this is required --- ProdHelper.ReCalcAllPLRunningTotal(); // Make
  -- sure deal totals are refreshed
  --refere to public static void ReCalcPLRunningTotalForPL(string assocPL) in
  -- globalroutines.cs
  --Need to complete this.
  BEGIN
    --Get basic deal details and business model details.
    SELECT d.lead_bus_grp,
      d.bus_unit_cd,
      d.region,
      NVL(d.est_deal_value_disc_pct,0),
      NVL(d.est_deal_value,0),
      d.curr_cd,
      bm.model_grp_cd,
      bm.get_std_disc_fl,
      NVL(d.est_deal_value_margin_pct,0),
      d.bus_model_cd,
      D.CONTROL_CNTRY_CD,
      d.mc_charge,
      d.tenantid_data_cd--d.tenantid --Added for SMO changes (Modified tenantid with TENANTID_DATA_CD for Federal project)
    INTO l_lead_bus_grp,
      l_bus_unit_cd,
      l_region_cd,
      l_est_deal_value_disc_pct,
      L_EST_DEAL_VALUE,
      l_curr_cd,
      l_model_grp_cd,
      l_get_std_disc_fl,
      L_EST_DEAL_VALUE_MARGIN_PCT, --DealgrossMargin
      L_BUS_MODEL_CD,
      l_country_cd,
      l_deal_mc_charge_code,
      l_tenantid  ---Added for SMO changes
    FROM deal d,
      bus_model bm
    WHERE d.bd_id       = i_bd_id
    AND bm.country_cd   = d.control_cntry_cd
    AND bm.bus_model_cd = d.bus_model_cd
    AND bm.tenantid = NVL(d.tenantid,'HPE');---Added for SMO changes
  EXCEPTION
  WHEN no_data_found THEN
    l_errors:=' Deal details not found for the BD_ID ' || i_bd_id;
    raise reject_deal_risk_calc;
  END;
  --Convert non usd value to USD
  --No need to conert if already in USD.
  IF (l_curr_cd                <>'UD') THEN
    l_deal_estimated_amt_in_usd:=convert_to_us_currency (l_curr_cd,'*', l_est_deal_value,'ACCT',l_tenantid); ---Added tenantid for SMO changes
  ELSE
    --if it is already in USD then no conversion is required. So assigning the
    -- same value
    l_deal_estimated_amt_in_usd:=l_est_deal_value;
  END IF;
   --deal risk calculation based on Economic Value
  GETECONOMICROWS (L_BUS_UNIT_CD, L_REGION_CD, L_COUNTRY_CD, L_MODEL_GRP_CD, L_GET_STD_DISC_FL, L_LEAD_BUS_GRP,
  --L_EST_DEAL_VALUE, ---CR for risk calculation
  l_deal_estimated_amt_in_usd,L_EST_DEAL_VALUE_DISC_PCT, 'N', P_ECONOMIC_ROWS_LIST);
  --dbms_output.put_line (' checking.. deal risk calculation based on Economic Value' );
  LOOP
    FETCH p_economic_rows_list INTO p_economic_row;
    IF (p_economic_row.deal_min_margin_pct IS NULL ) THEN
      l_high_risk_economic                 :='N';
      EXIT;
    END IF;
    EXIT
  WHEN p_economic_rows_list%notfound;
    l_deal_min_margin_pct         :=NVL(p_economic_row.deal_min_margin_pct,0);
    IF (P_ECONOMIC_ROW.HIGH_RISK_FL='Y' ) THEN
      l_high_risk_economic        :='Y';
      i_risk_reason               := l_economic_risk;
      EXIT;
    ELSE
      l_high_risk_economic:='N';
    END IF;
  END LOOP;

  --Deal Level Gross Margin Test
  --Calculate Based on Economic Risk.
  --dbms_output.put_line (' Deal Level Gross Margin Test ' );
  --dbms_output.PUT_LINE ('calculate Economic Risk');
  IF (p_economic_rows_list%notfound IS NOT NULL ) THEN
    --dbms_output.put_line ('TEST');
    geteconomicrows (l_bus_unit_cd, l_region_cd, l_country_cd, l_model_grp_cd, l_get_std_disc_fl, l_lead_bus_grp,
    --  l_est_deal_value, --Risk calc CR
    l_deal_estimated_amt_in_usd, l_est_deal_value_disc_pct, 'Y', p_low_risk_rows );
    IF (p_low_risk_rows%notfound IS NOT NULL) THEN
      LOOP
        FETCH p_low_risk_rows INTO p_economic_row;
        EXIT
      WHEN p_low_risk_rows%notfound;
        --Flag as high risk due to low DEAL gross margin
        IF ( (l_deal_estimated_amt_in_usd >NVL(p_economic_row.high_deal_value,0 ) ) AND ( l_est_deal_value_margin_pct < NVL( p_economic_row.deal_min_margin_pct,0) ) ) THEN
          l_high_deal_gross_margin       :='Y'; -- pending
          i_risk_reason                  := i_risk_reason || ';' || l_deal_gross_margin_risk;
          EXIT;
        END IF;
      END LOOP;
    END IF;
  END IF;

  --High Risk MC code
  --dbms_output.PUT_LINE (' High Risk MC code ' );
  --dbms_output.PUT_LINE (' bus model code '|| L_BUS_MODEL_CD);
  --dbms_output.put_line (' country  '|| l_country_cd);
  --dbms_output.put_line (' l_deal_mc_charge_code '|| l_deal_mc_charge_code);
  BEGIN
    SELECT high_risk_fl
    INTO l_high_risk_mc
    FROM MC_CHARGE
    WHERE bus_model_cd =l_bus_model_cd
    AND mc_chrg        =l_deal_mc_charge_code
    AND country_cd     =l_country_cd;
    IF l_high_risk_mc  ='Y' THEN
      i_risk_reason   :=i_risk_reason ||';' ||l_high_risk_mc_charge;
    END IF;
  EXCEPTION
  WHEN no_data_found THEN
    l_high_risk_mc:='N';
  END;
  --******************************************************************
  --high Risk SKU;
  --******************************************************************

  geteconomicrows (l_bus_unit_cd, l_region_cd, l_country_cd, l_model_grp_cd, l_get_std_disc_fl, l_lead_bus_grp,
  --l_est_deal_value, --Risk calc CR
  l_deal_estimated_amt_in_usd, l_est_deal_value_disc_pct, 'Y', p_low_risk_rows );
  LOOP
    FETCH p_low_risk_rows INTO p_economic_row;
    EXIT
  WHEN p_low_risk_rows%notfound;
    IF ( (l_deal_estimated_amt_in_usd >NVL(p_economic_row.high_deal_value,0 ) )) THEN
      --check high risk products in line_item table.
      BEGIN
        SELECT 1
        INTO l_reccount
        FROM line_item
        WHERE line_prog_cd                IN ('Y','N')
        AND (PROD_GNRC_NR_TX,prod_opt_cd) IN
          (SELECT prod_base_nr,DECODE(prod_opt_cd,NULL,' ', prod_opt_cd) FROM high_risk_sku

          )
        AND bd_id =i_bd_id;
      EXCEPTION
      WHEN NO_DATA_FOUND THEN
        l_reccount :=0;
      WHEN TOO_MANY_ROWS THEN
        l_reccount :=2;
      END;
      IF l_reccount    >0 THEN
        i_risk_reason := i_risk_reason || ';' || l_high_risk_sku;
        EXIT;
      ELSE
        --check high risk products in bundle_line table.
        BEGIN
          SELECT 1
          INTO l_reccount
          FROM bundle_line
          WHERE item_prog_cd                IN ('Y','N')
          AND (PROD_GNRC_NR_TX,prod_opt_cd) IN
            (SELECT prod_base_nr,prod_opt_cd FROM high_risk_sku
            )
          AND bd_id =i_bd_id;
        EXCEPTION
        WHEN NO_DATA_FOUND THEN
          l_reccount :=0;
        WHEN TOO_MANY_ROWS THEN
          l_reccount :=2;
        END;
        IF l_reccount    >0 THEN
          i_risk_reason := i_risk_reason || ';' || l_high_risk_sku;
          EXIT;
        END IF;
      END IF;
    END IF;
  END LOOP;
  --***************************************
  --High RISK PL/PF.
  --****************************************
  IF CHECK_HIGH_RISK_PLPF(I_BD_ID)='Y' THEN
    i_risk_reason                := i_risk_reason || ';' || l_high_risk_plpf;
  END IF;
  --pending #region "PF HR TEST 1.9.8.3"
  --*******************

  geteconomicrows (l_bus_unit_cd, l_region_cd, l_country_cd, l_model_grp_cd, l_get_std_disc_fl, l_lead_bus_grp, l_deal_estimated_amt_in_usd, l_est_deal_value_disc_pct,'Y', p_low_risk_rows );
  LOOP
    FETCH P_LOW_RISK_ROWS
    INTO P_ECONOMIC_ROW;
    IF (P_ECONOMIC_ROW.HIGH_DEAL_VALUE IS NULL ) THEN
      EXIT;
    END IF;
    EXIT
  WHEN P_LOW_RISK_ROWS%NOTFOUND;
    IF ( l_deal_estimated_amt_in_usd          > P_ECONOMIC_ROW.HIGH_DEAL_VALUE ) THEN
      IF CHECK_LINE_ITEM_MARGIN_RISK (I_BD_ID)='Y' THEN
        I_RISK_REASON                        := I_RISK_REASON || ';' || L_LINE_ITEM_MARGIN_RISK;
        EXIT;
      END IF;
    END IF;
  END LOOP;
  I_ERROR_MESSAGE:=NULL;
EXCEPTION
WHEN reject_deal_risk_calc THEN
  l_errors       :=' Deal details not found for the BD_ID ' || i_bd_id;
  i_error_message:=l_errors;
WHEN OTHERS THEN
  --L_ERRORS       :=SQLCODE || ' -ERROR- ' || SQLERRM;
  L_ERRORS       := 'An error was encountered - ' || SQLCODE || ' -ERROR- ' || SQLERRM || '. Error at Line : ' || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE();
  I_ERROR_MESSAGE:='An error was encountered while processing Deal Risk Calculation,please contact Eclipse Administrator.';
  I_RISK_REASON  :=NULL;
  inserterror_output_messages ( NULL,NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, c_m_type_error, g_deal_creation_guid, NULL,NULL,I_ERROR_MESSAGE);
END calculate_deal_risk;
PROCEDURE get_rollout_months(
    p_str IN VARCHAR2,
    p_array OUT t_rollout_mnths)
IS
  l_str        VARCHAR2 (4000);
  l_parse_str  VARCHAR2 (4000);
  l_length_str NUMBER;
  l_index      NUMBER;
BEGIN
  l_str        := p_str;
  l_str        := l_str || ',';
  l_length_str := 1;
  l_index      := 0;
  p_array      := t_rollout_mnths ();
  LOOP
    EXIT
  WHEN l_str     IS NULL OR l_str = ','; --l_length_str IS NULL;
    l_length_str := INSTR (l_str, ',', 1);
    l_parse_str  := SUBSTR (l_str, 1, l_length_str - 1);
    l_index      := l_index                        + 1;
    p_array.EXTEND ();
    p_array (l_index) := l_parse_str;
    l_str             := TRIM (SUBSTR (l_str, l_length_str + 1));
    ----dbms_output.put_line('    l_str   :'||l_str||' Element   :'||l_parse_str|
    -- |'l length_str'||l_length_str);
  END LOOP;
END get_rollout_months;
FUNCTION get_quote_recepients_list(
    i_bd_id IN NUMBER)
  RETURN VARCHAR2
IS
  p_quote_recepients_list SYS_REFCURSOR;
  l_recepient_email       VARCHAR2(100);
  l_recepients_email_list VARCHAR2(4000);
BEGIN
  --Get the quote Receiptients list
  OPEN p_quote_recepients_list FOR SELECT email_unix_addr_tx FROM
  (SELECT
    /*+ INDEX(sr PK_SALES_REP) INDEX(e PK_EMPLOYEE) USE_NL(sr e) */
    'SR' AS usertype,
    e.hpcom_alias_tx,
    e.email_unix_addr_tx,
    99999 AS rid,
    e.emp_nr
  FROM sales_rep sr,
    employee e
  WHERE sr.bd_id                   = i_bd_id
  AND sr.sr_hp_emp_nr              = e.emp_nr
  AND SUBSTR (e.emp_stat_cd, 1, 1) = 'A'
  AND NOT EXISTS
    (SELECT
      /*+ INDEX(qoe PK_QUOTE_EMAIL_EXCL) */
      'X'
    FROM quote_email_excl qoe
    WHERE qoe.emp_nr = e.emp_nr
    )
  UNION
  SELECT
    /*+ INDEX(d PK_DEAL) INDEX(e PK_EMPLOYEE) USE_NL(d e) */
    'DSR',
    e.hpcom_alias_tx,
    e.email_unix_addr_tx,
    99999 AS rid,
    e.emp_nr
  FROM deal d,
    employee e
  WHERE d.bd_id                    = i_bd_id
  AND d.driving_hp_emp_nr          = e.emp_nr
  AND SUBSTR (e.emp_stat_cd, 1, 1) = 'A'
  AND NOT EXISTS
    (SELECT
      /*+ INDEX(qoe PK_QUOTE_EMAIL_EXCL) */
      'X'
    FROM quote_email_excl qoe
    WHERE qoe.emp_nr = e.emp_nr
    )
  UNION
  SELECT
    /*+ INDEX(d PK_DEAL) INDEX(e PK_EMPLOYEE) USE_NL(d e) */
    'DCR',
    e.hpcom_alias_tx,
    e.email_unix_addr_tx,
    99999 AS rid,
    e.emp_nr
  FROM deal d,
    employee e
  WHERE d.bd_id                    = i_bd_id
  AND d.init_hp_emp_nr             = e.emp_nr
  AND d.ntfy_init_hp_emp_quote_fl  = 'Y'
  AND SUBSTR (e.emp_stat_cd, 1, 1) = 'A'
  AND NOT EXISTS
    (SELECT
      /*+ INDEX(qoe PK_QUOTE_EMAIL_EXCL) */
      'X'
    FROM quote_email_excl qoe
    WHERE qoe.emp_nr = e.emp_nr
    )
  UNION
  SELECT
    /*+ INDEX(d PK_DEAL) INDEX(e PK_EMPLOYEE) USE_NL(d e) */
    'DL',
    e.hpcom_alias_tx,
    e.email_unix_addr_tx,
    99999 AS rid,
    e.emp_nr
  FROM deal d,
    employee e
  WHERE d.bd_id                    = i_bd_id
  AND d.deal_lead_emp_nr           = e.emp_nr
  AND SUBSTR (e.emp_stat_cd, 1, 1) = 'A'
  AND NOT EXISTS
    (SELECT
      /*+ INDEX(qoe PK_QUOTE_EMAIL_EXCL) */
      'X'
    FROM quote_email_excl qoe
    WHERE qoe.emp_nr = e.emp_nr
    )
  UNION
  SELECT
    /*+ INDEX(d PK_DEAL) INDEX(e PK_EMPLOYEE) USE_NL(d e) */
    'DSM',
    e.hpcom_alias_tx,
    e.email_unix_addr_tx,
    99999 AS rid,
    e.emp_nr
  FROM deal d,
    employee e
  WHERE d.bd_id                    = i_bd_id
  AND d.dsm_hp_emp_nr              = e.emp_nr
  AND SUBSTR (e.emp_stat_cd, 1, 1) = 'A'
  AND NOT EXISTS
    (SELECT
      /*+ INDEX(qoe PK_QUOTE_EMAIL_EXCL) */
      'X'
    FROM quote_email_excl qoe
    WHERE qoe.emp_nr = e.emp_nr
    )
  UNION
  SELECT
    /*+ INDEX(oa PK_OTHERS_AUTH) INDEX(e PK_EMPLOYEE) USE_NL(oa e) */
    'OTR',
    e.hpcom_alias_tx,
    e.email_unix_addr_tx,
    99999 AS rid,
    e.emp_nr
  FROM others_auth oa,
    employee e
  WHERE oa.bd_id                   = i_bd_id
  AND oa.oa_hp_emp_nr              = e.emp_nr
  AND SUBSTR (e.emp_stat_cd, 1, 1) = 'A'
  AND NOT EXISTS
    (SELECT
      /*+ INDEX(qoe PK_QUOTE_EMAIL_EXCL) */
      'X'
    FROM quote_email_excl qoe
    WHERE qoe.emp_nr = e.emp_nr
    )
  UNION
  SELECT
    /*+ INDEX(rb PK_RSLR_B) INDEX(e PK_EMPLOYEE) USE_NL(rb e) */
    'B',
    e.hpcom_alias_tx,
    e.email_unix_addr_tx,
    rb.rslr_id AS rid,
    e.emp_nr
  FROM rslr_b rb,
    employee e
  WHERE rb.bd_id                   = i_bd_id
  AND can_recv_quote_fl           <> 'N'
  AND rb.rslr_sr_hp_emp_nr         = e.emp_nr
  AND SUBSTR (e.emp_stat_cd, 1, 1) = 'A'
  AND NOT EXISTS
    (SELECT
      /*+ INDEX(qoe PK_QUOTE_EMAIL_EXCL) */
      'X'
    FROM quote_email_excl qoe
    WHERE qoe.emp_nr = e.emp_nr
    )
  ORDER BY 3
  ) ;
  IF p_quote_recepients_list%notfound IS NULL THEN
    l_recepients_email_list           :=NULL;
  END IF;
  --loop through email and add it to the out variable list
  LOOP
    FETCH p_quote_recepients_list INTO l_recepient_email;
    EXIT
  WHEN P_QUOTE_RECEPIENTS_LIST%NOTFOUND;
    --l_recepients_email_list:=l_recepients_email_list || '''' || l_recepient_email ||'''' || ',' ;
    l_recepients_email_list:=l_recepients_email_list || l_recepient_email || ',' ;
  END LOOP;
  --dbms_output.put_line ( 'l_recepients_email_list' || l_recepients_email_list);
  --SELECT SUBSTR(L_RECEPIENTS_EMAIL_LIST,1,LENGTH(l_recepients_email_list)-1)
  -- FROM DUAL;
  ----dbms_output.put_line (l_recepients_email_list);
  ----dbms_output.put_line (SUBSTR(L_RECEPIENTS_EMAIL_LIST,1,LENGTH(
  -- l_recepients_email_list)-1));
  l_recepients_email_list:=SUBSTR(L_RECEPIENTS_EMAIL_LIST,1,LENGTH( l_recepients_email_list)-1);
  RETURN l_recepients_email_list;
  --pending
  -- error handling
  -- if email exceeds 100 chars
  -- if output variable exists 4000 chars
  --if cursor is null
END get_quote_recepients_list;
FUNCTION add_reseller_a(
    i_deal_creation_guid IN VARCHAR2,
    i_xmlnamespace      VARCHAR2,
    i_bd_id             NUMERIC,
    i_country_cd        VARCHAR2,
    i_region_cd         VARCHAR2,
    i_bus_model_cd      VARCHAR2,
    i_rslr_added_emp_nr NUMERIC,
    o_error_message OUT VARCHAR2)
  RETURN VARCHAR2
IS
  l_reseller_a_added VARCHAR2(1):='N';
  l_reccount         NUMERIC(10);
type bm_rec_type
IS
  RECORD
  (
    add_rslr_a_fl bus_model.add_rslr_a_fl%type,
    add_rslr_b_fl bus_model.add_rslr_b_fl%type,
    dflt_rslr_b_id bus_model.dflt_rslr_b_id%type,
    dflt_rslr_a_id bus_model.dflt_rslr_a_id%type );
  bm_rec bm_rec_type;
  l_msg_type           VARCHAR2(20);
  l_errors             VARCHAR2(3000);
  l_reseller_dtls_text VARCHAR2(300); -- stores the reseller ppro_id, contract_id, cac_cd
  reject_rslr_add      EXCEPTION;
BEGIN
  ----dbms_output.put_line (' adding reseller A ..start');
  BEGIN
    --get bus model default values for the reseller
    SELECT ADD_RSLR_A_FL ,
      add_rslr_b_fl ,
      dflt_rslr_b_id,--dflt_rslr_a_id,  -- CR 1261 Nov release changes
      dflt_rslr_a_id --dflt_rslr_b_id
    INTO bm_rec
    FROM bus_model
    WHERE bus_model_cd=i_bus_model_cd
    AND country_cd    =i_country_cd
    AND tenantid =(select nvl(TENANTID_DATA_CD,'HPE') tenant from deal where bd_id =i_bd_id);--(select nvl(tenantid,'HPE') tenant from deal where bd_id =i_bd_id); (Modified tenantid with TENANTID_DATA_CD for Federal project)
    --Check for whether we can add Default Reseller
    IF bm_rec.dflt_rslr_a_id IS NOT NULL THEN
      --  --dbms_output.put_line (' adding default reseller A');
      INSERT
      INTO rslr_a
        (
          bd_id,
          rslr_id,
          quote_distrib_fl,     --'N'
          quote_apprvl_fl,      --'N'
          SR_EDIT_AUTH_FL,      --'N'
          can_recv_quote_fl,    --should come from XML - for default reseller it will be --'N'
          date_rslr_added,      --sysdate
          creation_dts,         --sysdate
          update_dts,           --sysdate
          contract_id,          --xref
          cac_cd,               --xref
          selected_contract_fl, --based on logic -- for default reseller  it will be --'N'
          iso_cntry_cd,         --RSLR_CNTRY_CD
          rslr_add_hp_emp_nr    -- deal creator no
        )
      SELECT i_bd_id,
        r.rslr_id,
        'N' QUOTE_DISTRIB_FL,
        'N' QUOTE_APPRVL_FL,
        'N' SR_EDIT_AUTH_FL,
        'N' can_recv_quote_fl,
        sysdate date_rslr_added,
        sysdate creation_dts,
        sysdate update_dts,
        rc.contract_id,
        rc.cac_cd,
        'N' selected_contract_fl,
        r.rslr_cntry_cd,
        i_rslr_added_emp_nr
      FROM reseller r,
        RSLR_CONTRACT_XREF RC
      WHERE r.rslr_id=bm_rec.dflt_rslr_a_id
      AND r.rslr_id  =rc.rslr_id(+)
      AND rownum     <2
      ORDER BY rc.update_dts DESC;
    END IF;
    --adding Reseller A
    IF (bm_rec.add_rslr_a_fl IS NOT NULL AND bm_rec.add_rslr_a_fl ='Y' ) THEN
      ----dbms_output.put_line (' adding default reseller A other tahn default');
      --looping through each reseller in the XML.
      FOR rec IN
      (SELECT extract ( value (d), '//CanRecvQuoteFl/text()', i_xmlnamespace). getstringval () AS canrecvquotefl,
        extract ( value (d), '//ContractID/text()', i_xmlnamespace). getstringval ()           AS contractid,
        extract ( value (D), '//PartnerProID/text()', I_XMLNAMESPACE). GETSTRINGVAL ()         AS PARTNERPROID,
        extract ( value (d), '//CACCD/text()', i_xmlnamespace). getstringval ()                AS caccd,
        extract ( value (d), '//DefaultStdDisc/text()', i_xmlnamespace). getstringval ()       AS defaultstddisc,
        extract ( value (d), '//PriceGeoCD/text()', i_xmlnamespace). getstringval ()           AS pricegeocd,
        extract ( value (d), '//PrimaryRslFl/text()', i_xmlnamespace). getstringval ()         AS primaryrslfl,
        extract ( value (d), '//RequestType/text()', i_xmlnamespace). getstringval ()         AS RequestType

      FROM edms_deal_queue x,
        TABLE ( xmlsequence ( extract ( x.xml_data_xml, 'DealCreationRequest/ResellerAs/ResellerA', i_xmlnamespace))) d
      WHERE x.deal_creation_guid =i_deal_creation_guid
      and extract ( value (d), '//RequestType/text()', i_xmlnamespace). getstringval ()='ADD'
      )

      LOOP
        --dbms_output.put_line (' can recvquote fl' || rec.canrecvquotefl ) ;
        --dbms_output.put_line ('contract id' || rec.contractid );
        --dbms_output.put_line ('rec.PartnerProID' || rec.partnerproid );
        --dbms_output.put_line ('rec.CACCD' || rec.caccd );
        --dbms_output.put_line ('rec.DefaultStdDisc' || rec.defaultstddisc );
        --dbms_output.put_line ('rec.PriceGeoCD' || rec.pricegeocd );
        --dbms_output.put_line ('rec.PrimaryRslFl' ||rec.primaryrslfl );
        --dbms_output.put_line (' adding reseller A');
        --l_reseller_dtls_text :=' Partner Pro ID : ' || rec.partnerproid || ', CAC Code : ' || ltrim(rtrim(rec.caccd)) || ', Contract ID : ' || rec.contractid ||', Country : '|| i_country_cd ||' , Region : ' || i_region_cd;
        BEGIN
          --check if reseller is from NA Region - US or CA
          /*
          This change has been after a detailed meeting with Praveen Khan from SmartQuote, Mansi, Max ,Andrew and other business leads from eclipse and Smartquote
          We are ignoring the contract id from smart quote for NA - US and CA resellers
          */
          --dbms_output.put_line('checking NA REseller');
          BEGIN
            SELECT 1
            INTO l_reccount
            FROM reseller r
            WHERE NVL( r.rslr_ab,'AB') LIKE '%A%'
            AND NVL(r.FLAG_RSLR_STAT,'C')         <> 'D'
            AND NVL(r.spl_prc_eligibility_fl,'Y') <> 'N'
            AND upper(r.rslr_search_key)           =upper(rec.partnerproid)
            AND r.rslr_cntry_cd                   IN ( 'US','CA');
            --AND r.region_cd                        = 'NA';
          EXCEPTION
          WHEN NO_DATA_FOUND THEN
            l_reccount :=0;
          WHEN TOO_MANY_ROWS THEN
            l_reccount :=2;
          END;
          IF l_reccount >0 THEN
            --dbms_output.put_line('found NA REseller');
            l_reseller_dtls_text :=' Partner Pro ID : ' || rec.partnerproid || ', CAC Code : ' || ltrim(rtrim(rec.caccd)) || ', Country : '|| i_country_cd ||' , Region : ' || i_region_cd;
            --dbms_output.put_line ('NA Reseller ignore the contract id');
            INSERT
            INTO rslr_a
              (
                bd_id,
                rslr_id,
                quote_distrib_fl,     --'N'
                quote_apprvl_fl,      --'N'
                sr_edit_auth_fl,      --'N'
                can_recv_quote_fl,    --should come from XML - for default reseller it will be --'N'
                date_rslr_added,      --sysdate
                creation_dts,         --sysdate
                update_dts,           --sysdate
                contract_id,          --xref
                cac_cd,               --xref
                selected_contract_fl, --based on logic -- for default reseller  it will be --'N'
                iso_cntry_cd,         --RSLR_CNTRY_CD
                RSLR_ADD_HP_EMP_NR
              )
            SELECT i_bd_id,
              r.rslr_id,
              'N' QUOTE_DISTRIB_FL,
              'N' QUOTE_APPRVL_FL,
              'N' sr_edit_auth_fl,
              rec.canrecvquotefl,
              sysdate date_rslr_added,
              sysdate creation_dts,
              sysdate update_dts,
              'X',  --contract id
              NULL, --rec.caccd,
              rec.primaryrslfl,
              r.rslr_cntry_cd,
              i_rslr_added_emp_nr
            FROM RESELLER r,
              RSLR_A_ID rai,
              RSLR_CONTRACT_XREF rcx
            WHERE r.rslr_id = rai.rslr_id
            AND r.active_fl = rai.active_fl
            AND NVL( r.rslr_ab,'AB') LIKE '%A%'
            AND r.rslr_id = rcx.rslr_id(+)
            AND NVL(rcx.contract_tier,'A' ) LIKE '%A%'
            AND NVL(r.FLAG_RSLR_STAT,'C')         <> 'D'
            AND rai.active_fl                      = 'Y'
            AND NVL(r.spl_prc_eligibility_fl,'Y') <> 'N'
            AND upper(r.rslr_search_key)           = upper(rec.partnerproid)
              --AND rcx.cac_cd                         =ltrim(rtrim(rec.caccd))
              --AND RCX.CONTRACT_ID                    =LTRIM(RTRIM(REC.CONTRACTID))
              --AND TRUNC(rcx.end_dt)                 >=TRUNC(SYSDATE)
            AND rownum <2;
            --ORDER BY RCX.END_DT DESC;
          ELSE
            -- reseller is not from NA region --US or CA
            l_reseller_dtls_text :=' Partner Pro ID : ' || rec.partnerproid || ', CAC Code : ' || ltrim(rtrim(rec.caccd)) || ', Contract ID : ' || rec.contractid ||', Country : '|| i_country_cd ||' , Region : ' || i_region_cd;
            --dbms_output.put_line ('Not an NA Reseller');
            INSERT
            INTO rslr_a
              (
                bd_id,
                rslr_id,
                quote_distrib_fl,     --'N'
                quote_apprvl_fl,      --'N'
                sr_edit_auth_fl,      --'N'
                can_recv_quote_fl,    --should come from XML - for default reseller it will be --'N'
                date_rslr_added,      --sysdate
                creation_dts,         --sysdate
                update_dts,           --sysdate
                contract_id,          --xref
                cac_cd,               --xref
                selected_contract_fl, --based on logic -- for default reseller  it will be --'N'
                iso_cntry_cd,         --RSLR_CNTRY_CD
                RSLR_ADD_HP_EMP_NR
              )
            SELECT i_bd_id,
              r.rslr_id,
              'N' QUOTE_DISTRIB_FL,
              'N' QUOTE_APPRVL_FL,
              'N' sr_edit_auth_fl,
              rec.canrecvquotefl,
              sysdate date_rslr_added,
              sysdate creation_dts,
              sysdate update_dts,
              rcx.contract_id, --contract id
              rec.caccd,
              rec.primaryrslfl,
              r.rslr_cntry_cd,
              i_rslr_added_emp_nr
            FROM RESELLER r,
              RSLR_A_ID rai,
              RSLR_CONTRACT_XREF rcx
            WHERE r.rslr_id = rai.rslr_id
            AND r.active_fl = rai.active_fl
            AND NVL( r.rslr_ab,'AB') LIKE '%A%'
            AND r.rslr_id = rcx.rslr_id(+)
            AND NVL(rcx.contract_tier,'A' ) LIKE '%A%'
            AND NVL(r.FLAG_RSLR_STAT,'C')         <> 'D'
            AND rai.active_fl                      = 'Y'
            AND NVL(r.spl_prc_eligibility_fl,'Y') <> 'N'
            AND upper(r.rslr_search_key)           = upper(rec.partnerproid)
            AND rcx.cac_cd                         =ltrim(rtrim(rec.caccd))
            AND RCX.CONTRACT_ID                    =LTRIM(RTRIM(REC.CONTRACTID))
            AND TRUNC(rcx.end_dt)                 >=TRUNC(SYSDATE)
            AND rownum                             <2
            ORDER BY RCX.END_DT DESC;
          END IF;
          IF (sql%rowcount <=0) THEN
            --dbms_output.put_line ('10001');
            l_msg_type :='ERROR';
            l_errors   :='Unable to Add Reseller A for the ' || l_reseller_dtls_text;
            --dbms_output.put_line ('Reseller Error : ' || l_errors);
            O_error_message:=l_errors;
            --dbms_output.put_line ('An error was encountered while adding NA Reseller - ' || SQLCODE || ' -ERROR- ' || SQLERRM);
            inserterror_output_messages ( NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, l_errors, l_msg_type, i_deal_creation_guid, NULL, NULL,l_errors);
            l_reseller_a_added:='N';
            --RAISE REJECT_RSLR_ADD;
            EXIT;
          ELSE
            l_reseller_a_added:='Y';
          END IF;
          --  --dbms_output.PUT_LINE (' Reseller A Rows Updated : ' || sql%rowcount);
          /*FROM reseller r,
          rslr_contract_xref rc
          WHERE r.ppro_id   =rec.partnerproid
          AND rc.contract_id=rec.contractid
          AND rc.cac_cd     =rec.caccd
          AND r.rslr_id =rc.rslr_id(+)
          AND rownum    <2
          ORDER BY rc.update_dts DESC;
          l_reseller_a_added:='Y';
          */
        EXCEPTION
        WHEN no_data_found THEN
          l_reseller_a_added:='N';
          l_msg_type        :='WARNING';
          L_ERRORS          :='Unable to Add Reseller A, Reseller or Reseller Contract details not available  for the ' || L_RESELLER_DTLS_TEXT;
          O_error_message   :=l_errors;
          inserterror_output_messages ( NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, l_errors, l_msg_type, i_deal_creation_guid, NULL, NULL,l_errors);
        WHEN dup_val_on_index THEN
          l_errors       := 'Reseller A already exists :'|| L_RESELLER_DTLS_TEXT;
          o_error_message:=l_errors;
          --dbms_output.put_line ('An error was encountered while adding NA Reseller - ' || SQLCODE || ' -ERROR- ' || SQLERRM);
          --l_msg_type :=c_m_type_warning;
          --insert into error and output table
          --INSERTERROR_OUTPUT_MESSAGES ( i_bd_id, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, l_errors, l_msg_type, g_deal_creation_guid, NULL, NULL,l_errors );
        END;
      END LOOP; --for reseller A
    ELSIF (bm_rec.add_rslr_a_fl IS NULL OR bm_rec.add_rslr_a_fl ='N' ) THEN
      l_reseller_a_added        :='N';
      l_msg_type                :='WARNING';
      l_errors                  :='Additional Reseller As cannot be added for this business model';
      O_error_message           :=l_errors;
      l_reseller_a_added        :='Y';---Added for BMI requirement
      --      inserterror_output_messages ( NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, l_errors, l_msg_type, i_deal_creation_guid, NULL, NULL,l_errors);
    END IF;
    --dbms_output.put_line (' adding reseller A ..ends');
    RETURN l_reseller_a_added;
  EXCEPTION
  WHEN no_data_found THEN
    l_reseller_a_added:='N';
    l_msg_type        :='ERROR';
    l_errors          :='Bus Model details not found for the bus model ' || i_bus_model_cd || ', and  country : ' || i_country_cd;
    O_error_message   :=l_errors;
    RAISE REJECT_RSLR_ADD;
    --  WHEN OTHERS THEN
    --  l_reseller_a_added:='N';
    --l_msg_type        :='ERROR';
    --l_errors          := 'An error was encountered while getting bus model details for adding Reseller A - ' || SQLCODE || ' -ERROR- ' || sqlerrm;
    --raise reject_rslr_add;
  END;
  RETURN l_reseller_a_added;
EXCEPTION
WHEN reject_rslr_add THEN
  l_reseller_a_added:='N';
  --insert into error and output table
   INSERTERROR_OUTPUT_MESSAGES ( NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, L_ERRORS, L_MSG_TYPE, I_DEAL_CREATION_GUID, NULL, NULL,L_ERRORS );
  RETURN l_reseller_a_added;
WHEN OTHERS THEN
  l_reseller_a_added:='N';
  L_MSG_TYPE        :='ERROR';
  L_ERRORS          := 'An error was encountered while adding Reseller A - ' || SQLCODE || ' -ERROR- ' || SQLERRM;
  g_user_message    :='An error was encountered while adding a Reseller A';
  INSERTERROR_OUTPUT_MESSAGES ( NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, L_ERRORS, L_MSG_TYPE, I_DEAL_CREATION_GUID, NULL, NULL,g_user_message );
  --insert into error and output table

  inserterror_output_messages ( NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, l_errors, l_msg_type, i_deal_creation_guid, NULL, NULL,l_errors );
  RETURN l_reseller_a_added;
END add_reseller_a;

PROCEDURE GET_BD_HDR_AUTH_LIST_AMT(
    i_xml_path_to_Query varchar2,
    i_deal_creation_guid IN VARCHAR2,
    i_xmlnamespace        VARCHAR2,
    i_bundle_parent_index NUMERIC,
    i_bundle_source       VARCHAR2,
    i_hdr_sku             VARCHAR2,
    o_list_price OUT NUMERIC,
    o_auth_bdnet_amt OUT line_disc_scale.rqst_bd_net_prc_am%type,
    O_HDR_SKU_QTY OUT NUMERIC,
    O_HDR_SKU_OPT_CD OUT VARCHAR2,
    O_PROD_COST_PRICE_HDR_PROD OUT NUMERIC,
    O_HDR_PROD_STD_DISC OUT NUMERIC,
    O_line_AuthBasisDesc OUT VARCHAR2,
    O_line_authstat OUT bundle_line.ITEM_PROG_CD%type,
    O_line_AuthDtGMT OUT DATE )
IS
  --l_bundle_line_nr     NUMERIC (10);
  --l_bundle_dtl_line_nr NUMERIC(10);
  l_msg_type VARCHAR2(10); -- This variable is not used anywhere, can be removed.
  l_errors   VARCHAR2(10); --This variable is not used anywhere, can be removed.
  l_authdate DATE;
BEGIN
  O_list_price    :=NULL;
  O_auth_bdnet_amt:=NULL;

  --dbms_output.put_line ('XQUERY PATH : ' ||  i_xml_path_to_Query );

  --Find the bundle line with the Header SKU
  ----dbms_output.put_line ('get_bd_hdr_auth_list_amt 1 ');
  FOR recbdline IN
  (SELECT        *
  FROM
    (SELECT extract ( value (d), '//BDNetAmt/text()', i_xmlnamespace). getstringval () AS bdnetamt,
      extract ( value (d), '//ListPrice/text()', i_xmlnamespace). getstringval ()      AS listprice,
      -- extract ( value (d), '//SKU/text()', i_xmlnamespace). getstringval ()            AS sku,
      extract ( value (d), '//ProdBaseNr/text()', i_xmlnamespace). getstringval ()    AS sku,
      extract ( value (d), '//ParentIndex/text()', i_xmlnamespace). getstringval ()   AS parentindex,
      extract ( value (d), '//BundleSource/text()', i_xmlnamespace). getstringval ()  AS bundleline_source,
      extract ( value (D), '//Qty/text()', I_XMLNAMESPACE). GETSTRINGVAL ()           AS QTY,
      extract ( value (D), '//OptCD/text()', I_XMLNAMESPACE). GETSTRINGVAL ()         AS OPTCD,
      extract ( value (D), '//CostPrice/text()', I_XMLNAMESPACE). GETSTRINGVAL ()     AS COSTPRICE,
      extract ( value (D), '//StdDiscPct/text()', I_XMLNAMESPACE). GETSTRINGVAL ()    AS stddiscpct,
      extract ( value (D), '//AuthBasisDesc/text()', I_XMLNAMESPACE). GETSTRINGVAL () AS AuthBasisDesc,
      extract ( value (D), '//AuthStatCD/text()', I_XMLNAMESPACE). GETSTRINGVAL ()    AS AuthStatCD,
      extract ( value (D), '//AuthDateGMT/text()', I_XMLNAMESPACE). GETSTRINGVAL ()   AS AuthDateGMT,
      extract  ( value (D), '//ExtPreApprvPrice/text()',I_XMLNAMESPACE). GETSTRINGVAL () AS ExtPreApprvPrice
      --  extract ( value (d), '//LineItemBD/AuthDate/text()', l_xmlnamespace ). getstringval ()          AS authdate,
    FROM edms_deal_queue x,
      TABLE ( xmlsequence ( extract ( x.xml_data_xml, i_xml_path_to_Query, i_xmlnamespace))) d
    WHERE x.deal_creation_guid =i_deal_creation_guid
    )
  WHERE parentindex    =i_bundle_parent_index
  AND Bundleline_source=i_bundle_source
  AND sku              =i_hdr_sku
  )
  LOOP
  --OLD -- TABLE ( xmlsequence ( extract ( x.xml_data_xml, 'DealCreationRequest/Bundles/LineItemBD/BundleLines/BundleLine', i_xmlnamespace))) d
    IF (recbdline.AuthDateGMT IS NOT NULL OR recbdline.AuthDateGMT<>'') THEN
      l_authdate              :=TO_TIMESTAMP (SUBSTR(recbdline.AuthDateGMT,1,19),'YYYY-MM-DD"T"HH24:MI:SS');
    ELSE
      l_authdate:=NULL;
    END IF;
    ----dbms_output.put_line ('Get Bundle Header SKU Auth BD Net....');
    --dbms_output.put_line ('get_bd_hdr_auth_list_amt 2 ');
    o_auth_bdnet_amt          :=NVL(recbdline.bdnetamt,0);
    o_list_price              :=NVL(recbdline.listprice,0);
    O_HDR_SKU_QTY             :=NVL(RECBDLINE.QTY,0);
    O_HDR_SKU_OPT_CD          :=RECBDLINE.OPTCD;
    O_PROD_COST_PRICE_HDR_PROD:=RECBDLINE.COSTPRICE;
    O_HDR_PROD_STD_DISC       :=RECBDLINE.stddiscpct;
    O_line_AuthBasisDesc      :=RECBDLINE.AuthBasisDesc;
    O_line_authstat           := NVL(RECBDLINE.AuthStatCD,'N');

    O_line_AuthDtGMT          :=l_authdate;-- RECBDLINE.AuthDateGMT;

    ----dbms_output.put_line (' bundle line for the parent Index 2' );
    ----dbms_output.put_line('BundleLine_Source ' || recbdline.bundleline_Source);
    ----dbms_output.put_line('List Price ' || recbdline.listprice);
    ----dbms_output.put_line('Auth BD Net ' || recbdline.bdnetamt);
    ----dbms_output.put_line('HDR SKU ' || recbdline.sku);
    ----dbms_output.put_line('HDR QTY ' || recbdline.QTY);
    --dbms_output.put_line ('Bundle Header Product Auth Stat Code ' || O_line_authstat );
    ----dbms_output.put_line(' Bundle Line Details  End');
    EXIT;
  END LOOP;
END GET_BD_HDR_AUTH_LIST_AMT;

FUNCTION add_reseller_b(
    i_deal_creation_guid IN VARCHAR2,
    i_xmlnamespace      VARCHAR2,
    i_bd_id             NUMERIC,
    i_country_cd        VARCHAR2,
    i_region_cd         VARCHAR2,
    i_bus_model_cd      VARCHAR2,
    i_rslr_added_emp_nr NUMERIC ,
    o_error_message OUT VARCHAR2)
  RETURN VARCHAR2
IS
  l_reseller_b_added VARCHAR2(1):='N';
  l_reccount         NUMERIC(10);
type bm_rec_type
IS
  RECORD
  (
    add_rslr_a_fl bus_model.add_rslr_a_fl%type,
    add_rslr_b_fl bus_model.add_rslr_b_fl%type,
    dflt_rslr_b_id bus_model.dflt_rslr_b_id%type,
    dflt_rslr_a_id bus_model.dflt_rslr_a_id%type );
  bm_rec bm_rec_type;
  l_msg_type           VARCHAR2(20);
  l_errors             VARCHAR2(3000);
  L_RESELLER_DTLS_TEXT VARCHAR2(300);
  reject_rslr_add      EXCEPTION;
BEGIN
  o_error_message:=NULL;
  ----dbms_output.put_line (' adding reseller B ..start');
  BEGIN
    --get bus model default values for the reseller
    SELECT add_rslr_a_fl ,
      add_rslr_b_fl ,
      dflt_rslr_b_id,--dflt_rslr_a_id, -- CR 1261 Nov release
      dflt_rslr_a_id --dflt_rslr_b_id
    INTO bm_rec
    FROM bus_model
    WHERE bus_model_cd=i_bus_model_cd
    AND country_cd    =i_country_cd
    AND tenantid=(select nvl(TENANTID_DATA_CD,'HPE') tenant from deal where bd_id =i_bd_id);    --(select nvl(tenantid,'HPE')tenant from deal where bd_id =i_bd_id);--Added for SMO Changes (Modified tenantid with TENANTID_DATA_CD for Federal project)
    --Check for whether we can add Default Reseller
    IF bm_rec.dflt_rslr_b_id IS NOT NULL THEN
      ----dbms_output.put_line (' adding default reseller A');
      INSERT
      INTO rslr_b
        (
          bd_id,
          rslr_id,
          quote_distrib_fl,
          quote_apprvl_fl,
          sr_edit_auth_fl,
          can_recv_quote_fl,
          date_rslr_added,
          creation_dts,
          UPDATE_DTS,
          contract_id,
          cac_cd,
          rslr_add_hp_emp_nr
        )
      SELECT i_bd_id,
        r.rslr_id,
        'N' QUOTE_DISTRIB_FL,
        'N' QUOTE_APPRVL_FL,
        'N' SR_EDIT_AUTH_FL,
        'N' can_recv_quote_fl,
        sysdate date_rslr_added,
        sysdate creation_dts,
        sysdate update_dts,
        rc.contract_id,
        rc.cac_cd,
        i_rslr_added_emp_nr
      FROM reseller r,
        rslr_contract_xref rc
      WHERE r.rslr_id=bm_rec.dflt_rslr_a_id
      AND r.rslr_id  =rc.rslr_id(+)
      AND rownum     <2
      ORDER BY rc.update_dts DESC;
      IF sql%ROWCOUNT      =0 THEN
        l_reseller_b_added:='N';
      ELSE
        l_reseller_b_added:='Y';
      END IF;
    END IF;
    --extract ( value (d), '//CACCD/text()', i_xmlnamespace). getstringval ()                AS caccd,
    --adding Reseller B
    IF (bm_rec.add_rslr_b_fl IS NOT NULL AND bm_rec.add_rslr_b_fl ='Y' ) THEN
      FOR rec IN
      (SELECT extract ( value (d), '//CanRecvQuoteFl/text()', i_xmlnamespace). getstringval () AS canrecvquotefl,
        extract ( value (d), '//PartnerProID/text()', i_xmlnamespace). getstringval ()         AS partnerproid,
        extract ( value (d), '//ContractID/text()', i_xmlnamespace). getstringval ()           AS ContractID,
        extract ( value (d), '//RequestType/text()', i_xmlnamespace). getstringval ()         AS RequestType
      FROM edms_deal_queue x,
        TABLE ( xmlsequence ( extract ( x.xml_data_xml, 'DealCreationRequest/ResellerBs/ResellerB', i_xmlnamespace))) d
      where X.DEAL_CREATION_GUID =I_DEAL_CREATION_GUID
      AND extract ( value (d), '//RequestType/text()', i_xmlnamespace). getstringval () ='ADD'
      )
      LOOP
        --dbms_output.put_line (' Can recvquote fl' || rec.canrecvquotefl ) ;
        --dbms_output.put_line (' Contract id' || rec.contractid );
        --dbms_output.put_line (' Rec.PartnerProID' || rec.partnerproid );
        --dbms_output.put_line (' Adding reseller B');
        l_reseller_dtls_text :=' Partner Pro ID : ' || rec.partnerproid || ', Contract ID : ' || rec.contractid ||', Country : '|| i_country_cd ||' , Region : ' || i_region_cd;
        BEGIN
          BEGIN
            SELECT 1
            INTO l_reccount
            FROM reseller r
            WHERE NVL(r.FLAG_RSLR_STAT,'C')       <> 'D'
            AND NVL(r.spl_prc_eligibility_fl,'Y') <> 'N'
            AND UPPER(r.rslr_search_key)           =upper(REC.partnerproid)
            AND r.rslr_cntry_cd                   IN ( 'US','CA');
            --AND r.region_cd                        = 'NA';
          EXCEPTION
          WHEN NO_DATA_FOUND THEN
            l_reccount :=0;
          WHEN TOO_MANY_ROWS THEN
            l_reccount :=2;
          END;
          IF l_reccount >0 THEN
            --dbms_output.PUT_LINE ('NA reseller B ');
            INSERT
            INTO rslr_b
              (
                bd_id,
                rslr_id,
                quote_distrib_fl,
                quote_apprvl_fl,
                sr_edit_auth_fl,
                can_recv_quote_fl,
                date_rslr_added,
                creation_dts,
                update_dts,
                contract_id,
                cac_cd,
                rslr_add_hp_emp_nr
              )
            SELECT i_bd_id,
              r.rslr_id,
              'N' QUOTE_DISTRIB_FL,
              'N' QUOTE_APPRVL_FL,
              'N' sr_edit_auth_fl,
              rec.canrecvquotefl,
              sysdate date_rslr_added,
              sysdate creation_dts,
              sysdate update_dts,
              'X', -- contract id
              rcx.cac_cd,
              i_rslr_added_emp_nr
            FROM reseller r,
              /*+ WW_CNTRY c*/
              rslr_contract_xref rcx
            WHERE r.rslr_id = rcx.rslr_id(+)
              --AND r.region_cd                        = i_region_cd
              --AND r.rslr_cntry_cd                    = i_country_cd
            AND upper(r.rslr_search_key)           =upper(rec.partnerproid)
            AND r.active_fl                        = 'Y'
            AND NVL(R.SPL_PRC_ELIGIBILITY_FL,'Y') <> 'N'
            AND r.rslr_id                          = rcx.rslr_id(+)
            AND NVL(RCX.CONTRACT_TIER(+),'B') LIKE '%B%'
            AND NVL(R.FLAG_RSLR_STAT,'C') <> 'D'
              --AND RCX.CONTRACT_ID            =REC.CONTRACTID
            AND rownum <2;
            --ORDER BY rcx.update_dts DESC;
          ELSE
            --dbms_output.put_line (' Non NA Reseller ');
            BEGIN
            INSERT
            INTO rslr_b
              (
                bd_id,
                rslr_id,
                quote_distrib_fl,
                quote_apprvl_fl,
                sr_edit_auth_fl,
                can_recv_quote_fl,
                date_rslr_added,
                creation_dts,
                update_dts,
                contract_id,
                cac_cd,
                rslr_add_hp_emp_nr
              )
            SELECT i_bd_id,
              r.rslr_id,
              'N' QUOTE_DISTRIB_FL,
              'N' QUOTE_APPRVL_FL,
              'N' sr_edit_auth_fl,
              rec.canrecvquotefl,
              sysdate date_rslr_added,
              sysdate creation_dts,
              sysdate update_dts,
              rcx.contract_id,
              rcx.cac_cd,
              i_rslr_added_emp_nr
            FROM reseller r,
              /*+ WW_CNTRY c*/
              rslr_contract_xref rcx
            WHERE r.rslr_id = rcx.rslr_id(+)
              --AND r.region_cd                        = i_region_cd
              --AND r.rslr_cntry_cd                    = i_country_cd
            AND upper(r.rslr_search_key)           =upper(rec.partnerproid)
            AND r.active_fl                        = 'Y'
            AND NVL(R.SPL_PRC_ELIGIBILITY_FL,'Y') <> 'N'
            AND r.rslr_id                          = rcx.rslr_id(+)
            AND NVL(RCX.CONTRACT_TIER(+),'B') LIKE '%B%'
            AND NVL(R.FLAG_RSLR_STAT,'C') <> 'D'
            AND RCX.CONTRACT_ID            =REC.CONTRACTID
            AND rownum                     <2
            ORDER BY rcx.update_dts DESC;
            EXCEPTION
            WHEN DUP_VAL_ON_INDEX THEN
            --dbms_output.PUT_LINE('Duplicate reseller found');
            NULL;
            END;
          END IF;
          IF (sql%rowcount <=0) THEN
            L_MSG_TYPE     :='ERROR';
            L_ERRORS       :='Cannot Create Deal. Unable to Add Reseller B for the ' || L_RESELLER_DTLS_TEXT;
            o_error_message:=L_ERRORS;
            --inserterror_output_messages ( NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, l_errors, l_msg_type, i_deal_creation_guid, NULL, NULL,l_errors);
            l_reseller_b_added:='N';
            EXIT;
          ELSE
            l_reseller_B_added:='Y';
          END IF;
          --  --dbms_output.PUT_LINE (' Reseller B Rows Updated : ' || sql%rowcount);
        EXCEPTION
        WHEN no_data_found THEN
          l_reseller_B_added:='N';
          L_MSG_TYPE        :='ERROR';
          L_ERRORS          :='Cannot create deal.Reseller B not found for the PPRO_ID ' || REC.PARTNERPROID ||', Contract ID :' || REC.CONTRACTID ;
          o_error_message   :=L_ERRORS;
          --inserterror_output_messages ( NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, l_errors, l_msg_type, i_deal_creation_guid, NULL, NULL,l_errors);
        END;
      END LOOP; --for reseller B
    ELSIF (bm_rec.add_rslr_B_fl IS NULL OR bm_rec.add_rslr_b_fl ='N' ) THEN
      l_reseller_b_added        :='N';
      l_msg_type                :='WARNING';
      L_ERRORS                  :='Additional Reseller Bs cannot be added for this business model.';
      l_reseller_b_added        :='Y';--Added per BMI requiremet
      --inserterror_output_messages ( NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, l_errors, l_msg_type, i_deal_creation_guid, NULL, NULL,l_errors);
      o_error_message:=L_ERRORS;
    END IF;
    --dbms_output.put_line (' adding reseller b ..ends');
    RETURN l_reseller_b_added;
  EXCEPTION
  WHEN no_data_found THEN
    l_reseller_b_added:='N';
    l_msg_type        :='ERROR';
    l_errors          :='Bus Model details not found for the bus model ' || i_bus_model_cd || ', and  country : ' || i_country_cd;
    o_error_message   :=L_ERRORS;
    RAISE REJECT_RSLR_ADD;
  WHEN OTHERS THEN
    l_reseller_b_added:='N';
    l_msg_type        :='ERROR';
    l_errors          := 'An error was encountered while getting bus model details for adding Reseller B - ' || SQLCODE || ' -ERROR- ' || sqlerrm;
    o_error_message   :=L_ERRORS;
    raise reject_rslr_add;
  END;
  RETURN l_reseller_b_added;
EXCEPTION
WHEN reject_rslr_add THEN
  l_reseller_b_added:='N';
  --insert into error and output table
    inserterror_output_messages ( NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, l_errors, l_msg_type, i_deal_creation_guid, NULL, NULL,l_errors );
  RETURN l_reseller_b_added;
WHEN OTHERS THEN
  l_reseller_b_added:='N';
  l_msg_type        :='ERROR';
  l_errors          := 'An error was encountered while  adding Reseller B - ' || SQLCODE || ' -ERROR- ' || sqlerrm;
  g_user_message    :='An error was encountered while  adding Reseller B';
  --insert into error and output table
    inserterror_output_messages ( NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, l_errors, l_msg_type, i_deal_creation_guid, NULL, NULL,g_user_message );
  RETURN l_reseller_b_added;
END add_reseller_b;
PROCEDURE ins_eu_auth_affil(
    i_bd_id              IN NUMBER,
    i_deal_creation_guid IN VARCHAR2,
    i_xmlnamespace VARCHAR2 )
IS
  l_eu_auth_affil_nr NUMBER;
  l_msg_type         VARCHAR2(30);
  l_errors           VARCHAR2(3000);
  l_affl_exists      NUMBER;
  l_euc_nr eu_cust.euc_nr%type;
BEGIN
  l_eu_auth_affil_nr := 1;
  FOR rec IN
  (SELECT extract ( value (d), '//PreSalesCustID/text()', i_xmlnamespace). getstringval () AS presalescustid
  FROM edms_deal_queue x,
    TABLE ( xmlsequence ( extract ( x.xml_data_xml, 'DealRequest/Affiliates/Affiliate', i_xmlnamespace))) d
  WHERE x.deal_creation_guid =i_deal_creation_guid
  )
  LOOP
    BEGIN
      BEGIN
        SELECT euc_nr
        INTO l_euc_nr
        FROM eu_cust
        WHERE UPPER(presales_cust_id) = UPPER(rec.presalescustid)---Upper check added in Nov release
        AND active_fl                 ='Y'
        AND (EU_CUST_SRC             IS NULL
        OR EU_CUST_SRC               <>'MDCP') ----Added in eRFC
        AND rownum                    < 2;
      EXCEPTION
      WHEN NO_DATA_FOUND THEN
        SELECT euc_nr
        INTO l_euc_nr
        FROM eu_cust
        WHERE UPPER(presales_cust_id) = UPPER(rec.presalescustid)---Upper check added in Nov release
        AND active_fl                 ='Y'
        AND EU_CUST_SRC               = 'MDCP'----Added in eRFC
        AND rownum                    < 2;
      END;
      SELECT 1
      INTO l_affl_exists
      FROM EU_AUTH_AFFIL
      WHERE bd_id = i_bd_id
      AND euc_nr  = l_euc_nr;
        EXCEPTION
    WHEN NO_DATA_FOUND THEN
      l_affl_exists:=0;
    WHEN TOO_MANY_ROWS THEN
      l_affl_exists:=2;
    END;
    IF l_affl_exists =0 THEN
      INSERT
      INTO EU_AUTH_AFFIL
        (
          bd_id,
          eu_auth_affil_nr,
          euc_nr,
          eu_auth_affil_nm,
          eu_auth_cntct_tx,
          eu_auth_addr,
          eu_auth_city_nm,
          eu_auth_st_prov_cd,
          eu_auth_zip_cd,
          creation_dts,
          update_dts
        )
      SELECT i_bd_id,
        l_eu_auth_affil_nr,
        e.euc_nr,
        e.euc_cmpny_nm,
        NULL,
        e.street_addr,
        e.euc_city_nm,
        e.euc_st_prov_cd,
        e.postal_cd,
        sysdate,
        sysdate
      FROM eu_cust e
      WHERE euc_nr = l_euc_nr;
      --      WHERE UPPER(presales_cust_id) = UPPER(rec.presalescustid) ---Upper check added in Nov release
      --      AND active_fl          ='Y'
      --      AND EU_CUST_SRC<>'MDCP' ----Added in eRFC
      --      AND rownum             <2
      --      ORDER BY update_dts DESC ;
      IF sql%rowcount=0 THEN
        l_msg_type  :='WARNING';
        L_ERRORS    :=' Unable to insert Affiliates. Customer details not found for the Presales Cust ID '||REC.PRESALESCUSTID;
        inserterror_output_messages ( NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, l_errors, l_msg_type, i_deal_creation_guid, NULL, NULL,l_errors);
      ELSE
        l_eu_auth_affil_nr :=l_eu_auth_affil_nr+1;
        --dbms_output.put_line('inserted into EU_AUTH_AFFIL  and extened the auth_affil_nr');
        --dbms_output.put_line('l_msg_type    '||l_msg_type);
        --dbms_output.put_line('l_errors    '||l_errors);
      END IF;
    ELSE
      l_msg_type :='WARNING';
      L_ERRORS   :=' Duplicate Afiiliates for the Presales Cust ID '||REC.PRESALESCUSTID;
      inserterror_output_messages ( NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, l_errors, l_msg_type, i_deal_creation_guid, NULL, NULL,l_errors);
    END IF;
  END LOOP;
  --dbms_output.put_line('After loop');
  --dbms_output.put_line('l_msg_type    '||l_msg_type);
  --dbms_output.put_line('l_errors    '||l_errors);
EXCEPTION
WHEN OTHERS THEN
  L_MSG_TYPE    :='ERROR';
  L_ERRORS      := 'An error was encountered while getting customer details for pre sales custid - ' || SQLCODE || ' -ERROR- ' || SQLERRM;
  g_user_message:='An error was encountered while getting customer details for the pre sales custid';
  inserterror_output_messages ( NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, l_errors, l_msg_type, i_deal_creation_guid, NULL, NULL,g_user_message);
  --dbms_output.put_line('In Exception');
  --dbms_output.put_line('l_msg_type    '||l_msg_type);
  --dbms_output.put_line('l_errors    '||l_errors);
END ins_eu_auth_affil;
FUNCTION update_deal_status_values(
    i_bd_id NUMERIC )
  RETURN NUMERIC
IS
  /*
  Updates the deal status values - deal_est_value, total list proce, total disc %
  Modified by harsh Shah 6-Dec-2013 , removed the HOld and Denied line items from the consideration.
  */
  l_reccount NUMERIC(10);
BEGIN
  UPDATE deal d
  SET
    (
      est_tot_k_am,
      est_deal_value,
      EST_LIST_TOT_AM
    )
    =
    (SELECT SUM (NVL(li.estmtd_dlr_am,0)) EST_TOT_K_AM ,
    SUM (NVL ( DECODE(ldsc.auth_fl,'N',RQST_BD_NET_PRC_AM,auth_bd_net_prc_am,auth_bd_net_prc_am),0) ) + SUM (NVL(li.estmtd_dlr_am,0) *1000) est_deal_value,
      (SUM (NVL(prod_lst_prc_am,0))) EST_LIST_TOT_AM
    FROM line_item li,
      line_disc_scale ldsc
    WHERE li.bd_id    =d.bd_id
    AND li.bd_id      =ldsc.bd_id
    AND li.line_nr    =ldsc.line_nr
    AND LI.LINE_PROG_CD NOT IN ('H','D')
    AND ldsc.scale_id =
      (SELECT MAX( NVL(ldsc_b.scale_id,0))
      FROM line_disc_scale ldsc_b
      WHERE ldsc_b.bd_id=ldsc.bd_id
      AND ldsc_b.line_nr=ldsc.line_nr
      )
    )
  WHERE d.bd_id=i_bd_id;
  l_reccount  :=sql%rowcount;
  RETURN l_reccount;
EXCEPTION
WHEN OTHERS THEN
  l_reccount:=0;
  raise_application_error ( -20006, 'Unable to update Deal Status values - ' || SQLCODE || ' -ERROR- ' || sqlerrm);
  RETURN l_reccount;
END UPDATE_DEAL_STATUS_VALUES;
-----To insert data into deal_comment_memo table.
PROCEDURE ins_deal_comment_memo(
    i_bd_id              IN NUMBER,
    i_deal_creation_guid IN VARCHAR2,
    i_xmlnamespace       IN VARCHAR2 )
IS
  l_deal_cmnt_id deal_comment_memo.cmnt_id%TYPE; --NUMBER; Commented NUMBER as part of EDMS hardening task
    l_msg_type     VARCHAR2(20);
  l_errors       VARCHAR2(32767);
  l_cmntblob_temp BLOB;
  l_cmntclob CLOB; --CR4815;
  l_BD_VERSION_NR_CREATED deal_comment_memo.BD_VERSION_NR_CREATED%TYPE;--New variable added by Lakshmi on 9/12/2014 for CR2528 -Comment Type for BMI Deals - Needs To Be Business Justification (deal added & version)
  l_bd_nr_created deal_comment_memo.BD_NR_CREATED%TYPE;--New variable added by Lakshmi on 9/12/2014 for CR2528 -Comment Type for BMI Deals - Needs To Be Business Justification (deal added & version)
  
  l_source_asset_id deal.deal_source_cd%TYPE; --Added for US-9408 --> Encore Retirement  
BEGIN

--Added by Lakshmi on 9/12/2014 for CR2528 -Comment Type for BMI Deals - Needs To Be Business Justification (deal added & version)
SELECT bd_version_nr, bd_nr 
,deal_source_cd --Added for US-9408 --> Encore Retirement  
INTO l_bd_version_nr_created, l_bd_nr_created 
,l_source_asset_id --Added for US-9408 --> Encore Retirement  
FROM deal WHERE bd_id=i_bd_id;

  --l_deal_cmnt_id:=1;
  SELECT NVL(MAX(cmnt_id),0)+1  INTO  l_deal_cmnt_id
  FROM DEAL_COMMENT_MEMO
  WHERE bd_id=i_bd_id;

  FOR rec IN
  (
    SELECT extract ( value (d), '//AddedByHPEmployee/EmployeeNr/text()', i_xmlnamespace). getstringval () AS AddedByEmpNr,    --emp nr change from new xml
    extract ( value (d), '//AddedByHPEmployee/EmailAddress/text()', i_xmlnamespace). getstringval ()     AS AddedByEmpemail, --emp nr change from new xml
    extract ( value (d), '//CommentDate/text()', i_xmlnamespace). getstringval ()                        AS CommentDate,
    extract ( value (d), '//CommentGroupCD/text()', i_xmlnamespace). getstringval ()                     AS CommentGroupCD,
    extract ( value (d), '//CommentTypeCD/text()', i_xmlnamespace). getstringval ()                      AS CommentTypeCD,
    extract ( value (d), '//ExternalFl/text()', i_xmlnamespace). getstringval ()                         AS ExternalFl,
    extract ( value (d), '//CommentBlob/text()',i_xmlnamespace).getclobval()                             AS cmntblob-- getstringval () AS cmntblob   --CR 4482
    -- utl_raw.cast_to_raw(extract ( value (d), '//CommentBlob/text()',i_xmlnamespace). getstringval ()) AS cmntblob  --CR4482
  FROM edms_deal_queue x,
    TABLE ( xmlsequence ( extract ( x.xml_data_xml, 'DealCreationRequest/DealComments/DealComment', i_xmlnamespace))) d
  WHERE x.deal_creation_guid = i_deal_creation_guid
  )
  LOOP
    --Added for ePrime and BMI deal creation changes
    IF rec.AddedByEmpNr IS NULL AND rec.AddedByEmpemail IS NOT NULL THEN
      rec.AddedByEmpNr  :=get_emp_nr(rec.AddedByEmpemail);
    END IF;
    --dbms_output.PUT_LINE ('Deal comment memo emp ' || rec.AddedByEmpNr);
    IF (is_user_exists(rec.AddedByEmpNr
    ,l_source_asset_id  --Added for US-9408 --> Encore Retirement  
    ) ='Y') THEN
      BEGIN
        --CR4482
        l_cmntclob :=replace_special_chars(rec.cmntblob); --CR 4815
        --dbms_output.put_line('blob str  :'||rec.cmntblob);
        --IF (length(rec.cmntblob)>500) THEN
        IF (LENGTH(l_cmntclob)>500 ) THEN --CR4815
          --l_cmntblob_temp:=convert_to_blob(rec.cmntblob);
          --l_cmntblob_temp:=convert_to_blob(replace(rec.cmntblob,'&'||'amp;','&'));---changed as part of CR4815
          l_cmntblob_temp:=convert_to_blob(l_cmntclob);---changed as part of CR4815
          --dbms_output.put_line('In  If');
        ELSE
          --l_cmntblob_temp :=utl_raw.cast_to_raw(rec.cmntblob);
          --l_cmntblob_temp :=utl_raw.cast_to_raw(replace(rec.cmntblob,'&'||'amp;','&'));---changed as part of CR4815
          l_cmntblob_temp :=utl_raw.cast_to_raw(l_cmntclob);---changed as part of CR4815
          --dbms_output.put_line('In Else');
        END IF;
        --CR 4482
        --dbms_output.put_line('befor insert');
        INSERT
        INTO deal_comment_memo
          (
            bd_id,
            cmnt_id,
            cmnt_group_cd, -----'A' 'All' 'B'  - 'BDM'
            cmnt_extrn_fl,
            cmnt_type_cd,
            cmnt_text_memo,
            create_hp_emp_nr,
            create_dts,
            creation_dts,
            update_dts,
            bd_nr_created,--New fields added by Lakshmi on 9/12/2014 for CR2528 -Comment Type for BMI Deals - Needs To Be Business Justification (deal added & version)
            BD_VERSION_NR_CREATED --New fields added by Lakshmi on 9/12/2014 for CR2528 -Comment Type for BMI Deals - Needs To Be Business Justification (deal added & version)
          )
          VALUES
          (
            i_bd_id,
            l_deal_cmnt_id,
            NVL(rec.CommentGroupCD,'A'),
            rec.ExternalFl,
            NVL(rec.CommentTypeCD,'O'),
            l_cmntblob_temp,--rec.cmntblob,  --CR 4482
            rec.AddedByEmpNr,
            sysdate,
            sysdate,
            sysdate,
            l_bd_nr_created,--New fields added by Lakshmi on 9/12/2014 for CR2528 -Comment Type for BMI Deals - Needs To Be Business Justification (deal added & version)
            l_bd_version_nr_created--New fields added by Lakshmi on 9/12/2014 for CR2528 -Comment Type for BMI Deals - Needs To Be Business Justification (deal added & version)
          );
        --dbms_output.put_line('after insert');
        IF SQL%ROWCOUNT = 0 THEN
          l_msg_type   :='WARNING';
          L_ERRORS     :=' Could not insert deal comment for bd id  '||I_BD_ID;
          inserterror_output_messages ( NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, l_errors, l_msg_type, i_deal_creation_guid, NULL, NULL,l_errors);
        ELSE
          l_deal_cmnt_id :=l_deal_cmnt_id+1;
          ----dbms_output.put_line('inserted into deal_comment_memo');
          ----dbms_output.put_line('l_msg_type    '||'INSERT');
          ----dbms_output.put_line('l_errors    '||'NO ERROR');
        END IF;
      EXCEPTION
      WHEN OTHERS THEN
     -- RAISE;
        l_msg_type    :='WARNING';
        L_ERRORS      := 'An error was encountered while inserting deal comment memo - ' || SQLCODE || ' -ERROR- ' || SQLERRM;
        g_user_message:='An error was encountered while saving Deal Comments';
        dbms_output.put_line ('An error was encountered in SendQuote - ' || SQLCODE || ' -ERROR- ' || sqlerrm || '. Error at Line : ' || dbms_utility.format_error_backtrace());

        inserterror_output_messages ( NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, l_errors, l_msg_type, i_deal_creation_guid, NULL, NULL,g_user_message);
        --dbms_output.put_line('In Loop Exception');
        --dbms_output.put_line('l_msg_type    '||l_msg_type);
        --dbms_output.put_line('l_errors    '||l_errors);
      END;
    ELSIF (is_emp_bmi_default(rec.AddedByEmpNr
    , l_source_asset_id --Added for US-9408 --> Encore Retirement  
    )='Y')  THEN
    BEGIN
        --CR4482
        l_cmntclob :=replace_special_chars(rec.cmntblob); --CR 4815
        --dbms_output.put_line('blob str  :'||rec.cmntblob);
        --IF (length(rec.cmntblob)>500) THEN
        IF (LENGTH(l_cmntclob)>500 ) THEN --CR4815
          --l_cmntblob_temp:=convert_to_blob(rec.cmntblob);
          --l_cmntblob_temp:=convert_to_blob(replace(rec.cmntblob,'&'||'amp;','&'));---changed as part of CR4815
          l_cmntblob_temp:=convert_to_blob(l_cmntclob);---changed as part of CR4815
          --dbms_output.put_line('In  If');
        ELSE
          --l_cmntblob_temp :=utl_raw.cast_to_raw(rec.cmntblob);
          --l_cmntblob_temp :=utl_raw.cast_to_raw(replace(rec.cmntblob,'&'||'amp;','&'));---changed as part of CR4815
          l_cmntblob_temp :=utl_raw.cast_to_raw(l_cmntclob);---changed as part of CR4815
          --dbms_output.put_line('In Else');
        END IF;
        --CR 4482
        --dbms_output.put_line('befor insert');
        INSERT
        INTO deal_comment_memo
          (
            bd_id,
            cmnt_id,
            cmnt_group_cd, -----'A' 'All' 'B'  - 'BDM'
            cmnt_extrn_fl,
            cmnt_type_cd,
            cmnt_text_memo,
            create_hp_emp_nr,
            create_dts,
            creation_dts,
            update_dts,
            bd_nr_created,--New fields added by Lakshmi on 9/12/2014 for CR2528 -Comment Type for BMI Deals - Needs To Be Business Justification (deal added & version)
            BD_VERSION_NR_CREATED --New fields added by Lakshmi on 9/12/2014 for CR2528 -Comment Type for BMI Deals - Needs To Be Business Justification (deal added & version)
          )
          VALUES
          (
            i_bd_id,
            l_deal_cmnt_id,
            NVL(rec.CommentGroupCD,'A'),
            rec.ExternalFl,
            NVL(rec.CommentTypeCD,'O'),
            l_cmntblob_temp,--rec.cmntblob,  --CR 4482
            rec.AddedByEmpNr,
            sysdate,
            sysdate,
            sysdate,
            l_bd_nr_created,--New fields added by Lakshmi on 9/12/2014 for CR2528 -Comment Type for BMI Deals - Needs To Be Business Justification (deal added & version)
            l_bd_version_nr_created--New fields added by Lakshmi on 9/12/2014 for CR2528 -Comment Type for BMI Deals - Needs To Be Business Justification (deal added & version)
          );
        --dbms_output.put_line('after insert');
        IF SQL%ROWCOUNT = 0 THEN
          l_msg_type   :='WARNING';
          L_ERRORS     :=' Could not insert deal comment for bd id  '||I_BD_ID;
          inserterror_output_messages ( NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, l_errors, l_msg_type, i_deal_creation_guid, NULL, NULL,l_errors);
        ELSE
          l_deal_cmnt_id :=l_deal_cmnt_id+1;
          ----dbms_output.put_line('inserted into deal_comment_memo');
          ----dbms_output.put_line('l_msg_type    '||'INSERT');
          ----dbms_output.put_line('l_errors    '||'NO ERROR');
        END IF;
      EXCEPTION
      WHEN OTHERS THEN
     -- RAISE;
        l_msg_type    :='WARNING';
        L_ERRORS      := 'An error was encountered while inserting deal comment memo - ' || SQLCODE || ' -ERROR- ' || SQLERRM;
        g_user_message:='An error was encountered while saving Deal Comments';
        --dbms_output.put_line ('An error was encountered in SendQuote - ' || SQLCODE || ' -ERROR- ' || sqlerrm || '. Error at Line : ' || dbms_utility.format_error_backtrace());

        inserterror_output_messages ( NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, l_errors, l_msg_type, i_deal_creation_guid, NULL, NULL,g_user_message);
        --dbms_output.put_line('In Loop Exception');
        --dbms_output.put_line('l_msg_type    '||l_msg_type);
        --dbms_output.put_line('l_errors    '||l_errors);
      END;
    ELSE
    L_MSG_TYPE :='WARNING';
      L_ERRORS   := 'Cannot update Deal Comments, Invalid User';
      inserterror_output_messages ( NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, l_errors, l_msg_type, i_deal_creation_guid, NULL, NULL,l_errors);
      --dbms_output.put_line('l_errors    '||l_errors);
    END IF;
  END LOOP;
  --dbms_output.put_line('After loop');
EXCEPTION
WHEN OTHERS THEN
--RAISE;
  L_MSG_TYPE    :='WARNING';
  L_ERRORS      := 'An error was encountered while saving Deal Comments - ' || SQLCODE || ' -ERROR- ' || SQLERRM;
  g_user_message:='An error was encountered while saving Deal Comments';
  INSERTERROR_OUTPUT_MESSAGES ( NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, L_ERRORS, L_MSG_TYPE, I_DEAL_CREATION_GUID, NULL, NULL,g_user_message);
  --dbms_output.put_line('In Exception');
  --dbms_output.put_line('l_msg_type    '||l_msg_type);
  --dbms_output.put_line('l_errors    '||l_errors);
END ins_deal_comment_memo;
FUNCTION is_user_exists
  (
    i_emp_id IN NUMBER
    ,i_source_asset_id IN deal.deal_source_cd%TYPE  --Added for US-9408 --> Encore Retirement  
  )
  RETURN VARCHAR2
IS
  l_eclipse_user_id user_tab.user_id%type; --VARCHAR2(100); --Commented VARCHAR2 as part of EDMS Hardening
  L_ERRORS VARCHAR2(1000);
BEGIN
---IF  l_rec_exists >0 THEN
if is_emp_bmi_default(i_emp_id
,i_source_asset_id)='Y'  THEN
    l_eclipse_user_id:=g_default_bmi_user_id;
    --dbms_output.put_line('Found BMI Default BMI user id');
    RETURN 'Y';
else
  --dbms_output.put_line('Finding Actual employee user ID');
  SELECT ut.user_id
  INTO l_eclipse_user_id
  FROM user_tab ut,
    user_login ui ,
    employee emp
  WHERE user_hp_emp_nr         =i_emp_id
  AND ut.user_id               =ui.user_id
  AND ut.user_hp_emp_nr        =emp.emp_nr
  AND lower(ui.windows_user_id)=lower(emp.nt_user_id)
  AND rownum                   <2;
  ----dbms_output.PUT_LINE ('EMPLOYEE COMMENT TO VERIFY ' || I_EMP_ID);
  IF sql%ROWCOUNT <>0 THEN
    ----dbms_output.PUT_LINE ('EMPLOYEE COMMENT ' || I_EMP_ID);
    RETURN 'Y';
  ELSE
        RETURN 'N';
  END IF;
end if;

EXCEPTION
WHEN NO_DATA_FOUND THEN
--dbms_output.PUT_LINE ('Invalid user id in is_emp_bmi_default function for emp id : ' || i_emp_id );
  RETURN ('N');
WHEN OTHERS THEN
--dbms_output.PUT_LINE ('Invalid user id in is_emp_bmi_default function for emp id : ' || i_emp_id );
  RETURN ('Error' ||SQLCODE||'---'||sqlerrm);
  --dbms_output.put_line('Error in exception   '||SQLCODE||'---'||sqlerrm);
END is_user_exists;
PROCEDURE ins_deal_pl(
    i_bd_id              IN NUMBER,
    i_deal_creation_guid IN VARCHAR2,
    i_xmlnamespace       IN VARCHAR2,
    i_region_cd          IN VARCHAR2,
    i_region_pct         IN NUMBER )
IS
  l_ap_region_pct NUMBER;
  l_eu_region_pct NUMBER;
  l_na_region_pct NUMBER;
  l_la_region_pct NUMBER;
  l_jp_region_pct NUMBER;
  l_total_pct     NUMBER;
  l_msg_type      VARCHAR2(32767);
  l_errors        VARCHAR2(32767);
  l_pl_exists     NUMBER;
BEGIN
  l_ap_region_pct :=NULL;
  l_eu_region_pct :=NULL;
  l_na_region_pct :=NULL;
  l_la_region_pct :=NULL;
  l_jp_region_pct :=NULL;
  l_total_pct     :=0;
  l_pl_exists     :=0;
  FOR rec IN
  (SELECT extract ( value (d), '//IncentiveFl/text()', i_xmlnamespace). getstringval () AS incentivefl, ---need clarification on which column this should be inserted.
    extract ( value (d), '//IncentivePct/text()', i_xmlnamespace). getstringval ()      AS incentivepct,
    extract ( value (d), '//PL/text()', i_xmlnamespace). getstringval ()                AS pl
  FROM edms_deal_queue x,
    TABLE ( xmlsequence ( extract ( x.xml_data_xml, 'DealCreationRequest/AgentIncentives/AgentIncentive', i_xmlnamespace))) d
  WHERE x.deal_creation_guid =i_deal_creation_guid
  )
  LOOP
    BEGIN
      -----need clarification how to get data from dart as in deal manager screen
      --for dart records loop
      IF i_region_cd    ='AP' THEN
        l_ap_region_pct:=i_region_pct;
        l_total_pct    :=l_total_pct+ i_region_pct;
      ELSIF i_region_cd ='EU' THEN
        l_eu_region_pct:=i_region_pct;
        l_total_pct    :=l_total_pct+ i_region_pct;
      ELSIF i_region_cd ='NA' THEN
        l_na_region_pct:=i_region_pct;
        l_total_pct    :=l_total_pct+ i_region_pct;
      ELSIF i_region_cd ='LA' THEN
        l_la_region_pct:=i_region_pct;
        l_total_pct    :=l_total_pct+ i_region_pct;
      ELSIF i_region_cd ='JP' THEN
        l_jp_region_pct:=i_region_pct;
        l_total_pct    :=l_total_pct+ i_region_pct;
      END IF;
      BEGIN
        SELECT 1
        INTO l_pl_exists
        FROM deal_pl
        WHERE BD_ID     =I_BD_ID
        AND prod_line_cd=rec.pl;
      EXCEPTION
      WHEN NO_DATA_FOUND THEN
        l_pl_exists:=0;
      WHEN TOO_MANY_ROWS THEN
        l_pl_exists:=2;
      END;
      IF l_pl_exists >0 THEN
        BEGIN
          UPDATE deal_pl
          SET sales_incentive_pct=rec.incentivepct
          WHERE bd_id            =i_bd_id
          AND prod_line_cd       =rec.pl;
          IF sql%rowcount        = 0 THEN
            L_MSG_TYPE          :='WARNING';
            L_ERRORS            := 'Unable to update Agent Incentives. Prod Line : '|| REC.PL || ' not found';
            inserterror_output_messages ( NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, l_errors, l_msg_type, i_deal_creation_guid, NULL, NULL,l_errors);
            --dbms_output.put_line('Could not update deal_pl '||l_errors);
          ELSE
            --dbms_output.put_line('Update successful');
            NULL;
          END IF;
        EXCEPTION
        WHEN OTHERS THEN
          L_MSG_TYPE    :='ERROR';
          L_ERRORS      := 'Unable to update Agent Incentives. ' || SQLCODE || ' -ERROR- ' || SQLERRM;
          g_user_message:='Unable to update Agent Incentives';
          inserterror_output_messages ( NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, l_errors, l_msg_type, i_deal_creation_guid, NULL, NULL,g_user_message);
          --dbms_output.put_line(' In Exception Could not update deal_pl '||l_errors);
        END;
      ELSE
        l_msg_type :='WARNING';
        L_ERRORS   :='Unable to update Agent Incentives. Prod Line : '|| REC.PL || ' not found';
        inserterror_output_messages ( NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, l_errors, l_msg_type, i_deal_creation_guid, NULL, NULL,l_errors);
        --dbms_output.put_line('Pl does not exists in deal_pl '||l_errors);
      END IF;

    EXCEPTION
    WHEN OTHERS THEN
      l_msg_type    :='WARNING';
      L_ERRORS      := 'An error was encountered while updating Agent Incentives - ' || SQLCODE || ' -ERROR- ' || SQLERRM;
      g_user_message:='An error was encountered while updating Agent Incentives';
      inserterror_output_messages ( NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, l_errors, l_msg_type, i_deal_creation_guid, NULL, NULL,g_user_message);
      --dbms_output.put_line('In Loop Exception');
    END;
  END LOOP;
EXCEPTION
WHEN OTHERS THEN
  L_MSG_TYPE    :='WARNING';
  L_ERRORS      := 'An error was encountered while updating Agent Incentives - ' || SQLCODE || ' -ERROR- ' || SQLERRM;
  g_user_message:='An error was encountered while updating Agent Incentives';
  INSERTERROR_OUTPUT_MESSAGES ( NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, L_ERRORS, L_MSG_TYPE, I_DEAL_CREATION_GUID, NULL, NULL,g_user_message);
  --dbms_output.put_line('In Exception');
  --dbms_output.put_line('l_msg_type    '||l_msg_type);
  --dbms_output.put_line('l_errors    '||l_errors);
END ins_deal_pl;
PROCEDURE update_guid_for_errors(
    i_deal_creation_guid VARCHAR2,
    i_bd_id              NUMERIC,
    i_bd_nr              NUMERIC,
    i_bd_version_nr      NUMERIC)
IS
  l_reccount NUMERIC(10);
  l_errors GT_EDMS_SMQT_ERR_RESULTS.ERROR_DESC%type;
BEGIN
  BEGIN
    SELECT 1
    INTO l_reccount
    FROM GT_EDMS_SMQT_ERR_RESULTS
    WHERE bd_id   =i_bd_id
    AND msg_type IN ('ERROR','WARNING');
  EXCEPTION
  WHEN NO_DATA_FOUND THEN
    l_reccount :=0;
  WHEN TOO_MANY_ROWS THEN
    l_reccount :=2;
  END;
  IF l_reccount >0 THEN
    l_errors   :='There are warnings and error messages while processing your deal. Please contact Eclipse Administrator for more information with Ref : ' || i_deal_creation_guid;
    inserterror_output_messages ( i_bd_id,i_bd_nr, i_bd_version_nr,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, 'INFO', i_deal_creation_guid, NULL,NULL,l_errors);
  END IF;
END update_guid_for_errors;

PROCEDURE sendquote(
    i_bd_id             NUMBER,
    i_bd_nr             NUMBER,
    i_bd_version_nr     NUMBER ,
    i_quote_user_id     VARCHAR2,
    i_quote_send_pdf_fl VARCHAR2,
    i_quote_send_txt_fl VARCHAR2,
    i_gen_opg_fl varchar2,
    o_quote_sent OUT VARCHAR2,
    o_next_opg_num OUT deal.opg_num%type)
IS
  l_quote_queue_id              NUMBER (10);
  l_quote_recepients_email_list VARCHAR2(4000);
  L_TEMP_EMAILS                 VARCHAR2(200);
  l_reccount                    NUMBER(10);
  l_opg_num_ref bus_model.opg_num_ref%type;
  l_vstatus VARCHAR2(10);
  l_next_opg_num deal.opg_num%type;
  l_errors               VARCHAR2(3000);
  l_deal_prog_cd         deal.deal_prog_cd%TYPE :='U'; --VARCHAR2(1):='U'; Commented VARCHAR2 as part of EDMS Hardening process
  l_bdme_aprvl_cd        deal.bdme_aprvl_cd%TYPE :='N'; --VARCHAR2(1):='N';Commented VARCHAR2 as part of EDMS Hardening process
  l_quote_dist_cd        deal.quote_dist_cd%TYPE :='N'; --VARCHAR2(1):='N';Commented VARCHAR2 as part of EDMS Hardening process
  l_quote_event_sent_msg VARCHAR2(32767);--added for event service
  l_sap_appr_fl bus_model.sap_apprvl_fl%type;
  l_quote_send_pdf_fl bus_model.quote_send_pdf_fl%type;
  l_quote_send_txt_fl bus_model.quote_send_txt_fl%type;
  l_rebatable_fl deal.rebatable_fl%type;
  c_m_type_error VARCHAR2(200);
  l_deal_source_deal_type deal.deal_source_deal_type%TYPE;
  l_quote_type quote_queue.quote_type%TYPE;
  l_low_touch_quote_send_pdf_fl QUOTE_PROFILE.SEND_PDF_LOWTOUCH_FL%TYPE;
  l_low_touch_quote_send_txt_fl QUOTE_PROFILE.SEND_TXT_LOWTOUCH_FL%TYPE;
  l_quote_sent_num deal.bd_id%type;  --Added for CR 222165

  l_PROMO_DEALS APP_CONFIG_KEYS.APP_VALUE%TYPE; --Added for CR: PA 257956
  l_source_asset_id default_bmi_employee.source_asset_ID%TYPE;   --Added for US-9408 --> Encore Retirement  
BEGIN

--Check if the deal is low touch deal
SELECT deal_source_deal_type 
        ,deal_source_cd   --Added for US-9408 --> Encore Retirement  
            INTO l_deal_source_deal_type 
        , l_source_asset_id  --Added for US-9408 --> Encore Retirement  
            FROM deal 
WHERE bd_id=i_bd_id;
  o_next_opg_num:=NULL;
  --dbms_output.put_line ('Preparing for Send Quote....');

  --Generate quote queue ID
  l_quote_queue_id:=0;

  SELECT seq_quote_queue.nextval INTO l_quote_queue_id FROM dual;

  --get quote recepients list
  l_quote_recepients_email_list :=get_quote_recepients_list (i_bd_id);

  --add our names for testing
  --pls. remove after testing
  /*
  L_TEMP_EMAILS                 :='harsh-j.shah@hp.com';
  l_quote_recepients_email_list :=l_quote_recepients_email_list || ',' || l_temp_emails || ',' ;
  L_TEMP_EMAILS                 :='max.zak@hp.com';
  l_quote_recepients_email_list :=l_quote_recepients_email_list || l_temp_emails;
  */
  --dbms_output.put_line ('L_QUOTE_RECEPIENTS_EMAIL_LIST ' || l_quote_recepients_email_list);
  dbms_output.put_line ('Preparing for Quote ');

  --Code added by Harsh on 4/2/2014.
  --if the quote is generated by default employee then the email should flow to designated default employee mail box
  --set up in DEFAULT_BMI_EMPLOYEE table for that region and country

    if l_quote_recepients_email_list is null or length(l_quote_recepients_email_list)<=0 then

        select  (DEMP.SR_EMAIL ||',' || DEMP.DC_EMAIL ||',' || DEMP.DL_EMAIL ||',' || DEMP.DM_EMAIL) into l_quote_recepients_email_list  from default_bmi_employee demp ,deal d
                                where d.bd_id=i_bd_id
                                and d.init_hp_emp_nr=demp.init_hp_emp_nr
                                and d.driving_hp_emp_nr=demp.driving_hp_emp_nr
                                and (demp.country_cd=d.control_cntry_cd or demp.country_cd='*')
                                and demp.region_cd=d.region
                                AND UPPER(demp.route_to_market) = UPPER(l_rtm)
                                And d.tenantid_data_cd = demp.tenantid---And d.tenantid =demp.tenantid---Added for SMO ( Modified tenantid with tenantid_data_cd)
                                AND source_asset_ID =l_source_asset_id --Added for US-9408 --> Encore Retirement  
                                and rownum<2;
end if;



  IF (l_quote_recepients_email_list IS NULL) THEN
    l_errors                        := 'No recepients available to send the quote';
    inserterror_output_messages (i_bd_id,i_bd_nr,i_bd_version_nr, NULL,NULL,NULL,NULL, NULL,NULL,NULL,l_errors,c_m_type_warning, g_deal_creation_guid,NULL,NULL,l_errors);
  END IF;
   --Changes made by Lakshmi on 8/20/2014. The quote type will be Q independent of deal being LOW_TOUCH or HIGH_TOUCH.
  l_quote_type := 'Q';

  -- Changes made by Lakshmi as per Change request ID : 71574 - Deal Email Notification upon complete quote
  IF UPPER(l_deal_source_deal_type)='LOW_TOUCH' THEN
        --l_quote_recepients_email_list :=''; Commented by Lakshmi as part of CR:3332 IQ OPGs not received, not to suppress Quote mails for LT deals.
        NULL;
        --l_quote_type := 'Q'; --Changes made by Lakshmi on 8/20/2014. The quote type will be Q independent of deal being LOW_TOUCH or HIGH_TOUCH.
        --dbms_output.PUT_LINE('Deal is a low touch deal, so email list is: '||l_quote_recepients_email_list);
        --dbms_output.PUT_LINE('Deal is a low touch deal, so quote type is: '||l_quote_type);
        --ELSE
        --l_quote_type := 'BMI'; --Changes made by Lakshmi on 8/20/2014. The quote type will be Q independent of deal being LOW_TOUCH or HIGH_TOUCH.
END IF;

  --temp modification
  IF i_gen_opg_fl ='Y' THEN
        --dbms_output.PUT_LINE ('Generate OPG starts...');
        GenerateOPG (i_bd_id,l_OPG_NUM_REF,l_errors);
        --dbms_output.PUT_LINE ('Generate OPG ends...' || ' bd id ' || i_bd_id || ' OPG REF NO : '|| l_OPG_NUM_REF || ' ERROR ' || l_errors);
        inserterror_output_messages ( NULL,NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, c_m_type_error, g_deal_creation_guid, NULL,NULL,g_user_message);
  END IF;


  BEGIN

  SELECT DECODE(b.sap_apprvl_fl,NULL,'N',b.sap_apprvl_fl) sap_apprvl_fl ,
    DECODE(b.quote_send_pdf_fl,NULL,'N',b.quote_send_pdf_fl) quote_send_pdf_fl,
    DECODE(b.quote_send_txt_fl,NULL,'N',b.quote_send_txt_fl) quote_send_txt_fl,
    DECODE(d.rebatable_fl,NULL,'N',d.rebatable_fl) rebatable_fl,
    NVL( QP.SEND_PDF_LOWTOUCH_FL,'N') ,
    NVL( QP.SEND_TXT_LOWTOUCH_FL,'N')
  INTO l_sap_appr_fl,
    l_quote_send_pdf_fl,
    l_quote_send_txt_fl,
    l_rebatable_fl,
    l_low_touch_quote_send_pdf_fl,
    l_low_touch_quote_send_txt_fl
    FROM deal D,
    bus_model B,
    Quote_Profile QP
  WHERE d.bd_id      = i_bd_id
  AND b.bus_model_cd = d.bus_model_cd
  AND b.country_cd   = d.control_cntry_cd
  AND b.quote_profile_cd = QP.quote_profile_cd  ----NEW CODE  mehnaz singh, prevent code for low touch
  and qp.tenantid=d.tenantid_data_cd --and qp.tenantid=d.tenantid --added to for SMO( Modified tenantid column with tenantid_data_cd)
  and qp.tenantid=b.tenantid -- added for SMO
  AND b.tenantid =NVL(d.tenantid_data_cd ,'HPE');-- AND b.tenantid =NVL(d.tenantid ,'HPE');---Added for SMO changes(Modified tenantid column with tenantid_data_cd)
  EXCEPTION
  ----Added for CR 222165 as deal can not be quoted with out a quote profile code
  WHEN NO_DATA_FOUND THEN
                UPDATE DEAL
                SET QUOTE_DIST_CD = 'N',
                  STATUS_TX       = NULL
                WHERE BD_ID       =I_BD_ID ;
  l_ERRORS:='Could  not find appropriate Quote Profile for the bd id : ' || i_bd_id;
  inserterror_output_messages ( NULL,NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors,C_M_TYPE_WARNING, g_deal_creation_guid, NULL,NULL,l_errors); ----l_errors Added for CR 222165 to show appropriate message to BMI
  when others then
  l_ERRORS:='Unexpected error while getting quote profile details for the bd id : ' || i_bd_id;
  inserterror_output_messages ( NULL,NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors,C_M_TYPE_WARNING, g_deal_creation_guid, NULL,NULL,l_errors); ----l_errors Added for CR 222165 to show appropriate message to BMI
  END;

  ---mehnaz singh Question ? Why ar eyou setting to BMI if its not LOW_TOUCH ? A BMI deal can also be low touch
  IF ((l_deal_source_deal_type is NULL) OR  (l_deal_source_deal_type = 'LOW_TOUCH' )) THEN
    l_quote_send_pdf_fl := l_low_touch_quote_send_pdf_fl;
    l_quote_send_txt_fl := l_low_touch_quote_send_txt_fl;
  ELSE
     l_quote_send_pdf_fl := i_quote_send_pdf_fl ;
     l_quote_send_txt_fl := i_quote_send_txt_fl;
  END IF;

    IF l_sap_appr_fl   ='Y' THEN
                --UPDATE  DEAL
                UPDATE DEAL
                SET QUOTE_DIST_CD = 'P',
                  STATUS_TX       = NULL
                WHERE BD_ID       =I_BD_ID ;
                --dbms_output.PUT_LINE('Updated deal with quote dist code');

              --Add insert statement for inserting into QuoteQueue as a part of R8 requirement.
              --This will bypass the SAP Approval and quote the deal right away
                INSERT
                INTO quote_queue
                  (
                    qid,
                    bd_id,
                    bd_nr,
                    bd_version_nr,
                    user_id,
                    post_dts,
                    quote_type,
                    primary_rslr_list,
                    recipient_list,
                    quote_send_pdf_fl,
                    quote_send_txt_fl,
                    verified_fl
                  )
                  VALUES
                  (
                    l_quote_queue_id,
                    i_bd_id,
                    i_bd_nr,
                    i_bd_version_nr,
                    NVL(i_quote_user_id,'bmidef'),
                    TRUNC(sysdate),
                    l_quote_Type,--'BMI',
                    NULL,
                    l_quote_recepients_email_list,
                    L_quote_send_pdf_fl, --Lakshmi changed the parameter from i_quote_send_pdf_fl to l_quote_send_pdf_fl on 8/21/2014.
                    L_quote_send_txt_fl, --Lakshmi changed the parameter from i_quote_send_txt_fl to L_quote_send_txt_fl on 8/21/2014
                    'O'
                  );

                --l_errors:='This deal require SAP / EOP validation. Please note that quote generation may take longer. If you don not recieve a quote then please login to Eclipse and check for SAP errors';
                l_errors:='The deal though quoted, is being sent to SAP for validation. Please check in Eclipse Deal Manager later for any validation errors';
                inserterror_output_messages ( NULL,NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors,C_M_TYPE_WARNING, g_deal_creation_guid, NULL,NULL,l_errors);
            IF l_rebatable_fl <> 'Y' THEN
                --dbms_output.put_line ('l_rebatable_fl ' || l_rebatable_fl);
              INSERT
              INTO dealqueue
                (
                  dealid,
                  queuetype,
                  status,
                  bd_nr,
                  bd_version_nr,
                  user_id,
                  primary_rslr_list,
                  recipient_list,
                  quote_send_txt_fl,
                  quote_send_pdf_fl
                )
                VALUES
                (
                  i_bd_id,
                  'SAP',
                  'NEW',
                  i_bd_nr,
                  i_bd_version_nr,
                  i_quote_user_id,
                  NULL,
                  l_quote_recepients_email_list,
                  l_quote_send_txt_fl,
                  l_quote_send_pdf_fl
                );
              INSERT
              INTO dealqueue
                (
                  dealid,
                  queuetype,
                  status,
                  bd_nr,
                  bd_version_nr,
                  user_id,
                  primary_rslr_list,
                  recipient_list,
                  quote_send_txt_fl,
                  quote_send_pdf_fl
                )
                VALUES
                (
                  i_bd_id,
                  'FSP',
                  'NEW',
                  i_bd_nr,
                  i_bd_version_nr,
                  i_quote_user_id,
                  NULL,
                  l_quote_recepients_email_list,
                  l_quote_send_txt_fl,
                  l_quote_send_pdf_fl
                );
              INSERT
              INTO dealqueue
                (
                  dealid,
                  queuetype,
                  status,
                  bd_nr,
                  bd_version_nr,
                  user_id,
                  primary_rslr_list,
                  recipient_list,
                  quote_send_txt_fl,
                  quote_send_pdf_fl
                )
                VALUES
                (
                  i_bd_id,
                  'EOP',
                  'NEW',
                  i_bd_nr,
                  i_bd_version_nr,
                  i_quote_user_id,
                  NULL,
                  l_quote_recepients_email_list,
                  l_quote_send_txt_fl,
                  l_quote_send_pdf_fl
                );
              --dbms_output.PUT_LINE('Rabate flag = N');
            ELSE
              INSERT
              INTO dealqueue
                (
                  dealid,
                  queuetype,
                  status,
                  bd_nr,
                  bd_version_nr,
                  user_id,
                  primary_rslr_list,
                  recipient_list,
                  quote_send_txt_fl,
                  quote_send_pdf_fl
                )
                VALUES
                (
                  i_bd_id,
                  'EOP',
                  'NEW',
                  i_bd_nr,
                  i_bd_version_nr,
                  i_quote_user_id,
                  NULL,
                  l_quote_recepients_email_list,
                  l_quote_send_txt_fl,
                  l_quote_send_pdf_fl
                );
              --dbms_output.PUT_LINE('Rebate flag = Y');
            END IF;
  ELSIF l_sap_appr_fl !='Y' THEN
  --dbms_output.put_line ('l_sap_appr_fl is N '|| l_sap_appr_fl);
    INSERT
    INTO quote_queue
      (
        qid,
        bd_id,
        bd_nr,
        bd_version_nr,
        user_id,
        post_dts,
        quote_type,
        primary_rslr_list,
        recipient_list,
        quote_send_pdf_fl,
        quote_send_txt_fl,
        verified_fl
      )
      VALUES
      (
        l_quote_queue_id,
        i_bd_id,
        i_bd_nr,
        i_bd_version_nr,
        NVL(i_quote_user_id,'bmidef'),
        TRUNC(sysdate),
        l_quote_type,--'BMI',
        NULL,
        l_quote_recepients_email_list,
         L_quote_send_pdf_fl, --Lakshmi changed the parameter from i_quote_send_pdf_fl to l_quote_send_pdf_fl on 8/21/2014.
          L_quote_send_txt_fl, --Lakshmi changed the parameter from i_quote_send_txt_fl to L_quote_send_txt_fl on 8/21/2014
        'O'
      );
  END IF;
  ----Added for CR 222165  as the deal will be quoted only when there is an entry in quote_queue table.
     BEGIN
      select bd_id into l_quote_sent_num from quote_queue where bd_id = i_bd_id;
     EXCEPTION
      WHEN NO_DATA_FOUND THEN
      l_quote_sent_num:=0;
     END;
 -- IF sql%rowcount   >0 THEN
 IF l_quote_sent_num >0 THEN
    o_quote_sent   :='Y';
    --l_errors       := 'SUCCESS';
    g_user_message :='Deal quote sent';
    --l_errors       := 'Deal quote sent';
    c_m_type_error := 'INFO';

    inserterror_output_messages ( NULL,NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, c_m_type_error, g_deal_creation_guid, NULL,NULL,g_user_message);
    new_deal_quoted_xml(i_bd_id,l_quote_event_sent_msg);

    --Changes made by Lakshmi for "CR:257956 --> PA    257956    Guidance Promo Pricing - Include Multi-Countries deals when returning Promo Deals" to log into PROMO_DEAL table.
    BEGIN
        SELECT APP_VALUE
            INTO l_PROMO_DEALS
        FROM APP_CONFIG_KEYS
            WHERE APP_KEY = 'PROMO_DEALS_ADD_TO_STG_TBL';
        IF l_promo_deals='Y' THEN
            ECLIPSE.PKG_TIER_SHOPPING_PRICE.save_promo_deals(i_bd_id)    ;
        END IF;
    EXCEPTION
    WHEN OTHERS THEN
    l_errors :='Failed to add an entry to PROMO_DEAL table';
    c_m_type_error := 'INFO';
    inserterror_output_messages ( NULL,NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, c_m_type_error, 'GUIDANCE_PROMO_PRICING', NULL,NULL,NULL);
    END;
    --End of changes for or "CR:257956"

    IF l_quote_event_sent_msg='Success' THEN
      l_errors              := 'SUCCESS';
     -- g_user_message        :='Succes outgoing event service';
      inserterror_output_messages ( NULL,NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, c_m_type_error, g_deal_creation_guid, NULL,NULL,NULL);
      --dbms_output.PUT_LINE('QUOTE EVENT STATUS   :'||l_quote_event_sent_msg);
    ELSE
      l_errors      := 'ERROR';
     -- g_user_message:='Failed outgoing event service';
      --inserterror_output_messages ( NULL,NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, c_m_type_error, g_deal_creation_guid, NULL,NULL,g_user_message);
      inserterror_output_messages ( NULL,NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, c_m_type_error, g_deal_creation_guid, NULL,NULL,NULL);
    END IF;
  ELSE
    o_quote_sent:='N';
  END IF;
  -------End of newly added code on 21-Jan-2012 --------------

EXCEPTION
WHEN OTHERS THEN
  o_next_opg_num:=NULL;
  o_quote_sent  :='N';
  --dbms_output.put_line ('Error in Send Quote');
  l_errors      := 'An error was encountered in SendQuote - ' || SQLCODE || ' -ERROR- ' || sqlerrm || '. Error at Line : ' || dbms_utility.format_error_backtrace();
  g_user_message:='An error was encountered in SendQuote';
  inserterror_output_messages ( NULL,NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, c_m_type_error, g_deal_creation_guid, NULL,NULL,g_user_message);
END sendquote;


PROCEDURE calculate_Deal_Disc_Margin_PCT
  (
    i_bd_id NUMBER
  )
IS
/*
modified by Harsh Shah 6-Dec-2013
Removed the Hold and Deny line items from the calculation.
*/
  fdealdiscpct              NUMERIC(16,2) :=0;
  fcosttotal                NUMERIC(16,2) :=0;
  festdealvalue             NUMERIC (16,2):=0;
  fdealmarginpct            NUMERIC(16,8) :=0;
  fLineNetAmt               NUMERIC(16,2) := 0;
  fLineDiscPct              NUMERIC(16,8) := 0;
  fLineDiscPctOfDealValue   NUMERIC(16,8) := 0;
  fLineValueDiscPct         NUMERIC(16,8) := 0;
  fTotNetAmt                NUMERIC(16,2) := 0;
  fDealTotDiscPct           NUMERIC(16,8) := 0;
  fLineTotDiscPct           NUMERIC(16,8) := 0;
  fDealValueForMargin       NUMERIC(16,2) := 0;
  flineextlistprice         NUMERIC(16,2) := 0;
  fdealtotlistprice         NUMERIC(16,2) := 0;
  fDiscAmt                  NUMERIC(16,2) := 0;
  ftotconsumedamt           NUMERIC(16,2) := 0;
  bdocalcdealmargin         VARCHAR2(1)   :='N';
  est_deal_value_margin_pct NUMERIC(16,8) := 0;
  L_ERRORS                  VARCHAR2(4000);
  l_calc_guidance_std_amt number(16,2):=0; --by Harsh Shah 21-Mar-2014
  l_total_calc_guidance_std_amt  number(16,2):=0; --by Harsh Shah 21-Mar-2014
  l_high_rslr_a_sd_pc   line_disc_scale.high_rslr_a_sd_pc%type:=0;

BEGIN
  FOR ltm_rec IN
  (SELECT li.line_nr,
      li.line_type_cd,
      li.line_prog_cd,
      li.assoc_pl_cd,
      NVL(LDSC.PROD_LST_PRC_AM,0) PROD_LST_PRC_AM,
      NVL(ldsc.auth_bd_net_prc_am,0) auth_bd_net_prc_am,
      NVL(ldsc.rqst_bd_net_prc_am,0) rqst_bd_net_prc_am,
      NVL(ldsc.auth_disc_ot_pc,0) auth_disc_ot_pc,
      NVL(ldsc.prod_cost_am,0) prod_cost_am,
      NVL(li.estmtd_dlr_am,0) estmtd_dlr_am,
      NVL(li.estmtd_qt,0) estmtd_qt,
      NVL(ldsc.rqst_disc_ot_pc,0) rqst_disc_ot_pc,
      NVL(d.est_net_tot_am,0) est_net_tot_am,
      NVL(d.est_list_tot_am,0) est_list_tot_am,
      ldsc.HIGH_RSLR_A_SD_PC
    FROM deal d,
      line_item li,
      line_disc_scale ldsc
    WHERE d.bd_id     =i_bd_id
    AND d.bd_id       =li.bd_id
    AND d.bd_id       =ldsc.bd_id
    AND li.bd_id      =ldsc.bd_id
    AND li.line_nr    =ldsc.line_nr
    AND ldsc.scale_id =
      (SELECT MAX(NVL(ldsc2.scale_id,0))
      FROM line_disc_scale ldsc2
      WHERE ldsc2.bd_id=ldsc.bd_id
      AND ldsc2.bd_id  =li.bd_id
      AND ldsc2.line_nr=li.line_nr
      AND ldsc.line_nr =ldsc.line_nr
      )
     AND li.LINE_PROG_CD NOT IN ('H','D')
  )
  LOOP
    bdocalcdealmargin :='Y';
    fdealtotlistprice :=ltm_rec.est_list_tot_am;
    festdealvalue     :=ltm_rec.est_net_tot_am;
    l_HIGH_RSLR_A_SD_PC:=ltm_rec.HIGH_RSLR_A_SD_PC;
    --dbms_output.put_line (' est_list_tot_am ' || ltm_rec.est_list_tot_am);
    --dbms_output.put_line (' est_net_tot_am ' || ltm_rec.est_net_tot_am);
    IF (ltm_rec.line_type_cd='PL' OR ltm_rec.line_type_cd='PF') THEN
      bdocalcdealmargin    :='N';
      --ELSIF--PENDING
      /*if (((drLine["LINE_TYPE_CD"].ToString() == "PN") or (drLine["LINE_TYPE_CD"].ToString() == "BD") or (drLine["LINE_TYPE_CD"].ToString() == "EG")) AND
      ((drLine["LINE_PROG_CD"].ToString() != "D" AND  drLine["LINE_PROG_CD"].ToString() != "H")) AND
      ((drlds[rowindx]["COST_AVAIL_FL"].tostring() == "N")))
      bDoCalcDealMargin = false;
      */
    END IF;
    IF (ltm_rec.line_type_cd='PL' OR ltm_rec.line_type_cd='PF') THEN
      flinenetamt          :=ltm_rec.estmtd_dlr_am *1000;
      --dbms_output.put_line (' flinenetamt in case of PL or PF : ' ||flinenetamt);
    ELSE
      flineextlistprice           :=ltm_rec.prod_lst_prc_am * ltm_rec.estmtd_qt;
      IF ltm_rec.auth_bd_net_prc_am>0 THEN
        flinenetamt               :=ltm_rec.auth_bd_net_prc_am * ltm_rec.estmtd_qt;
      ELSE
        flinenetamt:=ltm_rec.rqst_bd_net_prc_am * ltm_rec.estmtd_qt;
      END IF;
      --dbms_output.put_line (' flinenetamt in case of PN : ' ||flinenetamt);

      --//// do not incl line's bdnet for deal margin calc if cost = 0
      IF bdocalcdealmargin ='Y' AND ltm_rec.prod_cost_am>0 THEN

        --dbms_output.put_line ('calc deal marning is Y');
        fcosttotal          := fcosttotal          + (ltm_rec.prod_cost_am * ltm_rec.estmtd_qt);
        fdealvalueformargin := fdealvalueformargin + flinenetamt;
        --dbms_output.put_line (' bdocalcdealmargin is Yes : fdealvalueformargin : ' ||fdealvalueformargin);
        --dbms_output.put_line (' bdocalcdealmargin is Yes : fcosttotal : ' ||fcosttotal);

      END IF;
    END IF;
    IF ltm_rec.auth_disc_ot_pc>0 THEN
      flinediscpct           :=ltm_rec.auth_disc_ot_pc;
    ELSE
      flinediscpct:=ltm_rec.rqst_disc_ot_pc;
    END IF;
    --dbms_output.put_line ('1.. flinediscpct ' || flinediscpct);
    IF festdealvalue          >0 THEN
      flinediscpctofdealvalue:=ROUND (flinenetamt/festdealvalue,8);
      --dbms_output.put_line (' flinediscpctofdealvalue : ' || flinediscpctofdealvalue);
    ELSE
      flinediscpctofdealvalue:=0;
    END IF;
    --          // add'l disc pct used for risk assessment
    --dbms_output.put_line (' calculating addl disc pct used for risk assessment ...start' );
    --dbms_output.put_line (' flinediscpctofdealvalue ' || flinediscpctofdealvalue);
    fdealdiscpct      := fdealdiscpct        + (flinediscpct * flinediscpctofdealvalue);
    flinevaluediscpct := ROUND((flinediscpct * flinediscpctofdealvalue), 8);
    --dbms_output.put_line (' fdealdiscpct : ' ||fdealdiscpct);
    --dbms_output.put_line (' flinevaluediscpct : ' ||flinevaluediscpct);
    --dbms_output.put_line (' calculating addl disc pct used for risk assessment ...end' );
    --// Calculate total discount value incl std disc off of list price - New tot disc calculation
    --dbms_output.put_line ('  Calculate total discount value incl std disc off of list price - New tot disc calculation --- ');
    IF (fLineExtListPrice      > 0 AND fDealTotListPrice > 0) THEN
      flinediscpctofdealvalue := ROUND(flineextlistprice / fdealtotlistprice, 8);
      fdiscamt                := flineextlistprice       - flinenetamt;
      flinetotdiscpct         := ROUND((fdiscamt         / flineextlistprice),8);
      fdealtotdiscpct         := fdealtotdiscpct         + (flinetotdiscpct * flinediscpctofdealvalue);
      --dbms_output.put_line ('flinediscpctofdealvalue : '|| flinediscpctofdealvalue);
      --dbms_output.put_line (' fdiscamt : ' || fdiscamt);
      --dbms_output.put_line (' flinetotdiscpct : '|| flinetotdiscpct);
      --dbms_output.put_line (' fdealtotdiscpct : ' ||fdealtotdiscpct);
    END IF;
    --dbms_output.put_line (' Calculate total discount value incl std disc off of list price - New tot disc calculation --- ends');
    --pending check..if required
    -- if (!drLine.IsCALC_CONSUMED_AMTNull())
    --                    ftotconsumedamt = ftotconsumedamt + drline.calc_consumed_amt;
    ftotnetamt           := ftotnetamt + flinenetamt;
    IF (bdocalcdealmargin ='Y' AND festdealvalue >0 AND fcosttotal >0) THEN
      fdealmarginpct     :=ROUND(((fdealvalueformargin - fcosttotal) / festdealvalue * 100), 8);
      --dbms_output.PUT_LINE (' fdealmarginpct : ' || fdealmarginpct);
    end if;

    --calculating calc_guidance_std_amt and  total_calc_guidance_std_amt
    l_calc_guidance_std_amt :=(flineextlistprice - (flineextlistprice * l_high_rslr_a_sd_pc)/100) ;
   l_total_calc_guidance_std_amt := l_total_calc_guidance_std_amt + l_calc_guidance_std_amt;

  END LOOP;

  --dbms_output.put_line ('final value fEstDealValue : ' || festdealvalue);
  fdealtotdiscpct := ROUND(fdealtotdiscpct * 100,8);
  --dbms_output.put_line (' fdealtotdiscpct : ' || fdealtotdiscpct);
  IF (fdealdiscpct > 999) THEN
    fDealDiscPct  := 999;
  END IF;
  IF (fdealtotdiscpct    > 999) THEN
    fdealtotdiscpct     := 999;
  elsif (fdealtotdiscpct < -99) THEN
    fDealTotDiscPct     := -99;
  END IF;
  IF (fdealmarginpct    > 999) THEN
    fdealmarginpct     := 999;
  elsif (fdealmarginpct < -99) THEN
    fDealMarginPct     := -99;
  END IF;
  IF (bdocalcdealmargin       ='Y' AND fcosttotal >0 ) THEN
    est_deal_value_margin_pct:=ROUND (fdealmarginpct,2);
    --dbms_output.put_line (' est_deal_value_margin_pct ' || est_deal_value_margin_pct);
  ELSE
    est_deal_value_margin_pct:=NULL;
  END IF;
  --dbms_output.put_line ('Final Results ...');
  --dbms_output.put_line (' EST_DEAL_VALUE_DISC_PCT ' || ROUND (fdealdiscpct,2));
  --dbms_output.put_line (' deal_tot_disc_pct : ' || ROUND(fdealtotdiscpct, 2));

   IF fdealtotlistprice>0  THEN
    fdealdiscpct:=round(fdealtotdiscpct - (100 * (fdealtotlistprice -l_total_calc_guidance_std_amt)/fdealtotlistprice),2);
   END IF;

  --dbms_output.put_line (' new est_deal_value_disc_pct ' || round (fdealdiscpct,2));

  --update deal
  UPDATE deal
  SET est_deal_value_disc_pct=ROUND (fdealdiscpct,2),
    deal_tot_disc_pct        =ROUND(fdealtotdiscpct, 2)
  WHERE bd_id                =i_bd_id;
  IF sql%rowcount            =0 THEN
    l_errors                :='Could not update Deal discount and Marging Percentage..please check the deal';
    inserterror_output_messages ( NULL,NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, c_m_type_error, g_deal_creation_guid, NULL,NULL,l_errors);
  END IF;
EXCEPTION
WHEN no_data_found THEN
  --dbms_output.put_line ('Deal details not found ');
  l_errors:='Error in calculating Deal Discounts and Margin Percentage. Deal details not found';
  --l_errors      := 'An error was encountered in SendQuote - ' || sqlcode || ' -ERROR- ' || sqlerrm || '. Error at Line : ' || dbms_utility.format_error_backtrace();
  --g_user_message:='An error was encountered in SendQuote';
  inserterror_output_messages ( NULL,NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, c_m_type_error, g_deal_creation_guid, NULL,NULL,l_errors);
end calculate_deal_disc_margin_pct;

PROCEDURE recalc_running_totals(
    i_bd_id NUMBER)
IS
/*
Modified by Harsh Shah 6-Dec-2013
Removed the Hold and Deny litem items from the calculation

*/
  fEstPrice           NUMBER (16,2):=0;
  flistprice          NUMBER (16,2):=0;
  fcostprice          NUMBER (16,2):=0;
  bdirtylinecost      VARCHAR2 (1) :='N';
  iqty                NUMBER (10)  :=0;
  iBundleQty          NUMBER (10)  :=0;
  pctprob             NUMBER (16,2):=0;
  festlinetotal       NUMBER (16,2):=0;
  flistpricelinetotal NUMBER (16,2):=0;
  fCostLineTotal      NUMBER (16,2):=0;
  fPLEstPrice         NUMBER (16,2):=0;
  fPLListPrice        NUMBER (16,2):=0;
  fplcostprice        NUMBER (16,2):=0;
  l_errors            VARCHAR2(4000);
  --  // risk management
  fPLEstKAmtTotal NUMBER (16,2):=0;
BEGIN
  fEstPrice  :=0;
  flistprice :=0;
  fCostPrice :=0;
  FOR reclinemain IN
  ( SELECT DISTINCT assoc_pl_cd
  FROM line_item
  WHERE bd_id       = i_bd_id
  AND line_type_cd IN ('PN','PL')
  ORDER BY assoc_pl_cd
  )
  LOOP
    FOR recline IN
    (SELECT li.line_nr,
      li.line_type_cd,
      li.line_prog_cd,
      li.assoc_pl_cd,
      li.prod_opt_cd,
      li.prod_gnrc_nr_tx,
      NVL(LI.SPECIAL_PAYMENT_AMT,0) SPECIAL_PAYMENT_AMT,
      NVL(LDSC.PROD_LST_PRC_AM,0) PROD_LST_PRC_AM,
      NVL(ldsc.auth_bd_net_prc_am,0) auth_bd_net_prc_am,
      NVL(ldsc.rqst_bd_net_prc_am,0) rqst_bd_net_prc_am,
      NVL(ldsc.auth_disc_ot_pc,0) auth_disc_ot_pc,
      NVL(ldsc.disc_as_pc,0) disc_as_pc,
      NVL(ldsc.prod_cost_am,0) prod_cost_am,
      NVL(li.estmtd_dlr_am,0) estmtd_dlr_am,
      NVL(li.estmtd_qt,0) estmtd_qt,
      NVL(ldsc.rqst_disc_ot_pc,0) rqst_disc_ot_pc,
      NVL(d.est_net_tot_am,0) est_net_tot_am,
      NVL(d.est_list_tot_am,0) est_list_tot_am,
      d.deal_type_cd
    FROM deal d,
      line_item li,
      line_disc_scale ldsc
    WHERE d.bd_id        =i_bd_id
    AND d.bd_id          =li.bd_id
    AND d.bd_id          =ldsc.bd_id
    AND li.bd_id         =ldsc.bd_id
    AND li.line_nr       =ldsc.line_nr
    AND li.line_type_cd IN ('PL','PN')
    AND li.assoc_pl_cd   =reclinemain.assoc_pl_cd
    AND LI.LINE_PROG_CD NOT IN ('H','D')
    AND ldsc.scale_id    =
      (SELECT MAX(NVL(ldsc2.scale_id,0))
      FROM line_disc_scale ldsc2
      WHERE ldsc2.bd_id=ldsc.bd_id
      AND ldsc2.bd_id  =li.bd_id
      AND ldsc2.line_nr=li.line_nr
      AND ldsc.line_nr =ldsc.line_nr
      )
    )
    LOOP
      ----dbms_output.put_line (recline.line_nr);
      --dbms_output.put_line (' line type code is : ' || recline.line_type_cd || ' and prod line : ' || recline.assoc_pl_cd);
      iqty :=recline.estmtd_qt;
      --initializing the values
      festprice               :=0;
      flistprice              :=0;
      fcostprice              :=0;
      IF (recline.line_type_cd ='PN' ) THEN
        IF recline.line_prog_cd='Y' THEN
          festprice           :=recline.auth_bd_net_prc_am;
          flistprice          :=recline.prod_lst_prc_am;
          fcostprice          :=recline.prod_cost_am;
          --dbms_output.put_line (' line prog cd is Y');
          --dbms_output.put_line ( 'festprice : ' ||festprice );
          --dbms_output.put_line ( ' flistprice  :' || flistprice );
          --dbms_output.put_line ( ' fcostprice  :' || fcostprice);
        elsif recline.line_prog_cd        ='N' THEN
          IF RECLINE.auth_bd_net_prc_am   >0 THEN
            festprice                    :=recline.auth_bd_net_prc_am;
          ELSIF RECLINE.RQST_BD_NET_PRC_AM>0 THEN
            festprice                    :=recline.rqst_bd_net_prc_am;
          elsif (recline.prod_lst_prc_am  >0 AND recline.disc_as_pc > 0 ) THEN
            fEstPrice                    :=RECLINE.PROD_LST_PRC_AM * (1 - (RECLINE.DISC_AS_PC) / 100);
          END IF;
          fListPrice:=recline.PROD_LST_PRC_AM;
          fcostprice:=recline.prod_cost_am;
        END IF;
        -- get pct prob
        --dbms_output.put_line (' GET PCT PROB BD_ID ' || I_BD_ID || ' recline.prod_gnrc_nr_tx ' || recline.prod_gnrc_nr_tx || ' recline.prod_opt_cd ' || recline.prod_opt_cd);
        BEGIN
          SELECT DECODE (pct_prob,NULL,1,pct_prob/100)
          INTO pctprob
          FROM rollout_schedule
          WHERE bd_id     =i_bd_id
          AND PROD_BASE_NR=recline.prod_gnrc_nr_tx
          AND prod_opt_cd =recline.prod_opt_cd
          AND line_nr     =recline.line_nr;
        EXCEPTION
        WHEN no_data_found THEN
          pctprob:=1;
          --pending.. add error handler
        WHEN OTHERS THEN
          --dbms_output.PUT_LINE ('RECALC ERROR');
          --dbms_output.PUT_LINE ('An error was encountered - ' || SQLCODE || ' -ERROR- ' || SQLERRM || '. Error at Line : ' || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE() );
          NULL;
        END;
        --dbms_output.PUT_LINE ('PCT PROB : ' || pctprob);
        -- calculate the total amount for the line item
        festlinetotal       := iqty * festprice * pctprob;
        flistpricelinetotal := iqty * flistprice * pctprob;
        fcostlinetotal      := iqty * fcostprice * pctprob;
        ----dbms_output.put_line (' festlinetotal : ' ||festlinetotal);
        ----dbms_output.put_line ('flistpricelinetotal : '||  flistpricelinetotal);
        ----dbms_output.put_line ('fcostlinetotal  : '||  fcostlinetotal);
        --add the line item total to the deal PL total amount
        fplcostprice := fplcostprice + fcostlinetotal;
        fpllistprice := fpllistprice + flistpricelinetotal;
        fplestprice  := fplestprice  + festlinetotal;

        --dbms_output.put_line (' fplcostprice : ' ||fplcostprice);
        --dbms_output.put_line ('fpllistprice : '|| fpllistprice);
        --dbms_output.put_line ('fPLEstPrice  : '|| fplestprice);


        --addplto deal_pl
        /*
        UPDATE deal_pl
        SET
        PL_ESTMD_TOT_AM =fplestprice,
        pl_est_list_tot_am=fpllistprice,
        PL_EST_COST_TOT_AM=fPLCostPrice,
        geo_change_fl     ='N'
        WHERE bd_id         =i_bd_id
        AND prod_line_cd    =recline.assoc_pl_cd;
        */
        UPDATE deal_pl
        SET pl_est_list_tot_am=fpllistprice,
          PL_EST_COST_TOT_AM  =fPLCostPrice,
          geo_change_fl       ='N'
        WHERE bd_id           =i_bd_id
        AND prod_line_cd      =recline.assoc_pl_cd;
        --dbms_output.put_line (' deal pl updated ' || sql%rowcount);
      elsif ( recline.line_type_cd='PL' OR recline.line_type_cd='PF' AND (recline.line_prog_cd <>'D' AND recline.line_prog_cd<>'H' ) ) THEN
        --dbms_output.put_line (' line type code is : ' || recline.line_type_cd);
        IF recline.deal_type_cd=2 THEN
          fPLEstKAmtTotal     := fPLEstKAmtTotal + RECLINE.SPECIAL_PAYMENT_AMT;
        ELSE
          fPLEstKAmtTotal := fPLEstKAmtTotal + (RECLINE.ESTMTD_DLR_AM * 1000);
        END IF;
        --dbms_output.put_line (' fPLEstKAmtTotal : ' || fplestkamttotal);
        UPDATE deal_pl
        SET PL_ESTMD_TOT_AM=fPLEstKAmtTotal,
          --pl_est_list_tot_am=fpllistprice,
          --PL_EST_COST_TOT_AM=fPLCostPrice,
          geo_change_fl ='N'
        WHERE bd_id     =i_bd_id
        AND prod_line_cd=recline.assoc_pl_cd;
        --dbms_output.put_line ('Deal pl updated ' || sql%rowcount);
        fplestkamttotal:=0;
      END IF;
      --Commented to resolve the issue of total not being calculated properly
      --fplcostprice := 0;
      --fpllistprice := 0;
      --fplestprice  := 0;
    END LOOP;
    --initializing teh values for the next row
    fplcostprice := 0;
    fpllistprice := 0;
    fplestprice  := 0;
  END LOOP;

  ------------------------------------
  --for bundle lines
  --Query modified /replaced by harsh Shah 7-Dec-2013
  -- to resolve the issue of wrong PL Totals calculation reported by ovidiue - CR 40038
  FOR bdline IN
  (
  SELECT bline.line_nr,
    BLINE.ASSOC_PL ASSOC_PL_CD,
    bline.PROD_OPT_CD,
    bline.prod_gnrc_nr_tx,
    bline.item_prog_cd,
    BLINE.QTY,
    --NVL(li.special_payment_amt,0) special_payment_amt,
    NVL(bline.list_price,0) list_price,
    NVL(bline.auth_bd_net_prc_am,0) auth_bd_net_prc_am,
    NVL(bline.rqst_bd_net_prc_am,0) rqst_bd_net_prc_am,
    NVL(bline.auth_disc_ot_pc,0) auth_disc_ot_pc,
    NVL(bline.disc_as_pct,0) disc_as_pc,
    NVL(bline.prod_cost_am,0) prod_cost_am,
    --NVL(bline.estmtd_dlr_am,0) estmtd_dlr_am,
    --NVL(li.estmtd_qt,0) estmtd_qt,
    NVL(bline.qty,0) estmtd_qt,
    NVL(bline.rqst_disc_ot_pc,0) rqst_disc_ot_pc
  FROM
    BUNDLE_LINE BLINE
  WHERE BLINE.BD_ID            =I_BD_ID
  and bline.item_prog_cd not in ('H','D')
  order by bline.assoc_pl

  )
  LOOP
    festprice          :=0;
    flistprice         :=0;
    fcostprice         :=0;
    iqty               :=1;
    IF bdline.estmtd_qt >1 THEN
      iQty             :=bdline.ESTMTD_QT;
    END IF;
    -- get pct prob
    BEGIN
      SELECT DECODE (pct_prob,NULL,1,pct_prob/100)
      INTO pctprob
      FROM rollout_schedule
      WHERE bd_id     =i_bd_id
      AND PROD_BASE_NR=bdline.prod_gnrc_nr_tx
      AND prod_opt_cd =bdline.prod_opt_cd
      AND line_nr     =bdline.line_Nr;
    EXCEPTION
    WHEN no_data_found THEN
      pctprob:=1;
      --pending.. add error handler
    END;
    IF bdline.item_prog_cd         ='Y' THEN
      IF bdline.auth_bd_net_prc_am > 0 THEN
        fEstPrice                 :=bdline.AUTH_BD_NET_PRC_AM;
      END IF;
      IF bdline.list_price>0 THEN
        flistprice       :=bdline.list_price;
      END IF;
      IF bdline.prod_cost_am >0 THEN
        fCostPrice          :=bdline.PROD_COST_AM;
      END IF;
    elsif bdline.item_prog_cd        ='N' THEN
      IF bdline.auth_bd_net_prc_am   >0 THEN
        fEstPrice                   :=bdline.AUTH_BD_NET_PRC_AM;
      elsif bdline.rqst_bd_net_prc_am>0 THEN
        fEstPrice                   :=bdline.RQST_BD_NET_PRC_AM;
      elsif bdline.list_price        >0 AND bdline.disc_as_pc >0 THEN
        fEstPrice                   :=bdline.LIST_PRICE * (1 - (bdline.DISC_AS_PC) / 100);
      END IF;
      IF bdline.list_price>0 THEN
        flistprice       :=bdline.list_price;
      END IF;
      IF bdline.prod_cost_am >0 THEN
        fCostPrice          :=BDLINE.PROD_COST_AM;
      END IF;
    END IF;
    ibundleqty:=bdline.qty;

    --calculate the bundle line total amount
    --festlinetotal       := iqty * pctprob * festprice * ibundleqty;
    --flistpricelinetotal := iqty * pctprob * flistprice * ibundleqty;
    --fCostLineTotal      := iQty * pctProb * fCostPrice * iBundleQty;

    --by Harsh Shah 7-Dec-2013 , to rectify the calculation as the value was getting doubled.

    festlinetotal       :=  pctprob * festprice * ibundleqty;
    flistpricelinetotal :=  pctprob * flistprice * ibundleqty;
    fCostLineTotal      :=  pctProb * fCostPrice * iBundleQty;

    -- // add the line total to the deal PL total
    fplestprice  := fplestprice  + festlinetotal;
    fpllistprice := fpllistprice + flistpricelinetotal;
    fplcostprice := fplcostprice + fcostlinetotal;

    ----dbms_output.PUT_LINE ('PL based values : .... Start : PL code : ' || bdline.assoc_pl_cd);

    ----dbms_output.PUT_LINE ('fplestprice :' || fplestprice);
    ----dbms_output.PUT_LINE ('fpllistprice :' || fpllistprice);
    ----dbms_output.PUT_LINE ('fplcostprice :' || fplcostprice);

    ----dbms_output.PUT_LINE ('PL based values .... End ');

    --dbms_output.PUT_LINE ('  Product  : ' || BDLINE.PROD_GNRC_NR_TX || '  PROD LINE  :' || BDLINE. ASSOC_PL_CD || ' fCostPrice ' || FCOSTPRICE || '  flistprice ' || FLISTPRICE || '  fEstPrice : ' || FESTPRICE  || ' Bundle Qty : ' || IBUNDLEQTY || ' pct prob ' || PCTPROB  || '  festlinetotal ' || FESTLINETOTAL   );

    --PL_ESTMD_TOT_AM =fplestprice,

    UPDATE deal_pl
    SET pl_est_list_tot_am= fpllistprice,
      PL_EST_COST_TOT_AM  = fPLCostPrice,
      geo_change_fl       ='N',
      PL_ESTMD_TOT_AM =fplestprice
    WHERE bd_id           =i_bd_id
    AND prod_line_cd      =bdline.assoc_pl_cd;

    --dbms_output.put_line (' deal pl for bundle lines updated ' || sql%rowcount);
    --fplcostprice := 0;
    --fpllistprice := 0;
    --fplestprice  := 0;
  END LOOP;

  --dbms_output.put_line (' final output----');
  --dbms_output.put_line (' fplcostprice : ' ||fplcostprice);
  --dbms_output.put_line ('fpllistprice : '|| fpllistprice);
  --dbms_output.put_line ('fPLEstPrice  : '|| fplestprice);

  --update deal table with all the estimated totals
  UPDATE deal d
  SET
    (
      d.est_deal_value,
      d.est_net_tot_am,
      d.est_list_tot_am,
      d.est_tot_k_am
    )
    =
    (SELECT SUM (dp.pl_estmd_tot_am) pl_estmd_tot_am ,
      SUM (dp.pl_estmd_tot_am) pl_estmd_tot_am,
      SUM(dp.pl_est_list_tot_am)pl_est_list_tot_am,
      ROUND(SUM(dp.pl_estmd_tot_am/1000)) est_tot_k_am
    FROM deal_pl dp
    WHERE dp.bd_id=d.bd_id
    )
  WHERE d.bd_id=i_bd_id;
EXCEPTION
WHEN no_data_found THEN
  --dbms_output.put_line ('Error in performing Deal PL Totals. Deal details not found');
  l_errors:='Error in performing Deal PL Totals. Deal details not found ';
  --l_errors      := 'An error was encountered in SendQuote - ' || sqlcode || ' -ERROR- ' || sqlerrm || '. Error at Line : ' || dbms_utility.format_error_backtrace();
  --g_user_message:='An error was encountered in SendQuote';
  inserterror_output_messages ( NULL,NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, c_m_type_error, g_deal_creation_guid, NULL,NULL,l_errors);
END recalc_running_totals;
FUNCTION check_high_risk_PLPF(
    i_bd_id NUMBER)
  RETURN VARCHAR2
IS
  l_reccount NUMBER(10):=0;
BEGIN
  --dbms_output.put_line ('Checking...High Risk SKU');
  SELECT COUNT(*)
  INTO l_reccount
  FROM
    (SELECT li.assoc_pl_cd,
      ldsc.auth_disc_ot_pc,
      ldsc.rqst_disc_ot_pc,
      DECODE (ldsc.auth_disc_ot_pc,NULL,rqst_disc_ot_pc,ldsc.auth_disc_ot_pc) flinediscpct,
      plr.*
    FROM line_item li,
      line_disc_scale ldsc,
      pl_region_max_disc plr,
      deal d,
      bus_model bm
    WHERE li.bd_id        =i_bd_id
    AND d.bd_id           =li.bd_id
    AND d.bd_id           =ldsc.bd_id
    AND d.control_cntry_cd=bm.country_cd
    AND d.bus_model_cd    =bm.bus_model_cd
    AND bm.tenantid =nvl(d.tenantid_data_cd,'HPE') --  AND bm.tenantid =nvl(d.tenantid,'HPE')---Added for SMO Changes ( modified tenantid column with tenantid_data_cd column for Federal project)
    AND li.bd_id          =ldsc.bd_id
    AND li.line_nr        =ldsc.line_nr
    AND ldsc.scale_id     =
      (SELECT MAX(NVL(ldsc2.scale_id,0))
      FROM line_disc_scale ldsc2
      WHERE ldsc2.bd_id=ldsc.bd_id
      AND ldsc2.bd_id  =li.bd_id
      AND ldsc2.line_nr=li.line_nr
      AND ldsc.line_nr =ldsc.line_nr
      )
    AND plr.prod_line_cd                                                        =li.assoc_pl_cd
    AND plr.indirect_fl                                                         =bm.get_std_disc_fl
    AND plr.region_cd                                                           =d.region
    AND DECODE (ldsc.auth_disc_ot_pc,NULL,rqst_disc_ot_pc,ldsc.auth_disc_ot_pc) >plr.MAX_ALLOW_DISC_PCT
    UNION
    SELECT li.assoc_pl_cd,
      ldsc.auth_disc_ot_pc,
      ldsc.rqst_disc_ot_pc,
      DECODE (ldsc.auth_disc_ot_pc,NULL,rqst_disc_ot_pc,ldsc.auth_disc_ot_pc) flinediscpct,
      plr.*
    FROM line_item li,
      line_disc_scale ldsc,
      pl_region_max_disc plr,
      deal d,
      bus_model bm
    WHERE li.bd_id        =i_bd_id
    AND d.bd_id           =li.bd_id
    AND d.bd_id           =ldsc.bd_id
    AND d.control_cntry_cd=bm.country_cd
    AND d.bus_model_cd    =bm.bus_model_cd
     AND bm.tenantid = nvl(d.tenantid_data_cd,'HPE')--AND bm.tenantid = nvl(d.tenantid,'HPE')---Added for SMO Changes(modified tenantid  column with tenantid_data_cd column)
    AND li.bd_id          =ldsc.bd_id
    AND li.line_nr        =ldsc.line_nr
    AND ldsc.scale_id     =
      (SELECT MAX(NVL(ldsc2.scale_id,0))
      FROM line_disc_scale ldsc2
      WHERE ldsc2.bd_id=ldsc.bd_id
      AND ldsc2.bd_id  =li.bd_id
      AND ldsc2.line_nr=li.line_nr
      AND ldsc.line_nr =ldsc.line_nr
      )
    AND plr.prod_line_cd                                                        =li.assoc_pl_cd
    AND plr.indirect_fl                                                         ='*'
    AND plr.region_cd                                                           =d.region
    AND DECODE (ldsc.auth_disc_ot_pc,NULL,rqst_disc_ot_pc,ldsc.auth_disc_ot_pc) > plr.MAX_ALLOW_DISC_PCT
    UNION
    SELECT li.assoc_pl_cd,
      ldsc.auth_disc_ot_pc,
      ldsc.rqst_disc_ot_pc,
      DECODE (ldsc.auth_disc_ot_pc,NULL,rqst_disc_ot_pc,ldsc.auth_disc_ot_pc) flinediscpct,
      plr.*
    FROM line_item li,
      line_disc_scale ldsc,
      pl_region_max_disc plr,
      deal d,
      bus_model bm
    WHERE li.bd_id        =i_bd_id
    AND d.bd_id           =li.bd_id
    AND d.bd_id           =ldsc.bd_id
    AND d.control_cntry_cd=bm.country_cd
    AND d.bus_model_cd    =bm.bus_model_cd
    AND bm.tenantid=nvl(d.tenantid_data_cd,'HPE')--  AND bm.tenantid=nvl(d.tenantid,'HPE')---Added for SMO Changes(Modified column tenantid with tenantid_data_cd for Federal project)
    AND li.bd_id          =ldsc.bd_id
    AND li.line_nr        =ldsc.line_nr
    AND ldsc.scale_id     =
      (SELECT MAX(NVL(ldsc2.scale_id,0))
      FROM line_disc_scale ldsc2
      WHERE ldsc2.bd_id=ldsc.bd_id
      AND ldsc2.bd_id  =li.bd_id
      AND ldsc2.line_nr=li.line_nr
      AND ldsc.line_nr =ldsc.line_nr
      )
    AND plr.prod_line_cd                                                        =li.assoc_pl_cd
    AND plr.indirect_fl                                                         =bm.get_std_disc_fl
    AND plr.region_cd                                                           ='*'
    AND DECODE (ldsc.auth_disc_ot_pc,NULL,rqst_disc_ot_pc,ldsc.auth_disc_ot_pc) >plr.MAX_ALLOW_DISC_PCT
    UNION
    SELECT li.assoc_pl_cd,
      ldsc.auth_disc_ot_pc,
      ldsc.rqst_disc_ot_pc,
      DECODE (ldsc.auth_disc_ot_pc,NULL,rqst_disc_ot_pc,ldsc.auth_disc_ot_pc) flinediscpct,
      plr.*
    FROM line_item li,
      line_disc_scale ldsc,
      pl_region_max_disc plr,
      deal d,
      bus_model bm
    WHERE li.bd_id        =i_bd_id
    AND d.bd_id           =li.bd_id
    AND d.bd_id           =ldsc.bd_id
    AND d.control_cntry_cd=bm.country_cd
    AND d.bus_model_cd    =bm.bus_model_cd
     AND bm.tenantid=nvl(d.tenantid_data_cd,'HPE')-- AND bm.tenantid=nvl(d.tenantid,'HPE')---Added for SMO Changes (Modified tenantid column with tenantid_data_cd column for Federal Project)
    AND li.bd_id          =ldsc.bd_id
    AND li.line_nr        =ldsc.line_nr
    AND ldsc.scale_id     =
      (SELECT MAX(NVL(ldsc2.scale_id,0))
      FROM line_disc_scale ldsc2
      WHERE ldsc2.bd_id=ldsc.bd_id
      AND ldsc2.bd_id  =li.bd_id
      AND ldsc2.line_nr=li.line_nr
      AND ldsc.line_nr =ldsc.line_nr
      )
    AND plr.prod_line_cd                                                        =li.assoc_pl_cd
    AND plr.indirect_fl                                                         ='*'
    AND plr.region_cd                                                           ='*'
    AND DECODE (ldsc.auth_disc_ot_pc,NULL,rqst_disc_ot_pc,ldsc.auth_disc_ot_pc) >plr.MAX_ALLOW_DISC_PCT
    UNION
    SELECT li.assoc_pl_cd,
      ldsc.auth_disc_ot_pc,
      ldsc.rqst_disc_ot_pc,
      DECODE (ldsc.auth_disc_ot_pc,NULL,rqst_disc_ot_pc,ldsc.auth_disc_ot_pc) flinediscpct,
      plr.*
    FROM line_item li,
      line_disc_scale ldsc,
      pl_region_max_disc plr,
      deal d,
      bus_model bm
    WHERE li.bd_id        =i_bd_id
    AND d.bd_id           =li.bd_id
    AND d.bd_id           =ldsc.bd_id
    AND d.control_cntry_cd=bm.country_cd
    AND d.bus_model_cd    =bm.bus_model_cd
    AND bm.tenantid=nvl(d.tenantid_data_cd,'HPE')-- AND bm.tenantid=nvl(d.tenantid,'HPE')---Added for SMO Changes (Modified tenantid column with tenantid_data_cd column for Federal Project)
    AND li.bd_id          =ldsc.bd_id
    AND li.line_nr        =ldsc.line_nr
    AND ldsc.scale_id     =
      (SELECT MAX(NVL(ldsc2.scale_id,0))
      FROM line_disc_scale ldsc2
      WHERE ldsc2.bd_id=ldsc.bd_id
      AND ldsc2.bd_id  =li.bd_id
      AND ldsc2.line_nr=li.line_nr
      AND ldsc.line_nr =ldsc.line_nr
      )
    AND plr.prod_line_cd                                                        ='*'
    AND plr.indirect_fl                                                         =bm.get_std_disc_fl
    AND plr.region_cd                                                           =d.region
    AND DECODE (ldsc.auth_disc_ot_pc,NULL,rqst_disc_ot_pc,ldsc.auth_disc_ot_pc) >plr.max_allow_disc_pct
    UNION
    SELECT li.assoc_pl_cd,
      ldsc.auth_disc_ot_pc,
      ldsc.rqst_disc_ot_pc,
      DECODE (ldsc.auth_disc_ot_pc,NULL,rqst_disc_ot_pc,ldsc.auth_disc_ot_pc) flinediscpct,
      plr.*
    FROM line_item li,
      line_disc_scale ldsc,
      pl_region_max_disc plr,
      deal d,
      bus_model bm
    WHERE li.bd_id        =i_bd_id
    AND d.bd_id           =li.bd_id
    AND d.bd_id           =ldsc.bd_id
    AND d.control_cntry_cd=bm.country_cd
    AND d.bus_model_cd    =bm.bus_model_cd
   AND bm.tenantid=nvl(d.tenantid_data_cd,'HPE')-- AND bm.tenantid=nvl(d.tenantid,'HPE')---Added for SMO Changes (Modified tenantid column with tenantid_data_cd column for Federal Project)
    AND li.bd_id          =ldsc.bd_id
    AND li.line_nr        =ldsc.line_nr
    AND ldsc.scale_id     =
      (SELECT MAX(NVL(ldsc2.scale_id,0))
      FROM line_disc_scale ldsc2
      WHERE ldsc2.bd_id=ldsc.bd_id
      AND ldsc2.bd_id  =li.bd_id
      AND ldsc2.line_nr=li.line_nr
      AND ldsc.line_nr =ldsc.line_nr
      )
    AND plr.prod_line_cd                                                        ='*'
    AND plr.indirect_fl                                                         ='*'
    AND plr.region_cd                                                           =d.region
    AND DECODE (ldsc.auth_disc_ot_pc,NULL,rqst_disc_ot_pc,ldsc.auth_disc_ot_pc) >plr.max_allow_disc_pct
    UNION
    SELECT li.assoc_pl_cd,
      ldsc.auth_disc_ot_pc,
      ldsc.rqst_disc_ot_pc,
      DECODE (ldsc.auth_disc_ot_pc,NULL,rqst_disc_ot_pc,ldsc.auth_disc_ot_pc) flinediscpct,
      plr.*
    FROM line_item li,
      line_disc_scale ldsc,
      pl_region_max_disc plr,
      deal d,
      bus_model bm
    WHERE li.bd_id        =i_bd_id
    AND d.bd_id           =li.bd_id
    AND d.bd_id           =ldsc.bd_id
    AND d.control_cntry_cd=bm.country_cd
    AND d.bus_model_cd    =bm.bus_model_cd
     AND bm.tenantid=nvl(d.tenantid_data_cd,'HPE')-- AND bm.tenantid=nvl(d.tenantid,'HPE')---Added for SMO Changes (Modified tenantid column with tenantid_data_cd column for Federal Project)
      AND li.bd_id          =ldsc.bd_id
    AND li.line_nr        =ldsc.line_nr
    AND ldsc.scale_id     =
      (SELECT MAX(NVL(ldsc2.scale_id,0))
      FROM line_disc_scale ldsc2
      WHERE ldsc2.bd_id=ldsc.bd_id
      AND ldsc2.bd_id  =li.bd_id
      AND ldsc2.line_nr=li.line_nr
      AND ldsc.line_nr =ldsc.line_nr
      )
    AND plr.prod_line_cd                                                        ='*'
    AND plr.indirect_fl                                                         =bm.get_std_disc_fl
    AND plr.region_cd                                                           ='*'
    AND DECODE (ldsc.auth_disc_ot_pc,NULL,rqst_disc_ot_pc,ldsc.auth_disc_ot_pc) >plr.max_allow_disc_pct
    UNION
    SELECT li.assoc_pl_cd,
      ldsc.auth_disc_ot_pc,
      ldsc.rqst_disc_ot_pc,
      DECODE (ldsc.auth_disc_ot_pc,NULL,rqst_disc_ot_pc,ldsc.auth_disc_ot_pc) flinediscpct,
      plr.*
    FROM line_item li,
      line_disc_scale ldsc,
      pl_region_max_disc plr,
      deal d,
      bus_model bm
    WHERE li.bd_id        =i_bd_id
    AND d.bd_id           =li.bd_id
    AND d.bd_id           =ldsc.bd_id
    AND d.control_cntry_cd=bm.country_cd
    AND d.bus_model_cd    =bm.bus_model_cd
     AND bm.tenantid=nvl(d.tenantid_data_cd,'HPE')-- AND bm.tenantid=nvl(d.tenantid,'HPE')---Added for SMO Changes (Modified tenantid column with tenantid_data_cd column for Federal Project)
     AND li.bd_id          =ldsc.bd_id
    AND li.line_nr        =ldsc.line_nr
    AND ldsc.scale_id     =
      (SELECT MAX(NVL(ldsc2.scale_id,0))
      FROM line_disc_scale ldsc2
      WHERE ldsc2.bd_id=ldsc.bd_id
      AND ldsc2.bd_id  =li.bd_id
      AND ldsc2.line_nr=li.line_nr
      AND ldsc.line_nr =ldsc.line_nr
      )
    AND plr.prod_line_cd                                                        ='*'
    AND plr.indirect_fl                                                         ='*'
    AND plr.region_cd                                                           ='*'
    AND DECODE (ldsc.auth_disc_ot_pc,NULL,rqst_disc_ot_pc,ldsc.auth_disc_ot_pc) >plr.max_allow_disc_pct
    );
  IF l_reccount>0 THEN
    --dbms_output.put_line ('High Risk SKU');
    --dbms_output.put_line ('Checking...High Risk SKU...End');
    RETURN 'Y';
  ELSE
    --dbms_output.put_line ('Low Risk SKU');
    --dbms_output.put_line ('Checking...High Risk SKU...End');
    RETURN 'N';
  END IF;
END CHECK_HIGH_RISK_PLPF;
FUNCTION CHECK_LINE_ITEM_MARGIN_RISK(
    I_BD_ID NUMBER)
  RETURN VARCHAR2
IS
  L_RECCOUNT NUMBER(10):=0;
BEGIN
  --I_BD_ID:=90323035;
  --dbms_output.PUT_LINE ('Checking LINE_ITEM_MARGIN_RISK');
  SELECT COUNT(*)
  INTO l_reccount
  FROM
    (SELECT LI.ASSOC_PL_CD,
      DECODE (AUTH_MARGIN_PCT,0,RQST_MARGIN_PCT,NULL,RQST_MARGIN_PCT,AUTH_MARGIN_PCT) FAUTHMARGINPCT ,
      plr.MIN_MARGIN_PCT
    FROM line_item li,
      line_disc_scale ldsc,
      pl_region_max_disc plr,
      deal d,
      bus_model bm
    WHERE li.bd_id        =I_BD_ID
    AND d.bd_id           =li.bd_id
    AND d.bd_id           =ldsc.bd_id
    AND d.control_cntry_cd=bm.country_cd
    AND d.bus_model_cd    =bm.bus_model_cd
    AND li.bd_id          =ldsc.bd_id
    AND li.line_nr        =ldsc.line_nr
    AND bm.tenantid=nvl(d.tenantid_data_cd,'HPE')-- AND bm.tenantid=nvl(d.tenantid,'HPE')---Added for SMO Changes (Modified tenantid column with tenantid_data_cd column for Federal Project)
     AND ldsc.scale_id     =
      (SELECT MAX(NVL(ldsc2.scale_id,0))
      FROM line_disc_scale ldsc2
      WHERE ldsc2.bd_id=ldsc.bd_id
      AND ldsc2.bd_id  =li.bd_id
      AND ldsc2.line_nr=li.line_nr
      AND ldsc.line_nr =ldsc.line_nr
      )
    AND plr.prod_line_cd     =li.assoc_pl_cd
    AND plr.indirect_fl      =bm.get_std_disc_fl
    AND plr.region_cd        =d.region
    AND LI.LINE_TYPE_CD     IN ('PN','BD')
    AND LI.LINE_PROG_CD NOT IN ('D','H')
    AND LDSC.PROD_COST_AM    >0
    AND LDSC.COST_AVAIL_FL   ='Y'
    UNION
    SELECT LI.ASSOC_PL_CD,
      DECODE (AUTH_MARGIN_PCT,0,RQST_MARGIN_PCT,NULL,RQST_MARGIN_PCT,AUTH_MARGIN_PCT) FAUTHMARGINPCT ,
      plr.MIN_MARGIN_PCT
    FROM line_item li,
      line_disc_scale ldsc,
      pl_region_max_disc plr,
      deal d,
      bus_model bm
    WHERE li.bd_id        =I_BD_ID
    AND d.bd_id           =li.bd_id
    AND d.bd_id           =ldsc.bd_id
    AND d.control_cntry_cd=bm.country_cd
    AND d.bus_model_cd    =bm.bus_model_cd
    AND bm.tenantid=nvl(d.tenantid_data_cd,'HPE')-- AND bm.tenantid=nvl(d.tenantid,'HPE')---Added for SMO Changes (Modified tenantid column with tenantid_data_cd column for Federal Project)
    AND li.bd_id          =ldsc.bd_id
    AND li.line_nr        =ldsc.line_nr
    AND ldsc.scale_id     =
      (SELECT MAX(NVL(ldsc2.scale_id,0))
      FROM line_disc_scale ldsc2
      WHERE ldsc2.bd_id=ldsc.bd_id
      AND ldsc2.bd_id  =li.bd_id
      AND ldsc2.line_nr=li.line_nr
      AND ldsc.line_nr =ldsc.line_nr
      )
    AND plr.prod_line_cd     =li.assoc_pl_cd
    AND plr.indirect_fl      ='*'
    AND plr.region_cd        =d.region
    AND LI.LINE_TYPE_CD     IN ('PN','BD')
    AND LI.LINE_PROG_CD NOT IN ('D','H')
    AND LDSC.PROD_COST_AM    >0
    AND LDSC.COST_AVAIL_FL   ='Y'
    UNION
    SELECT LI.ASSOC_PL_CD,
      DECODE (AUTH_MARGIN_PCT,0,RQST_MARGIN_PCT,NULL,RQST_MARGIN_PCT,AUTH_MARGIN_PCT) FAUTHMARGINPCT ,
      plr.MIN_MARGIN_PCT
    FROM line_item li,
      line_disc_scale ldsc,
      pl_region_max_disc plr,
      deal d,
      bus_model bm
    WHERE li.bd_id        =I_BD_ID
    AND d.bd_id           =li.bd_id
    AND d.bd_id           =ldsc.bd_id
    AND d.control_cntry_cd=bm.country_cd
    AND d.bus_model_cd    =bm.bus_model_cd
    AND bm.tenantid=nvl(d.tenantid_data_cd,'HPE')-- AND bm.tenantid=nvl(d.tenantid,'HPE')---Added for SMO Changes (Modified tenantid column with tenantid_data_cd column for Federal Project)
    AND li.bd_id          =ldsc.bd_id
    AND li.line_nr        =ldsc.line_nr
    AND ldsc.scale_id     =
      (SELECT MAX(NVL(ldsc2.scale_id,0))
      FROM line_disc_scale ldsc2
      WHERE ldsc2.bd_id=ldsc.bd_id
      AND ldsc2.bd_id  =li.bd_id
      AND ldsc2.line_nr=li.line_nr
      AND ldsc.line_nr =ldsc.line_nr
      )
    AND plr.prod_line_cd     =li.assoc_pl_cd
    AND plr.indirect_fl      =bm.get_std_disc_fl
    AND PLR.REGION_CD        ='*'
    AND LI.LINE_TYPE_CD     IN ('PN','BD')
    AND LI.LINE_PROG_CD NOT IN ('D','H')
    AND LDSC.PROD_COST_AM    >0
    AND LDSC.COST_AVAIL_FL   ='Y'
    UNION
    SELECT LI.ASSOC_PL_CD,
      DECODE (AUTH_MARGIN_PCT,0,RQST_MARGIN_PCT,NULL,RQST_MARGIN_PCT,AUTH_MARGIN_PCT) FAUTHMARGINPCT ,
      plr.MIN_MARGIN_PCT
    FROM line_item li,
      line_disc_scale ldsc,
      pl_region_max_disc plr,
      deal d,
      bus_model bm
    WHERE li.bd_id        =I_BD_ID
    AND d.bd_id           =li.bd_id
    AND d.bd_id           =ldsc.bd_id
    AND d.control_cntry_cd=bm.country_cd
    AND d.bus_model_cd    =bm.bus_model_cd
    AND bm.tenantid=nvl(d.tenantid_data_cd,'HPE')-- AND bm.tenantid=nvl(d.tenantid,'HPE')---Added for SMO Changes (Modified tenantid column with tenantid_data_cd column for Federal Project)
    AND li.bd_id          =ldsc.bd_id
    AND li.line_nr        =ldsc.line_nr
    AND ldsc.scale_id     =
      (SELECT MAX(NVL(ldsc2.scale_id,0))
      FROM line_disc_scale ldsc2
      WHERE ldsc2.bd_id=ldsc.bd_id
      AND ldsc2.bd_id  =li.bd_id
      AND ldsc2.line_nr=li.line_nr
      AND ldsc.line_nr =ldsc.line_nr
      )
    AND plr.prod_line_cd     =li.assoc_pl_cd
    AND plr.indirect_fl      ='*'
    AND plr.region_cd        ='*'
    AND LI.LINE_TYPE_CD     IN ('PN','BD')
    AND LI.LINE_PROG_CD NOT IN ('D','H')
    AND LDSC.PROD_COST_AM    >0
    AND LDSC.COST_AVAIL_FL   ='Y'
    UNION
    SELECT LI.ASSOC_PL_CD,
      DECODE (AUTH_MARGIN_PCT,0,RQST_MARGIN_PCT,NULL,RQST_MARGIN_PCT,AUTH_MARGIN_PCT) FAUTHMARGINPCT ,
      plr.MIN_MARGIN_PCT
    FROM line_item li,
      line_disc_scale ldsc,
      pl_region_max_disc plr,
      deal d,
      bus_model bm
    WHERE li.bd_id        =I_BD_ID
    AND d.bd_id           =li.bd_id
    AND d.bd_id           =ldsc.bd_id
    AND d.control_cntry_cd=bm.country_cd
    AND d.bus_model_cd    =bm.bus_model_cd
    AND bm.tenantid=nvl(d.tenantid_data_cd,'HPE')-- AND bm.tenantid=nvl(d.tenantid,'HPE')---Added for SMO Changes (Modified tenantid column with tenantid_data_cd column for Federal Project)
    AND li.bd_id          =ldsc.bd_id
    AND li.line_nr        =ldsc.line_nr
    AND ldsc.scale_id     =
      (SELECT MAX(NVL(ldsc2.scale_id,0))
      FROM line_disc_scale ldsc2
      WHERE ldsc2.bd_id=ldsc.bd_id
      AND ldsc2.bd_id  =li.bd_id
      AND ldsc2.line_nr=li.line_nr
      AND ldsc.line_nr =ldsc.line_nr
      )
    AND plr.prod_line_cd     ='*'
    AND plr.indirect_fl      =bm.get_std_disc_fl
    AND plr.region_cd        =d.region
    AND LI.LINE_TYPE_CD     IN ('PN','BD')
    AND LI.LINE_PROG_CD NOT IN ('D','H')
    AND LDSC.PROD_COST_AM    >0
    AND LDSC.COST_AVAIL_FL   ='Y'
    UNION
    SELECT LI.ASSOC_PL_CD,
      DECODE (AUTH_MARGIN_PCT,0,RQST_MARGIN_PCT,NULL,RQST_MARGIN_PCT,AUTH_MARGIN_PCT) FAUTHMARGINPCT ,
      plr.MIN_MARGIN_PCT
    FROM line_item li,
      line_disc_scale ldsc,
      pl_region_max_disc plr,
      deal d,
      bus_model bm
    WHERE li.bd_id        =I_BD_ID
    AND d.bd_id           =li.bd_id
    AND d.bd_id           =ldsc.bd_id
    AND d.control_cntry_cd=bm.country_cd
    AND d.bus_model_cd    =bm.bus_model_cd
    AND bm.tenantid=nvl(d.tenantid_data_cd,'HPE')-- AND bm.tenantid=nvl(d.tenantid,'HPE')---Added for SMO Changes (Modified tenantid column with tenantid_data_cd column for Federal Project)
    AND li.bd_id          =ldsc.bd_id
    AND li.line_nr        =ldsc.line_nr
    AND ldsc.scale_id     =
      (SELECT MAX(NVL(ldsc2.scale_id,0))
      FROM line_disc_scale ldsc2
      WHERE ldsc2.bd_id=ldsc.bd_id
      AND ldsc2.bd_id  =li.bd_id
      AND ldsc2.line_nr=li.line_nr
      AND ldsc.line_nr =ldsc.line_nr
      )
    AND plr.prod_line_cd     ='*'
    AND plr.indirect_fl      ='*'
    AND plr.region_cd        =d.region
    AND LI.LINE_TYPE_CD     IN ('PN','BD')
    AND LI.LINE_PROG_CD NOT IN ('D','H')
    AND LDSC.PROD_COST_AM    >0
    AND LDSC.COST_AVAIL_FL   ='Y'
    UNION
    SELECT LI.ASSOC_PL_CD,
      DECODE (AUTH_MARGIN_PCT,0,RQST_MARGIN_PCT,NULL,RQST_MARGIN_PCT,AUTH_MARGIN_PCT) FAUTHMARGINPCT ,
      plr.MIN_MARGIN_PCT
    FROM line_item li,
      line_disc_scale ldsc,
      pl_region_max_disc plr,
      deal d,
      bus_model bm
    WHERE li.bd_id        =I_BD_ID
    AND d.bd_id           =li.bd_id
    AND d.bd_id           =ldsc.bd_id
    AND d.control_cntry_cd=bm.country_cd
    AND d.bus_model_cd    =bm.bus_model_cd
    AND bm.tenantid=nvl(d.tenantid_data_cd,'HPE')-- AND bm.tenantid=nvl(d.tenantid,'HPE')---Added for SMO Changes (Modified tenantid column with tenantid_data_cd column for Federal Project)
    AND li.bd_id          =ldsc.bd_id
    AND li.line_nr        =ldsc.line_nr
    AND ldsc.scale_id     =
      (SELECT MAX(NVL(ldsc2.scale_id,0))
      FROM line_disc_scale ldsc2
      WHERE ldsc2.bd_id=ldsc.bd_id
      AND ldsc2.bd_id  =li.bd_id
      AND ldsc2.line_nr=li.line_nr
      AND ldsc.line_nr =ldsc.line_nr
      )
    AND plr.prod_line_cd     ='*'
    AND plr.indirect_fl      =bm.get_std_disc_fl
    AND plr.region_cd        ='*'
    AND LI.LINE_TYPE_CD     IN ('PN','BD')
    AND LI.LINE_PROG_CD NOT IN ('D','H')
    AND LDSC.PROD_COST_AM    >0
    AND LDSC.COST_AVAIL_FL   ='Y'
    UNION
    SELECT LI.ASSOC_PL_CD,
      DECODE (AUTH_MARGIN_PCT,0,RQST_MARGIN_PCT,NULL,RQST_MARGIN_PCT,AUTH_MARGIN_PCT) FAUTHMARGINPCT ,
      plr.MIN_MARGIN_PCT
    FROM line_item li,
      line_disc_scale ldsc,
      pl_region_max_disc plr,
      deal d,
      bus_model bm
    WHERE li.bd_id        =I_BD_ID
    AND d.bd_id           =li.bd_id
    AND d.bd_id           =ldsc.bd_id
    AND d.control_cntry_cd=bm.country_cd
    AND d.bus_model_cd    =bm.bus_model_cd
    AND bm.tenantid=nvl(d.tenantid_data_cd,'HPE')-- AND bm.tenantid=nvl(d.tenantid,'HPE')---Added for SMO Changes (Modified tenantid column with tenantid_data_cd column for Federal Project)
    AND li.bd_id          =ldsc.bd_id
    AND li.line_nr        =ldsc.line_nr
    AND ldsc.scale_id     =
      (SELECT MAX(NVL(ldsc2.scale_id,0))
      FROM line_disc_scale ldsc2
      WHERE ldsc2.bd_id=ldsc.bd_id
      AND ldsc2.bd_id  =li.bd_id
      AND ldsc2.line_nr=li.line_nr
      AND ldsc.line_nr =ldsc.line_nr
      )
    AND plr.prod_line_cd     ='*'
    AND plr.indirect_fl      ='*'
    AND plr.region_cd        ='*'
    AND LI.LINE_TYPE_CD     IN ('PN','BD')
    AND LI.LINE_PROG_CD NOT IN ('D','H')
    AND LDSC.PROD_COST_AM    >0
    AND LDSC.COST_AVAIL_FL   ='Y'
    )
  WHERE fauthmarginpct <min_margin_pct;
  IF L_RECCOUNT        >0 THEN
    --dbms_output.PUT_LINE ('LINE_ITEM_MARGIN_RISK - True');
    --dbms_output.PUT_LINE ('NO LINE_ITEM_MARGIN_RISK - Ends..');
    RETURN 'Y';
  ELSE
    --dbms_output.PUT_LINE ('NO LINE_ITEM_MARGIN_RISK - False');
    --dbms_output.PUT_LINE ('NO LINE_ITEM_MARGIN_RISK - Ends..');
    RETURN 'N';
  END IF;
END CHECK_LINE_ITEM_MARGIN_RISK;
FUNCTION getlatest_ver_bd_id(
    I_BD_ID NUMBER)
  RETURN NUMBER
IS
  l_latest_ver_bd_id NUMBER(10):=0;
BEGIN
  SELECT BD_ID
  INTO L_LATEST_VER_BD_ID
  FROM DEAL
  WHERE BD_NR=
    (SELECT BD_NR FROM DEAL WHERE BD_ID=I_BD_ID
    )
  AND CURRENT_VERSION_FL='Y';
  --dbms_output.put_line ('latest version bd_id is : '|| l_latest_ver_bd_id);
  RETURN l_latest_ver_bd_id;
EXCEPTION
WHEN NO_DATA_FOUND THEN
  l_latest_ver_bd_id:=0;
  g_user_message    :='Unable to get latest bd_id. No deal details found for the bd_id :' || I_BD_ID ;
  INSERTERROR_OUTPUT_MESSAGES ( NULL,NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL,G_USER_MESSAGE, 'ERROR', G_DEAL_CREATION_GUID, NULL,NULL,G_USER_MESSAGE);
  --dbms_output.PUT_LINE ('Unable to get latest bd_id. NO deal details found for the bd_id :' || I_BD_ID );
END GETLATEST_VER_BD_ID;
FUNCTION getValid_Eclipse_UserID(
    i_user_hp_emp_nr NUMBER,
    o_errors OUT VARCHAR2)
  RETURN VARCHAR2
IS
  l_eclipse_user_id user_tab.user_id%type;
  --l_rec_exists number(3):=0;
BEGIN

--modified by HarshShah 22-Feb-2014 -- Pending
--dbms_output.put_line (' i_user_hp_emp_nr '|| i_user_hp_emp_nr);

---IF  l_rec_exists >0 THEN
if is_emp_bmi_default(i_user_hp_emp_nr,NULL)='Y'  THEN
    l_eclipse_user_id:=g_default_bmi_user_id;
    --dbms_output.put_line('Found BMI Default BMI user id');
else
  --dbms_output.put_line('Finding Actual employee user ID' || i_user_hp_emp_nr);
  SELECT UT.USER_ID
  INTO l_eclipse_user_id
  FROM user_tab ut,
    user_login ui ,
    EMPLOYEE EMP
  WHERE user_hp_emp_nr         =i_user_hp_emp_nr
  AND ut.user_id               =ui.user_id
  AND ut.user_hp_emp_nr        =emp.emp_nr
  AND lower(ui.windows_user_id)=lower(emp.nt_user_id)
  AND ROWNUM                   <2;

end if;
  O_ERRORS                    :=NULL;
  RETURN L_ECLIPSE_USER_ID;
EXCEPTION
WHEN NO_DATA_FOUND THEN
  L_ECLIPSE_USER_ID:=NULL;
  O_ERRORS         :='No Data available for the Employee : ' || I_USER_HP_EMP_NR ||', check if the employee exists and has valid eclipse access';
  RETURN L_ECLIPSE_USER_ID;
WHEN OTHERS THEN
  l_eclipse_user_id:=NULL;
  O_ERRORS         :='An error was encountered - ' || SQLCODE || ' -ERROR- ' || SQLERRM || '. Error at Line : ' || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE();
  RETURN L_ECLIPSE_USER_ID;
END getValid_Eclipse_UserID;
PROCEDURE ins_competitors(
    i_bd_id              IN NUMBER,
    i_deal_creation_guid IN VARCHAR2,
    i_xmlnamespace       IN VARCHAR2 )
IS
  l_msg_type       VARCHAR2(32767);
  l_errors         VARCHAR2(32767);
  l_w_l_stat_cd    VARCHAR2(10);
  l_comp_exists    NUMBER;
  l_pl_exists      NUMBER;
  l_comp_mfg_pn_id NUMBER;
  l_plpn_exists    NUMBER;
BEGIN
  l_comp_mfg_pn_id :=0;
  FOR rec IN
  (SELECT extract ( value (d), '//CompID/text()', i_xmlnamespace). getstringval () AS compid, ---need clarification on which column this should be inserted.
    extract ( value (d), '//CompMfgSKU/text()', i_xmlnamespace). getstringval ()   AS compmfgsku,
    extract ( value (d), '//CompProdDesc/text()', i_xmlnamespace). getstringval () AS compproddesc,
    extract ( value (d), '//EUPrice/text()', i_xmlnamespace). getstringval ()      AS euprice,
    extract ( value (d), '//PL/text()', i_xmlnamespace). getstringval ()           AS pl
  FROM edms_deal_queue x,
    TABLE ( xmlsequence ( extract ( x.xml_data_xml, 'DealCreationRequest/Competitors/Competitor', i_xmlnamespace))) d
  WHERE x.deal_creation_guid =i_deal_creation_guid
  )
  LOOP
  ---Added as part of get well Plan to avoid insert Null exception for comp_mfg_pl .comp_id
   IF rec.compid is NULL THEN
   L_MSG_TYPE :='WARNING';
   l_errors   := 'Unable to add Competitor for PL '||rec.pl||' as Competitor id is NULL';
   inserterror_output_messages ( NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, l_errors, l_msg_type, i_deal_creation_guid, NULL, NULL,l_errors);
   ELSE
    BEGIN
      --IF l_comp_exists = 0 THEN
      SELECT COUNT(*)
      INTO l_pl_exists
      FROM line_item
      WHERE bd_id    = i_bd_id
      AND assoc_pl_cd=rec.pl;
      IF l_pl_exists >0 THEN
        SELECT NVL(MAX(comp_mfg_pn_id),0)
        INTO l_comp_mfg_pn_id
        FROM comp_mfg_plpn
        WHERE bd_id      =i_bd_id
        AND prod_line_cd =rec.pl
        AND comp_id      =rec.compid;
        l_comp_mfg_pn_id:=l_comp_mfg_pn_id+1;
        SELECT COUNT(                     *)
        INTO l_comp_exists
        FROM comp_mfg_pl
        WHERE bd_id      =  i_bd_id
        AND prod_line_cd = rec.pl
        AND comp_id      = rec.compid;
        IF l_comp_exists = 0 THEN
          SELECT w_l_stat_cd INTO l_w_l_stat_cd FROM deal WHERE bd_id = i_bd_id;
          INSERT
          INTO comp_mfg_pl
            (
              bd_id,
              prod_line_cd,
              COMP_ID,
              w_l_stat_cd,
              creation_dts,
              update_dts
            )
            VALUES
            (
              i_bd_id,
              rec.pl,
              rec.compid,
              l_w_l_stat_cd,
              sysdate,
              sysdate
            );
        ELSE
          l_msg_type :='WARNING';
          l_errors   := 'Competitor already exists ';
          inserterror_output_messages ( NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, l_errors, l_msg_type, i_deal_creation_guid, NULL, NULL,l_errors);
          --dbms_output.put_line('Competitor  exists '||l_errors);
        END IF;
        SELECT COUNT(*)
        INTO l_plpn_exists
        FROM comp_mfg_plpn
        WHERE bd_id      = i_bd_id
        AND prod_line_cd = rec.pl
        AND comp_id      = rec.compid
        AND prod_fam_tx  = rec.compmfgsku;
        IF l_plpn_exists = 0 THEN
          BEGIN
            INSERT
            INTO comp_mfg_plpn
              (
                bd_id,
                prod_line_cd,
                comp_id,
                comp_mfg_pn_id,
                prod_desc_tx,
                prod_fam_tx,
                eu_price,
                est_tot_markup,
                res_b_cost,
                creation_dts,
                update_dts
              )
              VALUES
              (
                i_bd_id,
                rec.pl,
                rec.compid,
                l_comp_mfg_pn_id,
                rec.compproddesc,
                rec.compmfgsku,--NULL,---doubt with rec.compmfgsku
                rec.euprice,
                0,---est_tot_markup
                0,---res_b_cost
                SYSDATE,
                SYSDATE
              );
          EXCEPTION
          WHEN OTHERS THEN
            l_msg_type :='WARNING';
            l_errors   := 'Can not load competior (id - ' ||rec.compid||')';
            IF SQLERRM LIKE '%ORA-01400: cannot insert NULL%' THEN
              l_errors :=l_errors||' - competitor product id or Competitor product desc is missing';
            ELSE
              l_errors :=l_errors||' - '||SQLCODE||' - '||sqlerrm;
            END IF;
            inserterror_output_messages ( NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, l_errors, l_msg_type, i_deal_creation_guid, NULL, NULL,l_errors);
            --dbms_output.put_line('In Insert Exception');
          END;
        ELSE
          l_msg_type :='WARNING';
          l_errors   := 'Competitor Already exists with the product  family '|| rec.compmfgsku;
          inserterror_output_messages ( NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, l_errors, l_msg_type, i_deal_creation_guid, NULL, NULL,l_errors);
        END IF;
      ELSE
        l_msg_type :='WARNING';
        L_ERRORS   := 'PL ' ||REC.PL ||' not exists for the deal id '||I_BD_ID;
        inserterror_output_messages ( NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, l_errors, l_msg_type, i_deal_creation_guid, NULL, NULL,l_errors);
      END IF;
      --doubt in INSERT INTO comp_mfg_plpn
    EXCEPTION
    WHEN OTHERS THEN
      l_msg_type :='WARNING';
      l_errors   := 'An error was encountered while inserting competitor details  - ' || SQLCODE || ' -ERROR- ' || sqlerrm;
      inserterror_output_messages ( NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, l_errors, l_msg_type, i_deal_creation_guid, NULL, NULL,l_errors);
      --dbms_output.put_line('In Loop Exception');
    END;
   END IF;
 END LOOP;
EXCEPTION
WHEN OTHERS THEN
  L_MSG_TYPE :='WARNING';
  l_errors   := 'An error was encountered in ins_competetors  -' || SQLCODE || ' -ERROR- ' || sqlerrm;
  inserterror_output_messages ( NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, l_errors, l_msg_type, i_deal_creation_guid, NULL, NULL,l_errors);
  --dbms_output.put_line('In Loop Exception');
END ins_competitors;
PROCEDURE unauthorized_zero_version_deal
  (
    i_bd_nr NUMBER
  )
IS
  l_errors      VARCHAR2(3000);
  l_reccount    NUMBER(10);
  l_bd_id       NUMBER(10);
  reject_update EXCEPTION;
BEGIN
  --dbms_output.PUT_LINE (' unauthorized deal ' || i_bd_nr);
  BEGIN
    SELECT bd_id INTO l_bd_id FROM deal WHERE bd_nr=i_bd_nr AND bd_version_nr=0;
  EXCEPTION
  WHEN no_data_found THEN
    raise reject_update;
  END;
  --dbms_output.put_line ('zero version bd_id ' || l_bd_id);
  --update line_item table.
  UPDATE line_item
  SET auth_mc_date   =NULL,
    line_prog_cd     ='N',
    SQ_auth_emp_nr   =NULL,
    auth_mc_hp_emp_nr=NULL,
    AUTH_BEG_DT      =NULL,
    AUTH_END_DT      =NULL
  WHERE bd_id        =l_bd_id;
  --update line_disc_scale
  UPDATE line_disc_scale
  SET auth_fl      ='N',
    AUTH_BASIS_TEXT=NULL
  WHERE BD_ID      =l_bd_id;
  --update bundle lines
  UPDATE BUNDLE_LINE
  SET AUTH_MC_HP_EMP_NR=NULL,
    AUTH_MC_DATE       =NULL,
    ITEM_PROG_CD       ='N',
    AUTH_DT_GMT        =NULL,
    AUTH_BASIS_TEXT    =NULL
  WHERE BD_ID          =l_bd_id;
EXCEPTION
WHEN reject_update THEN
NULL;
  --dbms_output.put_line ('Deal is not a zero version deal ');
  --inserterror_output_messages ( NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL, NULL, l_errors, 'ERROR', g_deal_creation_guid, NULL, NULL,l_errors );
WHEN OTHERS THEN
  --dbms_output.put_line ('Errors while un authorizing the zero version deal ');
  --l_errors:='Errors while un authorizing the zero version deal ';
  --inserterror_output_messages ( NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL, NULL, l_errors, 'ERROR', g_deal_creation_guid, NULL, NULL,l_errors );
  NULL;
END unauthorized_zero_version_deal;

PROCEDURE new_deal_quoted_xml(
    p_bd_id IN NUMBER,
    p_out_errmsg OUT VARCHAR2)
IS
  CURSOR c_deal_header (c_bd_id IN NUMBER)
  IS
    SELECT D.BD_ID,
      D.BD_NR,
      D.BD_VERSION_NR,
      SUBSTR (D.SAP_QUOTE_ID, 7, 10) SAP_QUOTE_ID,
      D.REGION,
      D.CONTROL_CNTRY_CD,
      D.BUS_MODEL_CD,
      D.PRICE_LIST_CD,
      D.CURR_CD,
      D.PRICE_TERM_CD,
      D.FIRST_QUOTE_DT_GMT,
      D.QUOTE_DIST_DT_GMT,
      D.LAST_QUOTED_DEAL_FL,
      D.QUOTE_DIST_CD,
      B.PULL_FROM_HPS_FL,
      D.DEAL_SOURCE_DEAL_TYPE
    FROM DEAL D,
      BUS_MODEL B
    WHERE D.BD_ID      = c_bd_id
    AND B.BUS_MODEL_CD = D.BUS_MODEL_CD
    AND B.COUNTRY_CD   = D.CONTROL_CNTRY_CD
    AND b.tenantid=nvl(d.tenantid_data_cd,'HPE');-- AND bm.tenantid=nvl(d.tenantid,'HPE')---Added for SMO Changes (Modified tenantid column with tenantid_data_cd column for Federal Project)
  t_deal_header c_deal_header%rowtype;
  l_event_data XMLTYPE;
  l_system_id app_config_keys.app_value%TYPE;
  l_client_id app_config_keys.app_value%TYPE;
  l_event_id          NUMBER;
  l_event_exists      NUMBER;
  l_outgoingevents_id NUMBER;
  l_event_audit_fl    VARCHAR2(1);
  l_lp_id             NUMBER :=1;
  --New variables added by Lakshmi on 10/1/2014 for IM18851476/SD21020551 - SD21021311 - GUS ticket - Prev disc applied in eclipse is changed at AQ
  l_new_version_xml_guid edms_deal_error_report.deal_creation_guid%TYPE;
  l_dealcreationtype_in_XML deal.deal_source_deal_type%TYPE;
  --End of changes.

  l_bd_version_nr deal.bd_version_nr%TYPE;

BEGIN

SELECT bd_version_nr INTO l_bd_version_nr FROM deal WHERE bd_id=p_bd_id;

dbms_OUTPUT.put_line('BD_ID Passed: '||p_bd_id||' and bd_version_nr is: '||l_bd_version_nr);

IF l_bd_version_nr=1 THEN --Condition added by Lakshmi on 3/27/2015 to insert event data only for V1 of the deal: to fix Error:127 CR 202750
  OPEN c_deal_header(p_bd_id);
  LOOP
    BEGIN
      FETCH c_deal_header INTO t_deal_header;
      IF c_deal_header%NOTFOUND THEN
        IF l_lp_id      = 1 THEN
          p_out_errmsg := 'No deal exists with the bd id  '||p_bd_id;
        END IF;
        EXIT;
      ELSE

       /*Mehnaz Change.. We need to insert for every quote ? Why just version 1 ??? the flagis last_quoted_deal_fl = N for version 1 and then is set to Y for all other versions. So the following block does not execute for versions > 1*/
        ----IF (t_deal_header.last_quoted_deal_fl IS NULL OR UPPER(t_deal_header.last_quoted_deal_fl)<>'Y' )THEN
        --Changes made by Lakshmi on 10/1/2014 for IM18851476/SD21020551 - SD21021311 - GUS ticket - Prev disc applied in eclipse is changed at AQ
        BEGIN
        SELECT deal_creation_guid INTO l_new_version_xml_guid
        FROM edms_deal_error_report
        WHERE bd_id = p_bd_id
        AND upper(error_msg) LIKE '%DEAL CREATED SUCCESSFULLY%';
        dbms_OUTPUT.put_line('Deal is created successfully');
        EXCEPTION
        WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('Could not get deal creation guid in new_deal_quoted_xml procedure: '||sqlerrm);
        p_out_errmsg:='In Exception new_deal_quoted_xml ' ||SQLCODE||'-----'||sqlerrm;
        END;

        l_dealcreationtype_in_XML  := getsqtxmlvalue ( '/DealCreationRequest/DealRequestSource/DealCreationType/', l_new_version_xml_guid);--tag from new xml

        IF ( t_deal_header.DEAL_SOURCE_DEAL_TYPE is NULL OR  t_deal_header.DEAL_SOURCE_DEAL_TYPE = 'LOW_TOUCH'
         OR l_dealcreationtype_in_XML = 'LOW_TOUCH')
         THEN
          BEGIN
            get_sap_system_id(t_deal_header.region,l_system_id,l_client_id);
            SELECT xmltype(REPLACE (xmlelement("eventdata", xmlforest( d.bd_nr "bd_nr", DECODE(UPPER(b.pull_from_hps_fl),'Y',SUBSTR (d.sap_quote_id, 7, 10),NULL) "sap_quote_id", DECODE(UPPER(b.pull_from_hps_fl),'Y',9999,NULL) "sap_system_id", d.bd_version_nr "bd_version_nr", d.bus_model_cd "bus_model_cd", d.control_cntry_cd "control_cntry_cd", d.price_list_cd "price_list_cd", d.curr_cd "curr_cd", d.price_term_cd "price_term_cd", DECODE(d.quote_dist_dt_gmt,NULL,' ', d.quote_dist_dt_gmt) "quote_dist_dt_gmt",d.tenantid "tenantid")xml),'> ','>'))
            INTO l_event_data
            FROM deal d,
              bus_model b
            WHERE D.BD_ID      = p_bd_id
            AND B.BUS_MODEL_CD = D.BUS_MODEL_CD
            AND B.COUNTRY_CD   = D.CONTROL_CNTRY_CD
            AND B.Tenantid=nvl(D.tenantid_data_cd,'HPE');----Added for SMO changes--AND B.Tenantid=nvl(D.tenantid,'HPE');----Added for SMO changes
            SELECT l_event_data.getstringval() INTO p_out_errmsg FROM dual;
            --   p_out_errmsg :=' l_event_data     :'||to_char(l_event_data);
            --dbms_output.put_line(p_out_errmsg);
            SELECT eventid
            INTO l_event_id
            FROM es_registered_events
            WHERE eventname='Eclipse_New_Deal_Quoted';
            dbms_OUTPUT.put_line('Event id: '||l_event_id);

            SELECT COUNT(*)
            INTO l_event_exists
            FROM es_outgoingevents
            WHERE bd_id       = p_bd_id
            AND event_id      =l_event_id;

            --dbms_OUTPUT.put_line('Event id count: '||l_event_exists);

            IF l_event_exists >0 THEN
              UPDATE ES_OUTGOINGEVENTS
              SET eventdata  = l_event_data,
                processstate = 'N',
                updatedts    = SYSDATE
              WHERE BD_ID    = p_bd_id
              AND EVENT_ID   = l_event_id;

            ELSE
              SELECT SEQ_ES_OUTGOINGEVENTS.nextval INTO l_outgoingevents_id FROM DUAL;
              --dbms_OUTPUT.put_line('Inserting into es_outgoingevents table:');

              BEGIN
              INSERT
              INTO ES_OUTGOINGEVENTS
                (
                  OUTGOINGEVENTS_ID,
                  BD_ID,
                  EVENT_ID,
                  PROCESSSTATE,
                  EVENTDATA
                )
                VALUES
                (
                  l_outgoingevents_id,
                  p_bd_id,
                  l_event_id,
                  'N',
                  l_event_data
                );
                dbms_OUTPUT.put_line('Rows inserted: '||sql%rowcount);

            EXCEPTION
            WHEN OTHERS THEN
            RAISE;
            END;

                IF sql%rowcount >0 THEN
                p_out_errmsg :='Success';
              ELSE
                p_out_errmsg:='Event service insert failed';
              END IF;

              SELECT EVENT_AUDIT_FL INTO l_event_audit_fl FROM APP_CONFIG ;

              IF l_event_audit_fl ='Y' THEN
                INSERT
                INTO ES_OUTGOINGEVENTS_AUDIT
                  (
                    OUTGOINGEVENTS_ID,
                    BD_ID,
                    source
                  )
                  VALUES
                  (
                    l_outgoingevents_id,
                    p_bd_id,
                    'Eclipse'
                  );
              END IF;
            END IF;
          EXCEPTION
          WHEN OTHERS THEN
            p_out_errmsg:='Error while inserting into outgoing events ' ||SQLCODE||'-----'||sqlerrm;
          END ;
        ELSE
          p_out_errmsg := 'Deal with  bd id  '||p_bd_id||' is not newly quoted';
        END IF;
      END IF;
    EXCEPTION
    WHEN OTHERS THEN
      p_out_errmsg:='In Exception new_deal_quoted_xml ' ||SQLCODE||'-----'||sqlerrm;
    END;
    l_lp_id:=l_lp_id+1;
  END LOOP;
  END IF; --End of condition added to insert/update only for Bd Version 1

  COMMIT;
EXCEPTION
WHEN OTHERS THEN
  p_out_errmsg:='In Exception new_deal_quoted_xml ' ||SQLCODE||'-----'||sqlerrm;
END new_deal_quoted_xml;




---Addded on 01-Feb-2012 to test send quote
PROCEDURE sendquotelight
  (
    i_bd_nr NUMBER,
    o_quote_sent OUT VARCHAR2
  )
IS
  i_bd_id             NUMBER;
  i_bd_version_nr     NUMBER ;
  i_quote_user_id     VARCHAR2(100):='jl4021';
  i_quote_send_pdf_fl VARCHAR2(2)  :='Y';
  i_quote_send_txt_fl VARCHAR2(2)  :='Y';
  o_next_opg_num deal.opg_num%type;
  l_quote_queue_id              NUMBER (10);
  l_quote_recepients_email_list VARCHAR2(4000);
  L_TEMP_EMAILS                 VARCHAR2(200);
  l_reccount                    NUMBER(10);
  l_opg_num_ref bus_model.opg_num_ref%type;
  l_vstatus VARCHAR2(10);
  l_next_opg_num deal.opg_num%type;
  l_errors               VARCHAR2(3000);
  l_deal_prog_cd         VARCHAR2(1):='U';
  l_bdme_aprvl_cd        VARCHAR2(1):='N';
  l_quote_dist_cd        VARCHAR2(1):='N';
  l_quote_event_sent_msg VARCHAR2(32767);--added for event service
  l_sap_appr_fl bus_model.sap_apprvl_fl%type;
  l_quote_send_pdf_fl bus_model.quote_send_pdf_fl%type;
  l_quote_send_txt_fl bus_model.quote_send_txt_fl%type;
  l_rebatable_fl deal.rebatable_fl%type;
  c_m_type_error VARCHAR2(200);
l_tenantid deal.tenantid_data_cd%type;--  l_tenantid deal.tenantid%type;--l_tenantid deal.tenantid%type;---Added for SMO changes(modified tenantid column withtenantid_data_cd column)
BEGIN
  SELECT bd_id,
    bd_version_nr,
  nvl(tenantid_data_cd,'HPE')  -- nvl(tenantid,'HPE') ----added for SMo changes
  INTO i_bd_id,
    i_bd_version_nr
    ,l_tenantid ----added for SMo changes
  FROM deal
  WHERE bd_nr           =i_bd_nr
  AND current_version_fl='Y';
  o_next_opg_num       :=NULL;
  --dbms_output.put_line ('Preparing for Send Quote....');
  --Generate quote queue ID
  l_quote_queue_id:=0;
  SELECT seq_quote_queue.nextval INTO l_quote_queue_id FROM dual;
  --get quote recepients list
  l_quote_recepients_email_list :=get_quote_recepients_list (i_bd_id);
  --add our names for testing
  --pls. remove after testing
  L_TEMP_EMAILS                 :='harsh-j.shah@hp.com';
  l_quote_recepients_email_list :=l_quote_recepients_email_list || ',' || l_temp_emails || ',' ;
  L_TEMP_EMAILS                 :='max.zak@hp.com';
  l_quote_recepients_email_list :=l_quote_recepients_email_list || l_temp_emails;
  --dbms_output.put_line ('L_QUOTE_RECEPIENTS_EMAIL_LIST ' || l_quote_recepients_email_list);
  IF (l_quote_recepients_email_list IS NULL) THEN
    l_errors                        := 'No recepients available to send the quote';
    inserterror_output_messages (i_bd_id,i_bd_nr,i_bd_version_nr, NULL,NULL,NULL,NULL, NULL,NULL,NULL,l_errors,c_m_type_warning, g_deal_creation_guid,NULL,NULL,l_errors);
  END IF;
  --get opg
  --/*+ INDEX(D PK_DEAL) INDEX(B PK_BUS_MODEL) USE_NL(D B) */
  --        D.BD_ID, D.BD_NR, D.BD_VERSION_NR, D.CONTROL_CNTRY_CD, D.BUS_MODEL_CD,
  --      GEN_OPG_AT_QUOTE_FL, D.REGION, D.W_L_STAT_CD, D.OPG_NUM, D.QUOTE_DIST_CD, D.REBATABLE_FL,
  --    B.GEN_OPG_FL, B.OPG_NUM_REF, B.DIRECT_FL, B.QUOTE_OPG_WON_FL, B.QUOTE_SEND_PDF_FL, B.QUOTE_SEND_TXT_FL
  BEGIN
    --dbms_output.put_line(' generating OPG ');
    SELECT OPG_NUM_REF
    INTO l_OPG_NUM_REF
    FROM DEAL D,
      BUS_MODEL B
    WHERE D.BD_ID               = i_bd_id
    AND b.bus_model_cd          = d.bus_model_cd
    AND b.country_cd            = d.control_cntry_cd
    And b.tenantid= nvl(d.tenantid,'HPE')---Added for SMO changes
    AND gen_opg_fl              ='Y'
    AND gen_opg_at_quote_fl     ='Y'
    AND quote_dist_cd          <>'Q'
    AND LENGTH(NVL(d.opg_num,0))<2;
    /*
    iOpgNumRef   IN   opg_reference.opg_num_ref%TYPE
    , vStatus      OUT  VARCHAR2
    */
    IF l_opg_num_ref IS NOT NULL THEN
      l_next_opg_num :=eclipse.getopgnumfromopgreference(l_opg_num_ref, l_vstatus) ;
      --dbms_output.put_line (' l_vstatus  ' || l_vstatus || l_next_opg_num);
      IF upper(l_vstatus)='OK' THEN
        o_next_opg_num  :=l_next_opg_num;
        ----Added newly on 21-Jan-2012 by Phani--
        UPDATE DEAL
        SET opg_num = o_next_opg_num
        WHERE bd_id = i_bd_id;
        --dbms_output.put_line ('Updated deal with new opg num ' || o_next_opg_num );
        -----end of newly added code on 21-Jan-2012-----------
        --dbms_output.put_line ('OPG Generated  ' || o_next_opg_num );
      ELSE
        l_errors      := SUBSTR(l_VSTATUS,1,3000);
        g_user_message:='Unable to generate New OPG';
        inserterror_output_messages ( NULL,NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, c_m_type_error, g_deal_creation_guid, NULL,NULL,g_user_message);
      END IF;
    END IF;
  EXCEPTION
  WHEN no_data_found THEN
    l_opg_num_ref :=NULL;
    o_next_opg_num:=NULL;
    --dbms_output.put_line ('opg not generated..no data found');
    --l_errors      := 'Unable to generate New OPG';
    --inserterror_output_messages ( null,null, null,null, null, null, null, null, null,null,l_errors, c_m_type_error, g_deal_creation_guid, null,null,l_errors);
  END;
  /*
  pending
  rebatable,quote_send_pdf_fl,  quote_send_txt_fl, - should come from bus model
  there is no rebatable from sq so it will be always N
  */
  -----added newly on 21-Jan-2012 by phani
  --------Requirement for sap appr
  SELECT b.sap_apprvl_fl,
    b.quote_send_pdf_fl,
    b.quote_send_txt_fl,
    d.rebatable_fl
  INTO l_sap_appr_fl,
    l_quote_send_pdf_fl,
    l_quote_send_txt_fl,
    l_rebatable_fl
  FROM deal D,
    bus_model B
  WHERE d.bd_id      = i_bd_id
  AND b.bus_model_cd = d.bus_model_cd
  AND b.country_cd   = d.control_cntry_cd
  AND b.tenantid=nvl(d.tenantid,'HPE');---Added for SMO Changes
  IF l_sap_appr_fl   ='Y' THEN
    --UPDATE  DEAL
    UPDATE DEAL
    SET QUOTE_DIST_CD = 'P',
      STATUS_TX       = NULL
    WHERE BD_ID       =i_bd_id ;
    --dbms_output.PUT_LINE('Updated deal with quote dist code');
    IF l_rebatable_fl <> 'Y' THEN
      INSERT
      INTO dealqueue
        (
          dealid,
          queuetype,
          status,
          bd_nr,
          bd_version_nr,
          user_id,
          primary_rslr_list,
          recipient_list,
          quote_send_txt_fl,
          quote_send_pdf_fl
        )
      SELECT i_bd_id,
        'SAP',
        'NEW',
        i_bd_nr,
        i_bd_version_nr,
        i_quote_user_id,
        NULL,
        l_quote_recepients_email_list,
        l_quote_send_txt_fl,
        l_quote_send_pdf_fl
      FROM dual
      UNION
      SELECT i_bd_id,
        'FSP',
        'NEW',
        i_bd_nr,
        i_bd_version_nr,
        i_quote_user_id,
        NULL,
        l_quote_recepients_email_list,
        l_quote_send_txt_fl,
        l_quote_send_pdf_fl
      FROM dual
      UNION
      SELECT i_bd_id,
        'EOP',
        'NEW',
        i_bd_nr,
        i_bd_version_nr,
        i_quote_user_id,
        NULL,
        l_quote_recepients_email_list,
        l_quote_send_txt_fl,
        l_quote_send_pdf_fl
      FROM dual;
      --dbms_output.PUT_LINE('Rabate flag = Y');
    ELSE
      INSERT
      INTO dealqueue
        (
          dealid,
          queuetype,
          status,
          bd_nr,
          bd_version_nr,
          user_id,
          primary_rslr_list,
          recipient_list,
          quote_send_txt_fl,
          quote_send_pdf_fl
        )
      SELECT i_bd_id,
        'EOP',
        'NEW',
        i_bd_nr,
        i_bd_version_nr,
        i_quote_user_id,
        NULL,
        l_quote_recepients_email_list,
        l_quote_send_txt_fl,
        l_quote_send_pdf_fl
      FROM dual;
      --dbms_output.PUT_LINE('Rebate flag = N');
    END IF;
  ELSIF l_sap_appr_fl !='Y' THEN
    INSERT
    INTO quote_queue
      (
        qid,
        bd_id,
        bd_nr,
        bd_version_nr,
        user_id,
        post_dts,
        quote_type,
        primary_rslr_list,
        recipient_list,
        quote_send_pdf_fl,
        quote_send_txt_fl,
        verified_fl
      )
      VALUES
      (
        l_quote_queue_id,
        i_bd_id,
        i_bd_nr,
        i_bd_version_nr,
        NVL(i_quote_user_id,'bmidef'),
        TRUNC(sysdate),
        'SQ',
        NULL,
        l_quote_recepients_email_list,
        i_quote_send_pdf_fl,
        i_quote_send_txt_fl,
        'O'
      );
  END IF;
  IF sql%rowcount   >0 THEN
    o_quote_sent   :='Y';
    --l_errors       := 'SUCCESS';
    G_USER_MESSAGE :='Deal quote sent';
    --l_errors       := 'Deal quote sent';
    c_m_type_error := 'INFO';
    inserterror_output_messages ( NULL,NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, c_m_type_error, g_deal_creation_guid, NULL,NULL,g_user_message);
    new_deal_quoted_xml(i_bd_id,l_quote_event_sent_msg);
    IF l_quote_event_sent_msg='Success' THEN
      l_errors              := 'SUCCESS';
      g_user_message        :='Succes outgoing event service';
      inserterror_output_messages ( NULL,NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, c_m_type_error, g_deal_creation_guid, NULL,NULL,g_user_message);
      --dbms_output.PUT_LINE('QUOTE EVENT STATUS   :'||l_quote_event_sent_msg);
    ELSE
      l_errors      := 'ERROR';
      g_user_message:='Failed outgoing event service';
      inserterror_output_messages ( NULL,NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, c_m_type_error, g_deal_creation_guid, NULL,NULL,g_user_message);
    END IF;
  ELSE
    o_quote_sent:='N';
  END IF;
  -------End of newly added code on 21-Jan-2012 --------------
  --send quote
  --  INSERT
  --  INTO quote_queue
  --    (
  --      qid,
  --      bd_id,
  --      bd_nr,
  --      bd_version_nr,
  --      user_id,
  --      post_dts,
  --      quote_type,
  --      primary_rslr_list,
  --      recipient_list,
  --      quote_send_pdf_fl,
  --      quote_send_txt_fl,
  --      verified_fl
  --    )
  --    VALUES
  --    (
  --      l_quote_queue_id,
  --      i_bd_id,
  --      i_bd_nr,
  --      i_bd_version_nr,
  --      i_quote_user_id,
  --      TRUNC(sysdate),
  --      'SQ',
  --      NULL,
  --      l_quote_recepients_email_list,
  --      i_quote_send_pdf_fl,
  --      i_quote_send_txt_fl,
  --      'O'
  --    );
  --if the record inserted successfully
  --  IF sql%rowcount >0 THEN
  --    o_quote_sent :='Y';
  --    new_deal_quoted_xml(i_bd_id,l_quote_event_sent_msg);
  --    IF l_quote_event_sent_msg='Success' THEN
  --      l_errors              := 'SUCCESS';
  --      g_user_message        :='Succes outgoing event service';
  --      inserterror_output_messages ( NULL,NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, c_m_type_error, g_deal_creation_guid, NULL,NULL,g_user_message);
  --      --dbms_output.PUT_LINE('QUOTE EVENT STATUS   :'||l_quote_event_sent_msg);
  --    ELSE
  --      l_errors      := 'ERROR';
  --      g_user_message:='Failed outgoing event service';
  --      inserterror_output_messages ( NULL,NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, c_m_type_error, g_deal_creation_guid, NULL,NULL,g_user_message);
  --    END IF;
  --  ELSE
  --    o_quote_sent:='N';
  --  END IF;
  --dbms_output.put_line ('Send Quote.. Done..Status : ' ||o_quote_sent );
EXCEPTION
WHEN OTHERS THEN
  o_next_opg_num:=NULL;
  o_quote_sent  :='N';
  --dbms_output.put_line ('Error in Send Quote');
  l_errors      := 'An error was encountered in SendQuote - ' || SQLCODE || ' -ERROR- ' || sqlerrm || '. Error at Line : ' || dbms_utility.format_error_backtrace();
  g_user_message:='An error was encountered in SendQuote';
  inserterror_output_messages ( NULL,NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, c_m_type_error, g_deal_creation_guid, NULL,NULL,g_user_message);
END SENDQUOTELIGHT;
FUNCTION isEUVReasonRequired
  (
    i_bus_model_cd bus_model_euv.bus_model_cd%type,
    i_country_cd bus_model_euv.cntry_cd%type,
    i_euv_reason_cd bus_model_euv.reason_cd%type
  )
  RETURN NUMBER
IS
  l_rec_count NUMBER(10):=0;
  l_errors edms_deal_error_report.error_msg%type;
BEGIN
  --SELECT COUNT(*) into l_rec_count FROM EUV_TYPE WHERE EUV_TYPE=i_euv_type_cd and REASON_REQUIRED_FL='Y';
  SELECT COUNT(*)
  INTO L_REC_COUNT
  FROM BUS_MODEL_EUV
  WHERE CNTRY_CD       =I_COUNTRY_CD
  AND BUS_MODEL_CD     =I_BUS_MODEL_CD
  AND reason_comment_fl='Y'
  AND reason_cd        =i_euv_reason_cd;
  RETURN l_rec_count;
EXCEPTION
WHEN OTHERS THEN
  --dbms_output.put_line ('Error in isEUVCommentRequired');
  l_errors      := 'An error was encountered in isEUVCommentRequired function - ' || SQLCODE || ' -ERROR- ' || sqlerrm || '. Error at Line : ' || dbms_utility.format_error_backtrace();
  g_user_message:='An error was encountered in while getting EUV Reason details';
  inserterror_output_messages ( NULL,NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, c_m_type_error, g_deal_creation_guid, NULL,NULL,g_user_message);
  RETURN 0;
END iseuvreasonrequired;
PROCEDURE add_deal_comments(
    i_deal_creation_guid IN VARCHAR2,
    p_results OUT sys_refcursor)
IS
  l_deal_cmnt_id      NUMBER;
  l_msg_type          VARCHAR2(20);
  l_errors            VARCHAR2(32767);
  l_bd_id             NUMBER;
  l_bd_exists         NUMBER;
  l_check_records     NUMBER;
  l_deal_source       VARCHAR2(10);
  reject_deal_comment EXCEPTION;
  l_cmntblob BLOB;
  l_cmntclob CLOB;
  L_BD_NR DEAL.BD_NR%TYPE:=0;  --CR 177384  DealCommentAddRequest method by Harsh Shah 12/1/2014
  L_BD_version_nr DEAL.bd_version_nr%TYPE:=0; --CR 177384  DealCommentAddRequest method by Harsh Shah 12/1/2014

   --- Added as part of  CR247790 (to populate l_rtm variable to get bmi default employee)
  l_bus_model_cd deal.bus_model_cd%type;
  l_cntry deal.CONTROL_CNTRY_CD%type;
  l_tenantid deal.tenantid%type;
  
  l_source_asset_id deal.deal_source_cd%TYPE ; --Added for US-9408 --> Encore Retirement  
BEGIN
  l_check_records := 0;



  --DELETE FROM GT_EDMS_SMQT_ERR_RESULTS;
  --dbms_output.put_line('Deleted values from global table');
  BEGIN
    SELECT source_id
    INTO l_bd_id
    FROM edms_deal_queue
    WHERE deal_creation_guid = i_deal_creation_guid;
    --dbms_output.put_line ('Bd id  ='||l_bd_id);
  EXCEPTION
  WHEN no_data_found THEN
    --l_errors  :='Smart quote XML is not found for guid '||i_deal_creation_guid ;
    l_errors :='BMI XML is not found for guid '||i_deal_creation_guid ;
    raise reject_deal_comment;
  END;

  BEGIN
    SELECT NVL(deal_source_cd,' '),
      bd_id,
      BD_VERSION_NR,
      BD_NR,
      bus_model_cd,   --- Added as part of  CR247790 (to populate l_rtm variable to get bmi default employee)
      control_cntry_cd,   --- Added as part of  CR247790 (to populate l_rtm variable to get bmi default employee)
      tenantid     --- Added as part of  CR247790 (to populate l_rtm variable to get bmi default employee)
    INTO l_deal_source ,
      l_bd_id,
      L_BD_version_nr,
      l_bd_nr,
       l_bus_model_cd,
       l_cntry,
      l_tenantid
    FROM deal
    WHERE bd_id       = l_bd_id;

  EXCEPTION
  WHEN no_data_found THEN
    l_errors :='Deal details not found for bd id  '||l_bd_id ;
    raise reject_deal_comment;

  END;

   --- Added as part of  CR247790 (to populate l_rtm variable to get bmi default employee)
   IF l_rtm IS NULL THEN
   BEGIN
       SELECT DECODE(direct_fl,'Y','DIRECT','INDIRECT')  into l_rtm
       FROM bus_model WHERE bus_model_cd=l_bus_model_cd
                                    AND country_cd=l_cntry
                                    AND tenantid =l_tenantid;
   EXCEPTION
   WHEN OTHERS THEN
   l_errors:=' Error in getting the route_to_market flag from bus model ';
    raise reject_deal_comment;
   END;
   END IF;

  SELECT NVL(MAX(cmnt_id),0)+1
  INTO l_deal_cmnt_id
  FROM deal_comment_memo
  WHERE bd_id = l_bd_id;
  ---Lock deal for bd id is pending-----
  FOR rec IN
  (SELECT extract ( value (d), '//AddedByHPEmployee/EmployeeNr/text()', g_xmlnamespace). getstringval () AS AddedByEmpNr,
    extract ( value (d), '//AddedByHPEmployee/EmailAddress/text()', g_xmlnamespace). getstringval ()     AS AddedByEmpemail, --emp nr change from new xml
    extract ( value (d), '//CommentDate/text()', g_xmlnamespace). getstringval ()        AS CommentDate,
    extract ( value (d), '//CommentGroupCD/text()', g_xmlnamespace). getstringval ()     AS CommentGroupCD,
    extract ( value (d), '//CommentTypeCD/text()', g_xmlnamespace). getstringval ()      AS CommentTypeCD,
    extract ( value (d), '//ExternalFl/text()', g_xmlnamespace). getstringval ()         AS ExternalFl,
    extract ( value (d), '//CommentBlob/text()',g_xmlnamespace). getclobval()            AS cmntblob--getstringval () AS cmntblob   ----CR 4482
    --utl_raw.cast_to_raw(extract ( value (d), '//CommentBlob/text()',g_xmlnamespace). getstringval ()) AS cmntblob   --CR4482
  FROM edms_deal_queue x,
    TABLE ( xmlsequence ( extract ( x.xml_data_xml, 'DealCommentAddRequest/DealComments/DealComment', g_xmlnamespace))) d
  WHERE x.deal_creation_guid = i_deal_creation_guid
  )
  LOOP
    l_check_records :=l_check_records+1;
    --l_deal_cmnt_id := l_deal_cmnt_id +1;
    --by Harsh Shah 20-Dec-2013
     --Added for ePrime and BMI deal creation changes
    IF rec.AddedByEmpNr IS NULL AND rec.AddedByEmpemail IS NOT NULL THEN
      rec.AddedByEmpNr  :=get_emp_nr(rec.AddedByEmpemail);
    END IF;
    --dbms_output.PUT_LINE ('Deal comment memo emp ' || rec.AddedByEmpNr);

    --dbms_output.put_line ('is_user_exists  emp nr'||rec.AddedByEmpNr);
    IF (is_user_exists(rec.AddedByEmpNr
    ,l_source_asset_id --Added for US-9408 --> Encore Retirement  
    ) ='Y') THEN
      l_cmntclob                        :=replace_special_chars(rec.cmntblob);--CR4815
      BEGIN
        ----Added as part of CR 4482
        --IF (length(rec.cmntblob)>500) THEN
        IF (LENGTH(l_cmntclob)>500) THEN
          --l_cmntblob:=convert_to_blob(rec.cmntblob);
          --l_cmntblob:=convert_to_blob(replace(rec.cmntblob,'&'||'amp;','&'));--Added as part of CR4815
          l_cmntblob:=convert_to_blob(l_cmntclob);--Added as part of CR4815
        ELSE
          --l_cmntblob:=utl_raw.cast_to_raw(rec.cmntblob);
          --l_cmntblob:=utl_raw.cast_to_raw(replace(rec.cmntblob,'&'||'amp;','&'));--Added as part of CR4815
          l_cmntblob:=utl_raw.cast_to_raw(l_cmntclob);--Added as part of CR4815
        END IF;
        ---End of change CR 4482
        INSERT
        INTO deal_comment_memo
          (
            bd_id,
            cmnt_id,
            cmnt_group_cd, -----'A' 'All' 'B'  - 'BDM'
            cmnt_extrn_fl,
            cmnt_type_cd,
            cmnt_text_memo,
            create_hp_emp_nr,
            create_dts,
            creation_dts,
            update_dts,
            BD_NR_CREATED,
            BD_VERSION_NR_CREATED
          )
          VALUES
          (
            l_bd_id,
            l_deal_cmnt_id,
            NVL(rec.CommentGroupCD,'A'),
            rec.ExternalFl,
            NVL(rec.CommentTypeCD,'O'),
            l_cmntblob,--rec.cmntblob, ---CR 4482
            rec.AddedByEmpNr,
            sysdate,
            sysdate,
            sysdate,
            L_bd_nr,  --CR 177384  DealCommentAddRequest method by Harsh Shah 12/1/2014
            L_BD_version_nr  --CR 177384  DealCommentAddRequest method by Harsh Shah 12/1/2014
          );
        IF SQL%ROWCOUNT = 0 THEN
          l_msg_type   :='WARNING';
          L_ERRORS     :='Could not insert deal comments for bd id  '||l_BD_ID;
          -- inserterror_output_messages ( NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, l_errors, l_msg_type, i_deal_creation_guid, NULL, NULL,l_errors);
          raise reject_deal_comment ;
        ELSE
          l_deal_cmnt_id :=l_deal_cmnt_id+1;
          l_msg_type     :='SUCCESS';
          L_ERRORS       := 'Deal comment  added successfully';
          inserterror_output_messages ( NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, l_errors, l_msg_type, i_deal_creation_guid, NULL, NULL,l_errors);
        END IF;
      EXCEPTION
      WHEN OTHERS THEN
        l_msg_type :='WARNING';
        L_ERRORS   := 'An error was encountered while inserting deal comment memo - ' || SQLCODE || ' -ERROR- ' || SQLERRM;
        --g_user_message:='An error was encountered while saving Deal Comments';
        --inserterror_output_messages ( NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, l_errors, l_msg_type, i_deal_creation_guid, NULL, NULL,g_user_message);
        raise reject_deal_comment ;
      END;
    ELSE
      l_msg_type :='WARNING';
      l_errors   := 'Cannot update Deal Comments, Invalid User';
      --dbms_output.put_line('l_errors    '||l_errors);
      --      inserterror_output_messages ( NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, l_errors, l_msg_type, i_deal_creation_guid, NULL, NULL,l_errors);
      raise reject_deal_comment ;
    END IF;
  END LOOP;
  IF l_check_records =0 THEN
    --dbms_output.put_line('No xml data for the deal comments');
    L_ERRORS := 'Deal comments details are not available';
    --inserterror_output_messages ( null, null, null, null, null, null, null, null, null, null, l_errors, l_msg_type, i_deal_creation_guid, null, null,l_errors);
    raise reject_deal_comment ;
  END IF;
  COMMIT;
  --dbms_output.put_line('After loop');
  OPEN p_results FOR SELECT * FROM gt_edms_smqt_err_results;
EXCEPTION
WHEN reject_deal_comment THEN
  BEGIN
    ROLLBACK;
    l_msg_type:='ERROR';
    inserterror_output_messages (l_bd_id,NULL,NULL,NULL,NULL,NULL ,NULL,NULL,NULL,NULL,l_errors,l_msg_type,i_deal_creation_guid,NULL,NULL,l_errors);
    COMMIT;
    --return all the results
    OPEN p_results FOR SELECT * FROM gt_edms_smqt_err_results;
  END;
WHEN OTHERS THEN
  ROLLBACK;
  L_MSG_TYPE    :='WARNING';
  L_ERRORS      := 'An error was encountered while saving Deal Comments - ' || SQLCODE || ' -ERROR- ' || SQLERRM;
  G_USER_MESSAGE:='An error was encountered while saving Deal Comments';
  INSERTERROR_OUTPUT_MESSAGES ( NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, L_ERRORS, L_MSG_TYPE, I_DEAL_CREATION_GUID, NULL, NULL,g_user_message);
  --dbms_output.PUT_LINE('In Exception');
  --dbms_output.PUT_LINE('l_msg_type    '||L_MSG_TYPE);
  --dbms_output.put_line('l_errors    '||l_errors);
  COMMIT;
  OPEN p_results FOR SELECT * FROM gt_edms_smqt_err_results;
END ADD_DEAL_COMMENTS ;
PROCEDURE SET_DCT_STATUS
  (
    I_BD_ID              NUMBER,
    I_DEAL_CREATION_GUID VARCHAR,
    I_O_DCTEXPIRETHRESHOLDPCT OUT NUMERIC
  )
IS
  L_DEAL_RISK_FL DEAL.DEAL_RISK_FL%type;
  L_DCT_ENABLED_FL BUS_MODEL.DCT_ENABLED_FL%type;
  L_USE_MC_CHARGE_FOR_DCT_FL BUS_MODEL.USE_MC_CHARGE_FOR_DCT_FL%type;
  L_EMAILNOTIFYFLFIELD VARCHAR(1):='N';
  L_EXPIRETHRESHOLDPCTFIELD BUS_MODEL.MAX_QTY_THRESHOLD_PCT%type;
  L_MC_CHRG_DCT_ENABLED_FL BUS_MODEL.DCT_ENABLED_FL%type;
  L_BD_VERSION_NR DEAL.BD_VERSION_NR%type;
  L_O_DCTEXPIRETHRESHOLDPCT BUS_MODEL.MAX_QTY_THRESHOLD_PCT%type;
  l_errors   VARCHAR2(3000);
  L_MSG_TYPE VARCHAR2(20);
BEGIN
  L_O_DCTEXPIRETHRESHOLDPCT:=1;
  -------------------------------------
  -- GET DEAL AND BUS MODEL INITIAL DATA
  -------------------------------------
  BEGIN
    SELECT D.DEAL_RISK_FL,
      DECODE (D.DEAL_RISK_FL,'Y', BM.DCT_HR_NOTIFY_FL,'N',BM.MAX_QTY_NOTIFY_FL,BM.MAX_QTY_NOTIFY_FL) EMAILNOTIFYFLFIELD,
      DECODE (D.DEAL_RISK_FL,'Y',BM.DCT_HR_EXPIRE_THRESHOLD_PCT,'N',BM.MAX_QTY_THRESHOLD_PCT,BM.MAX_QTY_THRESHOLD_PCT) EXPIRETHRESHOLDPCTFIELD ,
      BM.USE_MC_CHARGE_FOR_DCT_FL,
      BM.DCT_ENABLED_FL,
      D.BD_VERSION_NR
    INTO L_DEAL_RISK_FL ,
      L_EMAILNOTIFYFLFIELD ,
      L_EXPIRETHRESHOLDPCTFIELD ,
      L_USE_MC_CHARGE_FOR_DCT_FL ,
      L_DCT_ENABLED_FL,
      L_BD_VERSION_NR
    FROM BUS_MODEL BM,
      DEAL D
    WHERE D.BUS_MODEL_CD  =BM.BUS_MODEL_CD
    AND D.CONTROL_CNTRY_CD=BM.COUNTRY_CD
    AND BM.tenantid = nvl(d.tenantid_data_cd,'HPE')--AND BM.tenantid = nvl(d.tenantid,'HPE')----Added for SMO changes
    AND D.BD_ID           =I_BD_ID;
  EXCEPTION
  WHEN NO_DATA_FOUND THEN
    L_MSG_TYPE :='WARNING';
    --L_ERRORS      := 'An error was encountered while saving Deal Comments - ' || SQLCODE || ' -ERROR- ' || SQLERRM;
    L_ERRORS:='No data available to set DCT Enable Flags for Deal';
    INSERTERROR_OUTPUT_MESSAGES ( NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, L_ERRORS, L_MSG_TYPE, I_DEAL_CREATION_GUID, NULL, NULL,L_ERRORS);
    --dbms_output.put_line('l_errors setdct enable status   '||l_errors);
  END;
  -------------------------------------
  --GET MC_CHRGE DCT enabled flag
  -------------------------------------
  BEGIN
    SELECT MC.DCT_ENABLED_FL
    INTO L_MC_CHRG_DCT_ENABLED_FL
    FROM MC_CHARGE MC ,
      DEAL D
    WHERE MC.BUS_MODEL_CD=D.BUS_MODEL_CD
    AND MC.COUNTRY_CD    =D.CONTROL_CNTRY_CD
    AND MC.MC_CHRG       =D.MC_CHARGE
    AND D.BD_ID          =I_BD_ID;
  EXCEPTION
  WHEN NO_DATA_FOUND THEN
    L_MC_CHRG_DCT_ENABLED_FL:='N';
  END;
  -------------------------------------
  --SCREEN OUTPUT FOR DEBUGGING
  -------------------------------------
  --dbms_output.PUT_LINE (' L_DEAL_RISK_FL ' || L_DEAL_RISK_FL );
  --dbms_output.PUT_LINE (' L_EMAILNOTIFYFLFIELD ' || L_EMAILNOTIFYFLFIELD);
  --dbms_output.PUT_LINE (' L_EXPIRETHRESHOLDPCTFIELD ' || L_EXPIRETHRESHOLDPCTFIELD);
  --dbms_output.PUT_LINE (' L_USE_MC_CHARGE_FOR_DCT_FL ' || L_USE_MC_CHARGE_FOR_DCT_FL);
  --dbms_output.PUT_LINE (' L_DCT_ENABLED_FL ' || L_DCT_ENABLED_FL);
  -------------------------------------
  --SET DEAL DCT FLAGS
  -------------------------------------
  IF L_DCT_ENABLED_FL            ='Y' THEN
    IF L_USE_MC_CHARGE_FOR_DCT_FL='N' THEN
      --UPDATE DEAL TABLE
      UPDATE DEAL
      SET DCT_ENABLED_FL            =L_DCT_ENABLED_FL,
        DCT_NOTIFY_FL               =L_EMAILNOTIFYFLFIELD
      WHERE BD_ID                   =i_bd_id;
    ELSIF L_USE_MC_CHARGE_FOR_DCT_FL='Y' THEN
      --UPDATE DEAL TABLE
      UPDATE DEAL
      SET DCT_ENABLED_FL=L_MC_CHRG_DCT_ENABLED_FL,
        DCT_NOTIFY_FL   =L_EMAILNOTIFYFLFIELD
      WHERE BD_ID       =i_bd_id;
      --SCREEN OUTPUT
      --dbms_output.PUT_LINE (' L_USE_MC_CHARGE_FOR_DCT_FL ' || L_USE_MC_CHARGE_FOR_DCT_FL );
      --dbms_output.PUT_LINE (' L_MC_CHRG_DCT_ENABLED_FL ' || L_MC_CHRG_DCT_ENABLED_FL );
    END IF;
    --------------------------------------------------------------------
    -- SET DEAL NOTIFY INIT HP EMP QUOTE FLAG IF BD_VERSION =0
    --------------------------------------------------------------------
    IF L_BD_VERSION_NR=0 THEN
      UPDATE DEAL SET NTFY_INIT_HP_EMP_QUOTE_FL=DCT_NOTIFY_FL WHERE BD_ID =i_bd_id;
    END IF;
  ELSE
    UPDATE DEAL SET DCT_ENABLED_FL='N', DCT_NOTIFY_FL ='N' WHERE BD_ID =i_bd_id;
  END IF;
  ---------------------------------------------
  --SETTING DCT EXPIRE THRESHOLD PCT
  ---------------------------------------------
  IF L_USE_MC_CHARGE_FOR_DCT_FL ='N' THEN
    L_O_DCTEXPIRETHRESHOLDPCT  :=L_EXPIRETHRESHOLDPCTFIELD;
  ELSE
    IF L_DEAL_RISK_FL='Y' THEN
      BEGIN
        SELECT DCT_HR_EXPIRE_THRESHOLD_PCT
        INTO L_o_DCTEXPIRETHRESHOLDPCT
        FROM MC_CHARGE MC,
          DEAL D
        WHERE MC.BUS_MODEL_CD=D.BUS_MODEL_CD
        AND MC.COUNTRY_CD    =D.CONTROL_CNTRY_CD
        AND MC.MC_CHRG       =D.MC_CHARGE
        AND D.BD_ID          =I_BD_ID;
      EXCEPTION
      WHEN no_data_found THEN
        L_o_DCTEXPIRETHRESHOLDPCT:=1;
      END;
    ELSE
      BEGIN
        SELECT MAX_QTY_THRESHOLD_PCT
        INTO L_o_DCTEXPIRETHRESHOLDPCT
        FROM MC_CHARGE MC,
          DEAL D
        WHERE MC.BUS_MODEL_CD=D.BUS_MODEL_CD
        AND MC.COUNTRY_CD    =D.CONTROL_CNTRY_CD
        AND MC.MC_CHRG       =D.MC_CHARGE
        AND D.BD_ID          =I_BD_ID;
      EXCEPTION
      WHEN NO_DATA_FOUND THEN
        L_o_DCTEXPIRETHRESHOLDPCT:=1;
      END;
    END IF;
  END IF;
  I_O_DCTEXPIRETHRESHOLDPCT:=L_o_DCTEXPIRETHRESHOLDPCT;
EXCEPTION
WHEN OTHERS THEN
  I_O_DCTEXPIRETHRESHOLDPCT:=1;
  L_MSG_TYPE               :='WARNING';
  L_ERRORS                 := 'An error was encountered while saving Deal Comments - ' || SQLCODE || ' -ERROR- ' || SQLERRM;
  INSERTERROR_OUTPUT_MESSAGES ( NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, L_ERRORS, L_MSG_TYPE, I_DEAL_CREATION_GUID, NULL, NULL,L_ERRORS);
  --dbms_output.PUT_LINE('SET DCT Status In Exception');
  --dbms_output.put_line('l_errors    '||l_errors);
END SET_DCT_STATUS;
FUNCTION is_oe_user_exists(
    i_bd_id  NUMBER,
    i_emp_nr NUMBER)
  RETURN VARCHAR2
IS
  l_oa_emp_cnt NUMBER;
BEGIN
  BEGIN
    SELECT 1
    INTO l_oa_emp_cnt
    FROM others_auth
    WHERE bd_id      = i_bd_id
    AND oa_hp_emp_nr = i_emp_nr;
  EXCEPTION
  WHEN NO_DATA_FOUND THEN
    l_oa_emp_cnt:=0;
  WHEN TOO_MANY_ROWS THEN
    l_oa_emp_cnt:=2;
  END;
  IF l_oa_emp_cnt > 0 THEN
    --dbms_output.PUT_LINE('OE Employee number exists');
    RETURN 'Y';
  ELSE
    --dbms_output.PUT_LINE('OE Employee number not exists');
    RETURN 'N';
  END IF;
EXCEPTION
WHEN OTHERS THEN
  --dbms_output.PUT_LINE('ERROR  :'||SQLCODE||'---'||sqlerrm);
  RETURN 'Error :'||sqlerrm;
END is_oe_user_exists;
FUNCTION add_reseller_a_new(
    I_DEAL_CREATION_GUID in varchar2,
    i_xmlnamespace      VARCHAR2,
    i_bd_id             NUMERIC,
    i_country_cd        VARCHAR2,
    i_region_cd         VARCHAR2,
    i_bus_model_cd      VARCHAR2,
    i_rslr_added_emp_nr NUMERIC,
    o_error_message OUT VARCHAR2)
  RETURN VARCHAR2
IS
  l_reseller_a_added VARCHAR2(1):='N';
  l_reccount         NUMERIC(10);
type bm_rec_type
IS
  RECORD
  (
    add_rslr_a_fl bus_model.add_rslr_a_fl%type,
    add_rslr_b_fl bus_model.add_rslr_b_fl%type,
    dflt_rslr_b_id bus_model.dflt_rslr_b_id%type,
    dflt_rslr_a_id bus_model.dflt_rslr_a_id%type );
  bm_rec bm_rec_type;
  l_msg_type           VARCHAR2(20);
  l_errors             VARCHAR2(3000);
  l_reseller_dtls_text VARCHAR2(300); -- stores the reseller ppro_id, contract_id, cac_cd
  reject_rslr_add      EXCEPTION;
BEGIN
  ----dbms_output.put_line (' adding reseller A ..start');
  BEGIN
    --get bus model default values for the reseller
    --dbms_output.put_line ('RA1');
    SELECT ADD_RSLR_A_FL ,
      add_rslr_b_fl ,
      dflt_rslr_b_id,--dflt_rslr_a_id, --CR 1261 Nov release
      dflt_rslr_a_id --dflt_rslr_b_id
    INTO bm_rec
    FROM bus_model
    WHERE bus_model_cd=i_bus_model_cd
    AND country_cd    =i_country_cd
    AND tenantid =(select nvl(tenantid_data_cd,'HPE') from deal where bd_id = i_bd_id);--AND tenantid =(select nvl(tenantid,'HPE') from deal where bd_id = i_bd_id);---Added for SMO changes (Modified column tenantid wit tenantid_data_cd for ederal project)
    --Check for whether we can add Default Reseller
    IF bm_rec.dflt_rslr_a_id IS NOT NULL THEN
      --  --dbms_output.put_line (' adding default reseller A');
      BEGIN
      INSERT
      INTO rslr_a
        (
          bd_id,
          rslr_id,
          quote_distrib_fl,     --'N'
          quote_apprvl_fl,      --'N'
          SR_EDIT_AUTH_FL,      --'N'
          can_recv_quote_fl,    --should come from XML - for default reseller it will be --'N'
          date_rslr_added,      --sysdate
          creation_dts,         --sysdate
          update_dts,           --sysdate
          contract_id,          --xref
          cac_cd,               --xref
          selected_contract_fl, --based on logic -- for default reseller  it will be --'N'
          iso_cntry_cd,         --RSLR_CNTRY_CD
          rslr_add_hp_emp_nr    -- deal creator no
        )
      SELECT i_bd_id,
        r.rslr_id,
        'N' QUOTE_DISTRIB_FL,
        'N' QUOTE_APPRVL_FL,
        'N' SR_EDIT_AUTH_FL,
        'N' can_recv_quote_fl,
        sysdate date_rslr_added,
        sysdate creation_dts,
        sysdate update_dts,
        rc.contract_id,
        rc.cac_cd,
        'N' selected_contract_fl,
        r.rslr_cntry_cd,
        i_rslr_added_emp_nr
      FROM reseller r,
        RSLR_CONTRACT_XREF RC
      WHERE r.rslr_id=bm_rec.dflt_rslr_a_id
      AND r.rslr_id  =rc.rslr_id(+)
      AND rownum     <2
      ORDER BY rc.update_dts DESC;
      EXCEPTION
      WHEN DUP_VAL_ON_INDEX THEN
      --dbms_output.put_line (' Default reseller already exists on the deal ');
      NULL;
      END;--End of add default reseller A Block
    END IF;
    --adding Reseller A
    IF (bm_rec.add_rslr_a_fl IS NOT NULL AND bm_rec.add_rslr_a_fl ='Y' ) THEN
      --dbms_output.put_line (' adding  reseller A other than default');
      --looping through each reseller in the XML.
      FOR rec IN
      (SELECT extract ( value (d), '//CanRecvQuoteFl/text()', i_xmlnamespace). getstringval () AS canrecvquotefl,
        extract ( value (d), '//ContractID/text()', i_xmlnamespace). getstringval ()           AS contractid,
        extract ( value (d), '//PartnerProID/text()', i_xmlnamespace). getstringval ()         AS partnerproid,
        extract ( value (D), '//ResellerID/text()', I_XMLNAMESPACE). GETSTRINGVAL ()           AS Resellerid,
        extract ( value (d), '//CACCD/text()', i_xmlnamespace). getstringval ()                AS caccd,
        extract ( value (d), '//DefaultStdDisc/text()', i_xmlnamespace). getstringval ()       AS defaultstddisc,
        extract ( value (d), '//PriceGeoCD/text()', i_xmlnamespace). getstringval ()           AS pricegeocd,
        extract ( value (d), '//PrimaryRslFl/text()', i_xmlnamespace). getstringval ()         AS primaryrslfl,
        extract ( value (d), '//RequestType/text()', i_xmlnamespace). getstringval ()         AS RequestType
      FROM edms_deal_queue x,
        TABLE ( xmlsequence ( extract ( x.xml_data_xml, 'DealCreationRequest/ResellerAs/ResellerA', i_xmlnamespace))) d
      WHERE x.deal_creation_guid                                                        =i_deal_creation_guid
      AND extract ( value (d), '//ResellerID/text()', i_xmlnamespace). getstringval () <> DECODE(bm_rec.dflt_rslr_a_id,NULL,' ',bm_rec.dflt_rslr_a_id)
      and extract ( value (d), '//RequestType/text()', i_xmlnamespace). getstringval () ='ADD'
      )
      LOOP
        --dbms_output.put_line (' can recvquote fl' || rec.canrecvquotefl ) ;
        --dbms_output.put_line ('contract id' || rec.contractid );
        --dbms_output.put_line ('rec.PartnerProID' || rec.partnerproid );
        --dbms_output.put_line ('rec.Resellerid' || rec.Resellerid );
        --dbms_output.put_line ('rec.CACCD' || rec.caccd );
        --dbms_output.put_line ('rec.DefaultStdDisc' || rec.defaultstddisc );
        --dbms_output.put_line ('rec.PriceGeoCD' || rec.pricegeocd );
        --dbms_output.put_line ('rec.PrimaryRslFl' ||rec.primaryrslfl );
        --dbms_output.put_line (' adding reseller A');
        --l_reseller_dtls_text :=' Partner Pro ID : ' || rec.partnerproid || ', CAC Code : ' || ltrim(rtrim(rec.caccd)) || ', Contract ID : ' || rec.contractid ||', Country : '|| i_country_cd ||' , Region : ' || i_region_cd;
        BEGIN
          --check if reseller is from NA Region - US or CA
          /*
          This change has been after a detailed meeting with Praveen Khan from SmartQuote, Mansi, Max ,Andrew and other business leads from eclipse and Smartquote
          We are ignoring the contract id from smart quote for NA - US and CA resellers
          */
          --dbms_output.put_line('checking NA REseller');
          BEGIN
            SELECT 1
            INTO l_reccount
            FROM reseller r
            WHERE NVL( r.rslr_ab,'AB') LIKE '%A%'
            AND NVL(r.FLAG_RSLR_STAT,'C')         <> 'D'
            AND NVL(r.spl_prc_eligibility_fl,'Y') <> 'N'
              --AND upper(r.rslr_search_key)           =upper(rec.partnerproid)
            AND r.rslr_id        = rec.Resellerid
            AND r.rslr_cntry_cd IN ( 'US','CA');
            --AND r.region_cd                        = 'NA';
          EXCEPTION
          WHEN NO_DATA_FOUND THEN
            l_reccount :=0;
          WHEN TOO_MANY_ROWS THEN
            l_reccount :=2;
          END;
          IF l_reccount >0 THEN
            --dbms_output.put_line('found NA REseller');
            --l_reseller_dtls_text :=' Partner Pro ID : ' || rec.partnerproid || ', CAC Code : ' || ltrim(rtrim(rec.caccd)) || ', Country : '|| i_country_cd ||' , Region : ' || i_region_cd;
            l_reseller_dtls_text :=' Reseller id : ' || rec.Resellerid || ', CAC Code : ' || ltrim(rtrim(rec.caccd)) || ', Country : '|| i_country_cd ||' , Region : ' || i_region_cd;
            --dbms_output.put_line ('NA Reseller ignore the contract id');
            INSERT
            INTO rslr_a
              (
                bd_id,
                rslr_id,
                quote_distrib_fl,     --'N'
                quote_apprvl_fl,      --'N'
                sr_edit_auth_fl,      --'N'
                can_recv_quote_fl,    --should come from XML - for default reseller it will be --'N'
                date_rslr_added,      --sysdate
                creation_dts,         --sysdate
                update_dts,           --sysdate
                contract_id,          --xref
                cac_cd,               --xref
                selected_contract_fl, --based on logic -- for default reseller  it will be --'N'
                iso_cntry_cd,         --RSLR_CNTRY_CD
                RSLR_ADD_HP_EMP_NR
              )
            SELECT i_bd_id,
              r.rslr_id,
              'N' QUOTE_DISTRIB_FL,
              'N' QUOTE_APPRVL_FL,
              'N' sr_edit_auth_fl,
              rec.canrecvquotefl,
              sysdate date_rslr_added,
              sysdate creation_dts,
              sysdate update_dts,
              'X',  --contract id
              NULL, --rec.caccd,
              rec.primaryrslfl,
              r.rslr_cntry_cd,
              i_rslr_added_emp_nr
            FROM RESELLER r,
              RSLR_A_ID rai,
              RSLR_CONTRACT_XREF rcx
            WHERE r.rslr_id = rai.rslr_id
            AND r.active_fl = rai.active_fl
            AND NVL( r.rslr_ab,'AB') LIKE '%A%'
            AND r.rslr_id = rcx.rslr_id(+)
            AND NVL(rcx.contract_tier,'A' ) LIKE '%A%'
            AND NVL(r.FLAG_RSLR_STAT,'C')         <> 'D'
            AND rai.active_fl                      = 'Y'
            AND NVL(r.spl_prc_eligibility_fl,'Y') <> 'N'
            AND r.rslr_id                          =rec.Resellerid
              ---AND upper(r.rslr_search_key)           = upper(rec.partnerproid)
              --AND rcx.cac_cd                         =ltrim(rtrim(rec.caccd))
              --AND RCX.CONTRACT_ID                    =LTRIM(RTRIM(REC.CONTRACTID))
              --AND TRUNC(rcx.end_dt)                 >=TRUNC(SYSDATE)
            AND rownum <2;
            --ORDER BY RCX.END_DT DESC;
          ELSE
            -- reseller is not from NA region --US or CA
            --l_reseller_dtls_text :=' Partner Pro ID : ' || rec.partnerproid || ', CAC Code : ' || ltrim(rtrim(rec.caccd)) || ', Contract ID : ' || rec.contractid ||', Country : '|| i_country_cd ||' , Region : ' || i_region_cd;
            l_reseller_dtls_text :=' Reseller Id  : ' || rec.Resellerid || ', CAC Code : ' || ltrim(rtrim(rec.caccd)) || ', Contract ID : ' || rec.contractid ||', Country : '|| i_country_cd ||' , Region : ' || i_region_cd;
            --dbms_output.put_line ('Not an NA Reseller');
            INSERT
            INTO rslr_a
              (
                bd_id,
                rslr_id,
                quote_distrib_fl,     --'N'
                quote_apprvl_fl,      --'N'
                sr_edit_auth_fl,      --'N'
                can_recv_quote_fl,    --should come from XML - for default reseller it will be --'N'
                date_rslr_added,      --sysdate
                creation_dts,         --sysdate
                update_dts,           --sysdate
                contract_id,          --xref
                cac_cd,               --xref
                selected_contract_fl, --based on logic -- for default reseller  it will be --'N'
                iso_cntry_cd,         --RSLR_CNTRY_CD
                RSLR_ADD_HP_EMP_NR
              )
            SELECT i_bd_id,
              r.rslr_id,
              'N' QUOTE_DISTRIB_FL,
              'N' QUOTE_APPRVL_FL,
              'N' sr_edit_auth_fl,
              rec.canrecvquotefl,
              sysdate date_rslr_added,
              sysdate creation_dts,
              sysdate update_dts,
              rcx.contract_id, --contract id
              rec.caccd,
              rec.primaryrslfl,
              r.rslr_cntry_cd,
              i_rslr_added_emp_nr
            FROM RESELLER r,
              RSLR_A_ID rai,
              RSLR_CONTRACT_XREF rcx
            WHERE r.rslr_id = rai.rslr_id
            AND r.active_fl = rai.active_fl
            AND NVL( r.rslr_ab,'AB') LIKE '%A%'
            AND r.rslr_id = rcx.rslr_id(+)
            AND NVL(rcx.contract_tier,'A' ) LIKE '%A%'
            AND NVL(r.FLAG_RSLR_STAT,'C')         <> 'D'
            AND rai.active_fl                      = 'Y'
            AND NVL(r.spl_prc_eligibility_fl,'Y') <> 'N'
            AND r.rslr_id                          = rec.Resellerid
              --  AND upper(r.rslr_search_key)           = upper(rec.partnerproid)
            AND rcx.cac_cd         =ltrim(rtrim(rec.caccd))
            AND RCX.CONTRACT_ID    =LTRIM(RTRIM(REC.CONTRACTID))
            AND TRUNC(rcx.end_dt) >=TRUNC(SYSDATE)
            AND rownum             <2
            ORDER BY RCX.END_DT DESC;
          END IF;
          IF (sql%rowcount <=0) THEN
            --dbms_output.put_line ('10001');
            l_msg_type :='ERROR';
            l_errors   :='Unable to Add Reseller A for the ' || l_reseller_dtls_text;
            --dbms_output.put_line ('Reseller Error : ' || l_errors);
            O_error_message:=l_errors;
            --dbms_output.put_line ('An error was encountered while adding NA Reseller - ' || SQLCODE || ' -ERROR- ' || SQLERRM);
            inserterror_output_messages ( NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, l_errors, l_msg_type, i_deal_creation_guid, NULL, NULL,l_errors);
            l_reseller_a_added:='N';
            --RAISE REJECT_RSLR_ADD;
            EXIT;
          ELSE
            l_reseller_a_added:='Y';
          END IF;
          --  --dbms_output.PUT_LINE (' Reseller A Rows Updated : ' || sql%rowcount);
          /*FROM reseller r,
          rslr_contract_xref rc
          WHERE r.ppro_id   =rec.partnerproid
          AND rc.contract_id=rec.contractid
          AND rc.cac_cd     =rec.caccd
          AND r.rslr_id =rc.rslr_id(+)
          AND rownum    <2
          ORDER BY rc.update_dts DESC;
          l_reseller_a_added:='Y';
          */
        EXCEPTION
        WHEN no_data_found THEN
          l_reseller_a_added:='N';
          l_msg_type        :='WARNING';
          L_ERRORS          :='Unable to Add Reseller A, Reseller or Reseller Contract details not available  for the ' || L_RESELLER_DTLS_TEXT;
          O_error_message   :=l_errors;
          inserterror_output_messages ( NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, l_errors, l_msg_type, i_deal_creation_guid, NULL, NULL,l_errors);
        WHEN dup_val_on_index THEN
          l_errors       := 'Reseller A already exists :'|| L_RESELLER_DTLS_TEXT;
          o_error_message:=l_errors;
          --dbms_output.put_line ('An error was encountered while adding NA Reseller - ' || SQLCODE || ' -ERROR- ' || SQLERRM);
          --l_msg_type :=c_m_type_warning;
          --insert into error and output table
          --INSERTERROR_OUTPUT_MESSAGES ( i_bd_id, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, l_errors, l_msg_type, g_deal_creation_guid, NULL, NULL,l_errors );
        END;
      END LOOP; --for reseller A
    ELSIF (bm_rec.add_rslr_a_fl IS NULL OR bm_rec.add_rslr_a_fl ='N' ) THEN
      l_reseller_a_added        :='N';
      l_msg_type                :='WARNING';
      l_errors                  :='Additional Reseller As cannot be added for this business model';
      O_error_message           :=l_errors;
      l_reseller_a_added        :='Y';---Added for BMI requirement
      --      inserterror_output_messages ( NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, l_errors, l_msg_type, i_deal_creation_guid, NULL, NULL,l_errors);
    END IF;
    --dbms_output.put_line (' adding reseller A ..ends');
    RETURN l_reseller_a_added;
  EXCEPTION
  WHEN no_data_found THEN
    l_reseller_a_added:='N';
    l_msg_type        :='ERROR';
    l_errors          :='Bus Model details not found for the bus model ' || i_bus_model_cd || ', and  country : ' || i_country_cd;
    O_error_message   :=l_errors;
    RAISE REJECT_RSLR_ADD;
    --  WHEN OTHERS THEN
    --  l_reseller_a_added:='N';
    --l_msg_type        :='ERROR';
    --l_errors          := 'An error was encountered while getting bus model details for adding Reseller A - ' || SQLCODE || ' -ERROR- ' || sqlerrm;
    --raise reject_rslr_add;
  END;
  RETURN l_reseller_a_added;
EXCEPTION
WHEN reject_rslr_add THEN
  l_reseller_a_added:='N';
  --insert into error and output table
  /*
  i_bd_id in number ,
  i_bd_nr            NUMBER,
  i_bd_version_nr    NUMBER,
  i_deal_prog_cd     VARCHAR2,
  i_bdme_aprvl_cd    VARCHAR2,
  i_quote_dist_cd    VARCHAR2,
  i_euv_stat_cd      VARCHAR2,
  i_high_risk_fl     VARCHAR2,
  i_risk_reason_desc VARCHAR2,
  i_risk_desc        VARCHAR2,
  i_error_desc       VARCHAR2,
  i_msg_type         VARCHAR2,
  i_deal_guid        VARCHAR2,
  i_won_lost_stat_cd varchar2,
  i_quote_dist_dt_gmt DATE
  */
  INSERTERROR_OUTPUT_MESSAGES ( NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, L_ERRORS, L_MSG_TYPE, I_DEAL_CREATION_GUID, NULL, NULL,L_ERRORS );
  RETURN l_reseller_a_added;
WHEN OTHERS THEN
  l_reseller_a_added:='N';
  L_MSG_TYPE        :='ERROR';
  L_ERRORS          := 'An error was encountered while adding Reseller A - ' || SQLCODE || ' -ERROR- ' || SQLERRM;
  g_user_message    :='An error was encountered while adding a Reseller A';
  INSERTERROR_OUTPUT_MESSAGES ( NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, L_ERRORS, L_MSG_TYPE, I_DEAL_CREATION_GUID, NULL, NULL,g_user_message );
  --insert into error and output table
  /*
  i_bd_id in number ,
  i_bd_nr            NUMBER,
  i_bd_version_nr    NUMBER,
  i_deal_prog_cd     VARCHAR2,
  i_bdme_aprvl_cd    VARCHAR2,
  i_quote_dist_cd    VARCHAR2,
  i_euv_stat_cd      VARCHAR2,
  i_high_risk_fl     VARCHAR2,
  i_risk_reason_desc VARCHAR2,
  i_risk_desc        VARCHAR2,
  i_error_desc       VARCHAR2,
  i_msg_type         VARCHAR2,
  i_deal_guid        VARCHAR2,
  i_won_lost_stat_cd varchar2,
  i_quote_dist_dt_gmt DATE
  */
  inserterror_output_messages ( NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, l_errors, l_msg_type, i_deal_creation_guid, NULL, NULL,l_errors );
  RETURN l_reseller_a_added;
END add_reseller_a_new;


FUNCTION add_reseller_b_new(
    i_deal_creation_guid IN VARCHAR2,
    i_xmlnamespace      VARCHAR2,
    i_bd_id             NUMERIC,
    i_country_cd        VARCHAR2,
    i_region_cd         VARCHAR2,
    i_bus_model_cd      VARCHAR2,
    i_rslr_added_emp_nr NUMERIC ,
    o_error_message OUT VARCHAR2)
  RETURN VARCHAR2
IS
  l_reseller_b_added VARCHAR2(1):='N';
  l_reccount         NUMERIC(10);
type bm_rec_type
IS
  RECORD
  (
    add_rslr_a_fl bus_model.add_rslr_a_fl%type,
    add_rslr_b_fl bus_model.add_rslr_b_fl%type,
    dflt_rslr_b_id bus_model.dflt_rslr_b_id%type,
    dflt_rslr_a_id bus_model.dflt_rslr_a_id%type );
  bm_rec bm_rec_type;
  l_msg_type           VARCHAR2(20);
  l_errors             VARCHAR2(3000);
  L_RESELLER_DTLS_TEXT VARCHAR2(300);
  reject_rslr_add      EXCEPTION;
  l_def_rslr_count     NUMBER (10);
BEGIN
  o_error_message:=NULL;
  ----dbms_output.put_line (' adding reseller B ..start');
  l_def_rslr_count:=0;
  BEGIN
    --get bus model default values for the reseller
    SELECT add_rslr_a_fl ,
      add_rslr_b_fl ,
      dflt_rslr_b_id,--dflt_rslr_a_id, -- CR 1261 Nov Release
      dflt_rslr_a_id --dflt_rslr_b_id
    INTO bm_rec
    FROM bus_model
    WHERE bus_model_cd=i_bus_model_cd
    AND country_cd    =i_country_cd
    AND tenantid =(select nvl(tenantid_data_cd,'HPE') from deal where bd_id = i_bd_id);--AND tenantid =(select nvl(tenantid,'HPE') from deal where bd_id = i_bd_id);---Added for SMO changes( Modified tenantid with tenantid_data_cd for Federal project)
    --Check for whether we can add Default Reseller
    IF bm_rec.dflt_rslr_b_id IS NOT NULL THEN
      ----dbms_output.put_line (' adding default reseller A');
      BEGIN
      INSERT
      INTO rslr_b
        (
          bd_id,
          rslr_id,
          quote_distrib_fl,
          quote_apprvl_fl,
          sr_edit_auth_fl,
          can_recv_quote_fl,
          date_rslr_added,
          creation_dts,
          UPDATE_DTS,
          contract_id,
          cac_cd,
          rslr_add_hp_emp_nr
        )
      SELECT i_bd_id,
        r.rslr_id,
        'N' QUOTE_DISTRIB_FL,
        'N' QUOTE_APPRVL_FL,
        'N' SR_EDIT_AUTH_FL,
        'N' can_recv_quote_fl,
        sysdate date_rslr_added,
        sysdate creation_dts,
        sysdate update_dts,
        rc.contract_id,
        rc.cac_cd,
        i_rslr_added_emp_nr
      FROM reseller r,
        rslr_contract_xref rc
      WHERE r.rslr_id=bm_rec.dflt_rslr_b_id
      AND r.rslr_id  =rc.rslr_id(+)
      AND rownum     <2
      ORDER BY rc.update_dts DESC;
          IF sql%ROWCOUNT      =0 THEN
            l_reseller_b_added:='N';
            l_def_rslr_count  :=sql%rowcount;
          ELSE
            l_reseller_b_added:='Y';
            l_def_rslr_count  :=sql%rowcount;
          END IF;
      EXCEPTION
      WHEN DUP_VAL_ON_INDEX THEN
      --dbms_output.put_line (' Default Reseller B already found on the deal ');
      NULL;
      END;
    END IF;
    --extract ( value (d), '//CACCD/text()', i_xmlnamespace). getstringval ()                AS caccd,
    --adding Reseller B
    --dbms_output.put_line ('bm_rec.dflt_rslr_b_id ' || bm_rec.dflt_rslr_b_id);
    ----,
    --if approved for 3958 then put the below conditionin for loop
    --and extract ( value (d), '//ResellerID /text()', i_xmlnamespace). getstringval () <>bm_rec.dflt_rslr_b_id
    ------
    IF (bm_rec.add_rslr_b_fl IS NOT NULL AND bm_rec.add_rslr_b_fl ='Y' ) THEN
      FOR rec IN
      (SELECT extract ( value (d), '//CanRecvQuoteFl/text()', i_xmlnamespace). getstringval () AS canrecvquotefl,
        extract ( value (d), '//PartnerProID/text()', i_xmlnamespace). getstringval ()       AS partnerproid,
        extract ( value (d), '//ContractID/text()', i_xmlnamespace). getstringval ()         AS ContractID,
        extract ( value (d), '//ResellerID /text()', i_xmlnamespace). getstringval ()        AS Resellerid,
        extract ( value (d), '//RequestType/text()', i_xmlnamespace). getstringval ()        AS RequestType,
        extract ( value (d), '//RslrBContactNum/text()', i_xmlnamespace). getstringval ()    AS RslrBContactNum,--Added by Lakshmi for CR6008
        extract ( value (d), '//RslrBEmail/text()', i_xmlnamespace). getstringval ()         AS RslrBEmail,--Added by Lakshmi for CR6008
        extract ( value (d), '//RslrBFirstName/text()', i_xmlnamespace). getstringval ()     AS RslrBFirstName,--Added by Lakshmi for CR6008
        extract ( value (d), '//RslrBLastName/text()', i_xmlnamespace). getstringval ()      AS RslrBLastName--Added by Lakshmi for CR6008
      FROM edms_deal_queue x,
        TABLE ( xmlsequence ( extract ( x.xml_data_xml, 'DealCreationRequest/ResellerBs/ResellerB', i_xmlnamespace))) d
      WHERE x.deal_creation_guid                                                         =i_deal_creation_guid
      AND extract ( value (d), '//ResellerID /text()', i_xmlnamespace). getstringval () <> DECODE(bm_rec.dflt_rslr_b_id,NULL,' ',bm_rec.dflt_rslr_b_id)
      AND extract ( value (d), '//RequestType/text()', i_xmlnamespace). getstringval ()  ='ADD'
      )
      LOOP
        --dbms_output.put_line (' Can recvquote fl' || rec.canrecvquotefl ) ;
        --dbms_output.put_line (' Contract id' || rec.contractid );
        --dbms_output.put_line (' Rec.PartnerProID' || rec.partnerproid );
        --dbms_output.put_line (' Rec.ResellerID' || rec.Resellerid );
        --dbms_output.put_line (' Adding reseller B');
        -- l_reseller_dtls_text :=' Partner Pro ID : ' || rec.partnerproid || ', Contract ID : ' || rec.contractid ||', Country : '|| i_country_cd ||' , Region : ' || i_region_cd;
        l_reseller_dtls_text :=' Reseller Id : ' || rec.Resellerid || ', Contract ID : ' || rec.contractid ||', Country : '|| i_country_cd ||' , Region : ' || i_region_cd;
        ----dbms_output.put_line ('default reseller count ' || l_def_rslr_count);
        BEGIN
          BEGIN
            SELECT 1
            INTO l_reccount
            FROM reseller r
            WHERE NVL(r.FLAG_RSLR_STAT,'C')       <> 'D'
            AND NVL(r.spl_prc_eligibility_fl,'Y') <> 'N'
              --  AND UPPER(r.rslr_search_key)           =upper(REC.partnerproid)
            AND r.rslr_id        = rec.Resellerid
            AND r.rslr_cntry_cd IN ( 'US','CA');
            --AND r.region_cd                        = 'NA';
          EXCEPTION
          WHEN NO_DATA_FOUND THEN
            l_reccount :=0;
          WHEN TOO_MANY_ROWS THEN
            l_reccount :=2;
          END;
          --l_def_rslr_count:=0;
          --select count(*) into l_def_rslr_count from rslr_b where rslr_id=rec.Resellerid and bd_id=i_bd_id;
          ----dbms_output.put_line (' Non NA Reseller B  ' ||rec.Resellerid || ' exists ? '  || l_def_rslr_count);
          IF l_reccount >0 THEN
            --dbms_output.PUT_LINE ('NA reseller B ');
            INSERT
            INTO rslr_b
              (
                bd_id,
                rslr_id,
                quote_distrib_fl,
                quote_apprvl_fl,
                sr_edit_auth_fl,
                can_recv_quote_fl,
                date_rslr_added,
                creation_dts,
                update_dts,
                contract_id,
                cac_cd,
                rslr_add_hp_emp_nr,
                contact_first_nm,--Added by Lakshmi for CR6008
                contact_last_nm,--Added by Lakshmi for CR6008
                contact_bus_ph_nr,--Added by Lakshmi for CR6008
                contact_email_addr--Added by Lakshmi for CR6008
              )
            SELECT i_bd_id,
              r.rslr_id,
              'N' QUOTE_DISTRIB_FL,
              'N' QUOTE_APPRVL_FL,
              'N' sr_edit_auth_fl,
              rec.canrecvquotefl,
              sysdate date_rslr_added,
              sysdate creation_dts,
              sysdate update_dts,
              'X', -- contract id
              rcx.cac_cd,
              i_rslr_added_emp_nr,
              rec.RslrBFirstName,
              rec.RslrBLastName,
              rec.RslrBContactNum,
              rec.RslrBEmail
            FROM reseller r,
              /*+ WW_CNTRY c*/
              rslr_contract_xref rcx
            WHERE r.rslr_id = rcx.rslr_id(+)
              --AND r.region_cd                        = i_region_cd
              --AND r.rslr_cntry_cd                    = i_country_cd
            AND r.rslr_id = rec.Resellerid
              --and upper(r.rslr_search_key)         =upper(rec.partnerproid)
            AND r.active_fl                        = 'Y'
            AND NVL(R.SPL_PRC_ELIGIBILITY_FL,'Y') <> 'N'
            AND r.rslr_id                          = rcx.rslr_id(+)
            AND NVL(RCX.CONTRACT_TIER(+),'B') LIKE '%B%'
            AND NVL(R.FLAG_RSLR_STAT,'C') <> 'D'
              --AND RCX.CONTRACT_ID            =REC.CONTRACTID
            AND rownum <2;
            --ORDER BY rcx.update_dts DESC;
          ELSE
            --dbms_output.put_line (' Non NA Reseller B');
            BEGIN
            INSERT
            INTO rslr_b
              (
                bd_id,
                rslr_id,
                quote_distrib_fl,
                quote_apprvl_fl,
                sr_edit_auth_fl,
                can_recv_quote_fl,
                date_rslr_added,
                creation_dts,
                update_dts,
                contract_id,
                cac_cd,
                rslr_add_hp_emp_nr,
                contact_first_nm,
                contact_last_nm,
                contact_bus_ph_nr,
                contact_email_addr
              )
            SELECT i_bd_id,
              r.rslr_id,
              'N' QUOTE_DISTRIB_FL,
              'N' QUOTE_APPRVL_FL,
              'N' sr_edit_auth_fl,
              rec.canrecvquotefl,
              sysdate date_rslr_added,
              sysdate creation_dts,
              sysdate update_dts,
              DECODE (rcx.contract_id,NULL,'X',rcx.contract_id),
              rcx.cac_cd,
              i_rslr_added_emp_nr,
              rec.RslrBFirstName,
              rec.RslrBLastName,
              rec.RslrBContactNum,
              rec.RslrBEmail
            FROM reseller r,
              /*+ WW_CNTRY c*/
              rslr_contract_xref rcx
            WHERE r.rslr_id = rcx.rslr_id(+)
              --AND r.region_cd                        = i_region_cd
              --AND r.rslr_cntry_cd                    = i_country_cd
            AND r.rslr_id =rec.Resellerid
              -- AND upper(r.rslr_search_key)         =upper(rec.partnerproid)
            AND r.active_fl                        = 'Y'
            AND NVL(R.SPL_PRC_ELIGIBILITY_FL,'Y') <> 'N'
            AND r.rslr_id                          = rcx.rslr_id(+)
            AND NVL(RCX.CONTRACT_TIER(+),'B') LIKE '%B%'
            AND NVL(r.flag_rslr_stat,'C') <> 'D'
            AND RCX.CONTRACT_ID (+)        =REC.CONTRACTID
            AND rownum                     <2
            ORDER BY rcx.update_dts DESC;
            EXCEPTION
            WHEN DUP_VAL_ON_INDEX THEN
            --dbms_output.PUT_LINE('Duplicate reseller found');
            NULL;
            END;
          END IF;
          IF (sql%rowcount <=0) THEN
            L_MSG_TYPE     :='WARNING';
            L_ERRORS       :='Cannot Create Deal. Unable to Add Reseller B for the ' || L_RESELLER_DTLS_TEXT;
            o_error_message:=L_ERRORS;
            --inserterror_output_messages ( NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, l_errors, l_msg_type, i_deal_creation_guid, NULL, NULL,l_errors);
            l_reseller_b_added:='N';
            EXIT;
          ELSE
            l_reseller_B_added:='Y';
          END IF;
          --  --dbms_output.PUT_LINE (' Reseller B Rows Updated : ' || sql%rowcount);
        EXCEPTION
        WHEN DUP_VAL_ON_INDEX THEN
            --dbms_output.put_line (' Reseller B already found on the deal ');
            --l_reseller_B_added:='N';
          L_MSG_TYPE        :='WARNING';
          --L_ERRORS          :='Reseller B not found for the PPRO_ID ' || REC.PARTNERPROID ||', Contract ID :' || REC.CONTRACTID ;
          --L_ERRORS       :='Reseller B already exists for the Reseller Id ' || REC.Resellerid ||', Contract ID :' || REC.CONTRACTID ;
            L_ERRORS       :='Reseller B already exists for the Reseller Id ' || REC.Resellerid ;
          inserterror_output_messages ( NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, l_errors, l_msg_type, i_deal_creation_guid, NULL, NULL,l_errors);
          o_error_message:=L_ERRORS;

        WHEN no_data_found THEN
          l_reseller_B_added:='N';
          L_MSG_TYPE        :='ERROR';
          -- L_ERRORS          :='Cannot create deal.Reseller B not found for the PPRO_ID ' || REC.PARTNERPROID ||', Contract ID :' || REC.CONTRACTID ;
          L_ERRORS       :='Cannot create deal.Reseller B not found for the Reseller Id ' || REC.Resellerid ||', Contract ID :' || REC.CONTRACTID ;
          o_error_message:=L_ERRORS;
          inserterror_output_messages ( NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, l_errors, l_msg_type, i_deal_creation_guid, NULL, NULL,l_errors);
        END;
      END LOOP; --for reseller B
    ELSIF (bm_rec.add_rslr_B_fl IS NULL OR bm_rec.add_rslr_b_fl ='N' ) THEN
      l_reseller_b_added        :='N';
      l_msg_type                :='WARNING';
      L_ERRORS                  :='Additional Reseller Bs cannot be added for this business model.';
      l_reseller_b_added        :='Y';--Added per BMI requiremet
      inserterror_output_messages ( NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, l_errors, l_msg_type, i_deal_creation_guid, NULL, NULL,l_errors);
      o_error_message:=L_ERRORS;
    END IF;
    --dbms_output.put_line (' adding reseller b ..ends');
    RETURN l_reseller_b_added;
  EXCEPTION
  WHEN no_data_found THEN
    l_reseller_b_added:='N';
    l_msg_type        :='ERROR';
    l_errors          :='Bus Model details not found for the bus model ' || i_bus_model_cd || ', and  country : ' || i_country_cd;
    o_error_message   :=L_ERRORS;
    RAISE REJECT_RSLR_ADD;
  WHEN OTHERS THEN
    l_reseller_b_added:='N';
    l_msg_type        :='ERROR';
    l_errors          := 'An error was encountered while getting bus model details for adding Reseller B - ' || SQLCODE || ' -ERROR- ' || sqlerrm;
    o_error_message   :=L_ERRORS;
    raise reject_rslr_add;
  END;
  RETURN l_reseller_b_added;
EXCEPTION
WHEN reject_rslr_add THEN
  l_reseller_b_added:='N';
  --insert into error and output table
  /*
  i_bd_id in number ,
  i_bd_nr            NUMBER,
  i_bd_version_nr    NUMBER,
  i_deal_prog_cd     VARCHAR2,
  i_bdme_aprvl_cd    VARCHAR2,
  i_quote_dist_cd    VARCHAR2,
  i_euv_stat_cd      VARCHAR2,
  i_high_risk_fl     VARCHAR2,
  i_risk_reason_desc VARCHAR2,
  i_risk_desc        VARCHAR2,
  i_error_desc       VARCHAR2,
  i_msg_type         VARCHAR2,
  i_deal_guid        VARCHAR2,
  i_won_lost_stat_cd varchar2,
  i_quote_dist_dt_gmt DATE
  */
  inserterror_output_messages ( NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, l_errors, l_msg_type, i_deal_creation_guid, NULL, NULL,l_errors );
  RETURN l_reseller_b_added;
WHEN OTHERS THEN
  l_reseller_b_added:='N';
  l_msg_type        :='ERROR';
  l_errors          := 'An error was encountered while  adding Reseller B - ' || SQLCODE || ' -ERROR- ' || sqlerrm;
  g_user_message    :='An error was encountered while  adding Reseller B';
  --insert into error and output table
  /*
  i_bd_id in number ,
  i_bd_nr            NUMBER,
  i_bd_version_nr    NUMBER,
  i_deal_prog_cd     VARCHAR2,
  i_bdme_aprvl_cd    VARCHAR2,
  i_quote_dist_cd    VARCHAR2,
  i_euv_stat_cd      VARCHAR2,
  i_high_risk_fl     VARCHAR2,
  i_risk_reason_desc VARCHAR2,
  i_risk_desc        VARCHAR2,
  i_error_desc       VARCHAR2,
  i_msg_type         VARCHAR2,
  i_deal_guid        VARCHAR2,
  i_won_lost_stat_cd varchar2,
  i_quote_dist_dt_gmt DATE
  */
  inserterror_output_messages ( NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, l_errors, l_msg_type, i_deal_creation_guid, NULL, NULL,g_user_message );
  RETURN l_reseller_b_added;
END add_reseller_b_new;


FUNCTION convert_to_blob(
    i_cmnt CLOB)--(i_cmnt varchar2)--,o_blobcmnt out blob)
  RETURN BLOB
IS
  l_tmpblob BLOB;
  l_newcmnt CLOB;--VARCHAR2(32767);
  l_tmp_cmnt VARCHAR2(32767);
  l_limit    NUMBER :=500;
BEGIN
  l_newcmnt :=i_cmnt;
  dbms_lob.createtemporary(l_tmpblob, TRUE);
  WHILE(LENGTH(l_newcmnt) <>0)
  LOOP
    l_tmp_cmnt :=DBMS_LOB.SUBSTR(l_newcmnt,l_limit,1);--(l_newcmnt,1,l_limit);
    --dbms_output.put_line(' temp cmnt '||l_tmp_cmnt);
    DBMS_LOB.APPEND(l_tmpblob, utl_raw.cast_to_raw(l_tmp_cmnt));
    l_newcmnt:=DBMS_LOB.substr(l_newcmnt,LENGTH(l_newcmnt),l_limit+1);--(l_newcmnt,l_limit+1);
    --dbms_output.put_line(' temp cmnt '||l_newcmnt);
  END LOOP;
  RETURN(l_tmpblob);
EXCEPTION
WHEN OTHERS THEN
  --dbms_output.put_line('Error in Convert to Blob  :'||sqlerrm);
  RETURN NULL;
END;
FUNCTION replace_special_chars(
    i_text IN VARCHAR2)
  RETURN VARCHAR2
IS
  l_replace_spcl_chars VARCHAR2(4000);
BEGIN
  l_replace_spcl_chars:=i_text;
  l_replace_spcl_chars:=REPLACE(l_replace_spcl_chars,'&'||'amp;','&');
  l_replace_spcl_chars:=REPLACE(l_replace_spcl_chars,'&'||'gt;','>');
  l_replace_spcl_chars:=REPLACE(l_replace_spcl_chars,'&'||'lt;','<');
  l_replace_spcl_chars:=REPLACE(l_replace_spcl_chars,'&'||'quot;','"');
  l_replace_spcl_chars:=REPLACE(l_replace_spcl_chars,'&'||'#39;',''''); ---replace all '(single quotes)
  l_replace_spcl_chars:=REPLACE(l_replace_spcl_chars,'&'||'apos;','''');---replace all '(single quotes)
  --dbms_output.put_line('After replace  1 :'||l_replace_spcl_chars);
  RETURN l_replace_spcl_chars;
EXCEPTION
WHEN OTHERS THEN
  --dbms_output.put_line('Error in Convert to Blob  :'||sqlerrm);
  RETURN NULL;
END;
FUNCTION replace_special_chars(
    i_text IN CLOB)
  RETURN CLOB
IS
  l_replace_spcl_chars CLOB;
BEGIN
  l_replace_spcl_chars:=i_text;
  l_replace_spcl_chars:=REPLACE(l_replace_spcl_chars,'&'||'amp;','&');
  l_replace_spcl_chars:=REPLACE(l_replace_spcl_chars,'&'||'gt;','>');
  l_replace_spcl_chars:=REPLACE(l_replace_spcl_chars,'&'||'lt;','<');
  l_replace_spcl_chars:=REPLACE(l_replace_spcl_chars,'&'||'quot;','"');
  l_replace_spcl_chars:=REPLACE(l_replace_spcl_chars,'&'||'#39;',''''); ---replace all '(single quotes)
  l_replace_spcl_chars:=REPLACE(l_replace_spcl_chars,'&'||'apos;','''');---replace all '(single quotes)
  --dbms_output.put_line('After replace  IN BLOB :'||l_replace_spcl_chars);
  RETURN l_replace_spcl_chars;
EXCEPTION
WHEN OTHERS THEN
  --dbms_output.put_line('Error in Convert to Blob  :'||sqlerrm);
  RETURN NULL;
END;
PROCEDURE get_deal_details(
    p_bd_id IN NUMBER,
    p_deal_header OUT rctype,
    p_deal_won_lost OUT rctype,
    p_deal_euv_details OUT rctype,
    p_cust_details OUT rctype,
    p_user_details OUT rctype,
    p_agent_incentive_details OUT rctype,
    p_comp_plpn OUT rctype,
    p_comp_pl OUT rctype,
    p_affiliate_deatils OUT rctype,
    p_rslra_details OUT rctype,
    p_rslrb_details OUT rctype)
IS
TYPE usr_rec
IS
  RECORD
  (
    DealUserDescription VARCHAR2(100),
    dealusertypecd      VARCHAR2(3),
    EmployeeNr          NUMBER);
TYPE usr_tab
IS
  TABLE OF usr_rec INDEX BY binary_integer;
  l_cntry_cd bus_model.country_cd%type;
  l_bus_model bus_model.bus_model_cd%type;
  l_tenantid  deal.tenantid_data_cd%type;--l_tenantid  deal.tenantid%type;---Added for SMO Changes (modified tenantid with tenantid_data_cd for Federal project)
BEGIN
  ---deal header----
  OPEN p_deal_header FOR SELECT asap_indicator_cd,
  beg_dt,
  bus_model_cd,
  crm_id,
  complex_deal_fl,
  conflict_chk_fl,
  control_cntry_cd,
  curr_cd,
  deal_desc_tx,
  bd_nr,
  end_dt,
  lead_bus_grp,
  bus_unit_cd,
  mc_charge,
  price_list_cd,
  price_term_cd,
  routing_indicator_cd,
  single_cmpny_deal_fl,
  crm_opp_nr, --SFDC OPPID
  request_id----SFDC REQUEST ID
  FROM deal WHERE bd_id = p_bd_id;
  --deal won lost details---
  OPEN p_deal_won_lost FOR SELECT w_l_stat_cd,
  deal_won_upd_emp_nr,
  e.email_unix_addr_tx,
  w_l_upd_dt,
  w_l_prob,
  w_l_crt_dt,
  w_l_crt_emp_nr FROM deal d,
  employee e WHERE d.bd_id = p_bd_id AND e.emp_nr = d.deal_won_upd_emp_nr ;
  --deal euv details
  OPEN p_deal_euv_details FOR SELECT euv_type,
  EUV_COMP_DTS,
  EUV_EMP_NR,
  E.EMAIL_UNIX_ADDR_TX,
  EUV_REASON_CD,
  EUV_REASON_TXT FROM deal_euv d,
  employee e WHERE bd_id = p_bd_id AND d.EUV_EMP_NR = e.emp_nr;
  --Customer details
  OPEN p_cust_details FOR SELECT d.crm_id crmid,
  d.crm_id crmopportunityid,
  e.CISYS_ID cisys_id,
  d.euc_industry_nr custindustry,
  d.EUC_RFP_NR CUSTRFPNR,
  d.cust_seg_cd CUSTSEGMENT,
  d.EUC_DUNS_NR dunsnr,
  e.PRESALES_CUST_ID presalescustid,
  e.PRESALES_SOURCE presalessource,
  e.euc_cmpny_nm CompanyName,
  e.org_id MDCPOrgid,
  e.dft_endcust_otrprtysite_id MDCPOtherPartyId FROM deal d,
  eu_cust e WHERE d.bd_id =p_bd_id AND e.euc_nr = eu_cust_nr;
  ----User details
  OPEN p_user_details FOR SELECT 'Deal Creator' DealUserDescription,
  'DC' dealusertypecd ,
  init_hp_emp_nr EmployeeNr,
  e.email_unix_addr_tx email_address FROM deal d,
  employee e WHERE d.bd_id = p_bd_id AND d.init_hp_emp_nr =e.emp_nr
  UNION
  SELECT 'Deal Lead' DealUserDescription,
    'DL' dealusertypecd ,
    deal_lead_emp_nr EmployeeNr,
    e.email_unix_addr_tx email_address
  FROM deal d,
    employee e
  WHERE d.bd_id          = p_bd_id
  AND d.deal_lead_emp_nr =e.emp_nr
  UNION
  SELECT 'District Sales Manager' DealUserDescription,
    'DM' dealusertypecd ,
    dsm_hp_emp_nr EmployeeNr,
    e.email_unix_addr_tx email_address
  FROM deal d,
    employee e
  WHERE d.bd_id       = p_bd_id
  AND d.dsm_hp_emp_nr =e.emp_nr
  UNION
  SELECT 'Sales Rep' DealUserDescription,
    'SR' dealusertypecd ,
    driving_hp_emp_nr EmployeeNr,
    e.email_unix_addr_tx email_address
  FROM deal d,
    employee e
  WHERE d.bd_id           = p_bd_id
  AND d.driving_hp_emp_nr =e.emp_nr;
  ---agenet incentive details
  OPEN p_agent_incentive_details FOR SELECT * FROM deal_pl WHERE bd_id = p_bd_id;
  ---Competetors plpn--
  OPEN p_comp_plpn FOR SELECT * FROM comp_mfg_plpn WHERE bd_id = p_bd_id;
  ---competitors pl---
  OPEN p_comp_pl FOR SELECT * FROM comp_mfg_pl WHERE bd_id = p_bd_id;
  ---affiliate details--
  OPEN p_affiliate_deatils FOR
  --select * from EU_AUTH_AFFIL where bd_id  = p_bd_id;
  SELECT ea.*,
  ec.presales_cust_id FROM EU_AUTH_AFFIL ea,
  eu_cust ec WHERE ea.bd_id = p_bd_id AND ea.euc_nr = ec.euc_nr;
  ---reseller A details---
  SELECT bus_model_cd,
    control_cntry_cd,
    nvl(tenantid_data_cd,'HPE') -- nvl(tenantid,'HPE') ---Added for SMO Changes (Modified tenantid column with tenantid_data_cd for Federal project)
  INTO l_bus_model,
    l_cntry_cd,
    l_tenantid ---Added for SMO Changes
  FROM deal
  WHERE bd_id = p_bd_id;
  OPEN p_rslra_details FOR SELECT can_recv_quote_fl,
  contract_id,
  NULL PPRO_ID,
  ra.rslr_id,
  cac_cd,
  selected_contract_fl,
  r.cust_name,         --reseller name
  NULL DefaultStdDisc, --NUll as not used in deal creation proc
  NULL PriceGeoCD      --NUll as not used in deal creation proc
  FROM reseller r ,
  rslr_a ra WHERE r.rslr_id =ra.rslr_id AND ra.bd_id = p_bd_id AND NOT EXISTS
  (SELECT 1
  FROM bus_model
  WHERE dflt_rslr_a_id= ra.rslr_id
  AND bus_model_cd    =l_bus_model
  AND country_cd      = l_cntry_cd
  AND tenantid =l_tenantid ---Added for SMO Changes
  );
  --and ra.rslr_id not in (select dflt_rslr_a_id from bus_model where bus_model_cd =l_bus_model and country_cd =l_cntry_cd );
  --?????????? <DefaultStdDisc>0</DefaultStdDisc>  ,?????????? <PriceGeoCD>ES</PriceGeoCD>  are not included
  OPEN p_rslrb_details FOR SELECT can_recv_quote_fl,
  contract_id,
  NULL PPRO_ID,
  rb.rslr_id,
  r.cust_name,         --reseller name
  NULL DefaultStdDisc, --NUll as not used in deal creation proc
  NULL PriceGeoCD FROM reseller r ,
  rslr_b rb WHERE r.rslr_id =rb.rslr_id AND rb.bd_id = p_bd_id AND NOT EXISTS
  (SELECT 1
  FROM bus_model
  WHERE dflt_rslr_b_id= rb.rslr_id
  AND bus_model_cd    =l_bus_model
  AND country_cd      = l_cntry_cd
  AND tenantid =l_tenantid
  );
  --and rb.rslr_id not in (select dflt_rslr_b_id from bus_model where bus_model_cd =l_bus_model and country_cd =l_cntry_cd );
END;
PROCEDURE ins_deal_timings(
    p_bd_id IN deal_timings.bd_id%type,
    --   p_seq_nr IN deal_timings.seq_nr%type,
    p_start_time_gmt DATE,
    p_start_emp_nr IN deal_timings.start_hp_emp_nr%type,
    p_stop_time_gmt DATE,
    p_stop_emp_nr deal_timings.stop_hp_emp_nr%type,
    p_reason_cd deal_timings.reason_cd%type,
    p_stop_desc deal_timings.stop_description%type,
    p_stop_cd deal_timings.stop_code%type,
    p_start_cd deal_timings.start_code%type)
IS
  PRAGMA AUTONOMOUS_TRANSACTION;
  l_max_seq NUMBER;
BEGIN
  BEGIN
    SELECT NVL(MAX(seq_nr),0)+1
    INTO l_max_seq
    FROM deal_timings
    WHERE bd_id = p_bd_id;
  EXCEPTION
  WHEN no_data_found THEN
    l_max_seq:=1;
  END;
  INSERT
  INTO deal_timings
    (
      bd_id,
      seq_nr,
      start_time_gmt,
      start_hp_emp_nr,
      stop_time_gmt,
      stop_hp_emp_nr,
      reason_cd,
      stop_description,
      stop_code,
      start_code
    )
    VALUES
    (
      p_bd_id,
      l_max_seq,--,:maxseqno,
      p_start_time_gmt,
      p_start_emp_nr,--(SELECT user_hp_emp_nr FROM user_tab WHERE user_id=l_eclipse_user_id),
      p_stop_time_gmt,
      p_stop_emp_nr,--(SELECT user_hp_emp_nr FROM user_tab WHERE user_id=l_eclipse_user_id),
      p_reason_cd,
      p_stop_desc,--comments,
      p_stop_cd,
      p_start_cd
    );
  COMMIT;
EXCEPTION
WHEN OTHERS THEN
  --dbms_output.put_line('Error while inserting deal timings   : '||sqlerrm);
  NULL;
END;
FUNCTION get_emp_nr
  (
    p_emp_mail IN employee.email_unix_addr_tx%type
  )
  RETURN user_tab.user_hp_emp_nr%type
IS
 l_emp_nr user_tab.user_hp_emp_nr%type;
BEGIN
  SELECT user_hp_emp_nr
  INTO l_emp_nr
  FROM user_tab
  WHERE user_hp_emp_nr IN
    (SELECT emp_nr
    FROM employee
    WHERE emp_stat_cd      = 'Active'
    AND email_unix_addr_tx =p_emp_mail
    )
  AND ROWNUM<2 ;
  RETURN l_emp_nr;
EXCEPTION
WHEN NO_DATA_FOUND THEN
--dbms_output.PUT_LINE ('Invalid email ID ' || p_emp_mail);
l_emp_nr:=NULL;
RETURN l_emp_nr;
WHEN OTHERS THEN
--dbms_output.PUT_LINE ('Error in get_emp_nr - email ' || p_emp_mail);
  l_emp_nr:=NULL;
  RETURN l_emp_nr;
END get_emp_nr;
FUNCTION Rollout_Qty_BMI(
    p_bigin_dt DATE,
    p_end_dt   DATE,
    p_qty      NUMBER)
  RETURN VARCHAR2
IS
  l_num_months   NUMBER;
  l_temp_rollout NUMBER;
  l_rollout_str  VARCHAR2(4000);
  l_errors varchar2(2000);
BEGIN

--dbms_output.put_line ('Rollout Qty Months Calc starts ...' );

  l_num_months  :=ceil(months_between(p_end_dt,p_bigin_dt));
  l_temp_rollout:=p_qty;
  l_rollout_str :='';
  --dbms_output.put_line('l_num_months   :'||l_num_months);

  LOOP
    EXIT
  WHEN l_num_months =0;
    l_rollout_str  :=l_rollout_str||','||ROUND(l_temp_rollout/l_num_months); --3,
    --dbms_output.put_line('l_rollout_str + month'|| l_rollout_str ||'+'||l_num_months);
    l_temp_rollout:=l_temp_rollout-ROUND(l_temp_rollout/l_num_months);--9
    l_num_months  :=l_num_months  -1;                                 --3
  END LOOP;
  RETURN SUBSTR(l_rollout_str,2);
exception
when others then
   --dbms_output.PUT_LINE (' Error in rollout qty months calculation');
   --dbms_output.put_line ('Rollout Qty Months Calc starts ...' );
   l_errors := 'An error was encountered - ' || SQLCODE || ' -ERROR- ' || sqlerrm || '. Error at Line : ' || dbms_utility.format_error_backtrace();
   --INSERTERROR_OUTPUT_MESSAGES ( null, null, null, null, null, null, null, null, null, null, null, l_errors, 'ERROR', l_deal_creation_guid, NULL, NULL,l_errors);
END Rollout_Qty_BMI;
FUNCTION isDealReadyForNewVersion(
    p_source_bd_nr deal.bd_nr%type,
    p_error_message OUT VARCHAR2)
  RETURN VARCHAR2
IS
/*
Created By : Harsh Shah 17-Sep-2013
Purpose : This method is a generic method to check whether  a new version can be created for a specific deal. It will mostly be used by BMI - EDMS
Web service to check whether we can create a new version of the deal.

--Change Log
  17/sep/2013 - function created by Harsh

*/
  l_deal_st_cd VARCHAR2(5):=NULL;
  l_source_BD_version_nr deal.bd_version_nr%type;
  l_source_bd_id deal.bd_id%type;
  l_bdme_aprvl_cd DEAL.bdme_aprvl_cd%TYPE;
BEGIN
  BEGIN
    --dbms_output.put_line ('checking isDealReadyForNewVersion - Start -- Source BD Nr is : ' || P_SOURCE_BD_NR );
    SELECT deal_prog_cd
      || bdme_aprvl_cd
      || quote_dist_cd,
      bd_version_nr,
      bd_id
    INTO l_deal_st_cd,
      l_source_bd_version_nr,
      l_source_bd_id
    FROM deal
    WHERE BD_NR = P_SOURCE_BD_NR
    and current_version_fl='Y';
    SELECT bdme_aprvl_cd
    INTO l_bdme_aprvl_cd
    FROM deal
    WHERE BD_NR = P_SOURCE_BD_NR
    and current_version_fl='Y';
  EXCEPTION
  WHEN NO_DATA_FOUND THEN
    P_error_message:='Deal No ' || p_source_bd_nr || ' does not exists in Eclipse';
    RETURN 'N';
  WHEN OTHERS THEN
    P_error_message := 'An error was encountered in isDealReadyForNewVersion  function - ' || SQLCODE || ' -ERROR- ' || sqlerrm || '. Error at Line : ' || dbms_utility.format_error_backtrace();
    --dbms_output.put_line (P_error_message);
    RETURN 'N';
  END;
  /*************************************************************************************
  * Verify that the deal has been authorized  and Ready for New Version Creation *
  *************************************************************************************/
  --dbms_output.put_line (' source bd_version_nr - ' ||l_source_bd_version_nr || ' l_deal_st_cd : ' || l_deal_st_cd);

  IF ( ( l_deal_st_cd NOT IN ('FSA', 'FSQ' )  AND (l_source_bd_version_nr > 0)))  THEN
    IF l_bdme_aprvl_cd<>'D' THEN --Changes made by Lakshmi for CR 90020 -> When user revise Rejected Quote and do accept price/escalate pricing process, eclipse could not generate new deal version.
    RETURN 'N';
    ELSE
    RETURN 'Y';
    END IF;
    P_error_message  := 'Deal has not been authorized! Cannot create New Version ';
    --dbms_output.put_line ('checking isDealReadyForNewVersion --End');
    --dbms_output.put_line ('Deal has not been authorized! Cannot create New Version. Current Deal Status is : ' || l_deal_st_cd);
--    P_error_message  := 'Deal has not been authorized! Cannot create New Version. Current Deal Status is : ' || l_deal_st_cd;
    --RETURN 'N';
  END IF;
  --dbms_output.put_line ('checking isDealReadyForNewVersion --End');
  RETURN 'Y';
END;
FUNCTION LockDeal(
    p_source_bd_nr deal.bd_nr%type,
    p_lock_Deal_User_id user_tab.user_id%type,
    p_error_message OUT VARCHAR2)
  RETURN VARCHAR2
IS
/*
Created by : Harsh Shah - 17/sep/2013
Purpose:
Before creating a new version, this function is called to check if the requested deal is locked by another user. If locked then appropriate message will be returned
to the calling procedure/package/function
if the deal is not locked then  it will lock the deal and return message will be successful - 'Y'

-- Change log
18/SEP/2013   Harsh Shah  - comments added
17/SEP/2013   Harsh Shah  - function created

*/

l_deal_locked_fl varchar2(1);
L_DEAL_LOCKED_BY varchar2(100);
BEGIN
      --dbms_output.put_line ('checking LockDeal --Start');
    -- check if deal is Lock already

        select  d.deal_lock_fl,  (e.fam_nm ||','|| e.given_nm)
        into l_deal_locked_fl,l_deal_locked_by
        from deal d, user_tab ut, employee e
        where d.deal_lock_user_id=ut.user_id (+)
        and ut.user_hp_emp_nr=e.emp_nr (+)
        and d.bd_nr=p_source_bd_nr
        and d.current_version_FL='Y';

      IF l_deal_locked_fl ='Y' THEN
          P_error_message  := 'Deal is already locked by ' || L_DEAL_LOCKED_BY || '. Cannot proceed with new version creation';
          RETURN 'N';
      END IF;
--lock Deal
UPDATE deal
SET deal_lock_fl        ='Y',
  deal_lock_user_id     =p_lock_Deal_User_id
WHERE bd_nr           =p_source_bd_nr
AND current_version_FL='Y';
--dbms_output.put_line (' Deal Lock updated = ' || sql%rowcount);
--dbms_output.put_line ('checking LockDeal --End');

return 'Y';
exception
WHEN NO_DATA_FOUND THEN
    P_error_message:='Deal No ' || p_source_bd_nr || ' does not exists in Eclipse';
    RETURN 'N';
  WHEN OTHERS THEN
    P_error_message := 'An error was encountered in LockDeal  function - ' || SQLCODE || ' -ERROR- ' || sqlerrm || '. Error at Line : ' || dbms_utility.format_error_backtrace();
    --dbms_output.put_line (P_error_message);
    RETURN 'N';
END;

Procedure BMICreateNewVersion (
i_deal_creation_guid IN VARCHAR2,
    p_result OUT sys_refcursor,
    p_prod_details             OUT SYS_REFCURSOR)

IS
/*
Modified by Harsh Shah 19-Nov-2013
Added product line ref cursor to return all the conig details from the LINE_ITEM Table where LINE_TYPE_CD='BD'
Modified by :Harsh Shah on 18-Nov-2013.
resolved the issue of bundle updates getting failed
Resolve the issue of new bundle getting added everytime instead of update.
Created by : Harsh Shah   18-Sep-2013
Purpose:
This procedure creates a new version for the BMI Quote.
*/
l_risk_reasion_desc VARCHAR2(100);
l_risk_desc gt_edms_smqt_err_results.risk_desc%type;
l_xml_path_to_Query varchar2(100);
L_GenerateOPGNbrFl varchar2(1):='N'; -- By Harsh Shah 20-Dec-2013;
l_quotedbyempnr deal.quote_hp_emp_nr%type;
--l_quotedbyempemail employee.email_unix_addr_tx%type;
l_quoted_by_user_id user_tab.user_id%type;
l_high_list_line_nr bundle_line.line_nr%type; --CR 4744
  l_high_list_pl bundle_line.assoc_pl%type;     --CR 4744
p_addLineItemsErrors sys_refcursor;
l_deal_creator_dc deal.init_hp_emp_nr%type;
l_dealapprfl  deal.bdme_aprvl_cd%TYPE; --VARCHAR2(1); Commented VARCHAR2 as part of EDMS Hardening process
l_dealquotefl deal.quote_dist_cd%TYPE; --VARCHAR2(1); Commented VARCHAR2 as part of EDMS Hardening process
l_dealroutefl VARCHAR2 (1);
l_dealvertocreate deal.bd_version_nr%type;
l_source_BD_ID DEAL.BD_ID%TYPE;
l_source_BD_NR DEAL.BD_NR%TYPE;
l_source_BD_VERSION_NR DEAL.BD_VERSION_NR%TYPE;
L_ERRORS varchar2(2000);
l_message varchar2(2000);
l_requesttype  VARCHAR2 (30);
l_xmlnamespace VARCHAR2 (250);
l_new_bd_id deal.bd_id%type;
l_new_bd_nr deal.bd_nr%type;
l_new_bd_version_nr deal.bd_version_nr%type;
L_ECLIPSE_USER_ID user_tab.user_id%type;
l_reccount NUMBER;
I_ERROR_MESSAGE VARCHAR2(2000);
l_region ww_cntry.region%type;
l_high_risk_fl      VARCHAR2(1):='N';
L_RISK_REASON VARCHAR2(300);
l_msg_type                 VARCHAR2(15);
L_O_DCTEXPIRETHRESHOLDPCT BUS_MODEL.MAX_QTY_THRESHOLD_PCT%type;
l_bd_version_nr deal.bd_version_nr%TYPE; --NUMBER; Commented NUMBER as part of EDMS Hardening process
l_bus_justify_reqd_fl bus_model.bus_justify_reqd_fl%type;
l_deal_prog_cd      deal.deal_prog_cd%TYPE :='U'; --VARCHAR2(2):='U';Commented VARCHAR2 as part of EDMS Hardening process
l_bdme_aprvl_cd     deal.bdme_aprvl_cd%TYPE:='N'; --VARCHAR2(2):='N'; Commented VARCHAR2 as part of EDMS Hardening process
l_quote_dist_cd     deal.quote_dist_cd%TYPE:='N'; --VARCHAR2(2):='N'; Commented VARCHAR2 as part of EDMS Hardening process
l_bus_justify_bd_id deal.bd_id%type;
l_is_all_lines_authorized VARCHAR2(1):='N';
C_HIGH_TOUCH_DEALTYPE_DESC    CONSTANT VARCHAR2(15)  :='HIGH_TOUCH';
l_euv_at_won_fl bus_model.euv_at_won_fl%type;
out_error_message VARCHAR2(2000);
l_deal_unlock_error_msg varchar2(300);
l_ext_quote_version  DEAL.DEAL_SOURCE_EXT_QUOTE_NR%TYPE;
l_mcchargecd deal.mc_charge%type;
l_countrycd deal.control_cntry_cd%type;
--variables for new version creation procedure
a_out1              NUMBER (10);
  a_out2              NUMBER (10);
  a_out3              VARCHAR2 (500);
  a_out4              VARCHAR2 (500);
  a_out5              VARCHAR2 (500);
  a_out6              VARCHAR2 (500);
  a_out7              VARCHAR2 (500);


  L_DEALSOURCECD DEAL.DEAL_SOURCE_CD%type;
  l_dealsourcedealtype deal.deal_source_deal_type%type;
  l_dealsourcekeyval deal.deal_source_keyval%type;

    l_COUNTRY_CD DEAL.CONTROL_CNTRY_CD%TYPE;
    l_price_term_cd deal.price_term_cd%type;
    l_price_list_cd deal.price_list_cd%type;
    l_currency_cd deal.curr_cd%type;
    --l_dealsourcedealtype deal.deal_source_deal_type%type;
    --l_dealsourcekeyval deal.deal_source_keyval%type;
    l_hierarchy_cd deal_matrix.hierarchy_cd%type;
    l_busmodelcd DEAL.BUS_MODEL_CD%TYPE ;
    l_begin_date deal.beg_dt%type;
    l_end_date deal.end_dt%type;
    l_guid_exists Number (5);
    l_ExtQuoteNr deal.DEAL_SOURCE_EXT_QUOTE_NR%TYPE;
    o_success_fl VARCHAR2(1);
  l_rslra_proid NUMBER;                                   -- Added as a temporary solution
  l_rslrb_proid NUMBER;                                   -- Added as a temporary solution
  l_rslr_a_added          VARCHAR2(1):='N';
  l_rslr_b_added          VARCHAR2(1):='N';
  l_dealdescription deal.deal_desc_tx%type;
  l_engagement_model default_bm.ENGAGEMENT_MODEL%TYPE;--VARCHAR2(2000);  Commented VARCHAR2 as part of EDMS Hardening process
  l_cust_seg_cd deal.cust_seg_cd%TYPE;
  l_leadbusgroup deal.lead_bus_grp%type;
  l_quotedbyempemail employee.email_unix_addr_tx%type;-----email change for ePrime and BMI
  new_version_Mc_charge deal.mc_charge%TYPE;
  l_scale_id line_disc_scale.scale_id%TYPE;

--Exceptions
blank_source_bdnr     exception;
INVALID_GUID     exception;
REJECT_NEW_VERSION_CREATION EXCEPTION;
start_time NUMBER;
end_time NUMBER;
l_v$instance VARCHAR2(200);
--l_rtm VARCHAR2(100);

--List of variables added by Lakshmi on 9/16/2014 to send emails when deal goes to High Risk:
l_app_value APP_CONFIG_KEYS.app_value%TYPE;
l_from_address eclp_email_template.email_from_id%TYPE;
l_email_subject eclp_email_template.EMAIL_SUBJECT_TX%TYPE;
l_email_body eclp_email_template.EMAIL_BODY_TX%TYPE;
l_to_address  VARCHAR2(4000);
emp_email_address eclp_email_template.email_from_id%TYPE;
receipient_email_address VARCHAR2(4000);
l_cntry_cd deal.control_cntry_cd%TYPE;
l_bus_model_cd deal.bus_MODEL_CD%TYPE;
l_euc_cmpny_Nm deal.eu_cmpny_nm%TYPE;
TEMP_TABLE_FAILURE EXCEPTION;
l_tenantid deal.tenantid_data_cd%type;--l_tenantid deal.tenantid%type;----Added for SMO Changes (tenantid column is replaced with tenantid_data_cd for Federal project
user_cancelled EXCEPTION;
PRAGMA EXCEPTION_INIT(user_cancelled, -1013);

--New Variable added for: CR2908 - Missing Date Range resulting in uneditable pricing fields
old_bdme_aprvl_cd deal.bdme_aprvl_cd%TYPE;
l_RETURN_STATUS varchar2(1000);
l_denied_app_value app_config_keys.APP_KEY%TYPE;
l_count_bd number; --Added for US 8975
l_error_exc Varchar2(2000);

l_won_lost_prob_pct deal.w_l_prob%TYPE; --New variable added by Lakshmi to update Won/Loss probability while creating new version
l_prc_pro_cd deal.prc_pro_cd%type; --New variable added by Lakshmi to update Price Protection Code while creating new version

l_created_by deal.created_by%TYPE; --New variable added by Lakshmi for Aruba
l_product_mix deal.product_mix%TYPE; --New variable added by Lakshmi for Aruba
BEGIN

L_XMLNAMESPACE := 'xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://schemas.datacontract.org/2004/07/HP.Eclipse.Data.EDMS"' ;

start_time := dbms_utility.get_time();
--SELECT instance_name INTO l_v$instance FROM sys.v_$instance;
--l_errors :='Deal created using Oracle Instance: '|| l_v$instance;
--INSERTERROR_OUTPUT_MESSAGES ( DBMS_UTILITY.GET_TIME(), NULL, NULL, NULL, NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,i_deal_creation_guid,NULL, NULL,l_errors);
  l_source_BD_ID        :=-1;
  l_source_bd_nr        :=-1;
  l_source_bd_version_nr:=0;

  DELETE
  FROM edms_deal_error_report
  WHERE DEAL_CREATION_GUID = I_DEAL_CREATION_GUID;

  --initializing the global temporary table
  --L_PROGRESS :='Delete from  GT_EDMS_SMQT_ERR_RESULTS';

  DELETE FROM GT_EDMS_SMQT_ERR_RESULTS;

  COMMIT;


      --by Harsh Shah , filling temp table, 23-Jan-2015
   --  DBMS_OUTPUT.PUT_LINE ('Performance check temp table filling.. start time : '||  to_char(SYSDATE,'DD-MON-YYYY HH:MI:SS'));

  IF FILL_TEMP_TABLES(I_DEAL_CREATION_GUID,L_XMLNAMESPACE)='N' THEN
        DBMS_OUTPUT.PUT_LINE ('eRROR IN TEMP TABLE ');
    RAISE TEMP_TABLE_FAILURE;

  END IF;

  --DBMS_OUTPUT.PUT_LINE ('Performance check temp table filling.. end time : '||   to_char(sysdate,'DD-MON-YYYY HH:MI:SS'));
  --deal creation guid
  --l_deal_creation_guid := i_deal_creation_guid;
  --assigning to global variable.
  --g_deal_creation_guid     := i_deal_creation_guid;

  IF (i_deal_creation_guid IS NULL OR i_deal_creation_guid = ' ') THEN
    l_errors               :=' Deal Creation Guid is blank ';
    --l_msg_type             :='ERROR';
    --raise reject_deal;
  END IF;

  --xml namespace declaration
  L_XMLNAMESPACE := 'xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://schemas.datacontract.org/2004/07/HP.Eclipse.Data.EDMS"' ;

  --dbms_output.put_line ('checking whether guid exists');
  select count(*)  into l_guid_exists from edms_deal_queue where deal_creation_guid=i_deal_creation_guid;

  if l_guid_exists<=0 then
    l_errors :=' Invalid GUID. Could not get the deal details. GUID Ref No: ' || i_deal_creation_guid;
    RAISE INVALID_GUID;
  else
          --dbms_output.put_line (' Guid exists ');
          NULL;
  end if;

  --Get the source BD Nr from XML
  if getsqtxmlvalue ( '/DealRequestSource/SourceDealNr/', i_deal_creation_guid) =' ' then
    L_source_bd_nr:=-1;
    RAISE BLANK_SOURCE_BDNR;
  else
    L_source_bd_nr      := nvl(getsqtxmlvalue ( '/DealCreationRequest/DealRequestSource/SourceDealNr/', i_deal_creation_guid),0);     --tag from new  xml
  end if;

  --dbms_output.PUT_LINE ('Source BD NR is : ' || l_source_bd_nr);

  --Get basic deal data
  --Get basic XML details to process the line item inserts.
  --dbms_output.PUT_LINE ('1');
  l_dealsourcecd      := getsqtxmlvalue ( '/DealCreationRequest/DealRequestSource/ExtSourceCD/', i_deal_creation_guid);     --tag from new  xml
  --dbms_output.PUT_LINE ('2');
   l_extquotenr       := getsqtxmlvalue (' /DealCreationRequest/DealRequestSource/ExtQuoteNr/', i_deal_creation_Guid);
   --dbms_output.PUT_LINE ('3');
  --l_dealvertocreate := getsqtxmlvalue ( '/DealCreationRequest/DealActions/DealVerToCreate/', i_deal_creation_guid);

  l_dealsourcedealtype  := getsqtxmlvalue ( '/DealCreationRequest/DealRequestSource/DealCreationType/', i_deal_creation_guid);--tag from new xml
  --dbms_output.PUT_LINE ('4');
  l_dealsourcekeyval := getsqtxmlvalue ( '/DealCreationRequest/DealRequestSource/ExtUniqueKey/', i_deal_creation_guid);---tag from new xml
  --dbms_output.PUT_LINE ('5');
  --Fixed (hardcoded) as per the discussion with Ibadath and andrew
  l_dealvertocreate:=2;

  --<DealActions>
  l_dealapprfl      := getsqtxmlvalue ('/DealCreationRequest/DealActions/DealApprFl/', I_deal_creation_guid);
  l_dealquotefl     := getsqtxmlvalue ('/DealCreationRequest/DealActions/DealQuoteFl/', i_deal_creation_guid);
  l_dealroutefl     := getsqtxmlvalue ('/DealCreationRequest/DealActions/DealRouteFl/', i_deal_creation_guid);
  l_dealvertocreate := getsqtxmlvalue ( '/DealCreationRequest/DealActions/DealVerToCreate/', i_deal_creation_guid);
  l_quotedbyempnr    := getsqtxmlvalue ('/DealCreationRequest/DealActions/QuotedByHPEmployee/EmployeeNr/', i_deal_creation_guid); ---new eprime change
  l_quotedbyempemail :=getsqtxmlvalue ('/DealCreationRequest/DealActions/QuotedByHPEmployee/EmailAddress/', i_deal_creation_guid);---new eprime change
  --dbms_output.PUT_LINE ('l_quotedbyempemail  : ' || L_QUOTEDBYEMPEMAIL);
  --by Harsh Shah 22-Dec-2013
  l_quotedbyempemail := LOWER(l_quotedbyempemail);
  l_GenerateOPGNbrFl := getsqtxmlvalue ( '/DealCreationRequest/DealActions/GenerateOPGNbrFl/', i_deal_creation_guid);
  l_dealdescription       := getsqtxmlvalue ( '/DealCreationRequest/DealHeader/DealDescription/', i_deal_creation_guid);

  l_rtm                     := getsqtxmlvalue ('/DealCreationRequest/DealHeader/RTM/',i_deal_creation_guid);
  l_tenantid   := getsqtxmlvalue ('/DealCreationRequest/DealHeader/TenantID/',i_deal_creation_guid);---Added for SMO Changes

  --Below code added by Lakshmi to read Price Protection Code from XML.
  --l_prc_pro_cd := NVL(getsqtxmlvalue ( '/DealCreationRequest/DealHeader/ProtectionCD/', i_deal_creation_guid),'O');
  l_prc_pro_cd := NVL(getsqtxmlvalue ( '/DealCreationRequest/DealHeader/ProtectionCD/', i_deal_creation_guid),'N'); --Changed O to N for CR:281985
  
  l_created_by        := getsqtxmlvalue ( '/DealCreationRequest/DealHeader/CreatedBy/', i_deal_creation_guid); --New variable added by Lakshmi for Aruba
  l_product_mix        := getsqtxmlvalue ( '/DealCreationRequest/DealHeader/ProductMix/', i_deal_creation_guid);  --New variable added by Lakshmi for Aruba
  
  
  l_won_lost_prob_pct :=getsqtxmlvalue ( '/DealCreationRequest/DealWonLostStat/WonLostProbPct/', i_deal_creation_guid); --New Variable added by Lakshmi to update Won/Loss probability
  
  --l_tenantid:=nvl(l_tenantid,'HPE');
  ---Added for SMO changes
  IF (l_tenantid is NULL or l_tenantid ='HPQ') THEN
    select lead_bus_grp into l_leadbusgroup from deal where bd_nr = L_source_bd_nr and current_version_fl = 'Y';
    select tenantid into l_tenantid from bus_group where bus_group_cd=l_leadbusgroup and rownum<2;
   -- l_tenantid    :=GET_TENANTCD_FROM_BG  (l_leadbusgroup);
    L_errors:='TenantID derived is : ' ||l_tenantid;
   INSERTERROR_OUTPUT_MESSAGES ( NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, l_errors, 'INFO', i_deal_creation_guid, NULL, NULL,l_errors);
  END IF;
  --Get the deal creator from the source deal
  -- this might change as per business requirement.
  select init_hp_emp_nr, bd_id,bd_version_nr INTO l_deal_creator_dc,l_source_bd_id, l_source_bd_version_nr from deal where bd_nr=l_source_bd_nr and current_version_fl='Y';

  --dbms_output.PUT_LINE ('deal creator from source deal ..done');

  L_ECLIPSE_USER_ID         :=getValid_Eclipse_UserID(L_DEAL_CREATOR_DC,L_ERRORS);


  --dbms_output.put_line ('sOURCE BD_ID ' || L_SOURCE_BD_ID);
  --dbms_output.put_line ('sOURCE BD_VERSION_NR ' || L_SOURCE_BD_VERSION_NR);
  --dbms_output.put_line ('sOURCE ECLIPSE USER ID ' || L_ECLIPSE_USER_ID);
  --dbms_output.put_line ('sOURCE DEAL CREATOR ' || L_DEAL_CREATOR_DC);


  --dbms_output.put_line ('get valid eclipse user id errors : ' || L_ERRORS);

    l_ext_quote_version := getsqtxmlvalue ( '/DealCreationRequest/DealRequestSource/ExtQuoteVersion/', i_deal_creation_guid); --tag from new  BMI xml

  --check if deal is ready for new version
  if (isDealReadyForNewVersion(L_source_bd_nr,l_errors)='N') THEN

      --L_ERRORS:='Source Deal ' || l_source_bd_nr || ' is not ready for new version';
      --dbms_output.put_line (l_errors);
      inserterror_output_messages ( NULL,NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, 'ERROR', i_deal_creation_guid, NULL,NULL,l_errors);
      RAISE REJECT_NEW_VERSION_CREATION;

  elsIF LOCKDEAL(L_source_bd_nr,l_eclipse_user_id,l_errors)='N' THEN
      --dbms_output.put_line (l_errors);
      inserterror_output_messages ( NULL,NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, 'ERROR', i_deal_creation_guid, NULL,NULL,l_errors);
      RAISE REJECT_NEW_VERSION_CREATION;
  else
      --dbms_output.put_line ('deal is ready for new version');
      NULL;
  END IF;


 L_NEW_BD_ID:=-1;
 l_new_bd_version_nr :=-1;

  IF (to_number(l_dealvertocreate) >=1) THEN

          --dbms_output.put_line ('l_eclipse_user_id ' || l_eclipse_user_id  || ' l_source_bd_nr' || l_source_bd_nr  || 'l_source_bd_version_nr :' || l_source_bd_version_nr || ' l_deal_creator_dc ' || l_deal_creator_dc);

            --l_errors:=' New Version parameter : l_eclipse_user_id ' || l_eclipse_user_id  || ' l_source_bd_nr' || l_source_bd_nr  || 'l_source_bd_version_nr :' || l_source_bd_version_nr || ' l_deal_creator_dc ' || l_deal_creator_dc;

            --inserterror_output_messages (l_source_bd_id,l_source_bd_nr,l_source_bd_version_nr, NULL ,NULL,NULL,NULL, NULL, NULL,NULL,l_errors,'INFO', I_deal_creation_guid, NULL,NULL,l_errors);

            --The below code is written to insert an entry into edms_deal_error_report table to indicate that adding new date range is not needed.
            inserterror_output_messages (l_source_bd_id,l_source_bd_nr,l_source_bd_version_nr, NULL ,NULL,NULL,NULL, NULL, NULL,NULL,'NODATERANGE','INFO', I_deal_creation_guid, NULL,NULL,NULL);

            --The below code is written to insert an entry into edms_deal_error_report table to indicate that new ext quote version is created.
            --by Harsh Shah 11/26
            L_errors:='DEAL_SOURCE_EXT_QUOTE_NR'|| l_ext_quote_version;
            inserterror_output_messages (l_source_bd_id,l_source_bd_nr,l_source_bd_version_nr, NULL ,NULL,NULL,NULL, NULL, NULL,NULL,L_errors,'INFO', I_deal_creation_guid, NULL,NULL,NULL);


            CREATE_BD_VERSION_40 (l_source_bd_nr,l_source_bd_version_nr,l_eclipse_user_id,l_deal_creator_dc,sysdate ,sysdate,a_out1, a_out2,a_out3,a_out4,a_out5,a_out6,a_out7);
          --dbms_output.put_line ('create bd version completed..');

            DELETE FROM edms_deal_error_report WHERE error_msg='NODATERANGE' AND bd_id=l_source_bd_id;



        IF (upper(a_out3)='SUCCESS' ) THEN

            ----dbms_output.PUT_LINE('EXTQUOTENR is: '||l_extquotenr);
            ----dbms_output.PUT_LINE('BD_ID updated is: '||L_new_BD_ID);

            L_NEW_BD_ID        := TO_NUMBER (A_OUT1);
            l_new_bd_version_nr:=to_number (a_out2);

            dbms_output.put_line (' ew bd id :' || L_NEW_BD_ID || ', version ' || l_new_bd_version_nr);

            --unlocking the previous version of deal - by Harsh Shah 19 Mar 2014,
            --this should go to a common procedure/function- todo later
            UPDATE deal SET deal_lock_fl='N', deal_lock_user_id = NULL WHERE bd_id=l_source_bd_id;
            --by Lakshmi on 4-dec-2013
            dbms_output.PUT_LINE (' ext quote Nr  : '|| L_EXTQUOTENR || ' new bd version ' || L_NEW_BD_VERSION_NR || ' NEW BD ID IS :' ||L_NEW_BD_ID );

        --update deal table with the extern quote version and extnernal Quote No
        -- modified by Harsh Shah 10-Dec-2013 as per the comments from Greg for CR 43893
        --[eclipse] Ex quote version in Eclipse deal details will be eclipse deal's version instead of BMI quote version.

        UPDATE DEAL
                SET DEAL_SOURCE_EXT_QUOTE_NR= DECODE(L_EXTQUOTENR, NULL,DEAL_SOURCE_EXT_QUOTE_NR, L_EXTQUOTENR),
                    DEAL_SOURCE_EXT_QUOTE_VER=DECODE(l_ext_quote_version,NULL, DEAL_SOURCE_EXT_QUOTE_VER, l_ext_quote_version),
                    DEAL_SOURCE_KEYVAL= DECODE(l_dealsourcekeyval, NULL,DEAL_SOURCE_KEYVAL, l_dealsourcekeyval), --CR 42875
                    DEAL_DESC_TX = DECODE(l_dealdescription, NULL, DEAL_DESC_TX, l_dealdescription),-- CR 46705
                    DEAL_SOURCE_ID =DECODE(l_dealsourcecd, NULL, DEAL_SOURCE_ID, l_dealsourcecd), -- CR 46705
                    SUBMIT_DT_GMT  =sysdate, SUBMIT_DT = sysdate -- Added by Rupesh 6/25/2014  -for SD20492856
                    ,w_l_prob            = NVL(l_won_lost_prob_pct,0) --New parameter added by Lakshmi to update Won/Loss probability
                    , prc_pro_cd = l_prc_pro_cd  --New parameter added by Lakshmi to update Price Protection Code
                    ,deal_source_deal_type = NVL(l_dealsourcedealtype, deal_source_deal_type) --New parameter added by Lakshmi to update Deal type in New version
                    ,created_by = NVL(l_created_by,created_by)  --New variable added by Lakshmi for Aruba
                    ,product_mix = NVL(l_product_mix,product_mix)  --New variable added by Lakshmi for Aruba
                  WHERE BD_ID=L_NEW_BD_ID ;

        --dbms_output.put_line (' ext quote Nr  updated ' || sql%rowcount);

              ----Handling auto event in for  submit deal---
             --TODO:check with Syed and Richeek if we need this event

             ins_deal_timings(L_new_BD_ID,sysdate, l_deal_creator_dc,sysdate,l_deal_creator_dc,'DC02',NULL,'CREATEVER','CREATEVER');

             ins_deal_timings(L_new_BD_ID,sysdate, l_deal_creator_dc,sysdate,l_deal_creator_dc,'DS01',NULL,'SUBMITNEW','SUBMITNEW');
             ins_deal_timings(L_new_BD_ID,sysdate, l_deal_creator_dc,sysdate,l_deal_creator_dc,'DS01',NULL,'SUBMIT','SUBMIT');

            --ins_deal_timings(L_new_BD_ID,sysdate, l_deal_creator_dc,sysdate,l_deal_creator_dc,'DS01',NULL,'SUBMITNEW','SUBMITNEW');



            l_errors:=' Deal Created Successfully, Deal Number: '||l_source_bd_nr|| ' New BD_ID :' || L_new_BD_ID ||'  New BD Version Nr :' || l_new_bd_version_nr;
            --dbms_output.put_line (l_errors);

            inserterror_output_messages ( l_new_bd_id,l_source_bd_nr, l_new_bd_version_nr,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, 'SUCCESS',i_deal_creation_guid, NULL,NULL,l_errors);


            --Unlock Deal
             IF UnlockDeal(l_source_bd_nr,l_errors)='N'  THEN
                l_errors:='Deal could not be unlocked';
                inserterror_output_messages (l_source_bd_id,l_source_bd_nr,l_source_bd_version_nr, NULL ,
                NULL,NULL,NULL, NULL, NULL,NULL,l_errors,'WARNING', I_deal_creation_guid, NULL,NULL,l_errors);
                RAISE REJECT_NEW_VERSION_CREATION;
             ELSE
                l_errors:='Deal Unlocked successfully';
                inserterror_output_messages (l_source_bd_id,l_source_bd_nr,l_source_bd_version_nr, NULL ,
                NULL,NULL,NULL, NULL, NULL,NULL,l_errors,'INFO', I_deal_creation_guid, NULL,NULL,l_errors);
                ----dbms_output.PUT_LINE (L_errors);
                --dbms_output.PUT_LINE (L_errors);
            END IF;


         ELSIF ( a_out3 IS NULL OR a_out3='' ) THEN

              l_errors                       :='Unable to create new version of deal. Please check if the deal is authorized and Quoted';

              --dbms_output.PUT_LINE(' A_OUT3' || a_out3);
              --dbms_output.PUT_LINE(' A_OUT4' || a_out4);
              --dbms_output.PUT_LINE(' A_OUT5' || a_out5);
              --dbms_output.PUT_LINE(' A_OUT6' || a_out6);
              --dbms_output.PUT_LINE(' A_OUT7' || a_out7);
              --unlocking the previous version of deal - by Harsh Shah 19 Mar 2014,
            --this should go to a common procedure/function- todo later
            UPDATE deal SET deal_lock_fl='N', deal_lock_user_id = NULL WHERE bd_id=l_source_bd_id;

              inserterror_output_messages (l_source_bd_id,l_source_bd_nr,l_source_bd_version_nr, NULL ,NULL,NULL,NULL, NULL, NULL,NULL,l_errors,'ERROR', I_deal_creation_guid, NULL,NULL,l_errors);

                inserterror_output_messages (l_source_bd_id,l_source_bd_nr,l_source_bd_version_nr, NULL ,NULL,NULL,NULL, NULL, NULL,NULL,a_out4,'ERROR', I_deal_creation_guid, NULL,NULL,null);
                inserterror_output_messages (l_source_bd_id,l_source_bd_nr,l_source_bd_version_nr, NULL ,NULL,NULL,NULL, NULL, NULL,NULL,a_out5,'ERROR', I_deal_creation_guid, NULL,NULL,null);
                inserterror_output_messages (l_source_bd_id,l_source_bd_nr,l_source_bd_version_nr, NULL ,NULL,NULL,NULL, NULL, NULL,NULL,a_out6,'ERROR', I_deal_creation_guid, NULL,NULL,null);
                inserterror_output_messages (l_source_bd_id,l_source_bd_nr,l_source_bd_version_nr, NULL ,NULL,NULL,NULL, NULL, NULL,NULL,a_out7,'ERROR', I_deal_creation_guid, NULL,NULL,null);

        end if;

  ELSIF (to_number(l_dealvertocreate) =0) THEN

        l_errors:='Cannot create new version of deal as per the Deal Actions provided. Please correct the deal Actions';
        --dbms_output.put_line (l_errors);

        inserterror_output_messages (l_source_bd_id,l_source_bd_nr,l_source_bd_version_nr, NULL ,NULL,NULL,NULL, NULL, NULL,NULL,l_errors,'WARNING', I_deal_creation_guid, NULL,NULL,l_errors);

          --inserterror_output_messages (l_source_bd_id,l_source_bd_nr,l_source_bd_version_nr, NULL ,NULL,NULL,NULL, NULL, NULL,NULL,a_out4,'WARNING', I_deal_creation_guid, NULL,NULL,null);
            --    inserterror_output_messages (l_source_bd_id,l_source_bd_nr,l_source_bd_version_nr, NULL ,NULL,NULL,NULL, NULL, NULL,NULL,a_out5,'WARNING', I_deal_creation_guid, NULL,NULL,null);
              --  inserterror_output_messages (l_source_bd_id,l_source_bd_nr,l_source_bd_version_nr, NULL ,NULL,NULL,NULL, NULL, NULL,NULL,a_out6,'WARNING', I_deal_creation_guid, NULL,NULL,null);
                --inserterror_output_messages (l_source_bd_id,l_source_bd_nr,l_source_bd_version_nr, NULL ,NULL,NULL,NULL, NULL, NULL,NULL,a_out7,'WARNING', I_deal_creation_guid, NULL,NULL,null);

        --Unlock Deal
       IF UnlockDeal(l_source_bd_nr,l_errors)='N'  THEN
          l_errors:='Deal could not be unlocked';
           inserterror_output_messages (l_source_bd_id,l_source_bd_nr,l_source_bd_version_nr, NULL ,
           NULL,NULL,NULL, NULL, NULL,NULL,l_errors,'WARNING', I_deal_creation_guid, NULL,NULL,l_errors);
          RAISE REJECT_NEW_VERSION_CREATION;
       ELSE
          l_errors:='Deal Unlocked successfully';
          inserterror_output_messages (l_source_bd_id,l_source_bd_nr,l_source_bd_version_nr, NULL ,
            NULL,NULL,NULL, NULL, NULL,NULL,l_errors,'INFO', I_deal_creation_guid, NULL,NULL,l_errors);
          --dbms_output.PUT_LINE (L_errors);
        NULL;
    END IF;
  else
      --dbms_output.PUT_LINE ('Not a valid Deal Version to value');
      NULL;
  END IF;

   IF (upper(a_out3)<>'SUCCESS' ) then

        l_errors                       :='Unable to create new version of deal. Please check if the deal is authorized and Quoted';

        --dbms_output.PUT_LINE (' a_out3 MESSAGE ' || a_out3);

         inserterror_output_messages (l_source_bd_id,l_source_bd_nr,l_source_bd_version_nr, NULL ,NULL,NULL,NULL, NULL, NULL,NULL,a_out4,'ERROR', I_deal_creation_guid, NULL,NULL,l_errors);

     --inserterror_output_messages (l_source_bd_id,l_source_bd_nr,l_source_bd_version_nr, NULL ,NULL,NULL,NULL, NULL, NULL,NULL,a_out3,'WARNING', I_deal_creation_guid, NULL,NULL,null);
     --inserterror_output_messages (l_source_bd_id,l_source_bd_nr,l_source_bd_version_nr, NULL ,NULL,NULL,NULL, NULL, NULL,NULL,a_out4,'WARNING', I_deal_creation_guid, NULL,NULL,null);
       --         inserterror_output_messages (l_source_bd_id,l_source_bd_nr,l_source_bd_version_nr, NULL ,NULL,NULL,NULL, NULL, NULL,NULL,a_out5,'WARNING', I_deal_creation_guid, NULL,NULL,null);
         --       inserterror_output_messages (l_source_bd_id,l_source_bd_nr,l_source_bd_version_nr, NULL ,NULL,NULL,NULL, NULL, NULL,NULL,a_out6,'WARNING', I_deal_creation_guid, NULL,NULL,null);
           --     inserterror_output_messages (l_source_bd_id,l_source_bd_nr,l_source_bd_version_nr, NULL ,NULL,NULL,NULL, NULL, NULL,NULL,a_out7,'WARNING', I_deal_creation_guid, NULL,NULL,null);


   raise REJECT_NEW_VERSION_CREATION;
   end if;


   --Get deal details
   BEGIN

      --dbms_output.put_line ('New BD_ID ' || L_NEW_BD_ID);

         select beg_dt, end_dt, control_cntry_cd, price_list_cd,price_term_cd, curr_cd,
         bus_model_cd,region,lead_bus_grp,cust_seg_cd,control_cntry_cd
          into
              l_begin_date,
              l_end_date,
              l_COUNTRY_CD ,
              l_price_list_cd ,
              l_price_term_cd,
              l_currency_cd,
              l_busmodelcd ,
              l_region,
              l_leadbusgroup,
              l_cust_seg_cd,
              l_countrycd
          from deal where BD_ID=L_NEW_BD_ID and current_version_fl='Y';
  EXCEPTION

  WHEN NO_DATA_FOUND THEN
    l_errors:='Unable to get new deal version details for the BD_NR :' || l_source_bd_nr;
    --dbms_output.PUT_LINE (l_errors);
    raise REJECT_NEW_VERSION_CREATION;
  END;

    get_list_prices_from_gypsy
        (l_COUNTRY_CD,
        l_price_list_cd,
        l_currency_cd,
        l_price_term_cd,
        i_deal_creation_guid,
        'N',
        l_hierarchy_cd,
        l_end_date);

    --===================================
    --UPDATE DEAL DETAILS FOR NEW VERSION
    --===================================
      BEGIN
      UpdateDealDettailsForNewVersio(
        i_deal_creation_guid,
        l_xmlnamespace,
        L_NEW_BD_ID,
        o_success_fl);

        IF o_success_fl='N' THEN
        l_errors := 'Cannot update deal details for the source deal: '||l_source_bd_nr||' version: '||l_new_bd_version_nr||' Bd_id: '||L_NEW_BD_ID;
        inserterror_output_messages (L_NEW_BD_ID,l_source_bd_nr,l_new_bd_version_nr, NULL ,NULL,NULL,NULL, NULL, NULL,NULL,l_errors,'ERROR', I_deal_creation_guid, NULL,NULL,l_errors);
        END IF;


       --===================================
       --ADD NEW LINE ITEMS
       --===================================

    Add_lineItems(i_deal_creation_guid,L_xmlnamespace,L_new_BD_ID,'Y',p_addLineItemsErrors);

    L_hierarchy_cd:='WW';
        --========================
    --DELETE RESELLER A AND B
    --========================
        delete_resellers(i_deal_creation_guid,
                 L_new_BD_ID,
                'xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://schemas.datacontract.org/2004/07/HP.Eclipse.Data.EDMS"',
                 out_error_message);


           IF (out_error_message IS NOT NULL) THEN
           l_errors := 'There was an error while deleting the resellers';
           --dbms_output.PUT_LINE('There was an error while deleting the resellers');
           inserterror_output_messages ( NULL,NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, 'ERROR', i_deal_creation_guid, NULL,NULL,l_errors);
           END IF;
           --===============
           --ADD RESELLER A
           --===============

            BEGIN
            SELECT 1
            INTO l_rslra_proid
            FROM edms_deal_queue x,
              TABLE ( xmlsequence ( extract ( x.xml_data_xml, 'DealCreationRequest/ResellerAs/ResellerA',l_xmlnamespace))) d
            WHERE x.deal_creation_guid                                                = i_deal_creation_guid
            AND LENGTH(extract ( value (d), '//PartnerProID/text()',l_xmlnamespace) ) >0;
          EXCEPTION
          WHEN NO_DATA_FOUND THEN
            l_rslra_proid :=0;
          WHEN TOO_MANY_ROWS THEN
            l_rslra_proid :=2;
          END;

          IF (l_rslra_proid >0 )THEN

                --dbms_output.put_line('Adding ResellerA when xml has Partner ProId');
                l_rslr_a_added:=add_reseller_a_new (i_deal_creation_guid,l_xmlnamespace,l_new_bd_id,l_country_cd,l_region,l_busmodelcd,l_deal_creator_dc,l_errors);

          ELSE
               l_rslr_a_added:=add_reseller_a_new (i_deal_creation_guid,l_xmlnamespace,l_new_bd_id,l_country_cd,l_region,l_busmodelcd,l_deal_creator_dc,l_errors);

          END IF;

           IF (L_RSLR_A_ADDED         ='N' AND UPPER(l_rtm) = 'INDIRECT' ) THEN
          --l_dealsourcecd<>c_deal_souce_bmi THEN --Condition added as BMI  is not adding resellers other than default as all the deals are direct deals
                IF lower(l_dealsourcecd)='eprime' THEN                                 --added this condition to alow deal creation with version 0 even routing indicator is not provided for ePrime deals.
                        l_msg_type           :='ERROR';
                        l_errors             := ' Creating 0 Version deal as reseller A is not added ';
                        l_dealvertocreate    :=0;
                        --INSERTERROR_OUTPUT_MESSAGES ( l_new_bd_id, l_source_bd_nr, l_bd_version_nr, l_deal_prog_cd, l_bdme_aprvl_cd, l_quote_dist_cd, l_euv_stat_code, l_high_risk_fl, l_risk_reasion_desc, l_risk_desc, l_errors, l_msg_type, l_deal_creation_guid, NULL, NULL,l_errors);
                ELSE
                        --dbms_output.PUT_LINE ('Reseller A not added');
                        L_ERRORS  :=l_errors||' Deal cannot be created. Unable to add Reseller A';
                        L_MSG_TYPE:=C_M_TYPE_ERROR;

                       -- RAISE REJECT_DEAL;
               END IF;
          END IF;

          --===============
          --ADD RESELLER B
          --===============
          ---Added as temporary solution for adding reseler ids

          SELECT COUNT(*)
          INTO l_rslrb_proid
          FROM edms_deal_queue x,
            TABLE ( xmlsequence ( extract ( x.xml_data_xml, 'DealCreationRequest/ResellerBs/ResellerB',l_xmlnamespace))) d
          WHERE x.deal_creation_guid                                                = i_deal_creation_guid
          AND LENGTH(extract ( value (d), '//PartnerProID/text()',l_xmlnamespace) ) >0;
          IF l_rslrb_proid                                                          >0 THEN
            --dbms_output.put_line('Adding ResellerB when xml has Partner ProId');
            l_rslr_b_added:=add_reseller_B_new (i_deal_creation_guid,l_xmlnamespace,l_new_bd_id,l_country_cd,l_region,l_busmodelcd,l_deal_creator_dc,l_errors);
          ELSE
            --dbms_output.put_line('Adding ResellerB when xml has Reseller Id');
            --l_rslr_b_added:=add_reseller_B_new (l_deal_creation_guid,l_xmlnamespace,l_bd_id,l_countrycd,l_region,l_busmodelcd,l_deal_creator_dc,'N',l_errors);
            --By Harsh Shah 20-Dec-2013,
            l_rslr_b_added:=add_reseller_B_new (i_deal_creation_guid,l_xmlnamespace,l_new_bd_id,l_country_cd,l_region,l_busmodelcd,l_deal_creator_dc,l_errors);
          END IF;
          --dbms_output.put_line (' Reseller B Addition status: ' || l_rslr_b_added);
          IF L_RSLR_B_ADDED='N' AND (l_dealsourcecd NOT IN ('BMI','NGQ','STS') OR lower(l_dealsourcecd) <> 'eprime' )THEN --Condition added as BMI  is not adding resellers other than default as all the deals are direct deals
            --dbms_output.PUT_LINE ('Reseller B not added');
            L_ERRORS  :=l_errors ||' Deal cannot be created. Unable to add Reseller B';
            L_MSG_TYPE:=C_M_TYPE_ERROR;
          --    RAISE REJECT_DEAL;
          END IF;

     --dbms_output.PUT_LINE ('adding Bundles now ');

      ---------------------------------------------------------------------------------------------------------------
      -- Add bundles / Bundle line items
      ---------------------------------------------------------------------------------------------------------------
      add_bundle_products (i_deal_creation_guid, l_xmlnamespace, l_deal_creator_dc, L_new_BD_ID, l_source_bd_nr, l_new_bd_version_nr,
      L_dealsourcecd , L_dealvertocreate , L_begin_date , L_end_date , L_dealapprfl , L_dealquotefl , L_dealroutefl , L_COUNTRY_CD , L_price_term_cd ,
      L_price_list_cd , L_currency_cd , L_dealsourcedealtype , L_dealsourcekeyval , L_hierarchy_cd , L_busmodelcd );

      Replace_bundle_products (i_deal_creation_guid, l_xmlnamespace, l_deal_creator_dc, L_new_BD_ID, l_source_bd_nr, l_new_bd_version_nr,
      L_dealsourcecd , L_dealvertocreate , L_begin_date , L_end_date , L_dealapprfl , L_dealquotefl , L_dealroutefl , L_COUNTRY_CD , L_price_term_cd ,
      L_price_list_cd , L_currency_cd , L_dealsourcedealtype , L_dealsourcekeyval , L_hierarchy_cd , L_busmodelcd );
    --This procedure updates the bundle status to HOLD


        UpdateBundles(i_deal_creation_guid ,
                l_xmlnamespace,
                L_new_BD_ID,
                l_source_bd_nr,
                l_new_bd_version_nr,
                'Y'
                );

    --The below procedure is added by Lakshmi for CR183981 - Taking Out PNs that are part of Autobundled Configs - They are completely deleted
       ReplaceBundles(i_deal_creation_guid, l_xmlnamespace, l_deal_creator_dc, L_new_BD_ID, l_source_bd_nr, l_new_bd_version_nr, L_dealsourcecd , L_dealvertocreate , L_begin_date , L_end_date , L_dealapprfl , L_dealquotefl , L_dealroutefl ,
        L_COUNTRY_CD , L_price_term_cd , L_price_list_cd , L_currency_cd , L_dealsourcedealtype , L_dealsourcekeyval , L_hierarchy_cd , L_busmodelcd );

    --dbms_output.PUT_LINE ('Bundles added ..done');


    --Update the line_nr in bundle lines. Fix for CR44121.
        BEGIN
        FOR bl_line_nr IN (SELECT DISTINCT line_nr FROM bundle WHERE bd_id=L_new_BD_ID ) LOOP
        UPDATE bundle_line SET item_nr=ROWNUM WHERE line_nr=bl_line_nr.line_nr AND bd_id=L_new_BD_ID
        AND Scale_id= (SELECT max(scale_id) FROM line_disc_scale WHERE bd_id=L_new_BD_ID);
        END LOOP;
        EXCEPTION
        WHEN OTHERS THEN
         l_msg_type              :='ERROR';
         l_errors                := 'Could not update bundle line item numbers: '||SQLERRM;
                --||' bundle line: '||i_bundle_line_nr;
                PKGEDMSDEALCREATIONV2_R14.INSERTERROR_OUTPUT_MESSAGES ( L_new_BD_ID, NULL,NULL,null, NULL,NULL,NULL,NULL,NULL,NULL, l_errors, l_msg_type, i_deal_creation_guid, NULL, NULL,l_errors);
        --dbms_output.PUT_LINE('Could not update item number in bundle line table: '||SQLERRM);
        END;

--This procedure should be called after adding products to the deal.- Change made by Lakshmi on 10/17/2014 for CR162108-Date Range set in past
  --Update end date of the new version of the deal.
    update_deal_enddate  ( L_NEW_BD_ID,
                           i_deal_creation_guid,
                           l_errors);
    IF (l_errors <>'SUCCESS') THEN
    inserterror_output_messages ( l_new_bd_id,L_SOURCE_BD_NR, a_out2,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, 'WARNING',
     i_deal_creation_guid, NULL,NULL,l_errors);
    END IF;

--call the procedure which updates the remaining_amt in line_item table.
update_remaining_amt(l_new_bd_id);

  ---CR 4744 for highest list price PL in bundle product
  bundle_high_list_price(L_new_BD_ID,l_errors);
  --by harsh shah 17-Nov-2013
  --to capture the error in bundle_high_list_price procedure
  --dbms_output.PUT_LINE (L_errors);

  --if l_errors is not null then
    --inserterror_output_messages ( NULL,NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, 'WARNING', i_deal_creation_guid, NULL,NULL,NULL);
  --end if;



  --Added by Lakshmi.
  --dbms_output.PUT_LINE ('updating line disc scale');
  update_line_disc_scale( l_new_bd_id,i_deal_creation_guid,I_ERROR_MESSAGE);

  --Changes made by Lakshmi for: CR2908 - Missing Date Range resulting in uneditable pricing fields

  BEGIN
        SELECT APP_VALUE INTO l_denied_app_value
                FROM APP_CONFIG_KEYS
                WHERE APP_KEY =  'ADD_DATE_RANGE' ;
        EXCEPTION
        WHEN NO_DATA_FOUND THEN
            l_denied_app_value :='N';
        WHEN OTHERS THEN
            l_denied_app_value :='N';
    END;

SELECT bdme_aprvl_cd
        INTO old_bdme_aprvl_cd
        FROM deal
        WHERE bd_nr=  l_source_bd_nr
        AND bd_version_nr = l_source_bd_version_nr;

IF (old_bdme_aprvl_cd ='D' AND l_denied_app_value='Y') THEN
  BEGIN
  FOR lds_lines_query IN (
  --Find the lines which are not there in the current XML request and which are not on HOLD/Denied. Add a new date range and keep the previous auth Status (It will be Authorized)
    SELECT line_nr
                                          FROM line_item
                                         WHERE bd_id = l_new_bd_id
                                               AND line_nr NOT IN
                                                      (SELECT li.line_nr
                                                         FROM gt_xml_line_item rec, line_item li
                                                        WHERE     line_type_cd = 'PN'
                                                             AND rec.guid=i_deal_creation_guid--added as part of CR 239425 ( to not get the records based on guid)
                                                              AND PROD_GNRC_NR_TX = rec.sku
                                                              AND prod_opt_cd =
                                                                     DECODE (rec.OPT_CD, NULL, ' ', REC.OPT_CD)
                                                              AND (SRC_BUNDLE_DESC_TX = rec.Bundle_desc
                                                                   OR SRC_BUNDLE_DESC_TX IS NULL)
                                                              AND li.bd_id = l_new_bd_id
                                                       UNION ALL
                                                       SELECT li.line_nr
                                                         FROM GT_XML_BUNDLE RECBD, line_item li
                                                        WHERE    line_type_cd = 'BD'
                                                              AND prod_gnrc_nr_tx = recbd.sku
                                                              AND recbd.guid =i_deal_creation_guid --added as part of CR 239425 ( to not get the records based on guid)
                                                              AND (SRC_BUNDLE_DESC_TX = recbd.Bundle_Desc
                                                                   OR SRC_BUNDLE_DESC_TX IS NULL)
                                                              AND li.bd_id = l_new_bd_id)
                                                              AND  line_prog_cd ='N'
                              )
  LOOP
--Add new date range for the lines which are cleared:
  add_date_range(
                        lds_lines_query.line_nr,
                        l_new_bd_id,
                        l_RETURN_STATUS
                          );

END LOOP;

EXCEPTION
WHEN OTHERS THEN
l_errors := 'New Date range not added for denied and revised deal: '||l_source_bd_nr ||'. Error: '||sqlerrm;
     inserterror_output_messages (l_source_bd_id,l_source_bd_nr,l_source_bd_version_nr, NULL ,NULL,NULL,NULL, NULL, NULL,NULL,l_errors,'INFO', I_deal_creation_guid, NULL,NULL,NULL);
END;
END IF;
   --End of changes made for: CR2908;

 --Added by Lakshmi.
  --Call the procedure to insert data into deal_pl and update it.
  SELECT region INTO l_region FROM ww_cntry WHERE cntry_cd = l_country_cd;

  --recalculating running totals for all PLS
  ----dbms_output.PUT_LINE ('Recalc running PL total ..starts');
  --RECALC_RUNNING_TOTALS(l_new_bd_id);
  ----dbms_output.PUT_LINE ('Recalc running PL total ..ends');


  -----------------------------------------------------------------------------------------------
  --Calculating /Re-calculating DEAL PL TOTALS
   insert_deal_pl (l_new_bd_id, l_region, i_deal_creation_guid, I_ERROR_MESSAGE);
 -----------------------------------------------------------------------------------------------

  --*****************************
  --DEAL COMPETITORS
  --*****************************
  --dbms_output.put_line ('Inserting data for deal competitors ');
  INS_COMPETITORS (l_new_bd_id,i_deal_creation_guid,L_XMLNAMESPACE);
  dbms_output.PUT_LINE ('Dea competitors entry..done..');

   ----deal Comments
  INS_DEAL_COMMENT_MEMO (l_new_bd_id , i_deal_creation_guid, L_XMLNAMESPACE);
  dbms_output.PUT_LINE (' Deal comment memo done');

  --Agent Incentives
  INS_DEAL_PL(l_new_bd_id , i_deal_creation_guid, L_XMLNAMESPACE , L_REGION, 100 );
  dbms_output.PUT_LINE (' ins deal pl done');

  --Update agent approval flag
  update_agent_aprvl_fl(l_new_bd_id);


   --calculate deal risk
    dbms_output.PUT_LINE (' calculate deal risk start ...');
  CALCULATE_DEAL_RISK (L_NEW_BD_ID,L_RISK_REASON,L_ERRORS);

dbms_output.PUT_LINE (' deal risk errors: ' || L_ERRORS );
dbms_output.PUT_LINE (' deal risk reasons ' || L_RISK_REASON );



  --by Harsh Shah 14 Mar 2014
  --Updating Total Bundle Header discount
  IF updatehdrpricingvalues(l_new_bd_id) ='N' then
      dbms_output.PUT_LINE ('Header Pricing values could not be updated');
      NULL;
  END IF;
  dbms_output.PUT_LINE ('Header Pricing values updated');
  --by harsh Shah 24-Mar-2014
  --calculate_deal_disc_margin_pct (l_new_bd_id);


  IF (L_ERRORS    IS NULL AND LENGTH(LTRIM(RTRIM(L_RISK_REASON)))>2) THEN
    L_HIGH_RISK_FL:='Y';
    SELECT DECODE ( SUBSTR(l_risk_reason,1,1), ';', SUBSTR(l_risk_reason,2), SUBSTR(l_risk_reason,1) )
    INTO l_errors
    FROM DUAL;
    L_RISK_REASON:='High Risk Reasons : ' || L_ERRORS;
    L_ERRORS     :='WARNING';
    Dbms_output.put_line (' Deal High Risk Reasons using decode ' || l_risk_reason);
    inserterror_output_messages ( NULL,NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_risk_reason, 'WARNING', i_deal_creation_guid, NULL,NULL,l_risk_reason);

   -- dbms_output.PUT_LINE ('901');
--Added by Lakshmi on 9/16/2014 to send mails when deal goes to High Risk
--Changes made by Lakshmi on 9/18/2014
/* BEGIN */
SELECT app_value
  INTO l_app_value
  FROM APP_CONFIG_KEYS
 WHERE app_key LIKE 'HIGH_RISK%';
--dbms_output.PUT_LINE ('902');

SELECT email_from_id, email_subject_tx , email_body_tx
  INTO l_from_address, l_email_subject, l_email_body
  FROM ECLP_EMAIL_TEMPLATE
 WHERE email_template_cd = l_app_value
 and tenantid =l_tenantid;--Added for SMO changes CR

 SELECT control_cntry_cd,bus_model_cd INTO l_cntry_cd, l_bus_model_cd FROM deal WHERE bd_id=l_new_bd_id;

 SELECT REPLACE(l_email_subject,'<DEAL.BD_NR>',l_source_bd_nr) INTO l_email_subject FROM DUAL;

 BEGIN
 SELECT eu_cmpny_Nm INTO l_euc_cmpny_Nm FROM deal WHERE bd_nr=l_source_bd_nr AND current_version_Fl='Y';
 EXCEPTION
 WHEN OTHERS THEN
 l_euc_cmpny_Nm := NULL;
 --dbms_output.PUT_LINE ('903');
 END;

 SELECT REPLACE(l_email_subject,'( <Deal.CUSTOMER> )',l_euc_cmpny_Nm) INTO l_email_subject FROM DUAL;

FOR employee_email_list IN (SELECT d.init_hp_emp_nr,
                            d.driving_hp_emp_nr,
                            d.dsm_hp_emp_nr,
                            d.DEAL_LEAD_EMP_NR from deal d
                            where d.bd_id=l_new_bd_id)
LOOP
IF (is_emp_bmi_default(employee_email_list.init_hp_emp_nr
,l_dealsourcecd --Added for US-9408 --> Encore Retirement  
)='Y')  THEN
    SELECT * INTO emp_email_address FROM (select dc_email  from default_bmi_employee demp where demp.region_cd in (select region from ww_cntry wc where wc.cntry_cd=L_CNTRY_CD)
    AND (upper(route_to_market))=(SELECT DISTINCT DECODE(direct_fl,'Y','DIRECT','INDIRECT') FROM bus_model WHERE bus_model_cd=l_bus_model_cd AND country_cd=L_CNTRY_CD
                                                                                                                                                                                AND tenantid =l_tenantid)--Added for SMO Changes
                                   AND (demp.country_cd=l_cntry_cd OR country_cd='*' )
                                   AND tenantid =l_tenantid--Added for SMO changes
                                   AND source_asset_ID = l_dealsourcecd --Added for US-9408 --> Encore Retirement  
     ORDER BY COUNTRY_CD DESC)
      WHERE rownum<=1;
        l_to_address := l_to_address||','||emp_email_address;
    --dbms_output.PUT_LINE ('904');
ELSE
        --dbms_output.PUT_LINE ('905');
        SELECT email_unix_addr_tx INTO emp_email_address FROM employee emp WHERE emp_nr=employee_email_list.init_hp_emp_nr
        AND UPPER (emp.emp_stat_cd) = 'ACTIVE';
        l_to_address := l_to_address||emp_email_address;
END IF;

IF (is_emp_bmi_default(employee_email_list.driving_hp_emp_nr
,l_dealsourcecd --Added for US-9408 --> Encore Retirement  
)='Y')  THEN
    --dbms_output.PUT_LINE ('908');
    SELECT * INTO emp_email_address FROM (select sr_email  from default_bmi_employee demp where demp.region_cd in (select region from ww_cntry wc where wc.cntry_cd=L_CNTRY_CD)
    AND (upper(route_to_market))=(SELECT DISTINCT DECODE(direct_fl,'Y','DIRECT','INDIRECT') FROM bus_model WHERE bus_model_cd=l_bus_model_cd AND country_cd=L_CNTRY_CD
                                                                                                                                                                                                        AND tenantid =l_tenantid)---Added for SMO Changes
     AND (demp.country_cd=l_cntry_cd OR country_cd='*' )
     AND tenantid=l_tenantid--Added for SMO changes
     AND source_asset_ID = l_dealsourcecd --Added for US-9408 --> Encore Retirement  
     ORDER BY COUNTRY_CD DESC)
      WHERE rownum<=1;
    l_to_address := l_to_address||','||emp_email_address;
ELSE
--dbms_output.PUT_LINE ('909');
SELECT email_unix_addr_tx INTO emp_email_address FROM employee emp WHERE emp_nr=employee_email_list.driving_hp_emp_nr
AND UPPER (emp.emp_stat_cd) = 'ACTIVE';
l_to_address := l_to_address||emp_email_address;
END IF;

--dbms_output.PUT_LINE ('910');
IF (is_emp_bmi_default(employee_email_list.dsm_hp_emp_nr
,l_dealsourcecd --Added for US-9408 --> Encore Retirement  
)='Y')  THEN
--dbms_output.PUT_LINE ('911');
SELECT * INTO emp_email_address FROM (select dm_email  from default_bmi_employee demp where demp.region_cd in (select region from ww_cntry wc where wc.cntry_cd=L_CNTRY_CD)
AND (upper(route_to_market))=(SELECT DISTINCT DECODE(direct_fl,'Y','DIRECT','INDIRECT') FROM bus_model WHERE bus_model_cd=l_bus_model_cd AND country_cd=L_CNTRY_CD
                                                                                                                                                                    AND tenantid =l_tenantid)----Added for SMO Changes
 AND (demp.country_cd=l_cntry_cd OR country_cd='*' )
 AND tenantid=l_tenantid--Added for SMO changes
 AND source_asset_ID = l_dealsourcecd --Added for US-9408 --> Encore Retirement  
 ORDER BY COUNTRY_CD DESC)
  WHERE rownum<=1;
l_to_address := l_to_address||','||emp_email_address;
ELSE
--dbms_output.PUT_LINE ('912');
SELECT email_unix_addr_tx INTO emp_email_address FROM employee emp WHERE emp_nr=employee_email_list.dsm_hp_emp_nr
AND UPPER (emp.emp_stat_cd) = 'ACTIVE';
l_to_address := l_to_address||emp_email_address;
END IF;

--dbms_output.PUT_LINE ('913');
IF (is_emp_bmi_default(employee_email_list.deal_lead_emp_nr
,l_dealsourcecd --Added for US-9408 --> Encore Retirement  
)='Y')  THEN
--dbms_output.PUT_LINE ('914');
SELECT * INTO emp_email_address FROM (select dl_email  from default_bmi_employee demp where demp.region_cd in (select region from ww_cntry wc where wc.cntry_cd=L_CNTRY_CD)
AND (upper(route_to_market))=(SELECT DISTINCT DECODE(direct_fl,'Y','DIRECT','INDIRECT') FROM bus_model WHERE bus_model_cd=l_bus_model_cd AND country_cd=L_CNTRY_CD
                                                                                                                                                                                        AND tenantid =l_tenantid)---Added for SMO Changes
 AND (demp.country_cd=l_cntry_cd OR country_cd='*' )
 AND tenantid=l_tenantid--Added for SMO changes
 AND source_asset_ID = l_dealsourcecd --Added for US-9408 --> Encore Retirement  
 ORDER BY COUNTRY_CD DESC)
  WHERE rownum<=1;
l_to_address := l_to_address||','||emp_email_address;
ELSE
--dbms_output.PUT_LINE ('915');
SELECT email_unix_addr_tx INTO emp_email_address FROM employee emp WHERE emp_nr=employee_email_list.deal_lead_emp_nr
AND UPPER (emp.emp_stat_cd) = 'ACTIVE';
l_to_address := l_to_address||emp_email_address;
END IF;

END LOOP;
 --dbms_output.PUT_LINE ('916');
--For each receipient send a mail
--For each receipient send a mail
FOR receipent_list IN (SELECT d.init_hp_emp_nr,
                            d.driving_hp_emp_nr,
                            d.dsm_hp_emp_nr,
                            d.DEAL_LEAD_EMP_NR from deal d
                            where d.bd_id=l_new_bd_id)
LOOP

BEGIN
IF (is_emp_bmi_default(receipent_list.init_hp_emp_nr
,l_dealsourcecd --Added for US-9408 --> Encore Retirement  
)='Y')  THEN
--dbms_output.PUT_LINE ('917');
    SELECT * INTO receipient_email_address FROM (select dc_email  from default_bmi_employee demp where demp.region_cd in (select region from ww_cntry wc where wc.cntry_cd=L_CNTRY_CD)
    AND (upper(route_to_market))=(SELECT DISTINCT DECODE(direct_fl,'Y','DIRECT','INDIRECT') FROM bus_model WHERE bus_model_cd=l_bus_model_cd AND country_cd=L_CNTRY_CD
                                                                                                                                                                                        AND tenantid =l_tenantid) ---Added for SMO Changes
     AND (demp.country_cd=l_cntry_cd OR country_cd='*' )
     AND tenantid=l_tenantid--Added for SMO changes
     AND source_asset_ID = l_dealsourcecd --Added for US-9408 --> Encore Retirement  
     ORDER BY COUNTRY_CD DESC)
      WHERE rownum<=1;
ELSE
--dbms_output.PUT_LINE ('918');
SELECT email_unix_addr_tx INTO receipient_email_address FROM employee emp WHERE emp_nr=receipent_list.init_hp_emp_nr
AND UPPER (emp.emp_stat_cd) = 'ACTIVE';
END IF;
--dbms_output.put_line ('i_from_address: ' || l_from_address);
--dbms_output.put_line ( 'Recp :' || l_to_address);
--dbms_output.put_line ('l_email_subject :' || l_email_subject);
--dbms_output.put_line ('l_email_body :' || l_email_body);
--dbms_output.put_line (' receipient_email_address:' || receipient_email_address);

 send_mail(
            l_from_address,
            l_to_address ,
            l_email_subject,
            l_email_body,
            receipient_email_address,
            l_errors);
            dbms_output.PUT_LINE ('919');
IF l_errors IS NOT NULL THEN
        inserterror_output_messages ( NULL,NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, 'WARNING', i_deal_creation_guid, NULL,NULL,'Error while sending High Risk Email to Deal Creator');
END IF;

IF (is_emp_bmi_default(receipent_list.driving_hp_emp_nr
,l_dealsourcecd --Added for US-9408 --> Encore Retirement  
)='Y')  THEN
    SELECT * INTO receipient_email_address FROM (select sr_email  from default_bmi_employee demp where demp.region_cd in (select region from ww_cntry wc where wc.cntry_cd=L_CNTRY_CD)
    AND (upper(route_to_market))=(SELECT DISTINCT DECODE(direct_fl,'Y','DIRECT','INDIRECT') FROM bus_model WHERE bus_model_cd=l_bus_model_cd AND country_cd=L_CNTRY_CD
                                                                                                                                                                                                AND tenantid =l_tenantid)---Added for SMO changes
     AND (demp.country_cd=l_cntry_cd OR country_cd='*' )
     AND tenantid=l_tenantid--Added for SMO changes
     AND source_asset_ID = l_dealsourcecd --Added for US-9408 --> Encore Retirement  
     ORDER BY COUNTRY_CD DESC)
      WHERE rownum<=1;
ELSE
        SELECT email_unix_addr_tx INTO receipient_email_address FROM employee emp WHERE emp_nr=receipent_list.driving_hp_emp_nr
        AND UPPER (emp.emp_stat_cd) = 'ACTIVE';
END IF;
    send_mail(
            l_from_address,
            l_to_address ,
            l_email_subject,
            l_email_body,
            receipient_email_address,
            l_errors);
IF l_errors IS NOT NULL THEN
  inserterror_output_messages ( NULL,NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, 'WARNING', i_deal_creation_guid, NULL,NULL,'Error while sending High Risk Email to Deal Creator');
END IF;

IF (is_emp_bmi_default(receipent_list.dsm_hp_emp_nr
,l_dealsourcecd --Added for US-9408 --> Encore Retirement  
)='Y')  THEN
SELECT * INTO receipient_email_address FROM (select dm_email  from default_bmi_employee demp where demp.region_cd in (select region from ww_cntry wc where wc.cntry_cd=L_CNTRY_CD)
AND (upper(route_to_market))=(SELECT DISTINCT DECODE(direct_fl,'Y','DIRECT','INDIRECT') FROM bus_model WHERE bus_model_cd=l_bus_model_cd AND country_cd=L_CNTRY_CD
                                                                                                                                                                                                                    AND tenantid =l_tenantid)---Added for SMO changes
 AND (demp.country_cd=l_cntry_cd OR country_cd='*' )
 AND tenantid=l_tenantid--Added for SMO changes
 AND source_asset_ID = l_dealsourcecd --Added for US-9408 --> Encore Retirement  
 ORDER BY COUNTRY_CD DESC)
  WHERE rownum<=1;
   ELSE
SELECT email_unix_addr_tx INTO receipient_email_address FROM employee emp WHERE emp_nr=receipent_list.dsm_hp_emp_nr
AND UPPER (emp.emp_stat_cd) = 'ACTIVE';
END IF;
     send_mail(
            l_from_address,
            l_to_address ,
            l_email_subject,
            l_email_body,
            receipient_email_address,
            l_errors);
IF l_errors IS NOT NULL THEN
  inserterror_output_messages ( NULL,NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, 'WARNING', i_deal_creation_guid, NULL,NULL,'Error while sending High Risk Email to Deal Creator');
END IF;

IF (is_emp_bmi_default(receipent_list.DEAL_LEAD_EMP_NR
,l_dealsourcecd --Added for US-9408 --> Encore Retirement  
)='Y')  THEN
SELECT * INTO receipient_email_address FROM (select dl_email  from default_bmi_employee demp where demp.region_cd in (select region from ww_cntry wc where wc.cntry_cd=L_CNTRY_CD)
AND (upper(route_to_market))=(SELECT DISTINCT DECODE(direct_fl,'Y','DIRECT','INDIRECT') FROM bus_model WHERE bus_model_cd=l_bus_model_cd AND country_cd=L_CNTRY_CD
                                                                                                                                                                            AND tenantid =l_tenantid)----Added for SMO Changes
 AND (demp.country_cd=l_cntry_cd OR country_cd='*' )
 AND tenantid=l_tenantid--Added for SMO changes
 AND source_asset_ID = l_dealsourcecd --Added for US-9408 --> Encore Retirement  
 ORDER BY COUNTRY_CD DESC)
  WHERE rownum<=1;
      ELSE
SELECT email_unix_addr_tx INTO receipient_email_address FROM employee emp WHERE emp_nr=receipent_list.DEAL_LEAD_EMP_NR
AND UPPER (emp.emp_stat_cd) = 'ACTIVE';
END IF;
     send_mail(
            l_from_address,
            l_to_address ,
            l_email_subject,
            l_email_body,
            receipient_email_address,
            l_errors);
IF l_errors IS NOT NULL THEN
  inserterror_output_messages ( NULL,NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, 'WARNING', i_deal_creation_guid, NULL,NULL,'Error while sending High Risk Email to Deal Creator');
END IF;

EXCEPTION
WHEN OTHERS THEN
L_ERRORS:='Error occured while sending mails for High Risk Deal'||sqlerrm;
    inserterror_output_messages ( NULL,NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, 'WARNING', i_deal_creation_guid, NULL,NULL,l_errors);
END;
END LOOP;

  ELSE
    L_ERRORS:='Deal Risk Errors : ' || L_ERRORS ;
    inserterror_output_messages ( NULL,NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, 'WARNING', i_deal_creation_guid, NULL,NULL,l_errors);
  END IF;
  --dbms_output.put_line (' calculate deal risk end ...');


  --Update the existing high risk flag only if high risk is true from the below function. This is because, we may get high risk true from the calculate deal risk procedure and we don't want to disturb that logic.
  -- by Harsh Shah FOR  CR 2624 'High Risk Reseller
  --DBMS_OUTPUT.PUT_LINE ('Searching High Risk Reseller B ');
  IF Is_reseller_b_high_risk(L_NEW_BD_ID,i_deal_creation_Guid)='Y' THEN
      L_HIGH_RISK_FL:='Y';
  END IF;
  --DBMS_OUTPUT.PUT_LINE ('Searching High Risk Reseller B Ends');
   --update deal table with high risk flag
   --by Harsh Shah h12/2/2014 - for the CR HIGH RISK Reseller B

  UPDATE DEAL
  SET DEAL_RISK_FL =L_HIGH_RISK_FL
  WHERE BD_ID      =l_new_bd_id;

  --DBMS_OUTPUT.PUT_LINE ('906');

 --Added by Lakshmi.
   --updating deal table's values - deal_est_value and other fields.
--updating deal table's values - deal_est_value and other fields.
   --COMMENTED BY Harsh Shah 11-APR-2014
  --l_reccount:=update_deal_status_values(l_new_bd_id);

  --dbms_output.put_line (' Deal status update values '|| l_reccount);

  --------------------
  --SET DCT STATUS
  --------------------
  L_O_DCTEXPIRETHRESHOLDPCT:=1;

  SET_DCT_STATUS(L_NEW_BD_ID,I_DEAL_CREATION_GUID,L_O_DCTEXPIRETHRESHOLDPCT);

  --dbms_output.PUT_LINE ('SET DCT STATUS L_O_DCTEXPIRETHRESHOLDPCT  ' || L_O_DCTEXPIRETHRESHOLDPCT);

  UPDATE ROLLOUT_SCHEDULE
  SET RTQTY  =ROUND(LINE_MAX_QTY + (((L_O_DCTEXPIRETHRESHOLDPCT-100)/100) * NVL(LINE_MAX_QTY, 0)))
  WHERE bd_id=L_NEW_BD_ID;
--DBMS_OUTPUT.PUT_LINE ('907');
   ----- Handling auto event in deal timings table ----
    --ins_deal_timings(l_new_bd_id, sysdate,l_deal_creator_dc,sysdate,l_deal_creator_dc,'DC01',NULL,'CREATEDEAL','CREATEDEAL');

      --******************************************************
      --Approve Deal/Quote Deal
      --******************************************************
        --approve_deal(l_new_bd_id, l_is_all_lines_authorized);
        --added if condition by Harsh Shah 11/10/2014 For the CR
        --CR 171727 & 170008 - [Channel][Regression] Bundle's rqst% is modified in dealV2 after accept quote for a HT deal
      if l_dealapprfl ='Y' then
         approve_deal(l_new_bd_id, l_is_all_lines_authorized);
      end if;
      --DBMS_OUTPUT.PUT_LINE ('908');

  IF (upper(a_out3)='SUCCESS' AND l_dealapprfl ='Y' )THEN
    BEGIN
      --dbms_output.put_line (' Checking for Deal Actions ');
      L_new_BD_ID        := TO_NUMBER (A_OUT1);
      l_new_bd_version_nr:=to_number (a_out2);
      --update business justification details with latest bd_id
      IF l_bus_justify_reqd_fl='Y' THEN
      l_bus_justify_bd_id:=l_new_bd_id;
        UPDATE deal_bus_justify SET bd_id=l_new_bd_id WHERE bd_id=l_bus_justify_bd_id;
      END IF;

        IF l_quotedbyempnr IS NULL AND l_quotedbyempemail IS NOT NULL THEN
        l_quotedbyempnr  :=get_emp_nr(l_quotedbyempemail);
        END IF;

      IF (l_dealsourcedealtype <>C_HIGH_TOUCH_DEALTYPE_DESC) THEN
    L_QUOTED_BY_USER_ID    :=GETVALID_ECLIPSE_USERID (L_QUOTEDBYEMPNR,L_ERRORS);
    --if L_QUOTEDBYEMPNR is null  then
    --L_ERRORS:='Quoted by Employee No is mandatory,Please provide the details and re-try to create deal';
    --L_MSG_TYPE:=C_M_TYPE_ERROR;
    --raise reject_deal;
    IF L_ERRORS IS NOT NULL THEN
      L_MSG_TYPE:=C_M_TYPE_ERROR;
      --raise reject_deal;
    ELSIF L_QUOTED_BY_USER_ID IS NULL THEN
    l_quoted_by_user_id := 'bmidef';
      L_ERRORS                :='Invalid Quoted by Employee No';
      l_msg_type              :=c_m_type_ERROR;
      --RAISE REJECT_DEAL;
    END IF;
  END IF;

        --************
        --Quote deal
        --************
        SELECT  euv_at_won_fl
    INTO l_euv_at_won_fl
    FROM bus_model
    WHERE bus_model_cd       = l_busmodelcd
    AND bus_model.country_cd = l_country_cd
    AND tenantid =l_tenantid;---Added for SMO Changes

        quote_deal(l_new_bd_id,
                    l_source_bd_nr,
                     l_new_bd_version_nr,
                      l_dealquotefl,--l_dealquote_fl
                      l_dealapprfl,
                      l_is_all_lines_authorized,
                      L_QUOTED_BY_USER_ID,
                      L_QUOTEDBYEMPNR,
                      L_HIGH_RISK_FL,
                      l_GenerateOPGNbrFl,
                      l_EUV_AT_WON_FL
                      );

         SELECT deal_prog_cd, bdme_aprvl_cd, quote_dist_cd
        INTO L_DEAL_PROG_CD,L_BDME_APRVL_CD,L_QUOTE_DIST_CD
        FROM deal WHERE bd_Id=l_new_bd_id;

                      UPDATE gt_edms_smqt_err_results
  SET DEAL_PROG_CD=L_DEAL_PROG_CD,
    BDME_APRVL_CD =L_BDME_APRVL_CD,
    QUOTE_DIST_CD =L_QUOTE_DIST_CD,
    RISK_DESC     =DECODE(l_high_risk_fl,'Y',L_RISK_REASON,NULL),
    HIGH_RISK_FL  =L_HIGH_RISK_FL,
    bd_id         =l_new_bd_id,
    BD_NR         =l_source_bd_nr,
    bd_version_nr =l_new_bd_version_nr;
    --dbms_output.put_line('Updating gt_edms_smqt_err_results done');

                      END;
elsif (upper(a_out3)='SUCCESS' AND l_dealapprfl = 'N' )
THEN
    l_new_bd_id          := to_number (a_out1);
    l_bd_version_nr  :=to_number (a_out2);
    --new version is created but cannot be approved as per the flag.
    l_deal_prog_cd :='U';
    l_bdme_aprvl_cd:='N';
    l_quote_dist_cd:='N';
    l_msg_type     :='WARNING';
    L_ERRORS       := 'New version of deal is created but cannot be approved as per the Deal Actions provided' ;

    inserterror_output_messages (l_new_bd_id,l_source_bd_nr,l_new_bd_version_nr, l_deal_prog_cd,l_bdme_aprvl_cd,l_quote_dist_cd,NULL,--l_euv_stat_code,
    l_high_risk_fl,NULL,--l_risk_reasion_desc,
    NULL,
    l_errors,l_msg_type, i_deal_creation_guid,NULL,NULL,l_errors);
    --return all results
    --OPEN p_result FOR SELECT * FROM gt_edms_smqt_err_results order by msg_type DESC;
    --COMMIT;
  elsif (to_number(l_dealvertocreate)=0) THEN
    l_deal_prog_cd                  :='U';
    l_bdme_aprvl_cd                 :='N';
    l_quote_dist_cd                 :='N';
    l_msg_type                      :='SUCCESS';
    l_errors                        :='SUCCESS';
    -- insert into error table and output table.
    --inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr,l_deal_prog_cd --,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code,l_high_risk_fl, --l_risk_reasion_desc,l_risk_desc,l_errors,l_msg_type,l_deal_creation_guid, NULL,NULL,l_errors);
    --OPEN p_result FOR SELECT * FROM gt_edms_smqt_err_results order by msg_type DESC;
    --COMMIT;
  elsif (to_number(l_dealvertocreate)<>0) THEN
    IF ( a_out3                      IS NULL OR a_out3='' ) THEN
      l_errors                       :='Unable to create new version of deal ';
      l_msg_type                     :='ERROR';
      --dbms_output.PUT_LINE(' A_OUT3' || a_out3);
      --dbms_output.PUT_LINE(' A_OUT4' || a_out4);
      --dbms_output.PUT_LINE(' A_OUT5' || a_out5);
      --dbms_output.PUT_LINE(' A_OUT6' || a_out6);
      --dbms_output.PUT_LINE(' A_OUT7' || a_out7);
      -- insert into error table and output table.
      --inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr, l_deal_prog_cd ,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code, --l_high_risk_fl, l_risk_reasion_desc,l_risk_desc,l_errors,l_msg_type, l_deal_creation_guid, NULL,NULL,l_errors);
    ELSE
    IF UPPER(a_out3) LIKE '%USER REQUESTED CANCEL%' THEN
      l_errors  :='Unable to create new version of deal Oracle Error Code is ' || a_out3 ;
      l_msg_type:='ERROR';
      RAISE user_cancelled;
      END IF;
      --raise reject_deal; --Need to change this.
    END IF;
    --return all results
    --  OPEN p_result FOR SELECT * FROM gt_edms_smqt_err_results order by msg_type DESC;
  END IF;

  SELECT  euv_at_won_fl
    INTO l_euv_at_won_fl
    FROM bus_model
    WHERE bus_model_cd       = l_busmodelcd
    AND bus_model.country_cd = l_country_cd
   AND tenantid =l_tenantid;---Added for SMO Changes
    ------------------------
    --Route Deal------------
    ------------------------
    route_deal(l_new_bd_id,
            l_dealroutefl,
            l_dealvertocreate,
            l_high_risk_fl,
            l_dealsourcedealtype,
            l_euv_at_won_fl,
            l_eclipse_user_id
            );


  if UnlockDeal(l_source_bd_nr, l_errors)    ='N' THEN
        inserterror_output_messages ( NULL,NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, 'WARNING', i_deal_creation_guid, NULL,NULL,Null);
   END IF;

   --unlocking the previous version of deal - by Harsh Shah 19 Mar 2014,
            --this should go to a common procedure/function- todo later
            UPDATE deal SET deal_lock_fl='N', deal_lock_user_id = NULL WHERE bd_id=l_source_bd_id;
end_time := dbms_utility.get_time();

INSERTERROR_OUTPUT_MESSAGES ((end_time-start_time)/100, NULL, NULL, NULL, NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,i_deal_creation_guid,NULL, NULL,'BMICREATENEWVERSION_MODULE');
EXCEPTION

WHEN OTHERS THEN
--dbms_output.put_line (l_errors);
--unlocking the previous version of deal - by Harsh Shah 19 Mar 2014,
            --this should go to a common procedure/function- todo later
            UPDATE deal SET deal_lock_fl='N', deal_lock_user_id = NULL WHERE bd_id=l_source_bd_id;
INSERTERROR_OUTPUT_MESSAGES ( null,null, null,null, null, null, null, null, null,null,L_ERRORS, 'ERROR', I_DEAL_CREATION_GUID, null,null,null);

--inserterror_output_messages ( NULL,NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL,a_out7, 'ERROR', i_deal_creation_guid, NULL,NULL,null);
  --dbms_output.put_line('In others Exception : Deal Creation ');
    --l_errors:='Error while creating new version :' || a_out7 ;
    l_errors:='Error while creating new version  a_out4 :' || a_out4 ;
    --dbms_output.put_line (l_errors);
    l_errors:='Error while creating new version  a_out5 :' || a_out5 ;
    --dbms_output.put_line (l_errors);
    l_errors:='Error while creating new version a_out6 :' || a_out6 ;
    --dbms_output.put_line (l_errors);
    l_errors:='Error while creating new version a_out7 :' || a_out7 ;
    --dbms_output.put_line (l_errors);

    l_errors:='Error while creating new version.';
    -- This block is added for US 8975
    --Added by Lakshmi on 16th Oct.
   begin
    select 1 into l_count_bd from deal where bd_id =L_new_BD_ID;
     exception
     when NO_DATA_FOUND then
     l_count_bd:=0;
     when TOO_MANY_ROWS then
     l_count_bd:=2;
     end;
              l_errors:='An error was encountered in creating new version - ' || SQLCODE || ' -ERROR- ' || substr(SQLERRM,1,100) || '. Error at Line : ' || substr(DBMS_UTILITY.FORMAT_ERROR_BACKTRACE(),1,1000);
             l_error_exc:='An error encountered while Creating new version. New version Creation failed -'|| substr(SQLERRM,1,100);
       if l_count_bd >0 then
       --l_errors:='Error in creating new version '||l_errors|| '--'||sqlerrm||''
         delete from deal where bd_id = L_new_BD_ID;
         update deal set current_version_fl='Y' where bd_id =l_source_bd_id;
    --ADDED by Lakshmi for CR: 254291-The status should not change to ?????????Approvals In Progress????????? during new version deal fail cause of invalid qty
         DELETE FROM  gt_edms_smqt_err_results WHERE msg_type='SUCCESS' AND UPPER(error_desc) LIKE '%DEAL CREATED SUCCESSFULLY%';
          INSERT
                  INTO edms_deal_error_report
                    (
                      deal_creation_guid,
                      error_msg,
                      bd_nr,
                      bd_version_nr,
                      bd_id,
                      creation_dts
                    )
                    VALUES
                    (
                      i_deal_creation_guid,
                     'New version with bd_id: '|| l_new_bd_id|| ' is deleted as new version creation failed' ,
                      l_source_bd_nr,
                      l_source_bd_version_nr,
                      l_source_bd_id,
                      sysdate
                    );
       end if;

      inserterror_output_messages ( NULL,NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, 'ERROR', i_deal_creation_guid, NULL,NULL,l_error_exc);


--    inserterror_output_messages ( NULL,NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, 'ERROR', i_deal_creation_guid, NULL,NULL,l_errors);
--Commented below 2 lines --> Lakshmi on 10/16/2015 for US-8975
    --l_errors := 'An error was encountered - ' || SQLCODE || ' -ERROR- ' || sqlerrm || '. Error at Line : ' || dbms_utility.format_error_backtrace();
    --inserterror_output_messages ( NULL,NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, 'ERROR', i_deal_creation_guid, NULL,NULL,Null);
    --dbms_output.put_line (l_errors);

      if UnlockDeal(l_source_bd_nr, l_errors)    ='N' THEN
        inserterror_output_messages ( NULL,NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, 'WARNING', i_deal_creation_guid, NULL,NULL,l_errors);
       END IF;
    END;

  --update Error tables with latest BD ID
  /*
  i_deal_creation_guid IN VARCHAR2,
 i_new_bd_id               IN  DEAL.BD_ID%TYPE,
 i_new_bd_version_nr       IN  DEAL.BD_VERSION_NR%TYPE,
                            i_source_bd_nr               IN  DEAL.BD_NR%TYPE,
                            i_source_bd_version_nr       IN  DEAL.BD_VERSION_NR%TYPE,
                            i_source_bd_id       IN  DEAL.BD_ID%TYPE


                            */
        update_error_tables (i_deal_creation_guid, l_new_bd_id,l_new_bd_version_nr,l_source_bd_nr, l_source_bd_version_nr,l_source_bd_version_nr );
       ----Commented by Lakshmi for CR: 254291-The status should not change to ?????????Approvals In Progress????????? during new version deal fail cause of invalid qty
        --update_error_tables (i_deal_creation_guid, l_source_bd_id,l_source_bd_version_nr,l_source_bd_nr, l_source_bd_version_nr,l_source_bd_version_nr );

UPDATE gt_edms_smqt_err_results
  SET DEAL_PROG_CD=L_DEAL_PROG_CD,
    BDME_APRVL_CD =L_BDME_APRVL_CD,
    QUOTE_DIST_CD =L_QUOTE_DIST_CD,
    RISK_DESC     =DECODE(l_high_risk_fl,'Y',L_RISK_REASON,NULL),
    HIGH_RISK_FL  =L_HIGH_RISK_FL,
    bd_id         =l_new_bd_id, --Commented by Lakshmi for CR: 254291-The status should not change to ?????????Approvals In Progress????????? during new version deal fail cause of invalid qty
    --bd_id         = l_source_bd_id,
    BD_NR         =l_source_bd_nr,
    bd_version_nr =l_new_bd_version_nr; --Commented by Lakshmi for CR: 254291-The status should not change to ?????????Approvals In Progress????????? during new version deal fail cause of invalid qty
    --bd_version_nr =l_source_bd_version_nr;
    --dbms_output.put_line('Updating gt_edms_smqt_err_results done');

    DELETE
  FROM GT_EDMS_SMQT_ERR_RESULTS
  WHERE ERROR_desc='NOROUTE';
     --dbms_output.PUT_LINE('delete from GT_EDMS_SMQT_ERR_RESULTS done');

   --updating High Risk Deals
  select decode(l_high_risk_fl,'Y',l_risk_reason,null) into l_risk_desc from dual;


  /*
  i_bd_id IN NUMBER ,
    i_bd_nr             NUMBER,
    i_bd_version_nr     NUMBER,
    i_deal_prog_cd      VARCHAR2,
    i_bdme_aprvl_cd     VARCHAR2,
    i_quote_dist_cd     VARCHAR2,
    i_euv_stat_cd       VARCHAR2,
    i_high_risk_fl      VARCHAR2,
    i_risk_reason_desc  VARCHAR2,
    i_risk_desc         VARCHAR2,
    i_error_desc        VARCHAR2,
    i_msg_type          VARCHAR2,
    i_deal_guid         VARCHAR2,
    i_won_lost_stat_cd  VARCHAR2,
    I_QUOTE_DIST_DT_GMT DATE,
    i_user_message      VARCHAR2
  */

  inserterror_output_messages (l_new_bd_id,l_source_bd_nr,l_new_bd_version_nr, l_deal_prog_cd,l_bdme_aprvl_cd,l_quote_dist_cd,null,--l_euv_stat_code,
      l_high_risk_fl,l_risk_reasion_desc,   null, l_errors,'WARNING', i_deal_creation_guid,null,null,l_errors);
 --Commented by Lakshmi for CR: 254291-The status should not change to ?????????Approvals In Progress????????? during new version deal fail cause of invalid qty
/*
      inserterror_output_messages (l_new_bd_id,l_source_bd_nr,l_source_bd_version_nr, l_deal_prog_cd,l_bdme_aprvl_cd,l_quote_dist_cd,null,--l_euv_stat_code,
      l_high_risk_fl,l_risk_reasion_desc,   null, l_errors,'WARNING', i_deal_creation_guid,null,null,l_errors);
      */

        --return response back to Web Service
        OPEN p_result FOR SELECT * FROM gt_edms_smqt_err_results order by msg_type DESC;

        --Return config details only the header level bundle details
        /*
        OPEN p_prod_details FOR
          SELECT
                  LI.LINE_NR,
                  LI.LINE_TYPE_CD,
                  LI.assoc_pl_cd,
                  LI.prod_gnrc_nr_tx,
                  LI.prod_gnrc_desc_tx ,
                  B. config_id,
                  B. CONFIG_SRC,
                  LI.SRC_BUNDLE_DESC_TX
            FROM
                      LINE_ITEM LI,
                      BUNDLE B
            WHERE
                      LI.BD_ID=B.BD_ID (+)
            AND LI.LINE_NR=B.LINE_NR (+)
            AND LI.BD_ID  =l_new_bd_id ;
            */

        --Returning product details to BMI-Web Service
          --by Harsh Shah 17-Jan-2014
          OPEN p_prod_details FOR
          SELECT line_nr,
          line_type_cd,
          assoc_pl_cd,
          prod_gnrc_nr_tx,
          prod_gnrc_desc_tx ,
          NULL config_id,
          NULL CONFIG_SRC,
          NULL SRC_BUNDLE_DESC_TX,
          BMI_DOC_NO
          FROM line_item WHERE bd_id = l_new_bd_id AND line_type_cd <> 'BD'
          UNION
          SELECT l.line_nr,
            l.line_type_cd,
            l.assoc_pl_cd,
            l.prod_gnrc_nr_tx,
            l.prod_gnrc_desc_tx ,
            b.config_id,
            b.CONFIG_SRC,
            l.SRC_BUNDLE_DESC_TX,
            L.BMI_DOC_NO
          FROM line_item l,
            bundle b
          WHERE l.bd_id      = l_new_bd_id
          AND l.line_type_cd = 'BD'
          AND b.bd_id        = l.bd_id
          AND l.line_nr      =b.line_nr ;

        --commiting the changes

     --delete temp table data      by Harsh Shah 30-JAN-2015
    delete from eclipse.GT_XML_BUNDLE ;
    delete from eclipse.GT_XML_BUNDLE_Line;
        delete from eclipse.GT_XML_line_item;

        COMMIT;
EXCEPTION
--by Harsh Shah --30-JAN-2015, us7832, for performance improvement.
WHEN TEMP_TABLE_FAILURE THEN
    BEGIN
    l_errors:='Unable to fill temp table or no data in XML';

     inserterror_output_messages ( NULL,NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, 'ERROR', i_deal_creation_guid, NULL,NULL,l_errors);

     --delete temp table data      by Harsh Shah 30-JAN-2015
    --delete temp table data      by Harsh Shah 30-JAN-2015
    delete from eclipse.GT_XML_BUNDLE ;
    delete from eclipse.GT_XML_BUNDLE_Line;
        delete from eclipse.GT_XML_line_item;


    END;

WHEN  INVALID_GUID  THEN
--dbms_output.put_line (l_errors);
  begin
    ROLLBACK;

    --dbms_output.PUT_LINE (' DBMS message: Invalid GUID ' || I_DEAL_CREATION_GUID);
    inserterror_output_messages ( NULL,NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, 'ERROR', i_deal_creation_guid, NULL,NULL,l_errors);
    --update Error tables with latest BD ID
  /*
      i_deal_creation_guid IN VARCHAR2,
     i_new_bd_id               IN  DEAL.BD_ID%TYPE,
     i_new_bd_version_nr       IN  DEAL.BD_VERSION_NR%TYPE,
      i_source_bd_nr               IN  DEAL.BD_NR%TYPE,
      i_source_bd_version_nr       IN  DEAL.BD_VERSION_NR%TYPE,
      i_source_bd_id       IN  DEAL.BD_ID%TYPE

  */

  update_error_tables (i_deal_creation_guid, l_new_bd_id,l_new_bd_version_nr,l_source_bd_nr, l_source_bd_version_nr,l_source_bd_version_nr );

  OPEN p_result FOR SELECT * FROM gt_edms_smqt_err_results order by msg_type DESC;


    commit;
    END;
WHEN  BLANK_SOURCE_BDNR THEN
  BEGIN
  --dbms_output.put_line (l_errors);
    ROLLBACK;
    --dbms_output.PUT_LINE ('Cannot proceed, Source Deal No is empty');
    L_errors:='Cannot proceed, Source Deal No is empty';
    inserterror_output_messages ( NULL,NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, 'ERROR', i_deal_creation_guid, NULL,NULL,l_errors);

    --update Error tables with latest BD ID
  /*
      i_deal_creation_guid IN VARCHAR2,
     i_new_bd_id               IN  DEAL.BD_ID%TYPE,
     i_new_bd_version_nr       IN  DEAL.BD_VERSION_NR%TYPE,
      i_source_bd_nr               IN  DEAL.BD_NR%TYPE,
      i_source_bd_version_nr       IN  DEAL.BD_VERSION_NR%TYPE,
      i_source_bd_id       IN  DEAL.BD_ID%TYPE

  */

    update_error_tables (i_deal_creation_guid, l_new_bd_id,l_new_bd_version_nr,l_source_bd_nr, l_source_bd_version_nr,l_source_bd_version_nr );

    commit;
    --Return error output
    OPEN p_result FOR SELECT * FROM gt_edms_smqt_err_results order by msg_type DESC;

    END;
WHEN REJECT_NEW_VERSION_CREATION THEN
  BEGIN
  --dbms_output.put_line (l_errors);
  --ROLLBACK;
        --unlocking the previous version of deal - by Harsh Shah 19 Mar 2014,
            --this should go to a common procedure/function- todo later
            UPDATE deal SET deal_lock_fl='N', deal_lock_user_id = NULL WHERE bd_id=l_source_bd_id;
    if UnlockDeal(l_source_bd_nr, l_errors)    ='N' THEN
        inserterror_output_messages ( NULL,NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, 'WARNING', i_deal_creation_guid, NULL,NULL,l_errors);
    END IF;
    inserterror_output_messages ( NULL,NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, 'WARNING', i_deal_creation_guid, NULL,NULL,l_errors);
    --dbms_output.PUT_LINE ('IN Exception : REJECT_NEW_VERSION_CREATION');

    --update Error tables with latest BD ID
  /*
      i_deal_creation_guid IN VARCHAR2,
     i_new_bd_id               IN  DEAL.BD_ID%TYPE,
     i_new_bd_version_nr       IN  DEAL.BD_VERSION_NR%TYPE,
      i_source_bd_nr               IN  DEAL.BD_NR%TYPE,
      i_source_bd_version_nr       IN  DEAL.BD_VERSION_NR%TYPE,
      i_source_bd_id       IN  DEAL.BD_ID%TYPE

  */

  --delete temp table data      by Harsh Shah 30-JAN-2015
    delete from eclipse.GT_XML_BUNDLE ;
    delete from eclipse.GT_XML_BUNDLE_Line;
        delete from eclipse.GT_XML_line_item;


  update_error_tables (i_deal_creation_guid, l_new_bd_id,l_new_bd_version_nr,l_source_bd_nr, l_source_bd_version_nr,l_source_bd_version_nr );
    commit;

    --Return error output
   OPEN p_result FOR SELECT * FROM gt_edms_smqt_err_results order by msg_type DESC;

    END;

WHEN line_item_UPDATE_FAILED THEN --New code added for CR:255844
    BEGIN
    ROLLBACK;
-- This block is added for US 8975
   begin
    select 1 into l_count_bd from deal where bd_id =L_new_BD_ID;
     exception
     when NO_DATA_FOUND then
     l_count_bd:=0;
     when TOO_MANY_ROWS then
     l_count_bd:=2;
     end;
              l_errors:=l_errors|| ' An error was encountered in creating new version - ' || SQLCODE || ' -ERROR- ' || substr(SQLERRM,1,100) || '. Error at Line : ' || substr(DBMS_UTILITY.FORMAT_ERROR_BACKTRACE(),1,1000);
             l_error_exc:='An error encountered while Creating new versionl. New version Creation failed -'|| substr(SQLERRM,1,100);
       if l_count_bd >0 then
       --l_errors:='Error in creating new version '||l_errors|| '--'||sqlerrm||''
         delete from deal where bd_id = L_new_BD_ID;
         update deal set current_version_fl='Y' where bd_id =l_source_bd_id;
          INSERT
                  INTO edms_deal_error_report
                    (
                      deal_creation_guid,
                      error_msg,
                      bd_nr,
                      bd_version_nr,
                      bd_id,
                      creation_dts
                    )
                    VALUES
                    (
                      i_deal_creation_guid,
                     'New version with bd_id -'|| l_new_bd_id|| 'Is deleted as new version creation failed' ,
                      l_source_bd_nr,
                      l_source_bd_version_nr,
                      l_source_bd_id,
                      sysdate
                    );
       end if;
      inserterror_output_messages ( NULL,NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, 'ERROR', i_deal_creation_guid, NULL,NULL,l_error_exc);
      update_error_tables (i_deal_creation_guid, l_new_bd_id,l_new_bd_version_nr,l_source_bd_nr, l_source_bd_version_nr,l_source_bd_version_nr );
    delete from eclipse.GT_XML_BUNDLE ;
    delete from eclipse.GT_XML_BUNDLE_Line;
    delete from eclipse.GT_XML_line_item;
        commit;
        OPEN p_result FOR SELECT * FROM gt_edms_smqt_err_results order by msg_type DESC;
    END; --End of new code added for CR:255844


  WHEN OTHERS THEN
  BEGIN
  --dbms_output.PUT_LINE (L_ERRORS);
    ROLLBACK;
    --dbms_output.PUT_LINE ('IN Exception : OTHERS');
 ---commented as part of US 8975
--       if UnlockDeal(l_source_bd_nr, l_deal_unlock_error_msg)    ='N' THEN
--            inserterror_output_messages ( NULL,NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_deal_unlock_error_msg, 'WARNING', i_deal_creation_guid, NULL,NULL,l_deal_unlock_error_msg);
--       END IF;
-- This block is added for US 8975
   begin
    select 1 into l_count_bd from deal where bd_id =L_new_BD_ID;
     exception
     when NO_DATA_FOUND then
     l_count_bd:=0;
     when TOO_MANY_ROWS then
     l_count_bd:=2;
     end;
              l_errors:=l_errors|| ' An error was encountered in creating new version - ' || SQLCODE || ' -ERROR- ' || substr(SQLERRM,1,100) || '. Error at Line : ' || substr(DBMS_UTILITY.FORMAT_ERROR_BACKTRACE(),1,1000);
             l_error_exc:='An error encountered while Creating new versionl. New version Creation failed -'|| substr(SQLERRM,1,100);
       if l_count_bd >0 then
       --l_errors:='Error in creating new version '||l_errors|| '--'||sqlerrm||''
         delete from deal where bd_id = L_new_BD_ID;
         update deal set current_version_fl='Y' where bd_id =l_source_bd_id;
          INSERT
                  INTO edms_deal_error_report
                    (
                      deal_creation_guid,
                      error_msg,
                      bd_nr,
                      bd_version_nr,
                      bd_id,
                      creation_dts
                    )
                    VALUES
                    (
                      i_deal_creation_guid,
                     'New version with bd_id -'|| l_new_bd_id|| 'Is deleted as new version creation failed' ,
                      l_source_bd_nr,
                      l_source_bd_version_nr,
                      l_source_bd_id,
                      sysdate
                    );
       end if;

      inserterror_output_messages ( NULL,NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, 'ERROR', i_deal_creation_guid, NULL,NULL,l_error_exc);

    --update Error tables with latest BD ID
  /*
      i_deal_creation_guid IN VARCHAR2,
     i_new_bd_id               IN  DEAL.BD_ID%TYPE,
     i_new_bd_version_nr       IN  DEAL.BD_VERSION_NR%TYPE,
      i_source_bd_nr               IN  DEAL.BD_NR%TYPE,
      i_source_bd_version_nr       IN  DEAL.BD_VERSION_NR%TYPE,
      i_source_bd_id       IN  DEAL.BD_ID%TYPE

  */
        --unlocking the previous version of deal - by Harsh Shah 19 Mar 2014,
                    --this should go to a common procedure/function- todo later
        --UPDATE deal SET deal_lock_fl='N', deal_lock_user_id = NULL WHERE bd_id=l_source_bd_id;
          update_error_tables (i_deal_creation_guid, l_new_bd_id,l_new_bd_version_nr,l_source_bd_nr, l_source_bd_version_nr,l_source_bd_version_nr );


     --delete temp table data      by Harsh Shah 30-JAN-2015
    --delete temp table data      by Harsh Shah 30-JAN-2015
    delete from eclipse.GT_XML_BUNDLE ;
    delete from eclipse.GT_XML_BUNDLE_Line;
    delete from eclipse.GT_XML_line_item;

        commit;

        --Return error output
        OPEN p_result FOR SELECT * FROM gt_edms_smqt_err_results order by msg_type DESC;
    END;
END BMICreateNewVersion;    


FUNCTION  UnLockDeal(
    p_source_bd_nr deal.bd_nr%type,
    p_error_message OUT VARCHAR2)
    RETURN VARCHAR2
IS
/*
Created by : Harsh Shah - 17/sep/2013
Purpose:
Unlocks the deal

*/


BEGIN
-- check if deal is Lock already
DBMS_OUTPUT.PUT_LINE ('deal to be locked ' || p_source_bd_nr);
--lock Deal
UPDATE deal
SET deal_lock_fl        ='N'
WHERE bd_nr           =p_source_bd_nr
AND current_version_FL='Y';

  if sql%rowcount >0 then
    p_error_message:='Deal Unlocked successfully';
    --dbms_output.put_line (p_error_message);
    Return 'Y';
  else
    p_error_message:='Deal could not be unlocked';
    --dbms_output.put_line (p_error_message);
    Return 'N';
  end if;

exception

  WHEN OTHERS THEN
    P_error_message := 'An error was encountered in UnLockDeal  function - ' || SQLCODE || ' -ERROR- ' || sqlerrm || '. Error at Line : ' || dbms_utility.format_error_backtrace();
    dbms_output.put_line (P_error_message);
    Return 'N';
END;


Procedure add_LineItems(i_deal_creation_guid IN VARCHAR2,
                                        i_xmlnamespace VARCHAR2,
                                        i_bd_id number,
                                        i_add_date_range IN VARCHAR2,
                                        p_result OUT sys_refcursor)
is
/*
  Created by : Harsh Shah 18-sep-2013
  Purpose:  This procedure adds the new line items to the deal basd on deal's BD ID and XML details passed over from BMI(through EDMS web service)
  This procedure adds only the PNs and it adds data to LINE_DISC_SCALE, LINE_DISC_BNDRY table to maintain the appropriate date ranges.
  It also adds data to Rollout Schedule table.
*/

  --Variable declaration
  l_prd_count NUMBER(10); --TO check if how many product exists on a deal
  L_AUTH_BASIS_TEXT LINE_DISC_SCALE.AUTH_BASIS_TEXT%type;
  l_auth_disc_otc_pc NUMBER(5,2)      :=0;
  l_rqst_disc_otc_pc NUMBER(5,2)      :=0;
  l_auth_bdnet_amt line_disc_scale.rqst_bd_net_prc_am%type;
  L_EXT_PRE_APPRV_PRC_AM line_disc_scale.EXT_PRE_APPRV_PRC_AM%TYPE;
  --l_createnewversion  VARCHAR2(1):='Y';
  l_auth_mc_hp_emp_nr line_item.auth_mc_hp_emp_nr%type;
  l_auth_generic_emp_nr line_item.auth_generic_emp_nr%type;--added for new auth changes
  l_line_auth_type line_item.line_auth_type%type;         ---added newly for new auth changes
  l_dealapprfl  VARCHAR2(1);
  l_dealquotefl VARCHAR2(1);
  l_dealroutefl VARCHAR2 (1);
  l_dealvertocreate deal.bd_version_nr%type;
  l_auth_date_gmt bundle_line.auth_dt_gmt%type;
  --L_AUTH_MC_DATE LINE_ITEM.AUTH_MC_DATE%type;
  rec_line_item line_item%rowtype;
  l_line_nr line_item.line_nr%type:=0;
  l_pricelistcd deal.price_list_cd%type;
  l_pricetermcd deal.price_term_cd%type;
  l_countrycd deal.control_cntry_cd%type;
  l_currencycd deal.curr_cd%type;
  L_DEALSOURCECD DEAL.DEAL_SOURCE_CD%type;
  l_dealsourcedealtype deal.deal_source_deal_type%type;
  l_dealsourcekeyval deal.deal_source_keyval%type;
  l_deal_creator_emp_nr  deal.init_hp_emp_nr%type;
  l_errors varchar2(2000);
  l_msg_type varchar2(10);
  g_set_line_Authorizer_code NUMERIC(10);
  g_set_gnrc_line_authorizer NUMBER(10);
  g_line_auth_type line_item.line_auth_type%type;
  L_AUTH_MC_DATE LINE_ITEM.AUTH_MC_DATE%type;
  l_bd_hdr_sku_list_price  NUMERIC(16,2); --NUMERIC(10,2); Commented this to match the precision and scale of Line Disc Scale table
  l_BD_HDR_SKU_qty        NUMERIC(10);
  --l_line_prog_cd line_item.line_prog_cd%type;
  l_line_bus_group_cd line_item.bus_group_cd%type; --used for LIne_item data
  l_line_bus_unit_cd line_item.bus_unit_cd%type;   --used for line item data
  l_line_prod_gnrc_desc_tx line_item.prod_gnrc_desc_tx%type;
  l_line_prod_gnrc_nr_tx line_item.prod_gnrc_nr_tx%type;
  L_current_LINE_NR line_item.line_nr%type; --by Harsh Shah 17-Dec-2013
  L_return_status varchar2(1000); --by Harsh Shah 17-Dec-2013

    temp_prod_opt_code VARCHAR2(200);
      temp_prod_length NUMBER;
/*
TYPE GYPSY_REC
IS
  RECORD
  (
    prod_nr         VARCHAR2 (50),
    prod_opt_cd     VARCHAR2 (10),
    prod_desc       VARCHAR2 (100),
    stat            VARCHAR2 (10),
    price           NUMBER (16, 2),
    prod_line       VARCHAR2 (5),
    prod_family     VARCHAR2 (100),
    start_eff_dt    DATE,
    low_price       NUMBER (16, 2),
    qty_brk         NUMBER (10),
    end_eff_dt      DATE,
    ref_price_fl    VARCHAR2 (1),
    non_discount_fl VARCHAR2 (1),
    plc_fl          VARCHAR2 (10) );
   */
    gprice gypsy_rec;
    l_gypsy_prod_string VARCHAR2(200);

  l_high_list_line_nr bundle_line.line_nr%type; --CR 4744
  l_high_list_pl bundle_line.assoc_pl%type;     --CR 4744
  --Rollout Variables
  l_rollout_ins_qry VARCHAR2(4000);
  l_no_of_months    NUMBER;
  l_rollout_mnths t_rollout_mnths:=t_rollout_mnths();
  l_rt_qty rollout_schedule.rtqty%type;
  L_RQST_MARGIN_PCT LINE_DISC_SCALE.RQST_MARGIN_PCT%type;
  L_AUTH_MARGIN_PCT LINE_DISC_SCALE.AUTH_MARGIN_PCT%type;
  L_PROD_COST_PRICE_HDR_PROD BUNDLE_LINE.PROD_COST_AM%TYPE:=0;
  l_oe_emp_exist VARCHAR2(32767); ----added for oe employee check
  l_oe_emp_nr employee.emp_nr%type;
  l_rslra_proid NUMBER;                                   -- Added as a temporary solution
  l_rslrb_proid NUMBER;                                   -- Added as a temporary solution
  l_emp_exists  NUMBER;                                   --Added for CR 4746
  l_sr_exists   NUMBER;                                   --Added for CR 4746
  l_sfdc_opp_id deal.crm_opp_nr%type;                     --Added in ePrime and BMI requirement
  l_sfdc_rqst_id deal.request_id%type;                   ---Added in ePrime, BMI requirement
  l_ext_quote_nr deal.deal_source_ext_quote_nr%type;      --added to store BMI values
  l_ext_quote_version deal.deal_source_ext_quote_ver%type;--added to store BMI values
  l_prc_pro_cd deal.prc_pro_cd%type:='N'; --Changed O to N for CR:281985

  REJECT_LINE_ITEMS EXCEPTION;
  DUP_PRODUCTS_EXISTS EXCEPTION;

  L_BD_NR deal.bd_nr%type;
  L_BD_VERSION_NR deal.bd_version_nr%type;
  l_begindate DEAL.BEG_DT%TYPE;
  l_enddate DEAL.END_DT%TYPE;
  L_COUNTRY_CD deal.control_cntry_cd%type;
  l_price_list_cd deal.price_list_cd%type;
  l_currency_cd deal.curr_cd%type;
  l_price_term_cd deal.price_term_cd%type;
  L_line_prog_cd line_item.line_prog_cd%type;
  l_hierarchy_cd deal_matrix.hierarchy_cd%type;
  p_gypsy_price sys_refcursor;
  l_line_type_cd LINE_ITEM.LINE_TYPE_CD%TYPE;
  --l_line_prog_cd line_item.line_prog_cd%type;
  l_scale_id line_disc_scale.scale_id%type;
  old_version_end_date DATE;
  new_version_end_date DATE;
  current_version_no NUMBER;

  out_status VARCHAR2(2000);
l_log_messages VARCHAR2(1);
BEGIN
 SELECT app_value
  INTO l_log_messages
  FROM APP_CONFIG_KEYS
 WHERE app_key='LOG_EXT_LP_MSG';
-- get basic deal details
-- NEED TO ADD ERROR HANDLING HERE

  BEGIN

      SELECT
        bd_nr, bd_version_nr, init_hp_emp_nr,BEG_DT, END_DT ,control_cntry_cd, price_list_cd, curr_cd, price_term_cd into L_BD_NR, L_BD_VERSION_NR, l_deal_creator_emp_nr,
        l_BEGINdate, L_ENDDATE,l_country_cd, l_price_list_cd, l_currency_cd, l_price_term_cd from deal where bd_id=I_bd_id and current_version_fl='Y';

  EXCEPTION
    WHEN NO_DATA_FOUND then
        l_errors:='Could not find the deal creator details from the deal. Invalid BD ID - '|| I_bd_id || ' Ref : ' || i_deal_creation_guid;
        inserterror_output_messages (I_BD_ID,L_BD_NR,L_BD_VERSION_NR, null,null,null,null, null,null,null,l_errors,'ERROR', I_deal_creation_guid,NULL,NULL,l_errors);
        --dbms_output.PUT_LINE(l_errors);

      RAISE REJECT_LINE_ITEMS;
END;
new_version_end_date := L_ENDDATE;
BEGIN
SELECT end_dt INTO old_version_end_date FROM deal WHERE bd_nr=l_bd_nr
    AND bd_version_nr=L_BD_VERSION_NR-1;
EXCEPTION
WHEN OTHERS THEN
NULL;
END;

  --Get the Max line_nr for the new line items
  select NVL(max(line_nr),0)  into l_line_nr FROM LINE_ITEM WHERE BD_ID=i_bd_id;
  --dbms_output.put_line ('Current Line No is '|| l_line_nr);


  --Get basic XML details to process the line item inserts.

  l_dealsourcecd      := getsqtxmlvalue ( '/DealCreationRequest/DealRequestSource/ExtSourceCD/', i_deal_creation_guid);     --tag from new  xml
  l_dealvertocreate := getsqtxmlvalue ( '/DealCreationRequest/DealActions/DealVerToCreate/', i_deal_creation_guid);
  l_dealsourcedealtype  := getsqtxmlvalue ( '/DealCreationRequest/DealRequestSource/DealCreationType/', i_deal_creation_guid);--tag from new xml
  l_dealsourcekeyval := getsqtxmlvalue ( '/DealCreationRequest/DealRequestSource/ExtUniqueKey/', i_deal_creation_guid);---tag from new xml

  --dbms_output.PUT_LINE (' L_deal_soure_cd ' ||   l_dealsourcecd || ' l_dealvertocreate '|| l_dealvertocreate || ' l_dealsourcedealtype ' || l_dealsourcedealtype || ' l_dealsourcekeyval ' || l_dealsourcekeyval);


  --Get Deal Actions
  l_dealapprfl      := getsqtxmlvalue ('/DealCreationRequest/DealActions/DealApprFl/', i_deal_creation_guid);
  l_dealquotefl     := getsqtxmlvalue ('/DealCreationRequest/DealActions/DealQuoteFl/', i_deal_creation_guid);
  l_dealroutefl     := getsqtxmlvalue ('/DealCreationRequest/DealActions/DealRouteFl/', i_deal_creation_guid);
  l_dealvertocreate := getsqtxmlvalue ( '/DealCreationRequest/DealActions/DealVerToCreate/', i_deal_creation_guid);

  --Looping through the XML Line Items data
--by Harsh Shah 30-Jan-2015
--us7832 For performance improvement

    FOR rec IN
    (


        SELECT ADDED_BY_EMP_NR AS addedbyempnr,
               ADDED_BY_EMP_EMAIL AS addedbyempemail,
               AUTH_BASIS_DESC AS authbasisdesc,
               AUTH_DATE AS authdate,
               AUTH_DATE_GMT AS authdategmt,
               AUTH_EMP_NR AS authempnr,
               AUTH_EMP_EMAIL AS authempemail,
               AUTH_STAT_CD AS authstatcd,
               BD_NET_AMT AS bdnetamt,
               LIST_PRICE AS listprice,
               PROD_LINE_CD AS pl,
               PRICING_TYPE_CD AS pricingtypecd,
               PROD_DESC AS proddesc,
               QTY AS qty,
               REQUEST_TYPE AS requesttype,
               ROLLOUT_MONTH_QTY AS rolloutmonthqtys,
               SKU AS sku,
               STD_DISC_PCT AS stddiscpct,
               OPT_CD AS optcd,
               COST_PRICE AS costprice,
               ORD_MIN_QTY AS orderminqty,
               BMI_DOC_NO AS bmi_doc_No,
               EXT_PRE_APPRV_PRICE AS ExtPreApprvPrice,
               GUIDANCE_AVAIL_FL AS GuidanceAvailFl,
               GUIDANCE_DETAEILS_ID AS GuidanceDetailsID,
               GUIDANCE_DISC_EXPERT_PCT AS GuidanceDiscExpertPct,
               GUIDANCE_DISC_FLOOR_PCT AS GuidanceDiscFloorPct,
               GUIDANCE_DISC_TYPICAL_PCT AS GuidanceDiscTypicalPct,
               GUIDANCE_REFRESHE_DATE_GMT AS GuidanceRefreshDateGMT,
               NO_DISC_FL AS NonDiscFl,
               Bundle_desc AS BundleDesc,
               INSTANT_PRC_METHOD As instantprcmethod, --Added for CR255711-The values of Instant Prc Method and Instant Prc Amt are blank for the product added when revise BMI quote
               Instant_prc_amt As Instantprcamt --Added for CR255711-The values of Instant Prc Method and Instant Prc Amt are blank for the product added when revise BMI quote
               ,Use_Ext_List_Price AS UseExtListPriceFl
          FROM GT_XML_line_item
                WHERE guid = i_deal_creation_guid
    )


    LOOP

      --Added for ePrime and BMI deal creation changes
      IF rec.addedbyempnr IS NULL AND rec.addedbyempemail IS NOT NULL THEN
        rec.addedbyempnr  :=get_emp_nr(rec.addedbyempemail);
      END IF;
      IF rec.authempnr IS NULL AND rec.authempemail IS NOT NULL THEN
        rec.authempnr  :=get_emp_nr(rec.authempemail);
      END IF;
      IF (lower(l_dealsourcecd)='eprime' AND l_dealvertocreate = 0) THEN --aded to not authorise if eprime deal version to be created is 0
          rec.AuthBasisDesc     :=NULL;
          rec.AuthDate          :=NULL;
          rec.AuthDateGMT       :=NULL;
          rec.authempnr         :=NULL;
          rec.authempemail      :=NULL;
          rec.AuthStatCD        :='N';
      END IF;
      --added below condition as BMI takes the deal creator as line added by employee if null generic BMI employee
      IF lower(l_dealsourcecd) IN ( 'bmi','ngq','sts') AND rec.addedbyempnr IS NULL THEN
        rec.addedbyempnr      :=l_deal_creator_emp_nr;
      END IF;
      IF rec.orderminqty IS NULL THEN
        rec.orderminqty  :=1;
      END IF;

      IF lower(l_dealsourcecd) IN ('bmi') THEN --,'sts','ngq') THEN --Commented by Lakshmi, to make sure that Auth type: "BMI" appears only for BMI sourced deals.
      l_auth_generic_emp_nr   :=-999999911  ;
      l_line_auth_type        :='EAB';
      ELSIF lower(l_dealsourcecd) IN ('ngq') THEN --Added by Lakshmi for CR: 3259
      l_auth_generic_emp_nr   :=-999999922  ;
      l_line_auth_type        :='EAN';
      END IF;

      l_line_type_cd :='PN';
      l_line_prog_cd :='N';
       --dbms_output.PUT_LINE ('Line Item PN DocNum :' || rec.bmi_doc_no );
      --l_bd_version_nr:=0; -- pending ..this should be as per version..not the

      -- hard coded value.
      L_SCALE_ID:=0;

      --check if added by employee No exists and it's a valid eclipse user
      l_errors :='Line Item SKU : ' || rec.sku || ' OptCode : ' || rec.OptCd ;

      IF rec.addedbyempnr IS NULL THEN
        l_errors          :='Added by Employee No is not provided for ' || l_errors;
        l_msg_type        :=con_type_error;
        raise REJECT_LINE_ITEMS;
      END IF;

   --BMI Updating Line Items - Update/Deny/Hold
  --dbms_output.PUT_LINE ('REC.REQUESTTYPE '|| REC.REQUESTTYPE);

  if (UPPER(REC.REQUESTTYPE)='HOLD') THEN

      --dbms_output.put_line('Updating line on HOLD');

      l_errors:='Setting lines to HOLD ..Start';
          inserterror_output_messages (i_bd_id,l_bd_nr,l_bd_version_nr, null,null,null,null, null,null,null,l_errors,'WARNING', i_deal_creation_guid,NULL,NULL,NULL);

          --BY Harsh Shah 29-jan-2015
          --CR - 185716 - [R11 MTP EMEA] Products re-aded in the BMI request are not visible in Eclipse deal created
      UPDATE LINE_ITEM
            SET LINE_PROG_CD='H',
                auth_mc_date=sysdate,
                auth_mc_hp_emp_nr=rec.addedbyempnr,
                update_dts=sysdate,
                auth_dt_gmt=sysdate,
                revsn_dt_gmt=sysdate,
                prev_auth_qty=rec.qty,
                line_auth_type='BMI'
      WHERE LINE_TYPE_CD='PN'
            AND TRIM(PROD_GNRC_NR_TX)=TRIM(REC.SKU)
            and prod_opt_cd=DECODE(rec.OptCd,NULL,' ',REC.OptCd)
            AND BD_ID=i_bd_id
            AND ( SRC_BUNDLE_DESC_TX=rec.BundleDesc OR SRC_BUNDLE_DESC_TX IS NULL) --BY Harsh Shah 29-jan-2015,CR - 185716
      and rownum<2; --todo: Need better filter from XML to avoid updating multiple rows.

      if sql%rowcount >0 then

          ----dbms_output.PUT_line (' Line Item Row updated with HOLD status for product : ' ||      TRIM(REC.SKU)   ;
          l_errors:=' Line Item Row updated with HOLD status for product : ' ||      TRIM(REC.SKU);
          --dbms_output.put_line (l_errors);
          inserterror_output_messages (i_bd_id,l_bd_nr,l_bd_version_nr, null,null,null,null, null,null,null,l_errors,'WARNING', i_deal_creation_guid,NULL,NULL,l_errors);
      else
          ----dbms_output.PUT_line (' Line Item Row updated with HOLD status for product : ' ||      TRIM(REC.SKU)   ;
          l_errors:=' Line Item Row could not be updated with HOLD status. Please check if the Product exist. Product : ' ||      TRIM(REC.SKU);
          --dbms_output.put_line (l_errors);
          inserterror_output_messages (i_bd_id,l_bd_nr,l_bd_version_nr, null,null,null,null, null,null,null,l_errors,'WARNING', i_deal_creation_guid,NULL,NULL,l_errors);
      end if;

                    --BY Harsh Shah 29-jan-2015
                    --CR - 185716 - [R11 MTP EMEA] Products re-aded in the BMI request are not visible in Eclipse deal created

                      UPDATE LINE_DISC_SCALE LDS
                        SET lds.upper_bndry_dt=(SELECT end_Dt FROM deal WHERE bd_id=i_bd_id)
                        WHERE lds.BD_ID  =i_bd_id
                        AND lds.LINE_NR IN
                          (SELECT line_nr
                          FROM line_item
                           WHERE LINE_TYPE_CD='PN'
                            AND TRIM(PROD_GNRC_NR_TX)=TRIM(REC.SKU)
                            and prod_opt_cd=DECODE(rec.OptCd,NULL,' ',REC.OptCd)
                            AND BD_ID=i_bd_id
                            and rownum<2
                          )
                        AND lds.scale_id=
                          (SELECT NVL(MAX(scale_id),0)
                          FROM line_disc_scale
                          WHERE bd_id=i_bd_id
                          AND line_nr=
                            (SELECT line_nr
                            FROM line_item
                             WHERE LINE_TYPE_CD='PN'
                                        AND TRIM(PROD_GNRC_NR_TX)=TRIM(REC.SKU)
                                        and prod_opt_cd=DECODE(rec.OptCd,NULL,' ',REC.OptCd)
                                        AND BD_ID=i_bd_id
                                        AND ( SRC_BUNDLE_DESC_TX=rec.BundleDesc OR SRC_BUNDLE_DESC_TX IS NULL) --BY Harsh Shah 29-jan-2015,CR - 185716
                                        and rownum<2)
                          );




      l_errors:='Setting lines to HOLD ..Complete';
      --dbms_output.put_line (l_errors);
      inserterror_output_messages (i_bd_id,l_bd_nr,l_bd_version_nr, null,null,null,null, null,null,null,l_errors,'WARNING', i_deal_creation_guid,NULL,NULL,NULL);

  ELSIF (UPPER(REC.REQUESTTYPE)='DENY') THEN

      l_errors:='Setting lines to DENY ..Start';
      --dbms_output.put_line (l_errors);
      inserterror_output_messages (i_bd_id,l_bd_nr,l_bd_version_nr, null,null,null,null, null,null,null,l_errors,'WARNING', i_deal_creation_guid,NULL,NULL,NULL);

      --the below statement should be moved to a generic procedure/function
--BY Harsh Shah 29-jan-2015
--CR - 185716 - [R11 MTP EMEA] Products re-aded in the BMI request are not visible in Eclipse deal created

      UPDATE LINE_ITEM
            SET LINE_PROG_CD='D',
            auth_mc_date=sysdate,
      auth_mc_hp_emp_nr=rec.addedbyempnr,
      update_dts=sysdate,
      auth_dt_gmt=sysdate,
      revsn_dt_gmt=sysdate,
      prev_auth_qty=rec.qty,
      line_auth_type='BMI'
      WHERE LINE_TYPE_CD='PN'
            AND TRIM(PROD_GNRC_NR_TX)=TRIM(REC.SKU)
            and prod_opt_cd=DECODE(rec.OptCd,NULL,' ',REC.OptCd)
            AND BD_ID=i_bd_id
            AND ( SRC_BUNDLE_DESC_TX=rec.BundleDesc OR SRC_BUNDLE_DESC_TX IS NULL) --BY Harsh Shah 29-jan-2015,CR - 185716
            and rownum<2; --TODO: Need better filter from XML to avoid updating multiple rows.

      if sql%rowcount >0 then

          l_errors:=' LIne Item Row updated with DENY status for product : ' ||      TRIM(REC.SKU);
          --dbms_output.put_line (l_errors);
          inserterror_output_messages (i_bd_id,l_bd_nr,l_bd_version_nr, null,null,null,null, null,null,null,l_errors,'WARNING', i_deal_creation_guid,NULL,NULL,l_errors);
      else

          ----dbms_output.PUT_line (' Line Item Row updated with HOLD status for product : ' ||      TRIM(REC.SKU)   ;
          l_errors:=' Line Item Row could not be updated with DENY status. Please check if the Product exist. Product : ' ||      TRIM(REC.SKU);
          --dbms_output.put_line (l_errors);
          inserterror_output_messages (i_bd_id,l_bd_nr,l_bd_version_nr, null,null,null,null, null,null,null,l_errors,'WARNING', i_deal_creation_guid,NULL,NULL,l_errors);
      end if;

      l_errors:='Setting lines to DENY ..Complete';
      inserterror_output_messages (i_bd_id,l_bd_nr,l_bd_version_nr, null,null,null,null, null,null,null,l_errors,'WARNING', i_deal_creation_guid,NULL,NULL,NULL);

--ELSIF (UPPER(REC.REQUESTTYPE)='UPDATE') THEN
--Changes made by Lakshmi on 2/24/2015 for CR:199624 & 199573, US-7331 --> Eclipse Deal Sync Eclipse Processing

ELSIF (UPPER(REC.REQUESTTYPE) IN ('UPDATE','UPDATE_CURRENT_DATERANGE') ) THEN
---------------------------------------------------------------------
     --updated by harsh Shah 28-ar-2014
     --to resolve the issue of 76115
     --Discount is not correct in Eclipse
---------------------------------------------------------------------


    BEGIN --UPDATE Qty, BDNet, Auth Disc Ot PC for line type as PN

--    DBMS_OUTPUT.PUT_LINE (' Line Item PN Udpate Starts .....');
--    dBMS_OUTPUT.PUT_LINE (' Line Item PN Udpate Starts .....');
--
--
--    DBMS_OUTPUT.PUT_LINE ('REC.optcd ' || REC.optcd );
--    DBMS_OUTPUT.PUT_LINE ('rec.stddiscpct ' || rec.stddiscpct );
--    DBMS_OUTPUT.PUT_LINE (' REC.sku ' || REC.sku);
--
--    DBMS_OUTPUT.PUT_LINE ('authstatcd '|| REC.authstatcd);

                    BEGIN
                        --commented by Harsh Shah 29-Jan-2015
                        --
                        /*
                        SELECT line_nr INTO l_current_line_nr
                              FROM line_item
                              WHERE bd_id        =i_bd_id
                              AND line_type_cd   ='PN'
                              AND PROD_GNRC_NR_TX=rec.sku
                              AND prod_opt_cd    =DECODE(rec.OptCd,NULL,' ',REC.OptCd)
                              and BMI_DOC_NO=rec.bmi_doc_No
                              AND ROWNUM<2;
                            */
                            --BY Harsh Shah 29-jan-2015
                              --CR - 185716 - [R11 MTP EMEA] Products re-aded in the BMI request are not visible in Eclipse deal created
                              SELECT line_nr INTO l_current_line_nr
                              FROM line_item
                              WHERE bd_id        =i_bd_id
                              AND line_type_cd   ='PN'
                              AND PROD_GNRC_NR_TX=rec.sku
                              AND prod_opt_cd    =DECODE(rec.OptCd,NULL,' ',REC.OptCd)
                              AND ( SRC_BUNDLE_DESC_TX=rec.BundleDesc OR SRC_BUNDLE_DESC_TX IS NULL)
                              AND ROWNUM<2;

                              --DBMS_output.put_line ('Current Lline Nr is Request type is UPDATE : '|| l_current_line_nr);


                    EXCEPTION
                    WHEN NO_DATA_FOUND THEN
                     l_errors                := 'There is a mismatch between BMI and Eclipse Doc Numbers. Please check the PN: '||rec.sku||' for the Line Nr: '||l_current_line_nr;
                     --sqlerrm || ', Error at line :' || dbms_utility.format_error_backtrace() ;
                     --dbms_output.put_line (l_errors);
                     PKGEDMSDEALCREATIONV2_R14.INSERTERROR_OUTPUT_MESSAGES ( i_bd_id, NULL,NULL,null, NULL,NULL,NULL,NULL,NULL,NULL, l_errors, 'ERROR', i_deal_creation_guid, NULL, NULL,l_errors);
                    END;

                            --DBMS_OUTPUT.PUT_LINE ('.........CURRENT LINE ITEM FOR UPDATE ' || l_current_line_nr);

                           --IF (old_version_end_date <> new_version_end_date ) THEN
                           --IF i_add_date_range='Y' THEN
                     IF (UPPER(REC.REQUESTTYPE) IN ('UPDATE')) THEN
                            add_date_range(
                                l_current_line_nr,
                                i_bd_id,
                                l_RETURN_STATUS
                            );
                            END IF;
                            --DBMS_OUTPUT.PUT_LINE('End of add_date_range procedure');
                            --by harsh shah 28 mar 2014
                            --to resolve the issue 76115
                            IF L_RETURN_STATUS<>'SUCCESS' THEN
                            --DBMS_OUTPUT.PUT_LINE('Error occured in add_date_range procedure');
                                    inserterror_output_messages (i_bd_id,l_bd_nr,l_bd_version_nr, null,null,null,null, null,null,null,L_return_status,'WARNING', i_deal_creation_guid,NULL,NULL
                                ,L_return_status);
                                ELSE
                                DBMS_OUTPUT.PUT_LINE('No Error occured in add_date_range procedure');
                            END IF;

           --Clear the auth of the line if it is authorized.
         /*    IF (i_add_date_range='N') THEN
                SELECT LINE_AUTH_TYPE INTO L_LINE_AUTH_TYPE FROM line_item WHERE line_nr=l_current_line_nr AND bd_id=i_bd_id;
                IF l_line_auth_type IN ('BDM') THEN
                    clear_auth(i_bd_id ,
                                    l_current_line_nr,
                                    i_deal_creation_guid);
                END IF;
            END IF; */

                             --DBMS_OUTPUT.PUT_LINE('Checking if calling Rollout_Qty_BMI procedure is needed');
                              IF (ltrim(rtrim(rec.rolloutmonthqtys))) IS NULL AND (l_dealsourcecd IN ('NGQ','BMI','STS')) THEN
                                        --DBMS_OUTPUT.PUT_LINE('Calling Rollout_Qty_BMI procedure');
                                        rec.rolloutmonthqtys                  :=Rollout_Qty_BMI(l_begindate,l_enddate,rec.qty);
                                        --DBMS_OUTPUT.PUT_LINE('Completed Rollout_Qty_BMI procedure');
                             END IF;
                             --DBMS_OUTPUT.PUT_LINE('End of Checking if calling Rollout_Qty_BMI procedure is needed');
                      -- DBMS_OUTPUT.PUT_LINE('Calling Update_Rollout procedure');
                       --DBMS_OUTPUT.PUT_LINE('Parameters passed to update_rollout procedure: rec.qty: '||rec.qty||' rec.rolloutmonthqtys: '||rec.rolloutmonthqtys||' '||
                       --rec.orderminqty: '||rec.orderminqty||' '||'i_bd_id: '||i_bd_id||'l_current_line_nr: '||l_current_line_nr);

--DBMS_OUTPUT.PUT_LINE('Calling   update_rollout procedure with these parameters: l_begindate: '|| l_begindate||' , l_enddate: '||l_enddate||',  rec.qty: '||rec.qty||',   rec.rolloutmonthqtys: '||rec.rolloutmonthqtys||',  rec.orderminqty: '||rec.orderminqty||', REC.optcd: '||REC.optcd||', i_bd_id: '||i_bd_id||', l_current_line_nr: '||l_current_line_nr);
                         update_rollout(REC.sku,
                         l_begindate,
                         l_enddate,
                         rec.qty,
                         rec.rolloutmonthqtys,
                         rec.orderminqty,
                         REC.optcd,
                         i_bd_id,
                         l_current_line_nr,
                         out_status);
                         --DBMS_OUTPUT.PUT_LINE('OUT_STATUS Message: '||out_status);
                         --DBMS_OUTPUT.PUT_LINE('Completed update_rollout procedure');
                         IF (out_status IS NOT NULL) THEN
                         --DBMS_OUTPUT.PUT_LINE('Error occured in update_rollout procedure');
                          inserterror_output_messages (i_bd_id,l_bd_nr,l_bd_version_nr, null,null,null,null, null,null,null,out_status,'WARNING', i_deal_creation_guid,NULL,NULL
                                ,out_status);
                        END IF;
               -- DBMS_OUTPUT.PUT_LINE('Completed update_rollout procedure');
            --------------------------------------------------------------------------------------------------------
                            --SETTING LINE AUTHORISATION VARIABLES AS PER AUTH STATUS
            --------------------------------------------------------------------------------------------------------

                            IF rec.authstatcd   ='Y' THEN

                                IF LTRIM(RTRIM(rec.authbasisdesc)) IS NULL THEN
                                    L_ERRORS                         :='Auth Basis Description is empty for the ' || l_errors;
                                    l_msg_type                       :=con_type_error;
                                    raise REJECT_LINE_ITEMS;
                                elsif ltrim(rtrim(rec.authempnr)) IS NULL THEN
                                    L_ERRORS                        :='Auth Emp Nr is empty for the ' || l_errors;
                                    l_msg_type                      :=con_type_error;
                                    raise REJECT_LINE_ITEMS;
                                elsif is_user_exists(rec.authempnr
                                ,l_dealsourcecd --Added for US-9408 --> Encore Retirement  
                                ) ='N' THEN
                                    L_ERRORS                         :='Invalied Auth Emp Nr : ' || rec.authempnr || ' for the ' || l_errors;
                                    l_msg_type                       :=con_type_error;
                                    --dbms_output.put_line (L_ERRORS);
                                    raise REJECT_LINE_ITEMS;
                                else
                                 --Get Auth GMT Date from XML and convert it to oracle date time format
                                      L_AUTH_DATE_GMT     :=NULL;
                                          IF (REC.AUTHDATEGMT IS NOT NULL OR REC.AUTHDATEGMT<>'') THEN
                                            L_AUTH_DATE_GMT   :=TO_TIMESTAMP ( SUBSTR(REC.AUTHDATEGMT,1,19),'YYYY-MM-DD"T"HH24:MI:SS');
                                          ELSE
                                            L_AUTH_DATE_GMT:=NULL;
                                          END IF;
                                      L_AUTH_MC_DATE:=NULL;
                                      --Get Auth MC date from XML and convert it to oracle date time format
                                          IF (REC.AUTHDATE IS NOT NULL OR REC.AUTHDATE<>'') THEN
                                            L_AUTH_MC_DATE :=TO_TIMESTAMP ( SUBSTR(REC.AUTHDATE,1,19),'YYYY-MM-DD"T"HH24:MI:SS');
                                          ELSE
                                            L_AUTH_MC_DATE:=NULL;
                                          END IF;

                                           IF (    rec.authdate IS NULL OR rec.authdategmt IS NULL
                                                OR rec.authstatcd IS NULL
                                                OR rec.bdnetamt IS NULL
                                                OR rec.listprice IS NULL
                                                ) THEN
                                                  G_SET_LINE_AUTHORIZER_CODE :=NULL;
                                                  g_set_gnrc_line_authorizer :=NULL; --added for new auth changes for line_items
                                                  g_line_auth_type           :=NULL;
                                                elsif (rec.authstatcd         ='Y') THEN
                                                  g_set_line_Authorizer_code := rec.authempnr;--)l_auth_mc_hp_emp_nr;--Fixed as part of CR83004
                                                  g_set_gnrc_line_authorizer := l_auth_generic_emp_nr; --added for new auth changes for line_items
                                                  g_line_auth_type           :=l_line_auth_type;
                                                  --dbms_output.put_line('at line auth status Y: '||'line authorizer :'||l_auth_mc_hp_emp_nr||' gnrc authorizer  :'||l_auth_generic_emp_nr||' line auth type  :'||l_line_auth_type);
                                                ELSE
                                                  g_set_line_authorizer_code:=NULL;
                                                  g_set_gnrc_line_authorizer:=NULL; --added for new auth changes for line_items
                                                  g_line_auth_type          :=NULL;
                                            END IF;

                                     END IF;
                        END IF; -- END if for Auth stat is Y
                     --   DBMS_OUTPUT.PUT_LINE('Reached 1');

                       --     DBMS_OUTPUT.PUT_LINE('Before update line_item table');

                            --BY Harsh Shah 29-jan-2015
                            --CR - 185716 - [R11 MTP EMEA] Products re-aded in the BMI request are not visible in Eclipse deal created
            /* Changes made by Lakshmi for CR: 198880- [Channel_PST][US-7824]No Deal Number Generated for Newly added Product which is Deleted in Previous version
               Change made: Updated bmi_doc_No from the XML, as BMI could not set the Deal ID due to mismatch in BMI Doc Numbers.
            */
                            update line_item
                            set
                                        AUTH_MC_DATE=            DECODE (REC.AUTHSTATCD,'Y',L_AUTH_MC_DATE,NULL),
                                        auth_dt_gmt=            DECODE (REC.AUTHSTATCD,'Y',L_AUTH_DATE_GMT,NULL),
                                        PROD_OPT_CD=            DECODE (LTRIM(RTRIM(REC.OPTCD)),NULL,' ',LTRIM(RTRIM(REC.OPTCD))),
                                        REMAINING_AMT=nvl(REC.BDNETAMT * REC.QTY,0),
                                        line_auth_type= g_line_auth_type,
                                        AUTH_MC_HP_EMP_NR=DECODE(REC.AUTHSTATCD,'N',NULL,rec.authempnr),--l_auth_mc_hp_emp_nr),--Fixed as part of CR83004
                                        AUTH_GENERIC_EMP_NR =DECODE(REC.AUTHSTATCD,'N',NULL,g_set_gnrc_line_authorizer),
                                        estmtd_qt=REC.QTY,
                                        line_prog_cd=rec.authstatcd,
                                        SQ_AUTH_EMP_NR=null,
                                        PREV_GENERIC_EMP_NR=AUTH_GENERIC_EMP_NR,
                                        SRC_BUNDLE_DESC_TX=NULL
                                        , bmi_doc_No = rec.bmi_doc_No --Added by Lakshmi on 2/20/2015 for CR:198880
                             WHERE
                                    LINE_TYPE_CD='PN'
                                    AND TRIM(PROD_GNRC_NR_TX)=TRIM(REC.SKU)
                                    and prod_opt_cd=DECODE(rec.OptCd,NULL,' ',REC.OptCd)
                                    AND BD_ID=i_bd_id
                                    AND ( SRC_BUNDLE_DESC_TX=rec.BundleDesc OR SRC_BUNDLE_DESC_TX IS NULL); --BY Harsh Shah 29-Jan-2015,CR - 185716
                                    --and bmi_doc_no=rec.bmi_doc_no;
                                    --AND ROWNUM<2;
                         --           DBMS_OUTPUT.PUT_LINE('After update line_item table');
                           --         DBMS_OUTPUT.PUT_LINE ('Line Item updated , rows updated ' || sql%rowcount || ' for line :' || l_current_line_nr);


                                      -- update line_disc_scale auth bdnet value and auth disc_pct
                                       --updated by Harsh Shah 17-Dec-2013

                                       --dbms_output.put_line (' updating line disc scale 101 ');

                                      -- update by Harsh Shah 11/17/2014
                                      -- For CR 170133 -[Channel][Regression] Bundle's rqst% is modified in dealV2 after accept quote for a HT deal

                                      --BY Harsh Shah 29-Jan-2015
                                      --CR - 185716 - [R11 MTP EMEA] Products re-aded in the BMI request are not visible in Eclipse deal created

                                      UPDATE line_disc_scale lds
                                            SET
--                                                lds.rqst_bd_net_prc_am  = DECODE (rec.authstatcd,'Y',lds.rqst_bd_net_prc_am,'N',rec.bdnetamt,rec.bdnetamt),Commented for CR:255890
                                                lds.rqst_bd_net_prc_am  = DECODE (rec.authstatcd,'Y',rec.bdnetamt,'N',rec.bdnetamt,rec.bdnetamt),--Changed for CR: 255890
                                                --LDS.rqst_disc_ot_pc=fcalcRqstDiscPCT(DECODE (rec.authstatcd,'Y',lds.rqst_bd_net_prc_am,'N',rec.bdnetamt,rec.bdnetamt),LDS.PROD_LST_PRC_AM,LDS.HIGH_RSLR_A_SD_PC), ,Commented for CR:255890
                                                LDS.rqst_disc_ot_pc=fcalcRqstDiscPCT(DECODE (rec.authstatcd,'Y',rec.bdnetamt,'N',rec.bdnetamt,rec.bdnetamt),LDS.PROD_LST_PRC_AM,LDS.HIGH_RSLR_A_SD_PC),
                                                  LDS.auth_disc_ot_pc=decode(rec.authstatcd,'Y',fcalcRqstDiscPCT(rec.bdnetamt,LDS.PROD_LST_PRC_AM,LDS.HIGH_RSLR_A_SD_PC),NULL),
                                                  lds.AUTH_BASIS_TEXT =DECODE (rec.authstatcd,'Y',rec.authbasisdesc,NULL),
                                                  lds.AUTH_BD_NET_PRC_AM=decode(rec.authstatcd,'Y',rec.bdnetamt,null),
                                                lds.AUTH_INCR_DISC_AM=NULL,
                                                lds.PREV_AUTH_CD=AUTH_FL ,
                                                lds.auth_fl=rec.authstatcd,
                                                EXT_PRE_APPRV_PRC_AM = rec.ExtPreApprvPrice,
                                                --LDS.rqst_margin_pct=fcalcRqstMarginPCT(DECODE (rec.authstatcd,'Y',lds.rqst_bd_net_prc_am,'N',rec.bdnetamt,rec.bdnetamt),rec.CostPrice), ,Commented for CR:255890
                                                LDS.rqst_margin_pct=fcalcRqstMarginPCT(DECODE (rec.authstatcd,'Y',rec.bdnetamt,'N',rec.bdnetamt,rec.bdnetamt),rec.CostPrice),
                                                --LDS.auth_margin_pct=decode(rec.authstatcd,'Y',fcalcRqstMarginPCT(DECODE (rec.authstatcd,'Y',lds.rqst_bd_net_prc_am,'N',rec.bdnetamt,rec.bdnetamt),rec.CostPrice),null), ,Commented for CR:255890
                                                LDS.auth_margin_pct=decode(rec.authstatcd,'Y',fcalcRqstMarginPCT(DECODE (rec.authstatcd,'Y',rec.bdnetamt,'N',rec.bdnetamt,rec.bdnetamt),rec.CostPrice),null),
                                                GUIDANCE_AVAILABLE_FL=rec.GuidanceAvailFl,
                                                GUIDANCE_DETAILS_ID=DECODE(rec.GuidanceAvailFl,'Y',rec.GuidanceDetailsID,NULL),
                                                GUIDANCE_EXPERT_PCT=DECODE(rec.GuidanceAvailFl,'Y',REC.GuidanceDiscExpertPct,NULL),
                                                GUIDANCE_FLOOR_PCT=DECODE(rec.GuidanceAvailFl,'Y',rec.GuidanceDiscFloorPct,NULL),
                                                GUIDANCE_TYPICAL_PCT=DECODE(rec.GuidanceAvailFl,'Y',REC.GuidanceDiscTypicalPct,NULL),
                                                GUIDANCE_LAST_REFRESH_DT=DECODE(rec.GuidanceAvailFl,'Y',TO_TIMESTAMP (SUBSTR(REC.GuidanceRefreshDateGMT,1,19),'YYYY-MM-DD"T"HH24:MI:SS'),NULL),
                                                INSTANT_PRC_METHOD = REC.instantprcmethod, --Added for CR:255526 --> Pricing Method is not same between BMI Quote and Eclipse V2 deal
                                                INSTANT_PRC_AMT = REC.Instantprcamt --Added for CR:255526 --> Pricing Method is not same between BMI Quote and Eclipse V2 deal
                                        WHERE lds.line_nr =
                                                  (
                                                  SELECT line_nr
                                                  FROM line_item
                                                  WHERE bd_id        =i_bd_id
                                                  AND line_type_cd   ='PN'
                                                  AND PROD_GNRC_NR_TX=rec.sku
                                                  AND prod_opt_cd    =DECODE(rec.OptCd,NULL,' ',REC.OptCd)
                                                  AND ( SRC_BUNDLE_DESC_TX=rec.BundleDesc OR SRC_BUNDLE_DESC_TX IS NULL) --by Harsh Shah 29-Jan-2015,CR - 185716
                                                  and rownum<2
                                                  )
                                            and lds.bd_id=i_bd_id
                                            and lds.scale_id=
                                              (
                                                 SELECT NVL(MAX(scale_id),0)
                                                    FROM line_disc_scale
                                                    WHERE bd_id=i_bd_id
                                                    AND line_nr=
                                                    (
                                                        SELECT line_nr
                                                          FROM line_item
                                                          WHERE bd_id        =i_bd_id
                                                          AND line_type_cd   ='PN'
                                                          AND PROD_GNRC_NR_TX=rec.sku
                                                          AND prod_opt_cd    =DECODE(rec.OptCd,NULL,' ',REC.OptCd)
                                                          AND ( SRC_BUNDLE_DESC_TX=rec.BundleDesc OR SRC_BUNDLE_DESC_TX IS NULL) --by Harsh Shah 29-Jan-2015,CR - 185716
                                                          and rownum<2
                                                    )
                                               );
            EXCEPTION
            WHEN NO_DATA_FOUND THEN
                l_errors                := 'NO DATA FOUND FOR line item PN : '|| rec.sku ||' LINE NR : '||l_current_line_nr ||' bd_id : '||i_bd_id||sqlerrm || ', Error at line :' || dbms_utility.format_error_backtrace() ;
                --dbms_output.put_line (l_errors);
                    PKGEDMSDEALCREATIONV2_R14.INSERTERROR_OUTPUT_MESSAGES ( i_bd_id, NULL,NULL,null, NULL,NULL,NULL,NULL,NULL,NULL, l_errors, 'ERROR', i_deal_creation_guid, NULL, NULL,l_errors);
              when others then
                l_errors                := 'Error while updating line item PN : '|| rec.sku ||' LINE NR : '||l_current_line_nr ||' bd_id : '||i_bd_id||sqlerrm || ', Error at line :' || dbms_utility.format_error_backtrace() ;
                --dbms_output.put_line (l_errors);
                    PKGEDMSDEALCREATIONV2_R14.INSERTERROR_OUTPUT_MESSAGES ( i_bd_id, NULL,NULL,null, NULL,NULL,NULL,NULL,NULL,NULL, l_errors, 'ERROR', i_deal_creation_guid, NULL, NULL,l_errors);
                    RAISE line_item_UPDATE_FAILED; --EXCEPTION added for CR:255844
END;

  ELSIF (UPPER(REC.REQUESTTYPE)='ADD') THEN

     --Increment the line Nr by 1
      l_line_nr      :=l_line_nr+1;
      --dbms_output.put_line ('New Line No is '|| l_line_nr);

      --check if rollout months qty exists
      IF (ltrim(rtrim(rec.rolloutmonthqtys))) IS NULL AND (l_dealsourcecd NOT IN ('NGQ','BMI','STS')) THEN
        l_errors                              :='Rollout Month Qtys is empty For ' || l_errors;
        l_msg_type                            :=c_m_type_error;
        raise REJECT_LINE_ITEMS;
      END IF;
      ---Addded as BMI will not send the Rollout details
      IF (ltrim(rtrim(rec.rolloutmonthqtys))) IS NULL AND (l_dealsourcecd = con_deal_source_bmi) THEN
        rec.rolloutmonthqtys                  :=Rollout_Qty_BMI(l_begindate,l_enddate,rec.qty);
      END IF;
      --IF (lower(l_dealsourcecd)             <>'bmi') THEN
        IF (is_user_exists(rec.addedbyempnr
        ,l_dealsourcecd--Added for US-9408 --> Encore Retirement  
        ) ='N') THEN
          l_errors                          :='Invalid Employee No ' || rec.addedbyempnr || ' or Employee is not a valid Eclipse User , For  ' || l_errors;
          l_msg_type                        :=con_type_error;
          raise REJECT_LINE_ITEMS;
        END IF;

        --checking if product + opt already exists
      select count(*) into   l_prd_count
      FROM line_item
          WHERE bd_id        =i_bd_id
          AND line_type_cd   ='PN'
          AND PROD_GNRC_NR_TX=rec.sku
          AND prod_opt_cd    =DECODE(rec.OptCd,NULL,' ',REC.OptCd);

          if l_prd_count>0 then

             l_errors                          :='Product Already Exists , cannot add duplicate product.' || ' Product ' || rec.sku  || 'option Code' || REC.OptCd;
             L_MSG_TYPE                        :='WARNING';
            --dbms_output.PUT_LINE ('Duplicate prod exists - ADD_LINEITEMS method : ' || l_errors ||  ' :  total dup prod exists ' ||l_prd_count );
             RAISE DUP_PRODUCTS_EXISTS;
          end if;

      --END IF;

      --Check if auth basis description is null
     -- IF (l_dealsourcedealtype               <>Con_HIGH_TOUCH_DEALTYPE_DESC AND l_dealapprfl='Y') THEN
     --for user story US 3458 Pre-approved deal from BMI (LOW TOUCH /HIGH TOUCH - both)
      IF ( l_dealapprfl='Y' ) THEN
              IF rec.authstatcd                     ='Y' THEN
                        IF LTRIM(RTRIM(rec.authbasisdesc)) IS NULL THEN
                                  L_ERRORS                         :='Auth Basis Description is empty for the ' || l_errors;
                                  l_msg_type                       :=con_type_error;
                                  raise REJECT_LINE_ITEMS;
                        elsif ltrim(rtrim(rec.authempnr)) IS NULL THEN
                                      L_ERRORS                        :='Auth Emp Nr is empty for the ' || l_errors;
                                      l_msg_type                      :=con_type_error;
                                      raise REJECT_LINE_ITEMS;
                        elsif is_user_exists(rec.authempnr
                        ,l_dealsourcecd--Added for US-9408 --> Encore Retirement  
                        ) ='N' THEN
                                    L_ERRORS                         :='Invalied Auth Emp Nr : ' || rec.authempnr || ' for the ' || l_errors;
                                    l_msg_type                       :=con_type_error;
                                    raise REJECT_LINE_ITEMS;
                      END IF;
              END IF;
      END IF;

      --add the below conditions for eprime as eprime can authorise a product even if it is a high_touch deal
      --Not required fro BMI as this is already handled above
      /*
      IF (lower(L_DEALSOURCECD)               ='eprime' AND l_dealsourcedealtype = C_HIGH_TOUCH_DEALTYPE_DESC ) THEN
        IF rec.authstatcd                     ='Y' THEN
          IF LTRIM(RTRIM(rec.authbasisdesc)) IS NULL THEN
            L_ERRORS                         :='Auth Basis Description is empty for the ' || l_errors;
            l_msg_type                       :=con_type_error;
            raise REJECT_LINE_ITEMS;
          elsif ltrim(rtrim(rec.authempnr)) IS NULL THEN
            L_ERRORS                        :='Auth Emp Nr is empty for the ' || l_errors;
            l_msg_type                      :=con_type_error;
            raise REJECT_LINE_ITEMS;
          elsif is_user_exists(rec.authempnr) ='N' THEN
            L_ERRORS                         :='Invalied Auth Emp Nr : ' || rec.authempnr || ' for the ' || l_errors;
            l_msg_type                       :=con_type_error;
            raise REJECT_LINE_ITEMS;
          END IF;
        END IF;
      END IF;---end of new condition for ePrime--
      */

      --Get Auth GMT Date from XML and convert it to oracle date time format
      L_AUTH_DATE_GMT     :=NULL;
      IF (REC.AUTHDATEGMT IS NOT NULL OR REC.AUTHDATEGMT<>'') THEN
        L_AUTH_DATE_GMT   :=TO_TIMESTAMP ( SUBSTR(REC.AUTHDATEGMT,1,19),'YYYY-MM-DD"T"HH24:MI:SS');
      ELSE
        L_AUTH_DATE_GMT:=NULL;
      END IF;
      L_AUTH_MC_DATE:=NULL;
      --Get Auth MC date from XML and convert it to oracle date time format
      IF (REC.AUTHDATE IS NOT NULL OR REC.AUTHDATE<>'') THEN
        L_AUTH_MC_DATE :=TO_TIMESTAMP ( SUBSTR(REC.AUTHDATE,1,19),'YYYY-MM-DD"T"HH24:MI:SS');
      ELSE
        L_AUTH_MC_DATE:=NULL;
      END IF;

      --get product details from WW_PRODUCTS for this demo only..
      ----dbms_output.put_line ('Get sku test');
      --Connect to DARTWWI to get price from GPSy
      --temp testing
      --l_gypsy_prod_string:='''' || rec.sku ||'''';
      IF rec.optcd         IS NOT NULL THEN
        l_gypsy_prod_string:=chr(39) || RPAD(rec.sku,12) || RPAD (rec.optcd,3) || chr(39);
      ELSE
        l_gypsy_prod_string:=chr(39) || rec.sku || chr(39);
      END IF;
      --dbms_output.put_line ('GPSy Product No: ' || l_gypsy_prod_string);
      --dbms_output.put_line ('GPSy COUNTRY CD  ' || l_country_cd || ', PRICE LIST CD : ' || L_PRICE_LIST_CD || ', CURRENCY CD :' || L_CURRENCY_CD ||', PRICE TERM CD : ' || L_price_term_cd);

      --Validate products from GPSy
      --pkgpricelst_chiante.gppricecollectdtlphd_ref (l_country_cd,l_price_list_cd, l_currency_cd, l_price_term_cd,l_gypsy_prod_string,'N',l_hierarchy_cd, l_enddate,p_gypsy_price);

      SELECT LENGTH(rec.sku) INTO temp_prod_length FROM DUAL;
      --DBMS_OUTPUT.PUT_LINE('Prod base nr checked: '||rec.sku||', Length(prod_base_nr) is: '||temp_prod_length);

      SELECT DECODE(rec.optcd,NULL,'1',rec.optcd) INTO temp_prod_opt_code FROM DUAL;
      SELECT LENGTH(temp_prod_opt_code) INTO temp_prod_length FROM DUAL;
      --DBMS_OUTPUT.PUT_LINE('Prod Opt code checked: '||temp_prod_opt_code||', Length(rec.optcd) is: '||temp_prod_length);


---Changes for CR 3156 (Invalid products are not allowed to be added to a deal)----
      --if prod does not exists then it should not assign wrong PL to the invalid product
        l_price:=NULL;
        l_prod_desc:=NULL;
        l_prod_nr:=NULL;
        l_stat:=NULL;
        l_prod_line :=NULL;
        l_non_discount_fl:=NULL;
        l_ref_price_fl:=NULL;
        l_prod_family:=NULL;
          BEGIN
      SELECT price, prod_desc , prod_nr, stat, prod_line, non_discount_fl , ref_price_fl , prod_family
          INTO l_price, l_prod_desc , l_prod_nr, l_stat, l_prod_line , l_non_discount_fl, l_ref_price_fl, l_prod_family
          FROM gt_product_bundles_prices
          WHERE LTRIM(RTRIM(prod_nr))=LTRIM(RTRIM(rec.sku))
        --  AND prod_opt_cd=rec.optcd;
          and  prod_opt_cd= temp_prod_opt_code;
          --DBMS_OUTPUT.PUT_LINE('Prod line found: '||l_prod_line||' for product: '||rec.sku||' and optcd: '||rec.optcd);
         EXCEPTION
         --Below exception added for CR:282430-ORA-01422: exact fetch returns more than requested number of rows
          WHEN TOO_MANY_ROWS THEN
          SELECT DISTINCT price, prod_desc , prod_nr, stat, prod_line, non_discount_fl , ref_price_fl , prod_family
          INTO l_price, l_prod_desc , l_prod_nr, l_stat, l_prod_line , l_non_discount_fl, l_ref_price_fl, l_prod_family
          FROM gt_product_bundles_prices
          WHERE LTRIM(RTRIM(prod_nr))=LTRIM(RTRIM(rec.sku))
          AND prod_opt_cd= temp_prod_opt_code
          AND prod_line IN (SELECT prod_line_cd FROM prod_line WHERE tenantid =(SELECT tenantid FROM deal WHERE bd_id=i_bd_id));
            WHEN NO_DATA_FOUND THEN
            --DBMS_OUTPUT.PUT_LINE('Data not found for:'||rec.sku||'Opt code: '||temp_prod_opt_code  );
            BEGIN
            SELECT price, prod_desc , prod_nr, stat, prod_line, non_discount_fl , ref_price_fl , prod_family
                  INTO l_price, l_prod_desc , l_prod_nr, l_stat, l_prod_line , l_non_discount_fl, l_ref_price_fl, l_prod_family
                  FROM gt_product_bundles_prices
                  WHERE LTRIM(RTRIM(prod_nr))=LTRIM(RTRIM(rec.sku));
                      EXCEPTION
                      WHEN NO_DATA_FOUND THEN
                        DBMS_OUTPUT.PUT_LINE('Data not found for product: '||rec.sku);
---Changes for CR 3156 (Invalid products are not allowed to be added to a deal)----                        
                        --if prod does not exists then it should not assign wrong PL to the invalid product
                          l_price:=NULL;
                          l_prod_desc:=NULL;
                          l_prod_nr:=NULL;
                          l_stat:=NULL;
                          l_prod_line :=NULL;
                          l_non_discount_fl:=NULL;
                          l_ref_price_fl:=NULL;
                          l_prod_family:=NULL;
                    END;
         END;
         
IF rec.UseExtListPriceFl ='Y' THEN
dbms_output.put_line('l_price: '||l_price||' rec.listprice: '||rec.listprice);
    l_errors  :='Gpsy List price: '||l_price||' of Product : ' || rec.sku ||' '||temp_prod_opt_code|| ' is overwritten by External List Price: '||rec.listprice;
    l_msg_type :='WARNING';
     IF l_log_messages='Y' THEN
        inserterror_output_messages (i_bd_id,l_bd_nr,l_bd_version_nr, null,null,null,null, null,null,null,l_errors,'WARNING', 
        i_deal_creation_guid,NULL,NULL,l_errors);
    END IF; 
    l_price := rec.listprice;
  END IF;         

         -- Added by Lakshmi for CR83540- The Non-discountable attribute in Eclipse is displayed incorrect for non-discountable product which set in Optimus
         l_NON_DISCOUNT_FL := rec.nondiscfl;

      --Loop through GPSy price cursor to get price details.
      --LOOP
        --FETCH p_gypsy_price INTO gprice;
        IF rec.proddesc is not null AND (l_dealsourcecd IN  ('NGQ','BMI','STS')) THEN --Added by Ramesh on 17-Feb-2014 for R8
            l_prod_desc := rec.proddesc;
        END IF;

        IF l_price  IS NULL THEN
          --l_createnewversion:='N';
          l_errors          :='Product : ' || l_gypsy_prod_string || ' does not exists in GPSy. Cannot add a new line item.';
          --dbms_output.put_line (l_errors);
          L_MSG_TYPE:='WARNING';
          inserterror_output_messages (i_bd_id,l_bd_nr,l_bd_version_nr, null,null,null,null, null,null,null,l_errors,'WARNING', i_deal_creation_guid,NULL,NULL,l_errors);
        END IF;
        --EXIT
        --EXIT WHEN p_gypsy_price%notfound;
        /*--dbms_output.put_line (' print GPSy price -START------------');
        --dbms_output.put_line (gprice.price);
        --dbms_output.put_line (gprice.prod_nr);
        --dbms_output.put_line (gprice.prod_family);
        --dbms_output.put_line (gprice.stat);
        --dbms_output.put_line (gprice.prod_line);
        --dbms_output.put_line (gprice.prod_desc);
        --dbms_output.put_line (' non discount : ' || gprice.non_discount_fl);
        --dbms_output.put_line (' print GPSy price -------------END');
        */
        --get the product line details
        IF (to_number(l_price) >to_number(rec.listprice)) THEN
          l_errors                 := con_gypsy_high_price_mismatch || l_prod_nr ||'  ' || l_prod_desc ||'  GPSy Price : '|| l_price ||' , bmi Price : ' || rec.listprice ;-- ' , SmartQuote Price : ' || rec.listprice ;
          --dbms_output.put_line (l_errors);
          L_MSG_TYPE:=C_M_TYPE_WARNING;
          inserterror_output_messages (i_bd_id,l_bd_nr,l_bd_version_nr, null,null,null,null, null,null,null,l_errors,l_msg_type, i_deal_creation_guid,NULL,NULL,l_errors);
        END IF;
        IF (to_number(l_price) <to_number(rec.listprice)) THEN
          l_errors                 := c_m_gypsy_low_price_mismatch || l_prod_nr ||'  ' || l_prod_desc ||'  GPSy Price : '|| l_price ||' , bmi Price : ' || rec.listprice ;-- ' , SmartQuote Price : ' || rec.listprice ;
          --dbms_output.put_line (l_errors);
          inserterror_output_messages (i_bd_id,l_bd_nr,l_bd_version_nr, null,null,null,null, null,null,null,l_errors,'WARNING', i_deal_creation_guid,NULL,NULL,l_errors);
        END IF;
        --Check product status - Active /Obsolete
        IF (l_stat='O') THEN
          l_errors    :='Product : ' || l_prod_nr ||'  ' || l_prod_desc ||'  is obsolete.' ;
          --dbms_output.put_line (l_errors);
          L_MSG_TYPE:='WARNING';
          INSERTERROR_OUTPUT_MESSAGES (i_bd_id,L_BD_NR,L_BD_VERSION_NR, null,null,null,null, null,null,null,L_ERRORS,L_MSG_TYPE, i_deal_creation_guid,NULL,NULL,L_ERRORS);
        END IF;
        ----dbms_output.PUT_LINE (' Prod LIne ' || gprice.prod_line);
        BEGIN
          SELECT pl.prod_line_desc_tx,
            PL.BUS_UNIT_CD,
            bu.bus_group_cd
          INTO l_line_prod_gnrc_desc_tx,
            l_line_bus_unit_cd,
            l_line_bus_group_cd
          FROM prod_line pl,
            bus_unit bu
          WHERE pl.bus_unit_cd =bu.bus_unit_cd(+)
          AND pl.prod_line_cd  =l_prod_line;
        EXCEPTION
        WHEN no_data_found THEN
          l_msg_type :='ERROR';
          l_errors   := 'Unable to find prod line details in prod line master for the product ' || '''' || l_prod_line || '''' || ' Cannot proceed with deal creation';
          --DBMS_OUTPUT.PUT_LINE('Raising REJECT_LINE_ITEMS error');
          --DBMS_OUTPUT.PUT_LINE(l_errors);
          raise REJECT_LINE_ITEMS;
        END;

        --decide to set line authorizer
        g_set_line_Authorizer_code   :=NULL;
        l_auth_mc_hp_emp_nr          := rec.authempnr;

        IF (--rec.authempnr            IS NULL OR
        rec.authdate IS NULL OR rec.authdategmt IS NULL
        --OR rec.authempnr IS NULL
        OR rec.authstatcd IS NULL
        OR rec.bdnetamt IS NULL
        OR rec.listprice IS NULL
        --OR rec.ExtPreApprvPrice IS NULL
        ) THEN
          G_SET_LINE_AUTHORIZER_CODE :=NULL;
          g_set_gnrc_line_authorizer :=NULL; --added for new auth changes for line_items
          g_line_auth_type           :=NULL;
        elsif (rec.authstatcd         ='Y') THEN
          g_set_line_Authorizer_code := l_auth_mc_hp_emp_nr;
          g_set_gnrc_line_authorizer := l_auth_generic_emp_nr; --added for new auth changes for line_items
          g_line_auth_type           :=l_line_auth_type;
          --dbms_output.put_line('at line auth status Y: '||'line authorizer :'||l_auth_mc_hp_emp_nr||' gnrc authorizer  :'||l_auth_generic_emp_nr||' line auth type  :'||l_line_auth_type);
        ELSE
          g_set_line_authorizer_code:=NULL;
          g_set_gnrc_line_authorizer:=NULL; --added for new auth changes for line_items
          g_line_auth_type          :=NULL;
        END IF;
        --if deal is a high touch deal then
        --auth bd net should be null
        --and bdnet amount should be populated to rqst_bd_net_prc_am
        --QC2554
        IF (L_DEALSOURCEDEALTYPE   <>CON_HIGH_TOUCH_DEALTYPE_DESC ) THEN
          l_auth_bdnet_amt         :=rec.bdnetamt;
          L_EXT_PRE_APPRV_PRC_AM := REC.ExtPreApprvPrice;
        elsif (L_DEALSOURCEDEALTYPE = CON_HIGH_TOUCH_DEALTYPE_DESC AND rec.authstatcd ='Y') THEN--added for ePrime requirement as auith amt should not be null if product is added with authoriszation
          l_auth_bdnet_amt         :=rec.bdnetamt;
          L_EXT_PRE_APPRV_PRC_AM := REC.ExtPreApprvPrice;
        ELSE
          l_auth_bdnet_amt:=NULL;
          --L_EXT_PRE_APPRV_PRC_AM := NULL;
          --L_AUTH_BDNET_AMT:=GPRICE.PRICE;
        END IF;
        ------------------------------------------
        --zero list price issue management
        ------------------------------------------
        IF l_price      =0 THEN
--Added by Lakshmi to use LP and BDNet from XML when LP from Gpsy = 0    
        l_price := NVL(REC.LISTPRICE ,0); 
        l_auth_bdnet_amt :=  NVL(REC.BDNETAMT,0); 
        
        
          L_AUTH_BDNET_AMT  :=0;
          --L_EXT_PRE_APPRV_PRC_AM :=0;
          l_auth_disc_otc_pc:=0;
          L_ERRORS          := 'Zero List Price for the GPSy Product : ' || ' Line Nr - ' || L_LINE_NR || ', ' || l_PROD_NR ||'  ' || l_PROD_DESC ||'  GPSy Price : '|| l_PRICE --|| ' , BMI Price : ' || REC.LISTPRICE || ', BD Net values will be marked as zero'; --' , SmartQuote Price : ' || REC.LISTPRICE || ', BD Net values will be marked as zero';
          ||' .Accepting BMI List price: '
          || REC.LISTPRICE 
          || ' and BD Net: '
          ||REC.BDNETAMT; --' , SmartQuote Price : ' || REC.LISTPRICE || ', BD Net values will be marked as zero';
          --dbms_output.put_line (l_errors);
          L_MSG_TYPE:=C_M_TYPE_WARNING;
          inserterror_output_messages (i_bd_id,l_bd_nr,l_bd_version_nr, null,null,null,null, null,null,null,l_errors,l_msg_type, i_deal_creation_guid,NULL,NULL,l_errors);

        END IF;
        --Pending--
        --if required add validation for auth emp nr
        --auth emp nr is provided for information basis only.
        -- when the line is authroized, eclipse will show as EXT
        ----Added on 23-Jan for CR3236.
        IF rec.pl   <> l_prod_line THEN

          L_MSG_TYPE:='WARNING';
          l_errors  :='PL for SKU '||rec.sku ||' does not tally between '||g_err_src||' and Eclipse ' || '( '||g_err_src||' PL :'|| rec.pl||' GPSy PL :'||l_prod_line||' )'||' PL for SKU '||rec.sku ||' is overriden';
          --dbms_output.put_line (l_errors);
          inserterror_output_messages (i_bd_id,l_bd_nr,l_bd_version_nr, null,null,null,null, null,null,null,l_errors,l_msg_type, i_deal_creation_guid,NULL,NULL,l_errors);

        END IF;
        ---End of change CR3236
        --DONE1
        --dbms_output.put_line('at line 2808 auth status  :' ||rec.authstatcd ||' line authorizer :'||l_auth_mc_hp_emp_nr||' gnrc authorizer  :'||l_auth_generic_emp_nr||' line auth type  :'||l_line_auth_type);
        --dbms_output.put_line ('Line Item entry COUNTRY CD  ' || l_country_cd || ', PRICE LIST CD : ' || L_PRICE_LIST_CD || ', CURRENCY CD :' || L_CURRENCY_CD ||', PRICE TERM CD : ' || L_price_term_cd);

        --dbms_output.PUT_LINE('Doc number before insert is: '||rec.bmi_doc_no);
        --DBMS_OUTPUT.PUT_LINE('Prod number and prod line before insert: '||rec.sku||' , '||l_prod_line);
        INSERT
        INTO line_item
          (
            line_prog_cd,
            support_pack_fl,
            future_prod_fl,
            change_pndg_fl,
            version_created,
            bd_id,
            line_nr,
            line_type_cd,
            prod_gnrc_desc_tx,
            prod_gnrc_nr_tx,
            line_added_by_emp_nr,
            bus_group_cd,
            bus_unit_cd,
            assoc_pl_cd,
            assoc_pf_cd,
            estmtd_qt,
            estmtd_dlr_am,
            price_list_cd,
            price_term_cd,
            currency_cd,
            --auth_mc_hp_emp_nr,--commented for new auth changes
            auth_generic_emp_nr,
            AUTH_MC_DATE,
            auth_dt_gmt,
            PROD_OPT_CD,
            REMAINING_AMT,
            --sq_auth_emp_nr
            auth_mc_hp_emp_nr,
            line_auth_type,
            bmi_doc_no
          )
          VALUES
          (
            decode(REC.AUTHSTATCD,null,'N',REC.AUTHSTATCD),
            'N',
            'N',
            'N',
            l_bd_version_nr,
            i_bd_id,
            l_line_nr,
            l_line_type_cd,
            SUBSTRB(l_prod_desc,1,65),
            rec.sku,
            rec.addedbyempnr,
            L_LINE_BUS_GROUP_CD,
            L_LINE_BUS_UNIT_CD,
            l_prod_line,
            l_prod_family,
            rec.qty,
            NULL,
            l_price_list_cd,
            l_price_term_cd,
            L_currency_cd,
            --G_SET_LINE_AUTHORIZER_CODE,
            g_set_gnrc_line_authorizer,
            DECODE (REC.AUTHSTATCD,'Y',L_AUTH_MC_DATE,NULL),
            DECODE (REC.AUTHSTATCD,'Y',L_AUTH_DATE_GMT,NULL),
            DECODE (LTRIM(RTRIM(REC.OPTCD)),NULL,' ',LTRIM(RTRIM(REC.OPTCD))),
            DECODE (L_AUTH_BDNET_AMT,NULL,REC.BDNETAMT * REC.QTY, L_AUTH_BDNET_AMT*REC.QTY), --remaining_amt
            DECODE (REC.AUTHSTATCD,'Y',REC.authempnr,NULL),
            g_line_auth_type,
            DECODE(rec.bmi_doc_no,null,0,rec.bmi_doc_no)
          );
          --commit;
        --adding one entry into line_disc_bndry table - per line
        INSERT
        INTO line_disc_bndry
          (
            bd_id,
            LINE_NR,
            disc_bndry_id,
            disc_bndry_type_cd,
            creation_dts,
            UPDATE_DTS
          )
          VALUES
          (
            i_bd_id,
            l_line_nr,
            1,
            'D',
            sysdate,
            sysdate
          );
        --get the new scale id for the line
        SELECT NVL(MAX(scale_id),0)+1
        INTO l_scale_id
        FROM line_disc_scale
        WHERE bd_id =i_bd_id
        AND line_nr =l_line_nr;
        --FOR PN product type
        --IF (rec.authbasisdesc=' ' OR rec.authbasisdesc IS NULL) THEN
        --l_auth_basis_text :=' Price Book Approved';
        --ELSE
        --l_auth_basis_text:=rec.authbasisdesc;
        --END IF;
        l_auth_basis_text:=rec.authbasisdesc;
        --calculate AUTH DISC %
        ----dbms_output.put_line (' gprice.price ' || gprice.price || ' auth bd net price ' || rec.bdnetamt);
        ----dbms_output.PUT_LINE (' issue 1');
        l_rqst_disc_otc_pc:=0;
        --IF ( gprice.price >0 AND l_dealsourcedealtype<>c_high_touch_dealtype_desc )THEN
        IF l_price >0 THEN
                    --dbms_output.put_line (' REC.BDNETAMT ' || REC.BDNETAMT || ' and GPRICE.PRICE ' || GPRICE.PRICE || ' std disc ' || REC.STDDISCPCT);
                IF (ROUND(100 - (( REC.BDNETAMT/l_PRICE) *100)- NVL(REC.STDDISCPCT,0),2)>99.99) OR (ROUND(100- (( REC.BDNETAMT/l_PRICE) *100)- NVL(REC.STDDISCPCT,0),2)<-99.99) THEN
                                  IF L_DEALSOURCEDEALTYPE                                                   <>C_HIGH_TOUCH_DEALTYPE_DESC THEN
                                                        L_ERRORS                                                                :=' Invalid Auth Disc % for Product Line SKU : '|| rec.sku||CASE WHEN REC.OPTCD IS NOT NULL THEN ','||REC.OPTCD END
                                                        || ' AuthBD Net :' || REC.BDNETAMT || ' List price :' || l_PRICE || ' Auth Disc Amt is : ' || (ROUND(100- (( REC.BDNETAMT/l_PRICE) *100)- NVL(REC.STDDISCPCT,0),2));
                                  ELSE
                                                        L_ERRORS :=' Invalid Rqst Disc % for Product Line SKU : '|| rec.sku || ' Rqst BDNet :' || REC.BDNETAMT || ' List price :' || l_PRICE || ' Rqst Disc Amt is : ' || (ROUND(100- (( REC.BDNETAMT/l_PRICE) *100)- NVL(REC.STDDISCPCT,0),2));
                                  END IF;
                      L_MSG_TYPE :=C_M_TYPE_WARNING;
                      --dbms_output.PUT_LINE (l_errors);
                    --log errors
                    INSERTERROR_OUTPUT_MESSAGES ( i_bd_id, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL, NULL, L_ERRORS, L_MSG_TYPE, I_DEAL_CREATION_GUID, NULL, NULL,L_ERRORS );
            --for the testing setting it to 1..need to revert this change after testing
            -- set auth flag to N
            l_auth_disc_otc_pc:=NULL;
            l_rqst_disc_otc_pc:=0;
            --Condition added by Lakshmi for CR:3268 - NGQ: When Eclipse receives a BDNet of -0- with list price greater than -0- the Rqst% should be recalculated
            IF ((REC.BDNETAMT = 0 AND REC.STDDISCPCT=0) OR (ROUND(100 - (( REC.BDNETAMT/l_PRICE) *100)- NVL(REC.STDDISCPCT,0),2))>99.99) THEN 
               l_rqst_disc_otc_pc :=100;
              L_ERRORS                                                                 :='Adjusting Rqst Disc % to 100, for Product Line SKU :: '|| rec.sku||CASE WHEN REC.OPTCD IS NOT NULL THEN ','||REC.OPTCD END||
                     ' Line: '||l_line_nr ||
                     ' Rqst BDNet :' || REC.BDNETAMT || ' List price :' || l_PRICE|| ' Rqst Disc Amt is : ' || 
                     (ROUND(100- (( REC.BDNETAMT/l_PRICE) *100)- NVL(REC.STDDISCPCT,0),2));
                     L_MSG_TYPE                                                               :=C_M_TYPE_WARNING;
                     inserterror_output_messages ( i_bd_id,NULL,NULL,  NULL, NULL, NULL, NULL, NULL,NULL, NULL, l_errors, l_msg_type, i_deal_creation_guid, NULL, NULL,l_errors );
                    ELSE 
                l_rqst_disc_otc_pc:=0;
            END IF; --End of Condition added for CR:3268 - NGQ: When Eclipse receives a BDNet of -0- with list price greater than -0- the Rqst% should be recalculated
            
            --l_createnewversion:='N';
          ELSE
            L_AUTH_DISC_OTC_PC:=ROUND(100- (( REC.BDNETAMT/l_PRICE) *100)- NVL(REC.STDDISCPCT,0),2);
            l_rqst_disc_otc_pc:=L_AUTH_DISC_OTC_PC;
          END IF;
        ELSE
          L_AUTH_DISC_OTC_PC  :=NULL;
          IF l_PRICE      =0 THEN
            L_AUTH_DISC_OTC_PC:=0;
            l_rqst_disc_otc_pc:=0;
          END IF;
        END IF;
        --set auth Disc % to Null in case of High Touch Deal
        IF L_DEALSOURCEDEALTYPE=C_HIGH_TOUCH_DEALTYPE_DESC AND REC.authstatcd <> 'Y' THEN
          L_AUTH_DISC_OTC_PC  :=NULL;
        END IF;
        --Insert data into LINE_DISC_SCALE table.
        --done
        --margin
        L_RQST_MARGIN_PCT                                                                                                         :=0;
        IF REC.COSTPRICE                                                                                                           >0 THEN
          IF ((L_AUTH_BDNET_AMT                                                                                                   IS NULL OR L_AUTH_BDNET_AMT=0) AND l_PRICE>0 ) THEN
            IF REC.BDNETAMT                                                                                                        >0 THEN
              IF (ROUND((((REC.BDNETAMT                                               - REC.COSTPRICE) / REC.BDNETAMT) * 100), 2)) < -99 THEN -- CR  1262 (ROUND((((REC.BDNETAMT - REC.COSTPRICE) / REC.BDNETAMT) * 100), 2) <0 and length(ROUND((((REC.BDNETAMT - REC.COSTPRICE) / REC.BDNETAMT) * 100), 2)) >3) THEN --CR 4717
                L_RQST_MARGIN_PCT                                                                                                 :=-99.99;                                                 --CR 4717
              ELSIF (ROUND((((REC.BDNETAMT                                            - REC.COSTPRICE) / REC.BDNETAMT) * 100), 2)) > 100 THEN                                               -- CR  1262 (ROUND((((REC.BDNETAMT - REC.COSTPRICE) / REC.BDNETAMT) * 100), 2) >0 and length(ROUND((((REC.BDNETAMT - REC.COSTPRICE) / REC.BDNETAMT) * 100), 2)) >3) THEN --CR 4717
                L_RQST_MARGIN_PCT                                                                                                 :=999.99;                                                 --CR 4717
              ELSE                                                                                                                                                                          --CR 4717
                L_RQST_MARGIN_PCT:=ROUND((((REC.BDNETAMT - REC.COSTPRICE) / REC.BDNETAMT) * 100), 2);
              END IF;
            END IF;
          ELSIF ((L_AUTH_BDNET_AMT                                                                                                           IS NOT NULL AND L_AUTH_BDNET_AMT>0)) THEN
            IF (ROUND((( (L_AUTH_BDNET_AMT                                                   - REC.COSTPRICE) / L_AUTH_BDNET_AMT) * 100), 2)) < -99 THEN-- CR  1262 (ROUND(((  (L_AUTH_BDNET_AMT - REC.COSTPRICE) / L_AUTH_BDNET_AMT) * 100), 2)<0 AND LENGTH(ROUND(((  (L_AUTH_BDNET_AMT - REC.COSTPRICE) / L_AUTH_BDNET_AMT) * 100), 2))>3) THEN --CR 4717
              L_RQST_MARGIN_PCT                                                                                                              :=-99.99;                                                    --CR 4717
            ELSIF ( ROUND((( (L_AUTH_BDNET_AMT                                               - REC.COSTPRICE) / L_AUTH_BDNET_AMT) * 100), 2)) > 100 THEN                                                  --CR  1262 ( ROUND(((  (L_AUTH_BDNET_AMT - REC.COSTPRICE) / L_AUTH_BDNET_AMT) * 100), 2)>0 AND LENGTH(ROUND(((  (L_AUTH_BDNET_AMT - REC.COSTPRICE) / L_AUTH_BDNET_AMT) * 100), 2))>3) THEN --CR 4717
              L_RQST_MARGIN_PCT                                                                                                              :=999.99;
            ELSE
              L_RQST_MARGIN_PCT:=ROUND((( (L_AUTH_BDNET_AMT - REC.COSTPRICE) / L_AUTH_BDNET_AMT) * 100), 2);
            END IF;
          ELSE
            L_RQST_MARGIN_PCT:=0;
          END IF;
        ELSE
          L_RQST_MARGIN_PCT:=0;
        END IF;
        --Modified by Harsh Shah , 23-Jan-2013
        --CR 4786 - [APJ MTP] ???Auth Amt? and ???Auth%?  populated with some data after creating the deal via EIS.
        --updating AUTH_DISC_OT_PC column with Null when list price is zero.

        --dbms_output.put_line (' ADDING LINE DISC SCALE FOR LINE_ITEM : ' || 'LINE NR :' || l_line_nr || ' BD ID  : ' ||i_bd_id  || ' SCALE ID : ' || l_scale_id) ;

        --dbms_output.put_line (' LINE DISC SCALE l_enddate '|| l_enddate || 'BEGING DATE ' || l_begindate);


        INSERT
        INTO line_disc_scale
          (
            bd_id,
            line_nr,
            disc_bndry_id,
            scale_id,
            disc_type_cd,
            upper_bndry_dt,
            lower_bndry_dt,
            auth_fl,
            rqst_disc_ot_pc,
            auth_disc_ot_pc,
            disc_as_pc_rqst,
            version_created,
            auth_bd_net_prc_am,
            prod_lst_prc_am,
            RQST_BD_NET_PRC_AM,
            cost_avail_fl,
            updated_by_emp_nr,
            auth_basis_text,
            non_discount_fl,
            prod_cost_am,
            PROD_COST_DATE,
            disc_as_pc,
            HIGH_RSLR_A_SD_PC,
            RQST_INCR_DISC_AM,
            RQST_MARGIN_PCT,
            AUTH_MARGIN_PCT,
            EXT_PRE_APPRV_PRC_AM,
            GUIDANCE_AVAILABLE_FL,
            GUIDANCE_DETAILS_ID,
            GUIDANCE_EXPERT_PCT,
            GUIDANCE_FLOOR_PCT,
            GUIDANCE_TYPICAL_PCT,
            GUIDANCE_LAST_REFRESH_DT,
            INSTANT_PRC_METHOD, --Added for CR255711-The values of Instant Prc Method and Instant Prc Amt are blank for the product added when revise BMI quote
            INSTANT_PRC_AMT  --Added for CR255711-The values of Instant Prc Method and Instant Prc Amt are blank for the product added when revise BMI quote

          )
          VALUES
          (
            i_bd_id,
            l_line_nr,
            1,
            l_scale_id,
            DECODE(rec.pricingtypecd,NULL,'B',rec.pricingtypecd),
            l_enddate,
            l_begindate,
            REC.AUTHSTATCD,
            DECODE(l_rqst_disc_otc_pc,NULL,0,l_rqst_disc_otc_pc), --RQST_DISC_OT_PC
            --DECODE(l_price,0,0,l_auth_disc_otc_pc),
            DECODE(rec.authstatcd,'Y',DECODE(l_price,0,0,L_AUTH_DISC_OTC_PC),NULL), --auth_disc_ot_pc Changes made by Lakshmi as part of CR96402
            0,                                                    --disc_as_pc_rqst
            L_BD_VERSION_NR,
            --DECODE (rec.authstatcd,'Y',l_auth_bdnet_amt,NULL),
            DECODE(rec.authstatcd,'Y',DECODE(l_PRICE,0,0,L_AUTH_BDNET_AMT),NULL),    --Changed by Lakshmi for CR96402             --auth bd net prc amount
            l_price,                                                --list price
            DECODE(L_AUTH_BDNET_AMT,NULL,REC.BDNETAMT,L_AUTH_BDNET_AMT), --rqst_bd_net_prc_am
            DECODE (rec.costprice,0,'N',NULL,'N','Y'),
            DECODE (rec.authstatcd,'Y',rec.authempnr,NULL),
            DECODE (rec.authstatcd,'Y',l_auth_basis_text,NULL),
            rec.nonDiscfl,
            rec.costprice,
            DECODE (REC.COSTPRICE,0,NULL,NULL,NULL,sysdate),
            0 ,                            --disc_as_pc
            REC.STDDISCPCT,                --HIGH_RSLR_A_SD_PC
            DECODE(l_price,0,0,NULL), --RQST_INCR_DISC_AM
            L_RQST_MARGIN_PCT,
            DECODE(L_AUTH_BDNET_AMT,NULL,0,L_RQST_MARGIN_PCT), --auth margin,
            L_EXT_PRE_APPRV_PRC_AM,--DECODE ( l_EXT_PRE_APPRV_PRC_AM, NULL, 0, l_EXT_PRE_APPRV_PRC_AM) gprice
            REC.GuidanceAvailFl,
            DECODE(REC.GuidanceAvailFl,'Y',REC.GuidanceDetailsID,NULL),
            DECODE(REC.GuidanceAvailFl,'Y',REC.GuidanceDiscExpertPct,NULL),
            DECODE(REC.GuidanceAvailFl,'Y',REC.GuidanceDiscFloorPct,NULL),
            DECODE(REC.GuidanceAvailFl,'Y',REC.GuidanceDiscTypicalPct,NULL),
            DECODE(rec.GuidanceAvailFl,'Y',TO_TIMESTAMP (SUBSTR(REC.GuidanceRefreshDateGMT,1,19),'YYYY-MM-DD"T"HH24:MI:SS'),NULL),
            REC.instantprcmethod, --Added for CR255711-The values of Instant Prc Method and Instant Prc Amt are blank for the product added when revise BMI quote
            REC.Instantprcamt --Added for CR255711-The values of Instant Prc Method and Instant Prc Amt are blank for the product added when revise BMI quote
            );

          --dbms_output.put_line (' ADDING LINE DISC SCALE FOR LINE_ITEM : ' || 'LINE NR :' || l_line_nr || ' BD ID  : ' ||i_bd_id  || ' SCALE ID : ' || l_scale_id  || ' ROW UPDATED ' || SQL%ROWCOUNT) ;
        ----------------------
        -- RTQTY
        ---------------------
        --select (rec.qty + (((L_O_DCTEXPIRETHRESHOLDPCT-100)/100) * NVL(rec.qty, 0))) into l_rt_qty from dual;


        --***************************************************
        --adding rollout schedule data
        --***************************************************

      --Added as BMI will not send the Rolout months (even rollout)
      l_rollout_mnths :=t_rollout_mnths();
      --dbms_output.put_line (' l begin date ' || l_begindate || ' l end date ' || l_enddate || ' Qty ' ||  rec.qty);

      IF (ltrim(rtrim(rec.rolloutmonthqtys))) IS NULL AND (l_dealsourcecd = con_deal_source_bmi) THEN
        rec.rolloutmonthqtys                  :=Rollout_Qty_BMI(l_begindate,l_enddate,rec.qty);
      END IF;

        GET_ROLLOUT_MONTHS(REC.ROLLOUTMONTHQTYS,L_ROLLOUT_MNTHS );

        --dbms_output.put_line(' Rollout month qtys   : ' || rec.rolloutmonthqtys );


        l_rollout_ins_qry        := 'insert into rollout_schedule (bd_id,
          line_nr,
          prod_base_nr,
          ro_bgn_dt,
          ro_end_dt,
          load_type,
          est_qty,
          pct_prob,
          mth1_qty,
          mth2_qty,
          mth3_qty,
          mth4_qty,
          mth5_qty,
          mth6_qty,
          mth7_qty,
          mth8_qty,
          mth9_qty,
          mth10_qty,
          mth11_qty,
          mth12_qty,
          mth13_qty,
          mth14_qty,
          mth15_qty,
          schedule_change_fl,
          ordr_min_qty,
          line_max_qty,
          creation_dts,
          update_dts,
          remaining_qty,
          rtqty,
          PROD_OPT_CD )
values ( ' ||i_bd_id||',' ||l_line_nr||',' ||'''' || rec.sku||'''' ||',' || 'to_date('||''''||l_begindate||''''||','||'''DD-MON-YY'''||')'||',' || 'to_date('||''''||l_enddate||''''||','||'''DD-MON-YY'''||')'||',' || '''Even'''||',' ||rec.qty||',' ||100||',';
        l_no_of_months           :=1;
        IF l_rollout_mnths.first IS NOT NULL THEN
          FOR months_rec IN l_rollout_mnths.first..l_rollout_mnths.last
          LOOP
            IF LENGTH
              (
                l_rollout_mnths(months_rec)
              )
                                =0 THEN
              l_rollout_ins_qry:=l_rollout_ins_qry||'NULL'||',';
            ELSE
              l_rollout_ins_qry:=l_rollout_ins_qry||l_rollout_mnths(months_rec) ||',';
            END IF;
            l_no_of_months:=l_no_of_months+1;
            ----dbms_output.put_line('Inside MOnth loop');
          END LOOP;
        END IF;
        FOR i IN l_no_of_months-1 ..14
        LOOP
          l_rollout_ins_qry:=l_rollout_ins_qry||'NULL'||',';
        END LOOP;
        L_ROLLOUT_INS_QRY:=L_ROLLOUT_INS_QRY || '''N'''||',' ||rec.orderminqty||','||REC.QTY||',' || 'SYSDATE'||',' ||' SYSDATE'||',' ||REC.QTY||',' ||REC.QTY || ',' || '''' ||NVL(ltrim(rtrim(REC.OPTCD)),' ')|| '''' || ')';
        --dbms_output.put_line(' Rollout query ' || l_rollout_ins_qry);
        --dbms_output.put_line ('rollout for line');
        EXECUTE immediate (l_rollout_ins_qry);
        --dbms_output.put_line ('rollout done');
--      END LOOP;
   END IF;-- END IF FOR line item updates (update/Deny/Hold)
    END LOOP;
    open p_result FOR SELECT * FROM gt_edms_smqt_err_results order by msg_type DESC;
    commit;
EXCEPTION
WHEN DUP_PRODUCTS_EXISTS THEN
--Needs to be tuned to capture more detailed error..
ROLLBACK;
  inserterror_output_messages (i_bd_id,L_BD_NR,L_BD_VERSION_NR, null,null,null,null, null,null,null,l_errors,'WARNING', i_deal_creation_guid,NULL,NULL,l_errors);

  --L_ERRORS:='Error while adding line item details for the deal ' || L_BD_NR || ' Version No : '|| L_BD_VERSION_NR || ' Ref: ' || I_DEAL_CREATION_GUID || '  '||  SQLCODE || ' -ERROR- ' || sqlerrm || '. Error at --Line : ' || dbms_utility.format_error_backtrace();
  --Unlock Deal
             IF UnlockDeal(L_BD_NR,l_errors)='N'  THEN
                l_errors:='Deal could not be unlocked';
                inserterror_output_messages (i_bd_id,L_BD_NR,L_BD_VERSION_NR, null,null,null,null, null,null,null,l_errors,'WARNING', i_deal_creation_guid,NULL,NULL,l_errors);
             ELSE
                l_errors:='Deal Unlocked successfully';
                inserterror_output_messages (i_bd_id,L_BD_NR,L_BD_VERSION_NR, null,null,null,null, null,null,null,l_errors,'WARNING', i_deal_creation_guid,NULL,NULL,l_errors);
                --dbms_output.PUT_LINE (L_errors);
            END IF;

            --inserterror_output_messages (i_bd_id,L_BD_NR,L_BD_VERSION_NR, null,null,null,null, null,null,null,l_errors,'WARNING', i_deal_creation_guid,NULL,NULL,l_errors);
  open p_result FOR SELECT * FROM gt_edms_smqt_err_results order by msg_type DESC;
  commit;
WHEN REJECT_LINE_ITEMS THEN

  inserterror_output_messages (i_bd_id,L_BD_NR,L_BD_VERSION_NR, null,null,null,null, null,null,null,l_errors,'WARNING', i_deal_creation_guid,NULL,NULL,l_errors);
  rollback;
  L_ERRORS:='Error while adding line item details for the deal ' || L_BD_NR || ' Version No : '|| L_BD_VERSION_NR || ' Ref: ' || I_DEAL_CREATION_GUID || '  '||  SQLCODE || ' -ERROR- ' || sqlerrm || '. Error at Line : ' || dbms_utility.format_error_backtrace();
  inserterror_output_messages (i_bd_id,L_BD_NR,L_BD_VERSION_NR, null,null,null,null, null,null,null,l_errors,'WARNING', i_deal_creation_guid,NULL,NULL,l_errors);

  --Unlock Deal
             IF UnlockDeal(L_BD_NR,l_errors)='N'  THEN
                l_errors:='Deal could not be unlocked';
                inserterror_output_messages (i_bd_id,L_BD_NR,L_BD_VERSION_NR, null,null,null,null, null,null,null,l_errors,'WARNING', i_deal_creation_guid,NULL,NULL,l_errors);
             ELSE
                l_errors:='Deal Unlocked successfully';
                inserterror_output_messages (i_bd_id,L_BD_NR,L_BD_VERSION_NR, null,null,null,null, null,null,null,l_errors,'WARNING', i_deal_creation_guid,NULL,NULL,l_errors);
                --dbms_output.PUT_LINE (L_errors);
            END IF;

  open p_result FOR SELECT * FROM gt_edms_smqt_err_results order by msg_type DESC;
  commit;

WHEN OTHERS THEN

  L_ERRORS:='Error while adding line item details for the deal ' || L_BD_NR || ' Version No : '|| L_BD_VERSION_NR || ' Ref: ' || I_DEAL_CREATION_GUID || '  '||  SQLCODE || ' -ERROR- ' || sqlerrm || '. Error at Line : ' || dbms_utility.format_error_backtrace();
  inserterror_output_messages (i_bd_id,L_BD_NR,L_BD_VERSION_NR, null,null,null,null, null,null,null,l_errors,'WARNING', i_deal_creation_guid,NULL,NULL,l_errors);
  RAISE line_item_UPDATE_FAILED;
END add_LineItems;

procedure add_bundle_products(
    i_deal_creation_guid IN VARCHAR2,
  i_xmlnamespace        IN  varchar,
    i_deal_creator_emp_nr IN  deal.init_hp_emp_nr%type,
    i_bd_id               IN  DEAL.BD_ID%TYPE,
    i_bd_nr               IN  DEAL.BD_NR%TYPE,
    i_bd_version_nr       IN  DEAL.BD_VERSION_NR%TYPE,
    i_dealsourcecd        IN  VARCHAR,
    i_dealvertocreate     IN  NUMBER,
    i_deal_begin_date     IN  DEAL.BEG_DT%TYPE,
    i_deal_end_date       IN  deal.end_dt%type,
    i_dealapprfl          IN  VARCHAR2,
    i_dealquotefl        IN  VARCHAR2,
    i_dealroutefl       IN  VARCHAR2,
    I_COUNTRY_CD DEAL.CONTROL_CNTRY_CD%TYPE,
    I_price_term_cd deal.price_term_cd%type,
    i_price_list_cd deal.price_list_cd%type,
    i_currency_cd deal.curr_cd%type,
    i_dealsourcedealtype deal.deal_source_deal_type%type,
    i_dealsourcekeyval deal.deal_source_keyval%type,
    i_hierarchy_cd deal_matrix.hierarchy_cd%type,
    i_busmodelcd DEAL.BUS_MODEL_CD%TYPE )
IS
  l_xml_path_to_Query varchar2(100);
  L_errors varchar2(2000);
  l_msg_type VARCHAR2(10);
  l_auth_date_gmt bundle_line.auth_dt_gmt%type;
  L_AUTH_MC_DATE LINE_ITEM.AUTH_MC_DATE%type;
  l_bundle_config bundle.config_id%type; -- NUMBER(10) :=0; --Commented as part of CR5020
  l_bundle_dtl_line_nr NUMBER(10) :=0;
  l_bundle_line_nr BUNDLE.LINE_NR%TYPE:=0;
  L_HDR_PROD_STD_DISC line_disc_scale.HIGH_RSLR_A_SD_PC%type;
  l_bd_hdr_sku_list_price  NUMERIC(16,2); --NUMERIC(10,2); Commented this to match the precision and scale of Line Disc Scale table
   l_BD_HDR_SKU_qty        NUMERIC(10);
  l_auth_bdnet_amt line_disc_scale.rqst_bd_net_prc_am%type;
  L_EXT_PRE_APPRV_PRC_AM LINE_DISC_SCALE.EXT_PRE_APPRV_PRC_AM%TYPE;
l_source_config_id bundle.source_config_id%TYPE;
l_hdr_bd_sku_opt_cd line_item.prod_opt_cd%type;
L_PROD_COST_PRICE_HDR_PROD BUNDLE_LINE.PROD_COST_AM%TYPE:=0;
l_line_AuthBasisDesc LINE_DISC_SCALE.AUTH_BASIS_TEXT%type;
  l_line_AuthStat bundle_line.ITEM_PROG_CD%type;
  l_line_AuthDtGMT DATE;
  l_line_AuthDtGMT_Char varchar2(200);
l_auth_generic_emp_nr line_item.auth_generic_emp_nr%type;--added for new auth changes
--l_bundle_config bundle.config_id%type; -- NUMBER(10) :=0; --Commented as part of CR5020
--l_busmodelcd bus_model.bus_model_cd%type;
l_line_auth_type line_item.line_auth_type%type;
--L_PROD_COST_PRICE_HDR_PROD BUNDLE_LINE.PROD_COST_AM%TYPE:=0;

--EXCEPTION Delcaration
REJECT_BUNDLE EXCEPTION;
l_create_new_version VARCHAR2(1):='Y';
new_l_bundle_dtl_line_nr NUMBER(10) :=0;
--L_banded_fl bundle_line.banded_fl%type;
l_line_Nr bundle.line_nr%TYPE;

BEGIN

--Get the Max line_nr for the new line items
  -- select NVL(max(line_nr),0)  into l_bundle_line_nr FROM line_item WHERE BD_ID=i_bd_id; -- Commented to fix the CR258615  --Mani and moved it to inside the Loop
  --dbms_output.put_line ('Current Line No is '|| l_bundle_line_nr);
 
  --Below block added by Lakshmi for CR: 3259
    IF LOWER(i_dealsourcecd)='bmi' THEN
        l_auth_generic_emp_nr   :=-999999911  ;
        l_line_auth_type        :='EAB';
    ELSIF lower(i_dealsourcecd) = ('ngq') THEN 
      l_auth_generic_emp_nr   :=-999999922  ;
      l_line_auth_type        :='EAN';
    END IF;

  BEGIN
  --****************************************************************************************
  --Adding Bundles
  --****************************************************************************************
  /*
    Modified by Harsh Shah 17-Nov-2013
    added condition to filter bundles only with the request type =ADD
    to resolve the issue of bundles getting added with every version
  */

   --get list price from Gpsy:
  get_list_prices_from_gypsy
        (I_COUNTRY_CD,
        i_price_list_cd,
        i_currency_cd,
        I_price_term_cd,
        i_deal_creation_guid,
        'N',
        i_hierarchy_cd,
        i_deal_end_date);


--commented by Harsh Shah for US7832,Performance improvement, 30-Jan-2015
/*
    SELECT    *
    FROM
      (SELECT extract ( value (d), '//LineItemBD/AddedByHPEmployee/EmployeeNr/text()', i_xmlnamespace). getstringval () AS addedbyempnr,    ---emp nr change from new xml
        extract ( value (d), '//LineItemBD/AddedByHPEmployee/EmailAddress/text()', i_xmlnamespace). getstringval ()     AS addedbyempemail, ---emp nr change from new xml
        extract ( value (d), '//LineItemBD/AuthBasisDesc/text()', i_xmlnamespace). getstringval ()                      AS authbasisdesc ,
        extract ( value (d), '//LineItemBD/AuthDate/text()', i_xmlnamespace ). getstringval ()                          AS authdate,
        extract ( value (d), '//LineItemBD/AuthDateGMT/text()', i_xmlnamespace). getstringval ()                        AS authdategmt,
        extract ( value (d), '//LineItemBD/AuthHPEmployee/EmployeeNr/text()', i_xmlnamespace). getstringval ()          AS authempnr,    ---emp nr change from new xml
        extract ( value (d), '//LineItemBD/AuthHPEmployee/EmailAddress/text()', i_xmlnamespace). getstringval ()        AS authempemail, ---emp nr change from new xml
        extract ( value (d), '//LineItemBD/AuthStatCD/text()', i_xmlnamespace). getstringval ()                         AS authstatcd,
        extract ( value (d), '//LineItemBD/BDNetAmt/text()', i_xmlnamespace ). getstringval ()                          AS bdnetamt,
        extract ( value (d), '//LineItemBD/CostPrice/text()', i_xmlnamespace). getstringval ()                          AS costprice,
        extract ( value (d), '//LineItemBD/ListPrice/text()', i_xmlnamespace). getstringval ()                          AS listprice,
        extract ( value (d), '//LineItemBD/PricingTypeCD/text()', i_xmlnamespace). getstringval ()                      AS pricingtypecd,
        extract (value (D), '//LineItemBD/ProdDesc/text()', I_XMLNAMESPACE) . GETSTRINGVAL ()                           as PRODDESC,
        extract (value (d), '//LineItemBD/RequestType/text()', i_xmlnamespace). getstringval ()                         AS requesttype,
        extract (value (d), '//LineItemBD/RolloutMonthQtys/text()', i_xmlnamespace). getstringval ()                    AS rolloutmonthqtys,
        extract (value (d), '//LineItemBD/ProdBaseNr/text()', i_xmlnamespace). getstringval ()                          AS sku,
        extract (value (d), '//LineItemBD/StdDiscPct/text()', i_xmlnamespace). getstringval ()                          AS stddiscpct,
        extract (value (d), '//LineItemBD/BundleDesc/text()', i_xmlnamespace). getstringval ()                          AS bundledesc,
        extract (value (d), '//LineItemBD/BundleSource /text()', i_xmlnamespace). getstringval ()                       AS bundlesource ,
        extract (value (d), '//LineItemBD/BundleIndex /text()', i_xmlnamespace). getstringval ()                        AS bundleindex,
        extract (value (D), '//LineItemBD/Qty/text()', I_XMLNAMESPACE). GETSTRINGVAL ()                                 as HEADER_QTY,
        extract (value (d), '//LineItemBD/OptCD/text()', i_xmlnamespace). getstringval ()                               AS optcd,
        extract (value (d), '//LineItemBD/ConfigID/text()', i_xmlnamespace). getstringval ()                            AS configid,
        extract (value (d), '//LineItemBD/PL/text()', i_xmlnamespace). getstringval ()                                  AS pl, --Added on 23-Jan for CR 3236
        extract ( value (D), '//LineItemBD/OrderMinQty/text()', i_xmlnamespace). GETSTRINGVAL () as ORDERMINQTY, ---Added for CR 4375,
        extract (value (D), '//LineItemBD/DocNum/text()', i_xmlnamespace). GETSTRINGVAL ()                                  as BMI_DOC_NO,  -- by Harsh Shah 17-Jan-2014,
        extract (value (D), '//LineItemBD/ExtPreApprvPrice/text()', i_xmlnamespace). GETSTRINGVAL ()                        as ExtPreApprvPrice,
        extract ( value (d), '//LineItemBD/DisplayCompPrcFl/text()', i_xmlnamespace). getstringval () AS DisplayCompPrcFl,--Added for US6037 --> Show Component Level Pricing
        extract (value (D), '//LineItemBD/EclipseBundleID/text()', I_XMLNAMESPACE). GETSTRINGVAL ()                        as EclipseBundleID,
        extract ( value (d), '//LineItemBD/GuidanceAvailFl/text()', i_xmlnamespace). getstringval ()                        AS GuidanceAvailFl,--Added by Lakshmi for CR6012
        extract ( value (d), '//LineItemBD/GuidanceDetailsID/text()', i_xmlnamespace). getstringval ()                        AS GuidanceDetailsID,--Added by Lakshmi for CR6012
        extract ( value (d), '//LineItemBD/GuidanceDiscExpertPct/text()', i_xmlnamespace). getstringval ()                        AS GuidanceDiscExpertPct,--Added by Lakshmi for CR6012
        extract ( value (d), '//LineItemBD/GuidanceDiscFloorPct/text()', i_xmlnamespace). getstringval ()                        AS GuidanceDiscFloorPct,--Added by Lakshmi for CR6012
        extract ( value (d), '//LineItemBD/GuidanceDiscTypicalPct/text()', i_xmlnamespace). getstringval ()                        AS GuidanceDiscTypicalPct,--Added by Lakshmi for CR6012
        extract ( value (d), '//LineItemBD/GuidanceRefreshDateGMT/text()', i_xmlnamespace). getstringval ()                        AS GuidanceRefreshDateGMT,--Added by Lakshmi for        CR6012
        extract ( value (d), '//LineItemBD/NonDiscFl/text()', i_xmlnamespace). getstringval ()                        AS NonDiscFl
      FROM edms_deal_queue x,
        TABLE ( xmlsequence ( extract ( x.xml_data_xml, 'DealCreationRequest/Bundles/LineItemBD', i_xmlnamespace))) d
      WHERE x.deal_creation_guid =i_deal_creation_guid
      )
      where  (upper(requesttype) = 'ADD' or requesttype is null or requesttype='' OR upper(requesttype) = 'DEL_ADD') --added by harsh Shah 17-Nov-2013

*/
    --by Harsh Shah for US7832,Performance improvement
    FOR recbd IN
    (

            SELECT ADDED_BY_EMP_NR AS addedbyempnr,
                   ADDED_BY_EMP_EMAIL AS addedbyempemail,
                   AUTH_BASIS_DESC AS authbasisdesc,
                   AUTH_DATE AS authdate,
                   AUTH_DATE_GMT AS authdategmt,
                   AUTH_EMP_NR AS authempnr,
                   AUTH_EMP_EMAIL AS authempemail,
                   AUTH_STAT_CD AS authstatcd,
                   BD_NET_AMT AS bdnetamt,
                   COST_PRICE AS costprice,
                   LIST_PRICE AS listprice,
                   PRICING_TYPE_CD AS pricingtypecd,
                   PROD_DESC AS proddesc,
                   REQUEST_TYPE AS requesttype,
                   ROLLOUT_MONTH_QTY AS rolloutmonthqtys,
                   SKU AS sku,
                   STD_DISC_PCT AS stddiscpct,
                   BUNDLE_DESC AS bundledesc,
                   BUNDLE_SOURCE AS bundlesource,
                   BUNDLE_INDEX AS bundleindex,
                   HEADER_QTY AS header_qty,
                   OPT_CD AS optcd,
                   CONFIG_ID AS CONFIGID,
                   PROD_LINE_CD AS pl,
                   ORD_MIN_QTY AS ORDERMINQTY,
                   BMI_DOC_NO AS BMI_DOC_NO,
                   EXT_PRE_APPRV_PRICE AS ExtPreApprvPrice,
                   DISPLAY_COMP_PRC_FL AS DisplayCompPrcFl,
                   ECLIPSE_BUNDLE_ID AS EclipseBundleID,
                   GUIDANCE_AVAIL_FL AS GuidanceAvailFl,
                   GUIDANCE_DETAEILS_ID AS GuidanceDetailsID,
                   GUIDANCE_DISC_EXPERT_PCT AS GuidanceDiscExpertPct,
                   GUIDANCE_DISC_FLOOR_PCT AS GuidanceDiscFloorPct,
                   GUIDANCE_DISC_TYPICAL_PCT AS GuidanceDiscTypicalPct,
                   GUIDANCE_REFRESHE_DATE_GMT AS GuidanceRefreshDateGMT,
                   NO_DISC_FL AS NonDiscFl
              ,INSTANT_PRC_METHOD As instantprcmethod
              ,Instant_prc_amt As Instantprcamt
              ,CONTRA_AMT As contraamt
              , USE_EXT_LIST_PRICE AS UseExternalListPriceFl
              FROM ECLIPSE.GT_XML_BUNDLE
             WHERE GUID = i_deal_creation_guid
                   AND (   UPPER (REQUEST_TYPE) = 'ADD'
                        OR REQUEST_TYPE IS NULL
                        OR REQUEST_TYPE = ''
                        OR UPPER (REQUEST_TYPE) = 'DEL_ADD')

    )
    LOOP

    select NVL(max(line_nr),0)  into l_bundle_line_nr FROM line_item WHERE BD_ID=i_bd_id; -- Moved this to inside LOOP to fix the CR258615  --Mani in June 2016 release

            --by harsh shah 17-jan-2014
            --dbms_output.PUT_LINE ('BMI DOC No for Bundle Lines  : ' || recbd.bmi_doc_no );

          ---Added for eprime/BMI deal creation
      IF recbd.addedbyempnr IS NULL AND recbd.addedbyempemail IS NOT NULL THEN
        recbd.addedbyempnr  :=get_emp_nr(recbd.addedbyempemail);
      END IF;

      IF recbd.authempnr IS NULL AND recbd.authempemail IS NOT NULL THEN
        recbd.authempnr  :=get_emp_nr(recbd.authempemail);
      END IF;
      IF (lower(i_dealsourcecd)='eprime' AND i_dealvertocreate = 0) THEN --aded to not authorise if eprime deal version to be created is 0
        recbd.AuthBasisDesc   :=NULL;
        recbd.AuthDate        :=NULL;
        recbd.AuthDateGMT     :=NULL;
        recbd.authempnr       :=NULL;
        recbd.authempemail    :=NULL;
        recbd.AuthStatCD      :='N';
      END IF;
      --added below condition as BMI takes the deal creator as line added by employee if null generic BMI employee
      IF lower(i_dealsourcecd)  IN ( 'bmi' , 'ngq', 'sts') AND recbd.addedbyempnr IS NULL THEN
        recbd.addedbyempnr    :=i_deal_creator_emp_nr;
      END IF;
      ---added as eprime is not going to send the order min qty and this will be default to 1
      IF recbd.orderminqty IS NULL THEN
        recbd.orderminqty  :=1 ;
      END IF;
      --check if added by employee No exists and it's a valid eclipse user

      l_errors              :='Bundle Header SKU : ' || recbd.sku || ' OptCode : ' || recbd.OptCd || ' Bundle Source ' || recbd.bundlesource || ' Config : ' || RECBD.CONFIGID || ' Bundle Index ' || recbd.bundleindex;

      IF recbd.addedbyempnr IS NULL THEN
        l_errors            :='Added by Employee No is not provided for ' || l_errors;
        l_msg_type          :='ERROR';
        raise REJECT_BUNDLE;
      END IF;

            --check if rollout months qty exists
      IF (ltrim(rtrim(recbd.rolloutmonthqtys))) IS NULL AND (i_dealsourcecd NOT IN ( 'BMI','NGQ','STS')) THEN
        l_errors                                :='Rollout Month Qtys is empty For ' || l_errors;
        l_msg_type                              :='ERROR';
        raise REJECT_BUNDLE;
      END IF;

      IF (lower(i_dealsourcecd)               NOT IN ('bmi','ngq','sts')) THEN
        IF (is_user_exists(recbd.addedbyempnr
        ,NULL --Added for US-9408 --> Encore Retirement  
        ) ='N') THEN
          l_errors                            :='Invalid Employee No ' || recbd.addedbyempnr || ' or Employee is not a valid Eclipse User, For  ' || l_errors;
          l_msg_type                          :='ERROR';
          raise REJECT_BUNDLE;
        END IF;
      END IF;
      --l_errors:=null;
      --Check if auth basis description is null
      --IF (i_dealsourcedealtype                 <>Con_HIGH_TOUCH_DEALTYPE_DESC AND i_dealapprfl='Y') THEN
      IF ( i_dealapprfl='Y') THEN
        IF recbd.authstatcd                     ='Y' THEN
          IF LTRIM(RTRIM(recbd.authbasisdesc)) IS NULL THEN
            L_ERRORS                           :='Auth Basis Description is empty for the ' || l_errors;
            l_msg_type                         :='ERROR';
            raise REJECT_BUNDLE;
          elsif ltrim(rtrim(recbd.authempnr)) IS NULL THEN
            L_ERRORS                          :='Auth Emp Nr is empty for the ' || l_errors;
            l_msg_type                        :='ERROR';
            raise REJECT_BUNDLE;
          elsif is_user_exists(recbd.authempnr
          ,i_dealsourcecd --Added for US-9408 --> Encore Retirement  
          ) ='N' THEN
            L_ERRORS                           :='Invalied Auth Emp Nr : ' || recbd.authempnr || ' for the ' || l_errors;
            l_msg_type                         :='ERROR';
            raise REJECT_BUNDLE;
          END IF;
        END IF;
      END IF;


      --add the below conditions for eprime as eprime can authorise a product even if it is a high_touch deal
      --Not required for BMI deals
      /*
      IF (lower(I_DEALSOURCECD)                 ='eprime' AND I_dealsourcedealtype = CON_HIGH_TOUCH_DEALTYPE_DESC ) THEN
        IF recbd.authstatcd                     ='Y' THEN
          IF LTRIM(RTRIM(recbd.authbasisdesc)) IS NULL THEN
            L_ERRORS                           :='Auth Basis Description is empty for the ' || l_errors;
            l_msg_type                         :='ERROR';
            raise REJECT_BUNDLE;
          elsif ltrim(rtrim(recbd.authempnr)) IS NULL THEN
            L_ERRORS                          :='Auth Emp Nr is empty for the ' || l_errors;
            l_msg_type                        :='ERROR';
            raise REJECT_BUNDLE;
          elsif is_user_exists(recbd.authempnr) ='N' THEN
            L_ERRORS                           :='Invalied Auth Emp Nr : ' || recbd.authempnr || ' for the ' || l_errors;
            l_msg_type                         :='ERROR';
            raise REJECT_BUNDLE;
          END IF;
        END IF;
      END IF;---end of new condition for ePrime--
      */

      L_AUTH_DATE_GMT       :=NULL;
      IF (RECBD.AUTHDATEGMT IS NOT NULL OR RECBD.AUTHDATEGMT<>'') THEN
        L_AUTH_DATE_GMT     :=TO_TIMESTAMP (SUBSTR(RECBD.AUTHDATEGMT,1,19),'YYYY-MM-DD"T"HH24:MI:SS');
      ELSE
        L_AUTH_DATE_GMT:=NULL;
      END IF;
      L_AUTH_MC_DATE:=NULL;
      --Get Auth MC date from XML and convert it to oracle date time format
      IF (RECBD.AUTHDATE IS NOT NULL OR RECBD.AUTHDATE<>'') THEN
        L_AUTH_MC_DATE   :=TO_TIMESTAMP (SUBSTR(RECBD.AUTHDATE,1,19),'YYYY-MM-DD"T"HH24:MI:SS');
      ELSE
        L_AUTH_MC_DATE:=NULL;
      END IF;
      ----dbms_output.PUT_LINE (' converted to date auth date gmt ' || L_AUTH_DATE_GMT );
      --generate bundle config.
      IF recbd.bundlesource=con_bundle_source_watson THEN
        l_bundle_config   :=recbd.configid;
        --dbms_output.put_line ('watson config id: ' || l_bundle_config);
      ELSIF recbd.bundlesource = con_bundle_source_ezconfig OR recbd.bundlesource=con_bundle_source_ecfix OR recbd.bundlesource= con_bundle_source_ecband THEN---condition added for ePrime
        l_bundle_config       :=recbd.configid;
        --TODO: New logic to reside here


        -- recbd.bundlesource ='EC-FIX';
      elsif recbd.bundlesource=con_bundle_source_soft OR recbd.bundlesource=con_bundle_source_ngce OR recbd.bundlesource=con_bundle_source_ngce_fix THEN --If  bundle source is ngce or soft thenn bundle config need to be created
      --TODO: config changes
          if (LENGTH(RECBD.CONFIGID)>8 OR (RECBD.CONFIGID IS NULL AND UPPER (RECBD.REQUESTTYPE) = 'ADD') )THEN --Added the condition to check if Config is NULL for ADD request for:TechDirect Request 3295714

                  IF UPPER(recbd.requesttype) ='DEL_ADD' THEN

                        l_bundle_config := recbd.EclipseBundleID;
                        l_source_config_id := recbd.configid;

                    ELSE
                  SELECT seq_ca_config_id.nextval
                  INTO l_bundle_config
                  FROM dual;
                  l_source_config_id:=RECBD.CONFIGID;
                  END IF;

          elsif  LENGTH(RECBD.CONFIGID)<=8 then
                   l_bundle_config:=RECBD.CONFIGID;
                   l_source_config_id:=l_bundle_config;
        END IF;
      ELSE
        l_bundle_config:=NULL;
        --Pending implementation -- exit if bundle source is other tahn watson/soft (only if required)
      END IF;

      --dbms_output.put_line (' New Bundle Config ID : '|| l_bundle_config);

      l_bundle_line_nr:=l_bundle_line_nr+1;

      --dbms_output.put_line ('Adding first Bundle ' || l_bundle_line_nr );

      --dbms_output.put_line (' recbd.sku ' || recbd.sku || ' Bundle Index ' || recbd.bundleindex || ' Bundle Header Line ' || l_bundle_line_nr);

      --*********************
      --Looping through bundle Header
      --*********************
      --Get the bundle Header SKU Auth BD Net amount from the BundleLines XMl Element

      l_HDR_PROD_STD_DISC:=0;

      --Modified byHarsh Shah 18-Oct-2013
      -- added l_xml_path_to_Query in order to generalize the changes with BMIs modified XQuery Path.
      l_xml_path_to_Query:='DealCreationRequest/Bundles/LineItemBD/BundleLines/BundleLine';

      --GET_BD_HDR_AUTH_LIST_AMT( l_xml_path_to_Query,i_DEAL_CREATION_GUID , i_xmlnamespace, RECBD.BUNDLEINDEX, RECBD.BUNDLESOURCE, RECBD.SKU, L_BD_HDR_SKU_LIST_PRICE ,

      --L_AUTH_BDNET_AMT,L_BD_HDR_SKU_QTY,L_HDR_BD_SKU_OPT_CD,L_PROD_COST_PRICE_HDR_PROD,L_HDR_PROD_STD_DISC, l_line_AuthBasisDesc,l_line_AuthStat,l_line_AuthDtGMT);
        begin
          select nvl(list_price,0),nvl(BD_NET_AMT,0),nvl(qty,0),opt_cd,COST_PRICE,STD_DISC_PCT,AUTH_BASIS_DESC,nvl(AUTH_STAT_CD,'N'),AUTH_DATE_GMT
       INTO  L_BD_HDR_SKU_LIST_PRICE , L_AUTH_BDNET_AMT,L_BD_HDR_SKU_QTY,L_HDR_BD_SKU_OPT_CD,L_PROD_COST_PRICE_HDR_PROD,L_HDR_PROD_STD_DISC, l_line_AuthBasisDesc,l_line_AuthStat,l_line_AuthDtGMT_Char
         from gt_xml_bundle_line where guid =i_DEAL_CREATION_GUID and parent_index=RECBD.BUNDLEINDEX and bundle_line_source=RECBD.BUNDLESOURCE and sku=RECBD.SKU and rownum<2;

          IF (l_line_AuthDtGMT_Char IS NOT NULL OR l_line_AuthDtGMT_Char<>'') THEN
              l_line_AuthDtGMT              :=TO_TIMESTAMP (SUBSTR(l_line_AuthDtGMT_Char,1,19),'YYYY-MM-DD"T"HH24:MI:SS');
          ELSE
               l_line_AuthDtGMT:=NULL;
          END IF;
      exception
      when others then
      dbms_output.put_line('Error om get_bd_hdr_....    '||DBMS_UTILITY.FORMAT_ERROR_BACKTRACE()||' error    :'||sqlerrm);
       --L_MSG_TYPE:='WARNING';
       L_MSG_TYPE:='ERROR';
       l_errors  :='Error in get bundle header auth list amt   '||recbd.sku||'---'||substr(sqlerrm,1,200);
       RAISE;
       --RAISE bundle_header_error;
      --dbms_output.put_line (l_errors);
          --inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr, l_deal_prog_cd,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code, l_high_risk_fl,l_risk_reasion_desc,l_risk_desc,l_errors,l_msg_type, l_deal_creation_guid,NULL,NULL,NULL);
      --    inserterror_output_messages (I_BD_ID,I_bd_nr,I_bd_version_nr, NULL ,NULL,NULL,NULL, NULL, NULL,NULL,l_errors,L_MSG_TYPE, I_deal_creation_guid, NULL,NULL,NULL);
      end;

      ----dbms_output.put_line ('Add Bundle Header ..before insert : Create New Version : ' || l_createnewversion );

      -- Need a change here modify the CR 69127

--Changes made by Lakshmi on 9/19/2014 for CR:156213 Update of bundles fail when the config ID are same for UPDATE and DEL_ADD requests

--need to check with LAKSHMI
      IF UPPER(recbd.requesttype)='DEL_ADD' THEN
        BEGIN
        FOR delete_bundles IN (SELECT bl.line_nr FROM bundle bl, line_item li
                                WHERE bl.bd_id = I_BD_ID
                                AND config_id = RECBD.EclipseBundleID
                                AND config_src = recbd.bundlesource
                                AND bl.bd_id=li.bd_id
                                AND bl.line_nr=li.line_nr
                                --AND li.bmi_doc_no=recbd.bmi_doc_no --commented BY Harsh Shah 29-jan-2015,CR - 185716
                                and li.line_type_cd='BD' --BY Harsh Shah 29-jan-2015,CR - 185716
                                AND (li.SRC_BUNDLE_DESC_TX=recbd.BundleDesc OR li.src_bundle_desc_Tx IS NULL)--BY Harsh Shah 29-jan-2015,CR - 185716
                                )
        LOOP
        DELETE FROM bundle WHERE bd_id=I_BD_ID AND line_nr=delete_bundles.line_nr;
        DELETE FROM bundle_line WHERE bd_id=i_bd_id AND line_nr=delete_bundles.line_nr;
        DELETE FROM bundle_line_guidance WHERE bd_id=i_bd_id AND line_nr=delete_bundles.line_nr;  -- By Mani -- Baseline in Sep -- Added to sync the Bundle line & Guidance tables
        DELETE FROM line_item WHERE bd_id=i_bd_id AND line_type_cd='BD' AND line_Nr=delete_bundles.line_nr;
        l_bundle_line_nr := delete_bundles.line_nr;
        END LOOP;
        EXCEPTION
        WHEN OTHERS THEN
        l_errors := 'Could not delete bundles for the source deal: '||I_bd_nr||' version: '||I_bd_version_nr||' Bd_id: '||I_BD_ID;
        inserterror_output_messages (I_BD_ID,I_bd_nr,I_bd_version_nr, NULL ,NULL,NULL,NULL, NULL, NULL,NULL,l_errors,'ERROR', I_deal_creation_guid, NULL,NULL,l_errors);
        END;
       END IF;


      BMI_insert_prod_line (
          I_BD_ID, I_bd_nr, I_bd_version_nr, recbd.authstatcd, NULL, NULL, NULL, NULL, NULL, NULL, NULL, i_deal_creation_guid, i_country_cd,
      i_price_list_cd, i_currency_cd, i_price_term_cd, recbd.sku, 'N',
      I_hierarchy_cd, I_deal_end_date,'BD', recbd.listprice, recbd.authbasisdesc, recbd.header_qty, recbd.bdnetamt, recbd.authempnr,
      l_auth_generic_emp_nr,recbd.addedbyempnr, recbd.pricingtypecd, l_bundle_line_nr, I_deal_begin_date , 'Y','Y',
      recbd.bundlesource, l_bundle_config, l_source_config_id, l_hdr_prod_std_disc, l_bundle_line_nr,recbd.authstatcd, l_hdr_bd_sku_opt_cd,recbd.rolloutmonthqtys,
      l_auth_date_gmt,l_auth_mc_date,i_dealsourcedealtype,
      l_bd_hdr_sku_qty,recbd.bundledesc,recbd.pl,l_auth_bdnet_amt,recbd.costprice,
      l_prod_cost_price_hdr_prod,i_busmodelcd,recbd.orderminqty,l_line_auth_type, l_line_AuthBasisDesc,l_line_AuthStat,l_line_AuthDtGMT, l_create_new_version ,'N',
      recbd.bmi_doc_no,recbd.proddesc, L_EXT_PRE_APPRV_PRC_AM,recbd.listprice,recbd.bdnetamt, recbd.DisplayCompPrcFl,
        recbd.GuidanceAvailFl,recbd.GuidanceDetailsID,recbd.GuidanceDiscExpertPct,recbd.GuidanceDiscFloorPct,
        recbd.GuidanceDiscTypicalPct,recbd.GuidanceRefreshDateGMT, recbd.nondiscfl
        ,recbd.instantprcmethod,recbd.Instantprcamt,recbd.contraamt  ----added for US 7301
        ,recbd.UseExternalListPriceFl
        );


 /*update_bundle_line_prices(
        recbd.bundleindex,
        recbd.bundlesource,
        I_BD_ID,
        l_bundle_line_nr,
        i_deal_creation_guid,
        recbd.stddiscpct,
        recbd.authdategmt,
        recbd.authempnr
        );
        */

    --dbms_output.put_line ('Add Bundle Header ..done');

      ----dbms_output.put_line ('Add Bundle Header ..after insert prod line : Create New Version : ' || l_createnewversion );

      /*
      IF (l_createnewversion IS NULL OR l_createnewversion='N' ) THEN
        l_errors             := 'Unable to proceed with deal creation as there are error while adding bundles. Check bundle Config  : ' || l_bundle_config || ', Bundle Desc :' || recbd.bundledesc || ',Bundle Source : ' || recbd.bundlesource || ', Bundle Line : ' || l_bundle_line_nr ;
        l_msg_type           :='ERROR';
        raise REJECT_BUNDLE_bundles;
      END IF;
      */

      l_auth_bdnet_amt:=NULL;
      --L_EXT_PRE_APPRV_PRC_AM := NULL;
      --Increasing bundle detail line nr.. as it already inserted  by the above code.
      -- l_bundle_dtl_line_nr:=1;
      --*************************************
      --Looping through Bundle Line
      -- inserting bundle line
      --*************************************

      /*
      ----by Harsh Shah for US7832,Performance improvement 30-jan-2015

      SELECT        *
      FROM
        (SELECT EXTRACT ( VALUE (D), '//AuthBasisDesc/text()', I_XMLNAMESPACE). GETSTRINGVAL ()         AS AUTHBASISDESC,
          extract ( value (d), '//AuthDate/text()', i_xmlnamespace). getstringval ()                    AS authdate,
          extract ( value (d), '//AuthDateGMT/text()', i_xmlnamespace). getstringval ()                 AS authdategmt,
          extract ( value (d), '//AuthHPEmployee/EmployeeNr/text()', i_xmlnamespace). getstringval ()   AS authempnr,    ---emp nr change as per new xml
          extract ( value (d), '//AuthHPEmployee/EmailAddress/text()', i_xmlnamespace). getstringval () AS authempemail, ---emp nr change as per new xml
          extract ( value (d), '//AuthStatCD/text()', i_xmlnamespace). getstringval ()                  AS authstatcd,
          extract ( value (d), '//BDNetAmt/text()', i_xmlnamespace). getstringval ()                    AS bdnetamt,
          extract ( value (D), '//ListPrice/text()', i_xmlnamespace). GETSTRINGVAL ()                   AS LISTPRICE,
          extract ( value (d), '//PL/text()', i_xmlnamespace). getstringval ()                          AS pl,
          extract ( value (d), '//ProdDesc/text()', i_xmlnamespace). getstringval ()                    AS proddesc,
          extract ( value (d), '//Qty/text()', i_xmlnamespace). getstringval ()                         AS qty,
          extract ( value (d), '//ProdBaseNr/text()', i_xmlnamespace). getstringval ()                  AS sku,
          extract ( value (d), '//StdDiscPct/text()', i_xmlnamespace). getstringval ()                  AS stddiscpct,
          extract ( value (d), '//ParentIndex/text()', i_xmlnamespace). getstringval ()                 AS parentindex,
          extract ( value (d), '//BundleSource/text()', i_xmlnamespace). getstringval ()                AS bundleline_source,
          extract (value (D), '//OptCD/text()', i_xmlnamespace). GETSTRINGVAL ()                        AS OPTCD,
          extract (value (d), '//CostPrice/text()', i_xmlnamespace). getstringval ()                    AS CostPrice,
          extract (value (d), '//BandedFl/text()', i_xmlnamespace). getstringval ()                     AS BandedFl ,
         extract (value (d), '//ExtLineItemNr/text()', i_xmlnamespace).getstringval()                   AS ExtLineItemNr ,
        extract (value (d), '//ExtPreApprvPrice/text()',i_xmlnamespace).getstringval()              AS ExtPreApprvPrice,
        extract ( value (d), '//GuidanceAvailFl/text()', i_xmlnamespace). getstringval ()             AS GuidanceAvailFl,--Added by Lakshmi for CR6012
        extract ( value (d), '//GuidanceDetailsID/text()', i_xmlnamespace). getstringval ()           AS GuidanceDetailsID,--Added by Lakshmi for CR6012
        extract ( value (d), '//GuidanceDiscExpertPct/text()', i_xmlnamespace). getstringval ()       AS GuidanceDiscExpertPct,--Added by Lakshmi for CR6012
        extract ( value (d), '//GuidanceDiscFloorPct/text()', i_xmlnamespace). getstringval ()        AS GuidanceDiscFloorPct,--Added by Lakshmi for CR6012
        extract ( value (d), '//GuidanceDiscTypicalPct/text()', i_xmlnamespace). getstringval ()      AS GuidanceDiscTypicalPct,--Added by Lakshmi for CR6012
        extract ( value (d), '//GuidanceRefreshDateGMT/text()', i_xmlnamespace). getstringval ()      AS GuidanceRefreshDateGMT, --Added by Lakshmi for CR6012
        extract ( value (d), '//NonDiscFl/text()', i_xmlnamespace). getstringval ()                        AS NonDiscFl
        FROM edms_deal_queue x,
          TABLE ( xmlsequence ( extract ( x.xml_data_xml, 'DealCreationRequest/Bundles/LineItemBD/BundleLines/BundleLine', i_xmlnamespace))) d
        WHERE x.deal_creation_guid =i_deal_creation_guid
        )
      WHERE parentindex                                         =recbd.bundleindex
      AND BUNDLELINE_SOURCE                                     =RECBD.BUNDLESOURCE
      AND (LTRIM(RTRIM(SKU)),DECODE(OPTCD,NULL,' ',OPTCD)) NOT IN
        (SELECT LTRIM(RTRIM(PROD_GNRC_NR_TX)),
          DECODE(PROD_OPT_CD,NULL,' ',PROD_OPT_CD)
        FROM BUNDLE_LINE BL
        WHERE BL.BD_ID=I_BD_ID
        AND LINE_NR   =L_BUNDLE_LINE_NR
        )
      */
      FOR recbdline IN
      (
            SELECT GUID,
                   AUTH_BASIS_DESC AS AUTHBASISDESC,
                   AUTH_DATE AS authdate,
                   AUTH_DATE_GMT AS authdategmt,
                   AUTH_EMP_NR AS authempnr,
                   AUTH_EMP_EMAIL AS authempemail,
                   AUTH_STAT_CD AS authstatcd,
                   BD_NET_AMT AS bdnetamt,
                   LIST_PRICE AS LISTPRICE,
                   PROD_LINE_CD AS pl,
                   PROD_DESC AS proddesc,
                   QTY AS qty,
                   SKU AS sku,
                   STD_DISC_PCT AS stddiscpct,
                   PARENT_INDEX AS parentindex,
                   BUNDLE_LINE_SOURCE AS bundleline_source,
                   OPT_CD AS OPTCD,
                   COST_PRICE AS CostPrice,
                   BANDED_FL AS bandedfl,
                   TO_NUMBER(nvl(EXT_LINE_ITEM_NR,0)) AS ExtLineItemNr,
                   EXT_PRE_APPRV_PRICE AS ExtPreApprvPrice,
                   GUIDANCE_AVAIL_FL AS GuidanceAvailFl,
                   GUIDANCE_DETAILS_ID AS GuidanceDetailsID,
                   GUIDANCE_DISC_EXPERT_PCT AS GuidanceDiscExpertPct,
                   GUIDANCE_DISC_FLOOR_PCT AS GuidanceDiscFloorPct,
                   GUIDANCE_TYPICAL_PCT AS GuidanceDiscTypicalPct,
                   GUIDANCE_REFRESH_DATE_GMT AS GuidanceRefreshDateGMT,
                   NON_DISC_FL AS NonDiscFl
               ,INSTANT_PRC_METHOD AS InstantPrcMethod---Added for US 7301
              ,INSTANT_PRC_AMT AS InstantPrcAmt---Added for US 7301
              ,CONTRA_AMT AS ContraAmt---Added for US 7301
              , USE_EXT_LIST_PRICE AS UseExternalListPriceFl
              FROM ECLIPSE.GT_XML_BUNDLE_Line
             WHERE
                        GUID =i_deal_creation_guid
                    AND PARENT_INDEX = recbd.bundleindex
                    AND BUNDLE_LINE_SOURCE =RECBD.BUNDLESOURCE
                        AND (LTRIM(RTRIM(SKU)),DECODE(OPT_CD,NULL,' ',OPT_CD)) NOT IN
                                (SELECT LTRIM(RTRIM(PROD_GNRC_NR_TX)),
                                  DECODE(PROD_OPT_CD,NULL,' ',PROD_OPT_CD)
                                FROM BUNDLE_LINE BL
                                WHERE BL.BD_ID=I_BD_ID
                                AND LINE_NR   =L_BUNDLE_LINE_NR
                  )
                  order by ExtLineItemNr --4-mar-2015 by Harsh Shah - CR 202569-[Channel_PST][US-7832]The products sequence in eclipse is not consistent with BMI page
          )
      LOOP
        ---Added for eprime/BMI deal creation
        IF recbdline.authempnr IS NULL AND recbdline.authempemail IS NOT NULL THEN
          recbdline.authempnr  :=get_emp_nr(recbdline.authempemail);
        END IF;
        IF (lower(i_dealsourcecd) ='eprime' AND i_dealvertocreate = 0) THEN --aded to not authorise if eprime deal version to be created is 0
          recbdline.AuthBasisDesc:=NULL;
          recbdline.AuthDate     :=NULL;
          recbdline.AuthDateGMT  :=NULL;
          recbdline.authempnr    :=NULL;
          recbdline.authempemail :=NULL;
          recbdline.AuthStatCD   :='N';
        END IF;

        --l_bundle_dtl_line_nr:=l_bundle_dtl_line_nr+1;

        --Changes made by Lakshmi as part of eRFC for ExtLineItemNr
        new_l_bundle_dtl_line_nr := new_l_bundle_dtl_line_nr +1;

         --Changes made by Lakshmi as part of eRFC for ExtLineItemNr
        IF recbdline.ExtLineItemNr is NULL THEN
                l_bundle_dtl_line_nr:=new_l_bundle_dtl_line_nr;
        ELSE
                l_bundle_dtl_line_nr := recbdline.ExtLineItemNr;
        END IF;


        --dbms_output.put_line(' Bundle Line Details  Start ');
        --dbms_output.put_line (' bundle line for the parent Index ' || recbd.bundleindex);
        --dbms_output.put_line(' Bundle Line detail line :' || l_bundle_dtl_line_nr);
        --dbms_output.put_line('SKU: ' ||recbdline.sku);
        --dbms_output.put_line('StdDiscPct: ' ||recbdline.stddiscpct);
        --dbms_output.PUT_LINE('BundleLine_Source ' || RECBDLINE.BUNDLELINE_SOURCE);
        --dbms_output.put_line (' bundle line authbasisdesc ' || recbdline.authbasisdesc);
        --dbms_output.put_line(' Bundle Line Details  End');
        --dbms_output.PUT_LINE (' bundle line auth date gmt ' || RECBDLINE.AUTHDATEGMT);
        l_errors:='Bundle Line Detail SKU : ' || recbdline.sku || ' OptCode : ' || recbdline.OptCd || ' Bundle Source ' || recbd.bundlesource || ' Config : ' || RECBD.CONFIGID || ' Bundle Parent Index ' || recbdline.ParentIndex;
        --Check if auth basis description is null
        IF (i_dealsourcedealtype    <>Con_HIGH_TOUCH_DEALTYPE_DESC AND i_dealapprfl='Y') THEN
          IF ( recbdline.authstatcd <>'Y' AND recbdline.authstatcd <>'N' )THEN
            L_ERRORS                :='Invalid value for Auth Stat Code : ' || recbdline.authstatcd || ' for ' || l_errors;
            l_msg_type              :='ERROR';
            raise REJECT_BUNDLE;
          END IF;
          IF recbdline.authstatcd                     ='Y' THEN
            IF LTRIM(RTRIM(recbdline.authbasisdesc)) IS NULL THEN
              L_ERRORS                               :='Auth Basis Description is empty for the ' || l_errors;
              l_msg_type                             :='ERROR';

              raise REJECT_BUNDLE;
            elsif ltrim(rtrim(recbdline.authempnr)) IS NULL THEN
              L_ERRORS                              :='Auth Emp Nr is empty for the ' || l_errors;
              l_msg_type                            :='ERROR';
              raise REJECT_BUNDLE;
            elsif is_user_exists(recbdline.authempnr
            ,i_dealsourcecd --Added for US-9408 --> Encore Retirement  
            ) ='N' THEN
              L_ERRORS                               :='Invalied Auth Emp Nr : ' || recbd.authempnr || ' for the ' || l_errors;
              l_msg_type                             :='ERROR';
              raise REJECT_BUNDLE;
            END IF;
          END IF;
        END IF;
        --add the below conditions for eprime as eprime can authorise a product even if it is a high_touch deal
        IF (lower(i_DEALSOURCECD)                 ='eprime' AND i_dealsourcedealtype = Con_HIGH_TOUCH_DEALTYPE_DESC ) THEN
          IF recbd.authstatcd                     ='Y' THEN
            IF LTRIM(RTRIM(recbd.authbasisdesc)) IS NULL THEN
              L_ERRORS                           :='Auth Basis Description is empty for the ' || l_errors;
              l_msg_type                         :='ERROR';
              raise REJECT_BUNDLE;
            elsif ltrim(rtrim(recbd.authempnr)) IS NULL THEN
              L_ERRORS                          :='Auth Emp Nr is empty for the ' || l_errors;
              l_msg_type                        :='ERROR';
              raise REJECT_BUNDLE;
            elsif is_user_exists(recbd.authempnr
            ,i_dealsourcecd --Added for US-9408 --> Encore Retirement  
            ) ='N' THEN
              L_ERRORS                           :='Invalied Auth Emp Nr : ' || recbd.authempnr || ' for the ' || l_errors;
              l_msg_type                         :='ERROR';
              raise REJECT_BUNDLE;
            END IF;
          END IF;
        END IF;---end of new condition for ePrime--
        L_AUTH_DATE_GMT           :=NULL;
        IF (RECBDLINE.AUTHDATEGMT IS NOT NULL OR RECBDLINE.AUTHDATEGMT<>'') THEN
          L_AUTH_DATE_GMT         :=TO_TIMESTAMP ( SUBSTR(RECBDLINE.AUTHDATEGMT,1,19),'YYYY-MM-DD"T"HH24:MI:SS');
        ELSE
          L_AUTH_DATE_GMT:=NULL;
        END IF;
        L_AUTH_MC_DATE:=NULL;
        --Get Auth MC date from XML and convert it to oracle date time format
        IF (RECBDLINE.AUTHDATE IS NOT NULL OR RECBDLINE.AUTHDATE<>'') THEN
          L_AUTH_MC_DATE       :=TO_TIMESTAMP ( SUBSTR(RECBDLINE.AUTHDATE,1,19),'YYYY-MM-DD"T"HH24:MI:SS');
        ELSE
          L_AUTH_MC_DATE:=NULL;
        END IF;
        --dbms_output.PUT_LINE (' converted to date auth date gmt for bundle line ' || L_AUTH_DATE_GMT );
        --insert bundle line details
        --insert bundle lines
        /*
        BD_ID
        LINE_NR
        DISC_BNDRY_ID
        SCALE_ID
        ITEM_NR
        */
        L_AUTH_BDNET_AMT          :=NULL;
        --L_EXT_PRE_APPRV_PRC_AM := NULL;
        L_PROD_COST_PRICE_HDR_PROD:=0;
        --add bundle line
        --  --dbms_output.PUT_LINE (' bundle line auth bd_net amount ' || RECBDLINE.BDNETAMT);
        --Insert prod line data (line_item,bundle_line,line_disc_scale table)
        /*
        i_bd_id                   NUMBER,
        i_bd_nr                   NUMBER,
        i_bd_version_nr           NUMBER,
        i_line_prog_cd            VARCHAR2,
        i_deal_prog_cd            VARCHAR2,
        i_bdme_aprvl_cd           VARCHAR2,
        i_quote_dist_cd           VARCHAR2,
        i_euv_stat_code           VARCHAR2,
        i_high_risk_fl            VARCHAR2,
        i_risk_reasion_desc       VARCHAR2,
        i_risk_desc               VARCHAR2,
        i_deal_creation_guid      VARCHAR2,
        i_countrycd               VARCHAR2,
        i_pricelistcd             VARCHAR2,
        i_currencycd              VARCHAR2,
        i_pricetermcd             VARCHAR2,
        i_prod_string             VARCHAR2,
        i_globai_fl               VARCHAR2,
        i_hierarchy_cd            VARCHAR2,
        i_enddate                 VARCHAR2,
        i_line_type_cd            VARCHAR2,
        i_prod_list_price         NUMBER,
        i_prod_auth_basis_text    VARCHAR2,
        i_prod_qty                NUMBER,
        i_bdnetamt                NUMBER,
        i_auth_emp_nr             NUMBER,
        i_auth_mc_hp_emp_nr       NUMBER,
        i_line_added_by_emp_nr    NUMBER,
        i_pricingtypecd           VARCHAR2,
        i_line_nr                 NUMBER,
        i_begindate               VARCHAR2,
        i_add_bundles             VARCHAR2,
        i_add_bundleheader        VARCHAR2,
        i_config_src              VARCHAR2,
        i_config_id               NUMBER,
        i_stddiscpct              NUMBER,
        i_line_item_nr_for_bundle NUMBER,
        i_auth_stat_cd varchar2      ,
        i_opt_cd varchar
        */
        --dbms_output.put_line (' Bundle Line  auth status code '|| recbdline.authstatcd || ' auth date gmt ' || recbdline.authdategmt);
        --if deal is high touch deal then auth bdnet amount should be null
        l_auth_bdnet_amt:=NULL;
        --L_EXT_PRE_APPRV_PRC_AM := NULL;
        /*if (l_dealsourcedealtype<>c_high_touch_dealtype_desc ) THEN
        l_auth_bdnet_amt:=RECBDLINE.BDNETAMT;
        else
        l_auth_bdnet_amt:=null;
        end if;
        */
        --bundle desc is not required for Bundle Lines. It is only for the bundle Header Level.
        L_HDR_PROD_STD_DISC:=0; --initializing to zero as we don't need this for bundle line. Bundle line has got std disc values in XML
        --dbms_output.PUT_LINE (' bundle line std disc : ' || RECBDLINE.STDDISCPCT || ' bundle line No : ' || L_BUNDLE_DTL_LINE_NR || ' Banded Flag : ' || recbdline.bandedfl);

        BMI_INSERT_PROD_LINE ( I_BD_ID, I_BD_NR,I_BD_VERSION_NR, RECBDLINE.AUTHSTATCD,null,null,null, null, null, null,null, I_DEAL_CREATION_GUID, I_COUNTRY_CD,I_PRICE_LIST_CD,I_CURRENCY_CD, I_PRICE_TERM_CD, RECBDLINE.SKU,'N',I_HIERARCHY_CD,
        i_deal_end_date,'BD', RECBDLINE.LISTPRICE,RECBDLINE.AUTHBASISDESC, RECBDLINE.QTY, RECBDLINE.BDNETAMT , RECBDLINE.AUTHEMPNR, l_auth_generic_emp_nr,
        RECBD.ADDEDBYEMPNR,RECBD.PRICINGTYPECD,L_BUNDLE_DTL_LINE_NR ,i_deal_end_date,'Y','N',RECBD.BUNDLESOURCE, L_BUNDLE_CONFIG,L_SOURCE_CONFIG_ID ,
        RECBDLINE.STDDISCPCT, L_BUNDLE_LINE_NR,RECBDLINE.AUTHSTATCD,RECBDLINE.OPTCD,NULL,L_AUTH_DATE_GMT,L_AUTH_MC_DATE,i_DEALSOURCEDEALTYPE, 0,NULL,
        RECBDLINE.PL,NULL,RECBDLINE.COSTPRICE,L_PROD_COST_PRICE_HDR_PROD,i_busmodelcd,NULL,l_line_auth_type, NULL,NULL,NULL, l_create_new_version,recbdline.bandedfl,
        recbd.bmi_doc_no,recbdline.proddesc, recbdline.ExtPreApprvPrice,recbd.listprice,recbd.bdnetamt, recbd.DisplayCompPrcFl,
        recbdline.GuidanceAvailFl,recbdline.GuidanceDetailsID,recbdline.GuidanceDiscExpertPct,recbdline.GuidanceDiscFloorPct,recbdline.GuidanceDiscTypicalPct,recbdline.GuidanceRefreshDateGMT, recbdline.NonDiscFl
        ,recbdline.InstantPrcMethod ,recbdline.InstantPrcAmt  ,recbdline.ContraAmt ---Added for US 7301
        ,recbdline.UseExternalListPriceFl
        ); --Added by Ramesh on 17-Feb-2014 for R8

        l_auth_bdnet_amt:=NULL;
        --L_EXT_PRE_APPRV_PRC_AM := NULL;
      END LOOP;
      --l_bundle_dtl_line_nr:=1;
      new_l_bundle_dtl_line_nr:=0;
    end loop;
  EXCEPTION
   WHEN REJECT_BUNDLE THEN
      BEGIN
              ROLLBACK;
              --delete NOROUTE entry
              DELETE
              FROM GT_EDMS_SMQT_ERR_RESULTS
              WHERE ERROR_desc='NOROUTE' ;
              DELETE
              FROM edms_deal_error_report
              WHERE deal_creation_guid=I_deal_creation_guid
              AND ERROR_MSG           = 'NOROUTE';
      END;
    END;
END add_bundle_products;


PROCEDURE update_line_disc_scale (l_bd_id IN NUMBER,
g_deal_creation_guid IN VARCHAR2,
I_ERROR_MESSAGE OUT VARCHAR2)
IS
c_m_type_warning         VARCHAR2(10);
l_errors                VARCHAR2 (3000);
BEGIN
  --update list prices for the bundle headers


  UPDATE line_disc_scale ldsc
  SET ldsc.prod_lst_prc_am =
    (SELECT SUM(bdline.qty * bdline.list_price)
    FROM bundle_line bdline
    WHERE BDLINE.bd_id =ldsc.bd_id
    AND bdline.line_nr =ldsc.line_nr
    AND bdline.scale_id=ldsc.scale_id
    GROUP BY bdline.line_nr
    )
  WHERE ldsc.BD_ID  =l_bd_id
  AND LDSC.LINE_NR IN
    (SELECT LINE_NR FROM LINE_ITEM WHERE BD_ID=l_bd_id AND LINE_TYPE_CD='BD'
    )
  AND ldsc.scale_id =
    (SELECT MAX( NVL(ldsc_b.scale_id,0))
    FROM line_disc_scale ldsc_b
    WHERE ldsc_b.bd_id=ldsc.bd_id
    AND ldsc_b.line_nr=ldsc.line_nr
    );




      --by Harsh Shah 24 Mar 2014, to resolve the issue of 74654
  --std. discount was not getting calculated properly.
    --by Harsh Shah 24 Mar 2014, to resolve the issue of 74654
  --std. discount was not getting calculated properly.

  UPDATE line_disc_scale lds
  SET high_rslr_a_sd_pc= NVL(
    (SELECT ROUND (SUM (bl.list_price * bl.disc_as_pct * bl.qty) / SUM (bl.list_price * bl.qty) ,2)
    FROM bundle_line bl
    where bl.bd_id     =lds.bd_id
    and bl.scale_id   =lds.scale_id
    and bl.scale_id       =(select nvl(max(scale_id),0) from line_disc_scale where bd_id=lds.bd_id and line_nr=bl.line_nr and bl.line_nr=lds.line_nr)
    AND bl.line_nr     =lds.line_nr
    AND (bl.list_price >0
    and bl.qty         >0)
    GROUP BY bl.line_nr
    ),0)
  WHERE lds.line_nr IN
    ( select line_nr from line_item where bd_id=l_bd_id and line_type_cd='BD'
    )
    and lds.scale_id       =(select nvl(max(scale_id),0) from line_disc_scale where bd_id=lds.bd_id and line_nr=lds.line_nr)
  and lds.bd_id=l_bd_id;
--  DBMS_OUTPUT.PUT_LINE ('Updating std. Discount details, rows updated ' || sql%rowcount);

  --- update line_disc_scale table with rqst disc pct
  --Changes made by Lakshmi for CR:234403 --Used DECODE, to prevent "Divide by Zero" error, when prod_lst_prc_am =0
  UPDATE line_disc_scale ldsc
  SET ldsc.rqst_disc_ot_pc = ROUND( 100- ((DECODE(ldsc.prod_lst_prc_am,0,0,ldsc.rqst_bd_net_prc_am/ldsc.prod_lst_prc_am)) * 100)- NVL(ldsc.high_rslr_a_sd_pc,0), 2)
  WHERE ldsc.BD_ID         =l_bd_id
  AND LDSC.LINE_NR        IN
    (SELECT LINE_NR FROM LINE_ITEM WHERE BD_ID=l_bd_id AND LINE_TYPE_CD='BD'
    )
  AND ldsc.scale_id =
    (SELECT MAX( NVL(ldsc_b.scale_id,0))
    FROM line_disc_scale ldsc_b
    WHERE ldsc_b.bd_id=ldsc.bd_id
    AND ldsc_b.line_nr=ldsc.line_nr
    )
    and ldsc.prod_lst_prc_am >0;
 EXCEPTION
  WHEN OTHERS THEN
  L_ERRORS       := 'An error was encountered - ' || SQLCODE || ' -ERROR- ' || SQLERRM || '. Error at Line : ' || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE();
  I_ERROR_MESSAGE:='An error was encountered while updating average standard discount for bundles';
  --inserterror_output_messages ( NULL,NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, c_m_type_error, g_deal_creation_guid, NULL,NULL,I_ERROR_MESSAGE);
  inserterror_output_messages ( NULL,NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, c_m_type_warning, g_deal_creation_guid, NULL,NULL,I_ERROR_MESSAGE);

  END update_line_disc_scale;

   PROCEDURE insert_deal_pl(l_bd_id IN NUMBER,
                        l_region IN VARCHAR2,
                        g_deal_creation_guid IN VARCHAR2,
                        I_ERROR_MESSAGE OUT VARCHAR2)
            /* Created by Lakshmi.
            This procedure inserts data into deal_pl table,
                    updates list total and cost total and
                    recalculates all PL totals.
            */
IS
/*
--last modified by Harsh Shah 28-Mar-2014
--to resolve the issue 76115

Modified by Harsh Shah 6-Dec-2013

Removed the Hold and Denied line items
*/
c_m_type_warning         VARCHAR2(10);
l_errors                VARCHAR2 (3000);
BEGIN

--dbms_output.put_line (' deal pl update starts for bd id ' || l_bd_id);
INSERT
  INTO deal_pl
    (
      bd_id,
      prod_line_cd,
      pl_estmd_tot_am,
      creation_dts,
      update_dts,
      ap_region_pct,
      eu_region_pct,
      na_region_pct,
      la_region_pct,
      jp_region_pct,
      geo_change_fl,
      sales_incentive_pct,
      pl_ext_list_tot_am,
      pl_ext_cost_tot_am,
      pl_cost_avail_all_prod_fl,
      pl_est_list_tot_am,
      PL_EST_COST_TOT_AM
    )
  SELECT MAX(LI.BD_ID) bd_id,
    li.assoc_pl_cd ,
    SUM(LI.ESTMTD_QT * lds.rqst_bd_net_prc_am ) pl_estmd_tot_am,
    sysdate creation_dts,
    sysdate update_dts,
    DECODE (l_region,'AP',100,0) ap_region_pct,
    DECODE (l_region,'EU',100,0) eu_region_pct,
    DECODE (l_region,'NA',100,0) na_region_pct,
    DECODE (l_region,'LA',100,0) la_region_pct,
    DECODE (l_region,'AP',100,0) jp_region_pct,
    'N' geo_change_fl,
    NULL sales_incentive_pct,
    NULL pl_ext_list_tot_am,
    NULL pl_ext_cost_tot_am,
    'N' pl_cost_avail_all_prod_fl,
    SUM(LI.ESTMTD_QT * lds.prod_lst_prc_am ) lst_total,
    SUM(LI.ESTMTD_QT * lds.prod_cost_am ) cost_total
  FROM line_item li,
    line_disc_scale lds
  WHERE li.bd_id          =l_bd_id
  AND li.bd_id            =lds.bd_id
  AND li.line_nr          =lds.line_nr
  AND li.line_type_cd     ='PN'
  AND LI.LINE_PROG_CD NOT IN ('H','D')
  AND li.assoc_pl_cd NOT IN
    (SELECT assoc_pl FROM bundle_line WHERE bd_id=l_bd_id
    )
  AND li.assoc_pl_cd NOT IN
    (SELECT prod_line_cd FROM deal_pl WHERE bd_id=l_bd_id
    )
  GROUP BY li.assoc_pl_cd;

  --dbms_output.put_line (' Adding DEAL PL PNs 1 : ' ||sql%rowcount);
  ------------------------------------------------------------
  --INSERT INTO DEAL_PL FOR THE BUNDLE_LINE PLs --- PLs only part of bundle lines
  ------------------------------------------------------------
   INSERT
  INTO deal_pl
    (
      bd_id,
      prod_line_cd,
      pl_estmd_tot_am,
      creation_dts,
      update_dts,
      ap_region_pct,
      eu_region_pct,
      na_region_pct,
      la_region_pct,
      jp_region_pct,
      geo_change_fl,
      sales_incentive_pct,
      pl_ext_list_tot_am,
      pl_ext_cost_tot_am,
      pl_cost_avail_all_prod_fl,
      pl_est_list_tot_am,
      PL_EST_COST_TOT_AM
    )
  SELECT MAX(bl.bd_id),
    BL.ASSOC_PL ,
    SUM((BL.QTY * NVL(
    (SELECT LI.ESTMTD_QT
    FROM LINE_ITEM LI
    WHERE LI.BD_ID    =BL.BD_ID
    AND LI.ASSOC_PL_CD=BL.ASSOC_PL
    AND LI.LINE_NR    =BL.LINE_NR
    ),1) * BL.RQST_BD_NET_PRC_AM ) ) pl_estmd_tot_am,
    sysdate creation_dts,
    sysdate update_dts,
    DECODE (l_region,'AP',100,0) ap_region_pct,
    DECODE (l_region,'EU',100,0) eu_region_pct,
    DECODE (l_region,'NA',100,0) na_region_pct,
    DECODE (l_region,'LA',100,0) la_region_pct,
    DECODE (l_region,'AP',100,0) jp_region_pct,
    'N' geo_change_fl,
    NULL sales_incentive_pct,
    NULL pl_ext_list_tot_am,
    NULL pl_ext_cost_tot_am,
    'N' pl_cost_avail_all_prod_fl,
    SUM((BL.QTY * BL.LIST_PRICE * NVL(
    (SELECT LI.ESTMTD_QT
    FROM LINE_ITEM LI
    WHERE LI.BD_ID    =BL.BD_ID
    --AND LI.ASSOC_PL_CD=BL.ASSOC_PL --Changes made by Lakshmi as part of "Discount value is not showing in correct format" removed the comment
    AND LI.LINE_NR    =BL.LINE_NR
    ),1) )) LST_TOTAL,
    SUM((BL.QTY * BL.PROD_COST_AM * NVL(
    (SELECT LI.ESTMTD_QT
    FROM LINE_ITEM LI
    WHERE LI.BD_ID    =BL.BD_ID
    AND LI.ASSOC_PL_CD=BL.ASSOC_PL
    AND LI.LINE_NR    =BL.LINE_NR
    ),1) )) COST_TOTAL
  FROM BUNDLE_LINE BL
  WHERE bd_id          =l_bd_id
  AND bl.assoc_pl NOT IN
    (SELECT prod_line_cd FROM deal_pl WHERE bd_id=l_bd_id
    )
  GROUP BY bl.assoc_pl;

--dbms_output.put_line ('DEAL PL BUNDLE LINE INSERT : ' ||sql%rowcount);


  ---------------------------------------------------------------------------------------------------------------------
  -- UPDATING DEAL PL TABLE FOR BUNDLE LINE PLs
  ---------------------------------------------------------------------------------------------------------------------

--Changes are made in below update statement by Lakshmi on 9/11/2014 to consider bundle line qty while calculating EST_LIST_TOT_AM
  UPDATE DEAL_PL dpl
  SET
  ( PL_ESTMD_TOT_AM,PL_EST_LIST_TOT_AM,PL_EST_COST_TOT_AM)
  =
  (
  SELECT
                SUM(BL.EXTENDED_PRICE*li.estmtd_qt)  PL_ESTMD_TOT_AM, --Changes made by Lakshmi as part of "Discount value is not showing in correct format"  --Removed *BL.QTY
                --SUM(BL.LIST_PRICE *li.estmtd_qt*bl.qty) EST_LIST_TOT_AM , --Changes made by Lakshmi as part of "Discount value is not showing in correct format" --Commented by Lakshmi on 9/11/2014
                SUM(BL.LIST_PRICE *li.estmtd_qt*bl.qty) EST_LIST_TOT_AM , --Changes made by Lakshmi as part of "Discount value is not showing in correct format" --Added *BL.QTY
                SUM(BL.PROD_COST_AM) TOT_COST
  FROM
                    BUNDLE_LINE BL,
                    LINE_ITEM LI --Changes made by Lakshmi as part of "Discount value is not showing in correct format"
  WHERE
                      BL.BD_ID=DPL.BD_ID AND BL. ITEM_PROG_CD NOT IN ('H','D')
                      and bl.assoc_pl=dpl.prod_line_cd
                      and bl.scale_id= (select NVL(max(scale_id),1) from bundle_line where bd_id=bl.bd_id and line_nr=bl.line_nr)
                      AND li.bd_id=bl.bd_id --Changes made by Lakshmi as part of "Discount value is not showing in correct format"
                      AND li.line_nr=bl.line_nr --Changes made by Lakshmi as part of "Discount value is not showing in correct format"
                      AND li.line_type_cd='BD'
  GROUP BY BL.ASSOC_PL
  )
  WHERE BD_ID=l_bd_id;

  ---------------------------------------------------------------------------------------------------------------------
  -- UPDATING DEAL PL TABLE FOR PNs
  ---------------------------------------------------------------------------------------------------------------------

  --UPDATING PL_ESTMD_TOT_AM

  UPDATE DEAL_PL dpl
  SET
   PL_ESTMD_TOT_AM= nvl(PL_ESTMD_TOT_AM,0) +
  (
  SELECT
   NVL(   SUM(DECODE (LDS.AUTH_BD_NET_PRC_AM,NULL, LDS.RQST_BD_NET_PRC_AM *  LI.ESTMTD_QT,
            LDS.AUTH_BD_NET_PRC_AM * LI.ESTMTD_QT) ),0)  PL_ESTMD_TOT_AM

  FROM LINE_ITEM LI,
  LINE_DISC_SCALE LDS
  WHERE
  LI.LINE_NR=LDS.LINE_NR
  AND LI.BD_ID=LDS.BD_ID
  AND LI.LINE_TYPE_CD='PN'
  AND LI.LINE_PROG_CD NOT IN ('H','D')
  AND LI.BD_ID=DPL.BD_ID
  and li.assoc_pl_cd=dpl.prod_line_cd
  AND LDS.SCALE_ID =(SELECT NVL(MAX(SCALE_ID),1) FROM LINE_DISC_SCALE WHERE LINE_NR=LDS.LINE_NR and bd_id=li.bd_id )
  GROUP BY LI.ASSOC_PL_CD
  )
  WHERE BD_ID=l_bd_id
  AND DPL.PROD_LINE_CD IN (SELECT ASSOC_PL_CD FROM LINE_ITEM WHERE LINE_TYPE_CD='PN' AND LINE_PROG_CD NOT IN ('H','D')  AND BD_ID=DPL.BD_ID
  AND ASSOC_PL_CD=DPL.PROD_LINE_CD
  );


  --UPDATING PL_EST_LIST_TOT_AM FOR PN's
--updated by Harsh Shah 11-Apr-2014
--query modified and added LI.ESTMTD_QT
--for CR -76396 - [Channel CPQ R8 UAT PST]For PH quote T000043275-02, deal version 3 wrongly generated and the risk level also got changed
--Version 2 deal was going to Low Risk instead of High Risk
  UPDATE DEAL_PL dpl
  SET
   PL_EST_LIST_TOT_AM= NVL(PL_EST_LIST_TOT_AM,0) +
  (
  SELECT NVL(SUM(LDS.PROD_LST_PRC_AM * LI.ESTMTD_QT),0)  PL_EST_LIST_TOT_AM

  FROM LINE_ITEM LI,
  LINE_DISC_SCALE LDS
  WHERE
  LI.LINE_NR=LDS.LINE_NR
  AND LI.BD_ID=LDS.BD_ID
  AND LI.LINE_TYPE_CD='PN'
  AND LI.LINE_PROG_CD NOT IN ('H','D')
  AND LI.BD_ID=DPL.BD_ID
  and li.assoc_pl_cd=dpl.prod_line_cd
  AND LDS.SCALE_ID =(SELECT NVL(MAX(SCALE_ID),1) FROM LINE_DISC_SCALE WHERE LINE_NR=LDS.LINE_NR and bd_id=li.bd_id)
  GROUP BY LI.ASSOC_PL_CD
  )
  WHERE BD_ID=l_bd_id

  AND DPL.PROD_LINE_CD IN (SELECT ASSOC_PL_CD FROM LINE_ITEM WHERE LINE_TYPE_CD='PN' AND LINE_PROG_CD NOT IN ('H','D')  AND BD_ID=DPL.BD_ID
  AND ASSOC_PL_CD=DPL.PROD_LINE_CD
  );

    --DBMS_OUTPUT.PUT_LINE ('PL_ESTlist_TOT AM updated ' || sql%rowcount);

  --UPDATING PL_EST_COST_TOT_AM FOR PNs

  UPDATE DEAL_PL dpl
  SET
   PL_EST_COST_TOT_AM= nvl(PL_EST_COST_TOT_AM,0) +
  (
  SELECT NVL(SUM(LDS.PROD_COST_AM),0)  PL_EST_COST_TOT_AM

  FROM LINE_ITEM LI,
  LINE_DISC_SCALE LDS
  WHERE
  LI.LINE_NR=LDS.LINE_NR
  AND LI.BD_ID=LDS.BD_ID
  AND LI.LINE_TYPE_CD='PN'
  AND LI.LINE_PROG_CD NOT IN ('H','D')
  AND LI.BD_ID=DPL.BD_ID
  and li.assoc_pl_cd=dpl.prod_line_cd
  AND LDS.SCALE_ID =(SELECT NVL(MAX(SCALE_ID),1) FROM LINE_DISC_SCALE WHERE LINE_NR=LDS.LINE_NR and bd_id=li.bd_id)
  GROUP BY LI.ASSOC_PL_CD
  )
  WHERE BD_ID=l_bd_id
  AND DPL.PROD_LINE_CD IN (SELECT ASSOC_PL_CD FROM LINE_ITEM WHERE LINE_TYPE_CD='PN' AND LINE_PROG_CD NOT IN ('H','D')  AND BD_ID=DPL.BD_ID
  AND ASSOC_PL_CD=DPL.PROD_LINE_CD
  );


--DBMS_OUTPUT.PUT_LINE (' PL_EST_COST_TOT_AM updated ' || sql%rowcount);
  /*
  UPDATE DEAL_PL DPL
  SET PL_ESTMD_TOT_AM=PL_ESTMD_TOT_AM +
    (SELECT SUM(LI.ESTMTD_QT  * LDS.RQST_BD_NET_PRC_AM ) EST_TOAL
    FROM LINE_ITEM LI,
      LINE_DISC_SCALE LDS
    WHERE LI.BD_ID      =L_BD_ID
    AND LI.BD_ID        =LDS.BD_ID
    AND LI.LINE_NR      =LDS.LINE_NR
    AND LDS.SCALE_ID    =1
    AND LI.ASSOC_PL_CD IN
      (SELECT ASSOC_PL FROM BUNDLE_LINE WHERE BD_ID=L_BD_ID
      )
    AND LI.LINE_TYPE_CD='PN'
    AND LI.BD_ID       =DPL.BD_ID
    AND LI.ASSOC_PL_CD =DPL.PROD_LINE_CD
    GROUP BY li.assoc_pl_cd
    )
  WHERE DPL.BD_ID       =L_BD_ID
  AND DPL.PROD_LINE_CD IN
    (SELECT ASSOC_PL_CD
    FROM LINE_ITEM
    WHERE BD_ID      =L_BD_ID
    AND LINE_TYPE_CD ='PN'
    AND ASSOC_PL_CD IN
      (SELECT ASSOC_PL FROM BUNDLE_LINE WHERE BD_ID=L_BD_ID
      )
    );

*/
  ----dbms_output.put_line ('DEAL PL UPDATE  EST TOTAL : ' ||sql%rowcount);


  --UPDATE LIST TOTAL
  --temp update by Harsh 7-dec-2013
  --since calculation is wrong

  /*UPDATE DEAL_PL DPL

  SET pl_est_list_tot_am=pl_est_list_tot_am +
    (SELECT SUM(LI.ESTMTD_QT                * LDS.PROD_LST_PRC_AM ) LIST_TOTAL
    FROM LINE_ITEM LI,
      LINE_DISC_SCALE LDS
    WHERE LI.BD_ID      =L_BD_ID
    AND LI.BD_ID        =LDS.BD_ID
    AND LI.LINE_NR      =LDS.LINE_NR
    AND LDS.SCALE_ID    =1
    AND LI.ASSOC_PL_CD IN
      (SELECT ASSOC_PL FROM BUNDLE_LINE WHERE BD_ID=L_BD_ID
      )
    AND LI.LINE_TYPE_CD='PN'
    AND LI.BD_ID       =DPL.BD_ID
    AND LI.ASSOC_PL_CD =DPL.PROD_LINE_CD
    GROUP BY LI.ASSOC_PL_CD
    )
  WHERE DPL.BD_ID       =L_BD_ID
  AND DPL.PROD_LINE_CD IN
    (SELECT ASSOC_PL_CD
    FROM LINE_ITEM
    WHERE BD_ID      =L_BD_ID
    AND LINE_TYPE_CD ='PN'
    AND ASSOC_PL_CD IN
      (SELECT ASSOC_PL FROM BUNDLE_LINE WHERE BD_ID=L_BD_ID
      )
    );
    */

  --dbms_output.put_line ('DEAL PL UPDATE  LIST TOTAL : ' ||sql%rowcount);

  --UPDATE COST TOTAL
  --temp update by Harsh 7-dec-2013
  --since calculation is wrong
  /*
  UPDATE DEAL_PL DPL
  SET PL_EST_COST_TOT_AM=PL_EST_COST_TOT_AM +
    (SELECT SUM(LI.ESTMTD_QT                * LDS.PROD_COST_AM ) COST_TOTAL
    FROM LINE_ITEM LI,
      LINE_DISC_SCALE LDS
    WHERE LI.BD_ID      =L_BD_ID
    AND LI.BD_ID        =LDS.BD_ID
    AND LI.LINE_NR      =LDS.LINE_NR
    AND LDS.SCALE_ID    =1
    AND LI.ASSOC_PL_CD IN
      (SELECT ASSOC_PL FROM BUNDLE_LINE WHERE BD_ID=L_BD_ID
      )
    AND LI.LINE_TYPE_CD='PN'
    AND LI.BD_ID       =DPL.BD_ID
    AND LI.ASSOC_PL_CD =DPL.PROD_LINE_CD
    GROUP BY LI.ASSOC_PL_CD
    )
  WHERE DPL.BD_ID       =L_BD_ID
  AND DPL.PROD_LINE_CD IN
    (SELECT ASSOC_PL_CD
    FROM LINE_ITEM
    WHERE BD_ID      =L_BD_ID
    AND LINE_TYPE_CD ='PN'
    AND ASSOC_PL_CD IN
      (SELECT ASSOC_PL FROM BUNDLE_LINE WHERE BD_ID=L_BD_ID
      )
    );
    */
  --dbms_output.put_line ('DEAL PL UPDATE  COST  TOTAL : ' ||sql%rowcount);
  -------------------------------------------------------------------------------
  --RECALCULATE ALL PL TOTALS
  -------------------------------------------------------------------------------
  UPDATE deal d
  SET
    (
      d.est_deal_value,
      d.est_net_tot_am,
      d.est_list_tot_am,
      d.est_tot_k_am
    )
    =
    (SELECT SUM (dp.pl_estmd_tot_am) pl_estmd_tot_am ,
      SUM (dp.pl_estmd_tot_am) pl_estmd_tot_am,
      SUM(dp.pl_est_list_tot_am)pl_est_list_tot_am,
      ROUND(SUM(dp.pl_estmd_tot_am/1000)) est_tot_k_am
    FROM deal_pl dp
    WHERE dp.bd_id=d.bd_id
    )
  WHERE d.bd_id=l_bd_id;

  calculate_deal_disc_margin_pct (l_bd_id);

  --dbms_output.PUT_LINE (' Deal PL Row updated ' || sql%ROWCOUNT);

EXCEPTION
WHEN OTHERS THEN
L_ERRORS       := 'An error was encountered while udpating DEAL_PL details - ' || SQLCODE || ' -ERROR- ' || SQLERRM || '. Error at Line : ' || DBMS_UTILITY.
FORMAT_ERROR_BACKTRACE();
 I_ERROR_MESSAGE:='An error was encountered while updating average standard discount for bundles';
  inserterror_output_messages ( NULL,NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, c_m_type_warning, g_deal_creation_guid, NULL,NULL,I_ERROR_MESSAGE);
  --dbms_output.put_line (l_errors);
END insert_deal_pl;
PROCEDURE bundle_high_list_price(L_new_BD_ID IN NUMBER, o_error_message OUT varchar2)
IS
/*
Modified by Harsh Shah 17-Nov-2013 added error handling logic
*/
l_high_list_line_nr bundle_line.line_nr%type;
l_high_list_pl bundle_line.assoc_pl%type;
--l_errors varchar2(2000);

  BEGIN

  --dbms_output.PUT_LINE (' New BD ID :' || L_NEW_BD_ID );
--dbms_output.PUT_LINE (' l_high_list_pl  :' || l_high_list_pl );
--dbms_output.PUT_LINE (' l_high_list_line_nr : ' ||l_high_list_line_nr);

    SELECT line_nr,
      assoc_pl
    INTO l_high_list_line_nr,
      l_high_list_pl
    FROM
      (SELECT line_nr,
        assoc_pl,
        list_price,
        rank()over(order by list_price DESC) rank_list_price
      FROM bundle_line
      WHERE bd_id =l_new_bd_id
      )
    WHERE rank_list_price = 1
    AND rownum<=1;
    UPDATE line_item
    SET assoc_pl_cd = l_high_list_pl
    WHERE bd_id     = l_new_bd_id
    AND line_nr     = l_high_list_line_nr;
  EXCEPTION
  WHEN no_data_found THEN

    --dbms_output.PUT_LINE (' New BD ID :' || L_NEW_BD_ID );
--dbms_output.PUT_LINE (' l_high_list_pl  :' || l_high_list_pl );
--dbms_output.PUT_LINE (' l_high_list_line_nr : ' ||l_high_list_line_nr);
     o_error_message:='Could not update high list price for the bundle. No bundle details found for the BD ID provided :' || l_new_bd_id || ' PL : ' || l_high_list_pl || ' Line Nr : ' || l_high_list_line_nr  ;
     --dbms_output.put_line(o_error_message);
          --o_error_message:=null;
    --inserterror_output_messages ( null, null,null, null, null, null, null, null,null, null, o_error_message, l_msg_type, i_deal_creation_guid, null, null,o_error_message );
  WHEN OTHERS THEN
    --dbms_output.put_line('Error in highest price updation');
     o_error_message := 'An error was encountered - ' || SQLCODE || ' -ERROR- ' || sqlerrm || '. Error at Line : ' || dbms_utility.format_error_backtrace();
   --dbms_output.put_line(o_error_message);
    --inserterror_output_messages ( null, null,null, null, null, null, null, null,null, null, o_error_message, l_msg_type, i_deal_creation_guid, null, null,o_error_message );
  END bundle_high_list_price;

  PROCEDURE update_agent_aprvl_fl(l_bd_id IN NUMBER)
IS
l_reccount NUMBER;
BEGIN
BEGIN
    SELECT 1
    INTO l_reccount
    FROM deal_pl
    WHERE NVL(sales_incentive_pct,0)>0
    AND bd_id                       =l_bd_id;
  EXCEPTION
  WHEN NO_DATA_FOUND THEN
    l_reccount := 0;
  WHEN TOO_MANY_ROWS THEN
    l_reccount := 2;
  END;
  --dbms_output.put_line ('SALES incentive pct exists in deal_pl ' || l_reccount);
  IF l_reccount >0 THEN
    UPDATE deal
    SET agent_deal_fl='Y'
      -- agent_apprvl_fl ='Y'  ---- CR 4721
    WHERE bd_id=l_bd_id;
  END IF;
END update_agent_aprvl_fl;

PROCEDURE approve_deal ( l_bd_id IN NUMBER, l_is_all_lines_authorized OUT VARCHAR2)
IS
l_reccount NUMBER;
type deal_auth_actions_rec
IS
  record
  (
    bundle_exists              VARCHAR (1) :='N',
    bd_line_exists             VARCHAR (1) :='N',
    line_item_line_exists      VARCHAR2 (1):='N',
    bd_lines_authorized        VARCHAR2 (1):='N',
    line_item_lines_authorized VARCHAR2 (1):='N',
    line_disc_lines_exists     VARCHAR2 (1):='N',
    line_disc_lines_authorized VARCHAR2 (1):='N',
    reseller_a_added           VARCHAR2 (1):='N',
    reseller_b_added           VARCHAR2 (1):='N' );
set_deal_actions_rec deal_auth_actions_rec;
l_errors                VARCHAR2 (3000);
l_deal_creator_dc deal.init_hp_emp_nr%type;
--l_is_all_lines_authorized VARCHAR2(1):='N';
l_deal_prog_cd      VARCHAR2(2):='U';
l_bdme_aprvl_cd     VARCHAR2(2):='N';
BEGIN
      --******************************************************
      --Approve Deal/Quote Deal
      --******************************************************
      --Check if line_item has rows
      BEGIN
        SELECT 1 INTO l_reccount FROM line_item WHERE bd_id =l_bd_id;
      EXCEPTION
      WHEN NO_DATA_FOUND THEN
        l_reccount :=0;
      WHEN TOO_MANY_ROWS THEN
        l_reccount :=2;
      END;
      IF l_reccount                                >0 THEN
        set_deal_actions_rec.line_item_line_exists:='Y';
      ELSE
        set_deal_actions_rec.line_item_line_exists:='N';
      END IF;
      --check if bundle Exists
      BEGIN
        SELECT 1
        INTO l_reccount
        FROM line_item
        WHERE bd_id      =l_bd_id
        AND line_type_cd ='BD';
      EXCEPTION
      WHEN NO_DATA_FOUND THEN
        l_reccount :=0;
      WHEN TOO_MANY_ROWS THEN
        l_reccount :=2;
      END;
      IF l_reccount                        >0 THEN
        set_deal_actions_rec.bundle_exists:='Y';
      ELSE
        set_deal_actions_rec.bundle_exists:='N';
      END IF;
      --check if bundle line exists
      IF set_deal_actions_rec.bundle_exists='Y' THEN
        BEGIN
          SELECT 1 INTO l_reccount FROM BUNDLE_LINE WHERE bd_id=l_bd_id;
        EXCEPTION
        WHEN NO_DATA_FOUND THEN
          l_reccount :=0;
        WHEN TOO_MANY_ROWS THEN
          l_reccount :=2;
        END;
        IF l_reccount                         >0 THEN
          set_deal_actions_rec.bd_line_exists:='Y';
        ELSE
          set_deal_actions_rec.bd_line_exists:='N';
        END IF;
      END IF;
      --check if line_disc_scale rows exists
      --check if bundle exists
      BEGIN
        SELECT 1 INTO l_reccount FROM line_disc_scale WHERE bd_id =l_bd_id;
      EXCEPTION
      WHEN NO_DATA_FOUND THEN
        l_reccount :=0;
      WHEN TOO_MANY_ROWS THEN
        l_reccount :=2;
      END;
      IF l_reccount                                 >0 THEN
        set_deal_actions_rec.line_disc_lines_exists:='Y';
      ELSE
        set_deal_actions_rec.line_disc_lines_exists:='N';
      END IF;
      --check if bundle exists then bundle_lines table should have rows with item_prog_cd='Y' i.e. bundle lines should  be
      --authorized.
      IF set_deal_actions_rec.bd_line_exists='Y' THEN
        BEGIN
          SELECT 1
          INTO l_reccount
          FROM bundle_line
          WHERE bd_id      =l_bd_id
          AND item_prog_cd ='N'
          AND scale_id=(SELECT max(scale_id) FROM bundle_line WHERE bd_id=l_bd_id);
        EXCEPTION
        WHEN NO_DATA_FOUND THEN
          l_reccount :=0;
        WHEN TOO_MANY_ROWS THEN
          l_reccount :=2;
        END;
        IF l_reccount                               >0 THEN
          set_deal_actions_rec.bd_lines_authorized :='N';
        ELSE
          set_deal_actions_rec.bd_lines_authorized :='Y';
        END IF;
      ELSE
        set_deal_actions_rec.bd_lines_authorized :='N';
      END IF;
      L_RECCOUNT:=0;
      --check LINE_ITEM lines which are not authorized
      IF set_deal_actions_rec.line_item_line_exists ='Y' THEN
        BEGIN
          SELECT 1
          INTO l_reccount
          FROM line_item
          WHERE bd_id      =l_bd_id
          AND line_prog_cd ='N';
        EXCEPTION
        WHEN NO_DATA_FOUND THEN
          l_reccount :=0;
        WHEN TOO_MANY_ROWS THEN
          l_reccount :=2;
        END;
        --if rows exists with unauthorized lines
        --CHECK might be required -- what if all the lines are on Hold/Denied
        -- as per smartquote..there will be lines with either Y or N status.
        --no other status is allowed from smartquote.. but need to confirm with Kwok wee
        IF l_reccount                                     >0 THEN
          set_deal_actions_rec.line_item_lines_authorized:='N';
          l_errors                                       :='Cannot Approve and Distribute the deal since there are Product Lines which are not authorized.';
          --INSERTERROR_OUTPUT_MESSAGES ( l_bd_id, l_bd_nr, l_bd_version_nr, l_deal_prog_cd, l_bdme_aprvl_cd, l_quote_dist_cd, --l_euv_stat_code, l_high_risk_fl, l_risk_reasion_desc, l_risk_desc, l_errors, c_m_type_warning, l_deal_creation_guid, NULL, --NULL,l_errors);
        elsIF l_reccount                                  =0 THEN
          set_deal_actions_rec.line_item_lines_authorized:='Y';
        END IF;
      END IF;
      --Check if Line_Disc_scale rows are not authorized i.e.aut_fl='N'
      --Pending...check with Max on the message given below.
      IF set_deal_actions_rec.line_disc_lines_exists ='Y' THEN
        BEGIN
          SELECT 1
          INTO l_reccount
          FROM line_disc_scale
          WHERE bd_id =l_bd_id
          AND scale_id IN (SELECT max(scale_id) FROM line_disc_scale WHERE bd_id=l_bd_id)
          AND auth_fl ='N';
        EXCEPTION
        WHEN NO_DATA_FOUND THEN
          l_reccount :=0;
        WHEN TOO_MANY_ROWS THEN
          l_reccount :=2;
        END;
        IF l_reccount                                      >0 THEN
          set_deal_actions_rec.line_disc_lines_authorized :='N';
          g_user_message                                  :='Cannot Approve and Distribute the deal, Date Range details are not authorized';
          l_errors                                        :=' Check LINE_DISC_SCALE table. Auth_fl is set to N';
          --INSERTERROR_OUTPUT_MESSAGES ( l_bd_id, l_bd_nr, l_bd_version_nr, l_deal_prog_cd, l_bdme_aprvl_cd, l_quote_dist_cd, --l_euv_stat_code, l_high_risk_fl, l_risk_reasion_desc, l_risk_desc, l_errors, c_m_type_warning, l_deal_creation_guid, NULL, --NULL,g_user_message );
        elsif l_reccount                                   =0 THEN
          set_deal_actions_rec.line_disc_lines_authorized :='Y';
        END IF;
      END IF;
      --check if reseller A exists
      BEGIN
        SELECT 1 INTO l_reccount FROM rslr_a WHERE bd_id =l_bd_id;
      EXCEPTION
      WHEN NO_DATA_FOUND THEN
        l_reccount :=0;
      WHEN TOO_MANY_ROWS THEN
        l_reccount :=2;
      END;
      IF l_reccount                           =0 THEN
        set_deal_actions_rec.reseller_a_added:='N';
        l_errors                             :='Cannot Approve and Distribute the deal.Please add Reseller A to the deal';
        --INSERTERROR_OUTPUT_MESSAGES ( l_bd_id, l_bd_nr, l_bd_version_nr, l_deal_prog_cd, l_bdme_aprvl_cd, l_quote_dist_cd, --l_euv_stat_code, l_high_risk_fl, l_risk_reasion_desc, l_risk_desc, l_errors, c_m_type_warning, l_deal_creation_guid, NULL, --NULL,l_errors );
      elsif l_reccount                        >0 THEN
        set_deal_actions_rec.reseller_a_added:='Y';
      END IF;
      --check if reseller b exits
      BEGIN
        SELECT 1 INTO L_RECCOUNT FROM rslr_b WHERE BD_ID =L_BD_ID;
      EXCEPTION
      WHEN NO_DATA_FOUND THEN
        l_reccount :=0;
      WHEN TOO_MANY_ROWS THEN
        l_reccount :=2;
      END;
      IF l_reccount                           =0 THEN
        set_deal_actions_rec.reseller_B_added:='N';
        l_errors                             :='Cannot Approve and Distribute the deal.Please add Reseller B to the deal.';
        --INSERTERROR_OUTPUT_MESSAGES ( l_bd_id, l_bd_nr, l_bd_version_nr, l_deal_prog_cd, l_bdme_aprvl_cd, l_quote_dist_cd, --l_euv_stat_code, l_high_risk_fl, l_risk_reasion_desc, l_risk_desc, l_errors, c_m_type_warning, l_deal_creation_guid, NULL, --NULL,l_errors );
      elsif l_reccount                        >0 THEN
        set_deal_actions_rec.reseller_B_added:='Y';
      END IF;
      IF ( set_deal_actions_rec.line_item_line_exists ='Y' AND set_deal_actions_rec.line_item_lines_authorized='Y' AND set_deal_actions_rec.line_disc_lines_exists='Y'  AND set_deal_actions_rec.reseller_a_added='Y' AND set_deal_actions_rec.reseller_b_added='Y' AND set_deal_actions_rec.bundle_exists='Y' AND set_deal_actions_rec.bd_line_exists='Y' AND set_deal_actions_rec.bd_lines_authorized ='Y' ) THEN
        --dbms_output.put_line (' ALL TRUE');
        l_is_all_lines_authorized                       :='Y';
      ELSIF ( set_deal_actions_rec.line_item_line_exists ='Y' AND set_deal_actions_rec.line_item_lines_authorized='Y' AND set_deal_actions_rec.line_disc_lines_exists='Y' AND set_deal_actions_rec.reseller_a_added='Y' AND set_deal_actions_rec.reseller_b_added='Y' AND set_deal_actions_rec.bundle_exists='N' ) THEN
        l_is_all_lines_authorized                       :='Y';
        --dbms_output.put_line (' NO BUNDLE EXISTS  BUT ALL LINES TRUE');
      ELSE
        l_is_all_lines_authorized:='N';
        --dbms_output.put_line (' ALL FALSE');
      END IF;
      --comment after testing.
      --dbms_output.put_line ('set_deal_actions_rec messages --------- Start');
      --dbms_output.put_line ('set_deal_actions_rec.line_item_line_exists ' || set_deal_actions_rec.line_item_line_exists);
      --dbms_output.put_line ('set_deal_actions_rec.line_item_lines_authorized ' ||set_deal_actions_rec.line_item_lines_authorized);
      --dbms_output.put_line ('set_deal_actions_rec.line_disc_lines_exists ' || set_deal_actions_rec.line_disc_lines_exists);
      --dbms_output.put_line ('set_deal_actions_rec.line_disc_lines_authorized ' ||set_deal_actions_rec.line_disc_lines_authorized);
      --dbms_output.put_line ('set_deal_actions_rec.reseller_a_added ' ||set_deal_actions_rec.reseller_a_added);
      --dbms_output.put_line ('set_deal_actions_rec.reseller_b_added ' ||set_deal_actions_rec.reseller_b_added);
      --dbms_output.put_line ('set_deal_actions_rec.bundle_exists ' ||set_deal_actions_rec.bundle_exists );
      --dbms_output.put_line ('l_is_all_lines_authorized ' || l_is_all_lines_authorized );
      --dbms_output.PUT_LINE ('set_deal_actions_rec messages --------- End');
      IF L_IS_ALL_LINES_AUTHORIZED='N' THEN
        --set the deal flags
        l_deal_prog_cd :='U';
        l_bdme_aprvl_cd:='N';
        --insert into error and output table
        --inserterror_output_messages ( l_bd_id, l_bd_nr, l_bd_version_nr, l_deal_prog_cd, l_bdme_aprvl_cd, l_quote_dist_cd, l_euv_stat_code, l_high_risk_fl, l_risk_reasion_desc, l_risk_desc, l_errors, c_m_type_warning, l_deal_creation_guid, null, null,l_errors );
        -- cannot proceed with Approve and Quote as there are lines which are not authorized.
        UPDATE DEAL D
        SET d.deal_prog_cd           = 'U',
          d.bdme_aprvl_cd            = 'N'
        WHERE d.bd_id                = to_number(l_bd_id);
      elsif l_is_all_lines_authorized='Y' THEN
        UPDATE deal d
        SET d.deal_prog_cd   = 'F',
          d.bdme_aprvl_cd    = 'S' ,
          d.last_save_dt     = sysdate,
          d.last_save_dt_gmt = gmtdate
        WHERE D.BD_ID        = TO_NUMBER(l_bd_id);
        l_deal_prog_cd      :='F';
        l_bdme_aprvl_cd     :='S';
        ins_deal_timings(l_bd_id,sysdate, l_deal_creator_dc,sysdate,l_deal_creator_dc,'DA01',NULL,'APPROVED','APPROVED'); ---Auto event for authorizing/Approving products---
      END IF;
END approve_deal;

 --quote deal
 PROCEDURE quote_deal(l_bd_id IN NUMBER,
                        l_bd_nr IN NUMBER,
                        L_BD_VERSION_NR IN NUMBER,
                      l_dealquote_fl IN VARCHAR2,
                      l_dealapprfl IN VARCHAR2,
                      l_is_all_lines_authorized IN VARCHAR2,
                       L_QUOTED_BY_USER_ID IN VARCHAR2,
                       L_QUOTEDBYEMPNR IN NUMBER,
                      L_HIGH_RISK_FL IN VARCHAR2,
                      l_GenerateOPGNbrFl varchar2,
                      I_EUV_AT_WON_FL IN VARCHAR2
                      )
IS
L_ERRORS VARCHAR2(3000);
L_MSG_TYPE VARCHAR2(300);
L_SEND_QUOTE_FL VARCHAR2(1);
L_NEW_OPG_NUM NUMBER;
l_deal_prog_cd VARCHAR2(1);
l_bdme_aprvl_cd VARCHAR2(1);
l_quote_dist_cd VARCHAR2(1);
l_dealsourcedealtype deal.deal_source_deal_type%type;
C_LOW_TOUCH_DEALTYPE_DESC     CONSTANT VARCHAR2(15)  :='LOW_TOUCH';

BEGIN
SELECT deal_source_deal_type INTO l_dealsourcedealtype FROM deal WHERE bd_id=l_bd_id;

--dbms_OUTPUT.put_line('l_dealsourcedealtype : '||l_dealsourcedealtype);

BEGIN
      IF (l_dealquote_fl ='Y' AND l_dealapprfl ='Y' AND l_is_all_lines_authorized='Y') THEN
--        dbms_output.put_line ('Deal to be quoted...');
--        dbms_output.PUT_LINE('Value of L_HIGH_RISK_FL is: 2 '||L_HIGH_RISK_FL);

        IF (L_HIGH_RISK_FL         ='N' OR (L_HIGH_RISK_FL         ='Y' AND I_EUV_AT_WON_FL='Y') )THEN
         -- IF L_QUOTED_BY_USER_ID IS NULL THEN
           --L_QUOTED_BY_USER_ID := 'bmidef';
            L_SEND_QUOTE_FL      :='Y';
            --L_QUOTED_BY_USER_ID :='bmidef';
           -- L_SEND_QUOTE_FL      :='N';
            --L_ERRORS             :='Cannot quote the deal. Quoted By Employee is not provided';
            --L_MSG_TYPE           :=C_M_TYPE_ERROR;
            ----dbms_output.PUT_LINE('Cannot quote the deal. Quoted By Employee is not provided');
           -- INSERTERROR_OUTPUT_MESSAGES (L_BD_ID,L_BD_NR,L_BD_VERSION_NR, L_DEAL_PROG_CD,L_BDME_APRVL_CD,L_QUOTE_DIST_CD,L_EUV_STAT_CODE, --L_HIGH_RISK_FL,L_RISK_REASION_DESC,L_RISK_DESC,L_ERRORS,L_MSG_TYPE, L_DEAL_CREATION_GUID,NULL,NULL,L_ERRORS);
          --ELSE

          /*
                       sendquote(i_bd_id number,i_bd_nr number,i_bd_version_nr number ,
                i_quote_user_id varchar2,
                i_quote_send_pdf_fl varchar2,
                i_quote_send_txt_fl varchar2,
                i_generate_OPG_fl varchar2,
            o_quote_sent out varchar2,
            o_next_opg_num out deal.opg_num%type
            */
            --modified by HarshShah 22-Dec-2013
             --dbms_output.PUT_LINE('Calling SENDQUOTE procedure with default user id: '||L_QUOTED_BY_USER_ID);

             SENDQUOTE (L_BD_ID,L_BD_NR,L_BD_VERSION_NR,NVL(L_QUOTED_BY_USER_ID,'bmidef'),'Y','Y',l_GenerateOPGNbrFl,L_SEND_QUOTE_FL,L_NEW_OPG_NUM);

             --dbms_output.PUT_LINE('Value of l_send_quote_fl after procedure call: '||L_SEND_QUOTE_FL);

             --dbms_output.PUT_LINE('Send Quote Procedure completed');

          --END IF;

        ELSE
          L_SEND_QUOTE_FL:='N';

          IF (L_HIGH_RISK_FL         ='Y' AND I_EUV_AT_WON_FL='N') THEN
             --dbms_output.PUT_LINE('Cannot quote the deal. Quoted By Employee is not provided');
             L_ERRORS:='Quote not sent as EUV required at Quote. Please update the EUV';
            INSERTERROR_OUTPUT_MESSAGES (L_BD_ID,L_BD_NR,L_BD_VERSION_NR, L_DEAL_PROG_CD,L_BDME_APRVL_CD,L_QUOTE_DIST_CD,NULL, L_HIGH_RISK_FL,NULL,NULL,L_ERRORS,L_MSG_TYPE, NULL,NULL,NULL,L_ERRORS);
          --ELSE
          END IF;

        END IF;

/*         IF (L_HIGH_RISK_FL         ='Y' AND ( L_DEALSOURCEDEALTYPE=C_LOW_TOUCH_DEALTYPE_DESC AND i_euv_at_won_fl='Y' ))THEN
        DBMS_OUTPUT.PUT_LINE('Setting Send Quote Flag to Y for High Risk Low Touch Deal');
--         IF L_QUOTED_BY_USER_ID IS NULL THEN
  --       l_quoted_by_user_id := 'bmidef';
    --     END IF;
            L_SEND_QUOTE_FL      :='Y';
            --L_ERRORS             :='Cannot quote the deal. Quoted By Employee is not provided';
            --L_MSG_TYPE           :=C_M_TYPE_ERROR;
            --INSERTERROR_OUTPUT_MESSAGES (L_BD_ID,L_BD_NR,L_BD_VERSION_NR, L_DEAL_PROG_CD,L_BDME_APRVL_CD,L_QUOTE_DIST_CD,L_EUV_STAT_CODE, --L_HIGH_RISK_FL,L_RISK_REASION_DESC,L_RISK_DESC,L_ERRORS,L_MSG_TYPE, L_DEAL_CREATION_GUID,NULL,NULL,L_ERRORS);
          --ELSE
            --modified by Harsh Shah 21-dec-2013
            -- added generate opg flag from EDMS.
            SENDQUOTE (L_BD_ID,L_BD_NR,L_BD_VERSION_NR,L_QUOTED_BY_USER_ID,'Y','Y',L_GenerateOPGNbrFl,L_SEND_QUOTE_FL,L_NEW_OPG_NUM);
          --END IF;
        ELSE
          L_SEND_QUOTE_FL:='N';
        END IF;
 */
        --if the record inserted successfully
        IF l_send_quote_fl ='Y' THEN
          l_deal_prog_cd  :='F';
          l_bdme_aprvl_cd :='S';
          l_quote_dist_cd :='A';
          UPDATE deal d
          SET d.deal_prog_cd   = 'F',
            d.bdme_aprvl_cd    = 'S' ,
            --quote_dist_cd='A',--Commented by Lakshmi on 8/27/2014
            quote_dist_cd=NULL,--Added by Lakshmi on 8/27/2014 as per request from Mehnaz for CR144557: IM18574815 - Deals Missing First Quote Date
            D.OPG_NUM          =L_NEW_OPG_NUM,
            D.DEAL_RISK_FL     =L_HIGH_RISK_FL,
            d.last_save_dt     = sysdate,
            d.last_save_dt_gmt = gmtdate
          WHERE D.BD_ID        = TO_NUMBER(l_bd_id);
          l_deal_prog_cd      :='F';
          l_bdme_aprvl_cd     :='S';


          l_msg_type          :='SUCCESS';
          L_ERRORS            :='SUCCESS';
          ins_deal_timings(l_bd_id,sysdate, L_QUOTEDBYEMPNR,sysdate,L_QUOTEDBYEMPNR,'DQ01',NULL,'DISTRIB','DISTRIB'); ---Auto event for Quote deal---
          -- ins_deal_timings(l_bd_id,sysdate, L_QUOTEDBYEMPNR,sysdate,L_QUOTEDBYEMPNR,'DD01',NULL,'QUOTED','QUOTED'); ---Auto event for Quote deal---
          --INSERTERROR_OUTPUT_MESSAGES (L_BD_ID,L_BD_NR,L_BD_VERSION_NR, L_DEAL_PROG_CD,L_BDME_APRVL_CD,L_QUOTE_DIST_CD,L_EUV_STAT_CODE, --L_HIGH_RISK_FL,L_RISK_REASION_DESC,L_RISK_DESC,L_ERRORS,L_MSG_TYPE, L_DEAL_CREATION_GUID,NULL,NULL,L_ERRORS);
        elsif l_high_risk_fl='Y' THEN
        --dbms_output.PUT_LINE('High risk flag is Y, hence deal is in FSN State');
          l_deal_prog_cd   :='F';
          l_bdme_aprvl_cd  :='S';
          l_quote_dist_cd  :='N';
          UPDATE deal d
          SET d.deal_prog_cd   = 'F',
            d.bdme_aprvl_cd    = 'S' ,
            D.DEAL_RISK_FL     =L_HIGH_RISK_FL,
            d.last_save_dt     = sysdate,
            d.last_save_dt_gmt = gmtdate
          WHERE D.BD_ID        = TO_NUMBER(l_bd_id);
          l_msg_type          :='SUCCESS';
          L_ERRORS            :='SUCCESS';
          --inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr, l_deal_prog_cd,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code, --l_high_risk_fl,l_risk_reasion_desc,l_risk_desc,l_errors,l_msg_type, l_deal_creation_guid,NULL,NULL,l_errors);
          l_msg_type :='WARNING';
          --CR2916
          L_ERRORS :='Deal is approved but not quoted as it is assessed to be high risk. Please perform EUV in Eclipse';
          --INSERTERROR_OUTPUT_MESSAGES (L_BD_ID,L_BD_NR,L_BD_VERSION_NR, L_DEAL_PROG_CD,L_BDME_APRVL_CD,L_QUOTE_DIST_CD,L_EUV_STAT_CODE, --L_HIGH_RISK_FL,L_RISK_REASION_DESC,L_RISK_DESC,L_ERRORS,L_MSG_TYPE, L_DEAL_CREATION_GUID,NULL,NULL,L_ERRORS);
        ELSE
          --if the record couldn't be inserted
          --dbms_output.PUT_LINE('Unable to quote the deal');
          l_deal_prog_cd :='F';
          l_bdme_aprvl_cd:='S';
          l_quote_dist_cd:='N';
          l_msg_type     :='WARNING';
          l_errors       :='Unable to quote the deal';
          --inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr, l_deal_prog_cd,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code, --l_high_risk_fl,l_risk_reasion_desc,l_risk_desc,l_errors,l_msg_type, l_deal_creation_guid,NULL,NULL,l_errors);
        END IF;
        END IF;
    END;
    END quote_deal;

    PROCEDURE route_deal(l_bd_id IN NUMBER,
            l_dealroutefl IN VARCHAR2,
            l_dealvertocreate IN NUMBER,
            l_high_risk_fl IN VARCHAR2,
            l_dealsourcedealtype IN deal.deal_source_deal_type%TYPE,
            l_euv_at_won_fl IN VARCHAR2,
            l_eclipse_user_id IN user_tab.user_id%type
                                    )
IS
l_errors VARCHAR2(3000);
L_MSG_TYPE VARCHAR2(3000);
l_euv_comp_fl VARCHAR2(1);
p_route_deal_messages sys_refcursor;
--Route Deal
    BEGIN
    SELECT euv_comp_fl INTO l_euv_comp_fl FROM deal WHERE bd_id = l_bd_id;
    --dbms_output.put_line('euv comp fl :'||l_euv_comp_fl);
    IF (l_dealroutefl         ='Y' ) THEN--AND to_number(l_dealvertocreate)>=0 ) THEN
      IF l_dealvertocreate    >0 THEN
        IF l_high_risk_fl     ='N' AND (l_dealsourcedealtype = c_high_touch_dealtype_desc OR l_dealsourcedealtype = c_low_touch_dealtype_desc OR l_dealsourcedealtype= c_ht_re_route_dealtype_desc) THEN
          IF (l_euv_at_won_fl = 'Y') THEN --euv required at won
            l_msg_type       :='INFO';
            l_errors         :='Routing LowRisk Deal as EUV required at WON' ;
            --inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr,l_deal_prog_cd --,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code,l_high_risk_fl, --l_risk_reasion_desc,l_risk_desc,l_errors,l_msg_type,l_deal_creation_guid, NULL,NULL,l_errors);
            routedeal(l_bd_id,l_eclipse_user_id,p_route_deal_messages);
            --dbms_output.PUT_LINE ('deal Routed as euv required at WON');
          ELSE --euv required at quote
            IF l_euv_comp_fl ='Y' THEN
              l_msg_type    :='INFO';
              l_errors      :='Routing LowRisk Deal as EUV required at Quote and euv is completed' ;
            --  inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr,l_deal_prog_cd --,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code,l_high_risk_fl, --l_risk_reasion_desc,l_risk_desc,l_errors,l_msg_type,l_deal_creation_guid, NULL,NULL,l_errors);
              routedeal(l_bd_id,l_eclipse_user_id,p_route_deal_messages);
            ELSE --This is a rare scenario as all low risk deals are certified by sq admins as euv completed
              l_msg_type :='WARNING';
              l_errors   :='LowRisk Deal not routed as EUV required at quote and EUV not completed' ;
              --dbms_output.PUT_LINE ('LowRisk Deal not routed as EUV required at quote and EUV not completed');
            --  inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr,l_deal_prog_cd --,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code,l_high_risk_fl, --l_risk_reasion_desc,l_risk_desc,l_errors,l_msg_type,l_deal_creation_guid, NULL,NULL,l_errors);
            END IF;
          END IF;
        ELSE
          IF (l_euv_at_won_fl = 'Y') THEN --euv required at won
            l_msg_type       :='INFO';
            l_errors         :='Routing HighRisk Deal as EUV required at WON' ;
            /* inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr,l_deal_prog_cd ,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code,l_high_risk_fl, l_risk_reasion_desc,l_risk_desc,l_errors,l_msg_type,l_deal_creation_guid, NULL,NULL,l_errors);
             */
             routedeal(l_bd_id,l_eclipse_user_id,p_route_deal_messages);
            --dbms_output.PUT_LINE ('deal Routed as euv required at WON');
          ELSE --euv required at quote
            l_msg_type :='WARNING';
            --l_errors   :='Deal is not routed as it is a high risk deal' ;
            l_errors :='Deal is High Risk and EUV required at Quote, Update EUV is required before deal can be routed' ; --changes suggested by Lyn in Nov release
            --dbms_output.PUT_LINE ('HighRisk Deal not routed , Need EUV update');
            /* inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr,l_deal_prog_cd ,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code,l_high_risk_fl, l_risk_reasion_desc,l_risk_desc,l_errors,l_msg_type,l_deal_creation_guid, NULL,NULL,l_errors);
             */
          END IF;
        END IF;
      ELSE
        l_msg_type :='WARNING';
        l_errors   :='Can not route the deal as it is a version0 deal' ; --changes suggested by Lyn in Nov release
        --inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr,l_deal_prog_cd ,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code,l_high_risk_fl, l_risk_reasion_desc,l_risk_desc,l_errors,l_msg_type,l_deal_creation_guid, NULL,NULL,l_errors);
      END IF;
    END IF;
  EXCEPTION
  WHEN OTHERS THEN
    l_msg_type :='WARNING';
    l_errors   :='Error in routing' ;
    /* inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr,l_deal_prog_cd ,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code,l_high_risk_fl, l_risk_reasion_desc,l_risk_desc,l_errors,l_msg_type,l_deal_creation_guid, NULL,NULL,l_errors); */
  END route_deal;

    Procedure UpdateBundles(i_deal_creation_guid  IN varchar2,
                            i_xmlnamespace        IN  varchar2,
                            i_bd_id               IN  DEAL.BD_ID%TYPE,
                            i_bd_nr               IN  DEAL.BD_NR%TYPE,
                            i_bd_version_nr       IN  DEAL.BD_VERSION_NR%TYPE,
                            i_add_date_range IN VARCHAR2)
IS
l_errors VARCHAR2(2000);
l_msg_type VARCHAR2(200);
l_sku bundle_line.prod_gnrc_nr_tx%TYPE;
l_optcd bundle_line.prod_opt_cd%TYPE;
l_line_nr line_item.line_nr%type:=-1;
return_status VARCHAR2(2000);
l_dealapprfl  VARCHAR2(1);
l_dealquotefl VARCHAR2(1);
L_AUTH_MC_DATE LINE_ITEM.AUTH_MC_DATE%type;
l_auth_date_gmt bundle_line.auth_dt_gmt%type;

old_version_end_date DATE;
new_version_end_date DATE;
old_bd_version_nr NUMBER;
l_auth_generic_emp_nr employee.emp_nr%type;
l_line_auth_type varchar2(5);
l_BEGINdate deal.beg_dt%TYPE;
l_enddate deal.end_dt%TYPE;
out_status VARCHAR2(2000);

l_dealsourcecd deal.deal_source_cd%TYPE; --Added by Lakshmi for CR: 3259
  BEGIN

  old_bd_version_nr := i_bd_version_nr - 1;
  BEGIN
  SELECT end_dt INTO old_version_end_date FROM deal WHERE bd_nr=i_bd_nr AND bd_version_nr=old_bd_version_nr;
  SELECT end_dt INTO new_version_end_date FROM deal WHERE bd_nr=i_bd_nr AND bd_version_nr=i_bd_nr;
  EXCEPTION
  WHEN NO_DATA_FOUND THEN
  NULL;
  END;

  l_dealapprfl      := getsqtxmlvalue ('/DealCreationRequest/DealActions/DealApprFl/', i_deal_creation_guid);
  l_dealquotefl     := getsqtxmlvalue ('/DealCreationRequest/DealActions/DealQuoteFl/', i_deal_creation_guid);

   SELECT
        BEG_DT, END_DT 
        , deal_source_cd
        into
        l_BEGINdate, L_ENDDATE 
        ,l_dealsourcecd --Added by Lakshmi for CR:3259
        from deal where bd_nr=i_bd_nr and current_version_fl='Y';

--Below condition added by Lakshmi for CR: 3259
  IF lower(l_dealsourcecd) = 'bmi' THEN
      l_auth_generic_emp_nr   :=-999999911  ;
      l_line_auth_type        :='EAB';
    ELSIF lower(l_dealsourcecd) = ('ngq') THEN
      l_auth_generic_emp_nr   :=-999999922  ;
      l_line_auth_type        :='EAN';
  END IF;
  --****************************************************************************************
  --Updating Bundles
  --****************************************************************************************
  /*
  --commented by Harsh Shah 30-Jan-2015
  SELECT    *
    FROM
      (SELECT
        extract ( value (d), '//AddedByHPEmployee/EmployeeNr/text()', i_xmlnamespace). getstringval () AS addedbyempnr,    ---emp nr change from new xml
        extract (value (d), '//LineItemBD/ProdBaseNr/text()', i_xmlnamespace). getstringval () AS sku,
        extract (value (d), '//LineItemBD/RequestType/text()', i_xmlnamespace). getstringval ()AS requesttype ,
        extract (value (d), '//LineItemBD/OptCD/text()', i_xmlnamespace). getstringval ()AS optcd,
        extract ( value (d), '//LineItemBD/BDNetAmt/text()', i_xmlnamespace). getstringval ()                    AS bdnetamt,
        extract (value (d), '//LineItemBD/StdDiscPct/text()', i_xmlnamespace). getstringval ()                          AS stddiscpct,
        extract (value (d), '//LineItemBD/Qty/text()', i_xmlnamespace). getstringval ()                                 AS header_qty,
        extract (value (d), '//LineItemBD/BundleSource /text()', i_xmlnamespace). getstringval ()                       AS bundlesource ,
        extract (value (d), '//LineItemBD/BundleIndex /text()', i_xmlnamespace). getstringval ()                        AS bundleindex,
        extract (value (d), '//LineItemBD/AuthStatCD/text()', i_xmlnamespace). getstringval ()                        AS authstatcd,
        extract (value (d), '//LineItemBD/AuthHPEmployee/EmailAddress/text()', i_xmlnamespace). getstringval ()       AS authempemail,
        extract (value (d), '//LineItemBD/AuthHPEmployee/EmployeeNr/text()',i_xmlnamespace). getstringval ()        AS authempnr,
        extract ( value (d), '//LineItemBD/AuthDate/text()', i_xmlnamespace ). getstringval ()                          AS authdate,
        extract ( value (d), '//LineItemBD/AuthDateGMT/text()', i_xmlnamespace). getstringval ()                        AS authdategmt,
        extract ( value (d), '//LineItemBD/AuthBasisDesc/text()', i_xmlnamespace). getstringval ()                      AS authbasisdesc,
        extract ( value (d), '//LineItemBD/ExtPreApprvPrice/text()', i_xmlnamespace). getstringval ()                   AS ExtPreApprvPrice,
        extract (value (D), '//LineItemBD/DocNum/text()', i_xmlnamespace). GETSTRINGVAL ()                                  as BMI_DOC_NO,--by Harsh shah 19 Mar 2014
        extract (value (d), '//LineItemBD/ConfigID/text()', i_xmlnamespace). getstringval ()                            AS configid, --by Harsh shah 19 Mar 2014
        extract ( value (d), '//LineItemBD/CostPrice/text()', i_xmlnamespace). getstringval ()                          AS costprice,--by Harsh shah 19 Mar 2014
        extract ( value (d), '//LineItemBD/ListPrice/text()', i_xmlnamespace). getstringval ()                          AS listprice, --by Harsh shah 19 Mar 2014
         extract (value (d), '//LineItemBD/RolloutMonthQtys/text()', i_xmlnamespace). getstringval ()                    AS rolloutmonthqtys,
         extract ( value (D), '//LineItemBD/OrderMinQty/text()', i_xmlnamespace). GETSTRINGVAL () as ORDERMINQTY, ---Added for CR 4375,
         extract (value (d), '//LineItemBD/BundleDesc/text()', i_xmlnamespace). getstringval ()                          AS bundledesc, -- New tag added by Lakshmi  on 8/19/2014
        extract ( value (d), '//LineItemBD/GuidanceAvailFl/text()', i_xmlnamespace). getstringval ()                        AS GuidanceAvailFl,--Added by Lakshmi for CR6012
        extract ( value (d), '//LineItemBD/GuidanceDetailsID/text()', i_xmlnamespace). getstringval ()                        AS GuidanceDetailsID,--Added by Lakshmi for CR6012
        extract ( value (d), '//LineItemBD/GuidanceDiscExpertPct/text()', i_xmlnamespace). getstringval ()                        AS GuidanceDiscExpertPct,--Added by Lakshmi for CR6012
        extract ( value (d), '//LineItemBD/GuidanceDiscFloorPct/text()', i_xmlnamespace). getstringval ()                        AS GuidanceDiscFloorPct,--Added by Lakshmi for CR6012
        extract ( value (d), '//LineItemBD/GuidanceDiscTypicalPct/text()', i_xmlnamespace). getstringval ()                        AS GuidanceDiscTypicalPct,--Added by Lakshmi for CR6012
        extract ( value (d), '//LineItemBD/GuidanceRefreshDateGMT/text()', i_xmlnamespace). getstringval ()                        AS GuidanceRefreshDateGMT--Added by Lakshmi for        CR6012
        FROM edms_deal_queue x,
        TABLE ( xmlsequence ( extract ( x.xml_data_xml, 'DealCreationRequest/Bundles/LineItemBD', i_xmlnamespace))) d
      WHERE x.deal_creation_guid =i_deal_creation_guid
      )
      where upper(requesttype) IN ('UPDATE','HOLD')
  */

  FOR recbd IN
    (
        SELECT ADDED_BY_EMP_NR AS addedbyempnr,
                   ADDED_BY_EMP_EMAIL AS addedbyempemail,
                   AUTH_BASIS_DESC AS authbasisdesc,
                   AUTH_DATE AS authdate,
                   AUTH_DATE_GMT AS authdategmt,
                   AUTH_EMP_NR AS authempnr,
                   AUTH_EMP_EMAIL AS authempemail,
                   AUTH_STAT_CD AS authstatcd,
                   BD_NET_AMT AS bdnetamt,
                   COST_PRICE AS costprice,
                   LIST_PRICE AS listprice,
                   PRICING_TYPE_CD AS pricingtypecd,
                   PROD_DESC AS proddesc,
                   REQUEST_TYPE AS requesttype,
                   ROLLOUT_MONTH_QTY AS rolloutmonthqtys,
                   SKU AS sku,
                   STD_DISC_PCT AS stddiscpct,
                   BUNDLE_DESC AS bundledesc,
                   BUNDLE_SOURCE AS bundlesource,
                   BUNDLE_INDEX AS bundleindex,
                   HEADER_QTY AS header_qty,
                   OPT_CD AS optcd,
                   CONFIG_ID AS CONFIGID,
                   PROD_LINE_CD AS pl,
                   ORD_MIN_QTY AS ORDERMINQTY,
                   BMI_DOC_NO AS BMI_DOC_NO,
                   EXT_PRE_APPRV_PRICE AS ExtPreApprvPrice,
                   DISPLAY_COMP_PRC_FL AS DisplayCompPrcFl,
                   ECLIPSE_BUNDLE_ID AS EclipseBundleID,
                   GUIDANCE_AVAIL_FL AS GuidanceAvailFl,
                   GUIDANCE_DETAEILS_ID AS GuidanceDetailsID,
                   GUIDANCE_DISC_EXPERT_PCT AS GuidanceDiscExpertPct,
                   GUIDANCE_DISC_FLOOR_PCT AS GuidanceDiscFloorPct,
                   GUIDANCE_DISC_TYPICAL_PCT AS GuidanceDiscTypicalPct,
                   GUIDANCE_REFRESHE_DATE_GMT AS GuidanceRefreshDateGMT,
                   NO_DISC_FL AS NonDiscFl,
                   INSTANT_PRC_METHOD AS InstantPrcMethod, ---Added for CR: 255803-[HPE][Channel][US-7301] The deal reg info in eclipse deal is incorrect after BMI quote revised.
                   INSTANT_PRC_AMT AS InstantPrcAmt---Added for CR: 255803-[HPE][Channel][US-7301] The deal reg info in eclipse deal is incorrect after BMI quote revised.
                   ,USE_EXT_LIST_PRICE AS UseExtListPriceFl
              FROM ECLIPSE.GT_XML_BUNDLE
             WHERE GUID = i_deal_creation_guid
                   AND ( REQUEST_TYPE IN ('UPDATE','HOLD','UPDATE_CURRENT_DATERANGE','REPLACE_CURRENT_DATERANGE')
           )
    )
    LOOP
     --dbms_output.PUT_LINE (' Updating Bundle Line items...Request Type ' || recbd.requesttype );
       l_sku := recbd.sku;
       l_optcd := recbd.optcd;

         IF UPPER(recbd.requesttype)='HOLD' THEN

--              dbms_output.PUT_LINE ( 'Bundle Header ------- requesttype :' || UPPER(recbd.requesttype)) ;
--              dbms_output.put_line (' SKU :' || recbd.sku);
--              dbms_output.put_line (' Bundle  header opt Code ' || recbd.optcd);
--              dbms_output.put_line (' Bundle  header opt Code ' || recbd.BMI_DOC_NO);
--              dbms_output.put_line (' Bundle  header opt Code ' || recbd.configid);

         --     l_sku := recbd.sku;
          --    l_optcd := recbd.optcd;
                --dbms_output.put_line('Updating line on HOLD');

                l_errors:='Setting bundle lines to HOLD ..Start';
                inserterror_output_messages (i_bd_id,i_bd_nr,i_bd_version_nr, null,null,null,null, null,null,null,l_errors,'WARNING', i_deal_creation_guid,NULL,NULL,NULL);

              --Update bundle_line table
              --TODO: We must get the unique Line nr from EDMS web service otherwise we are inviting troubles by updating all the bundles with the product
              -- the code has been modified just for the testing purpose and should be reverted with exact condition.
              --dbms_output.put_line('Updating bundle line on HOLD');

              --Added by LAKSHMI on 9/2/2014.
              --Changes made by Lakshmi on 11/18 for CR177159
                                  --AND LINE_PROG_CD='Y'
              --dbms_OUTPUT.put_line('Sku to be put on HOLD is: '||recbd.sku||' bundledesc: '||RECBD.bundledesc||' optcd : '||recbd.OPTCD||' bd_id: '||i_bd_id);
              --AND SRC_BUNDLE_DESC_TX = RECBD.bundledesc --by Harsh Shah 11/21/2014 - for CR 165054 - GUS Ticket--Quantity not updated in Eclipse after Revise Quote (TD # 2710002) - zhirong.shen@hp.com
              -- added BMI_DOC No condition.
              BEGIN

              --commented by Harsh shah 29-Jan-2015
              -- for CR - 185716 - [R11 MTP EMEA] Products re-aded in the BMI request are not visible in Eclipse deal created
              /*
              SELECT line_nr INTO l_line_nr
              FROM line_item
                                  WHERE line_type_cd='BD'
                                  AND prod_gnrc_nr_tx= recbd.sku
                                 AND prod_opt_cd=--DECODE(recbd.OPTCD,NULL,' ',recbd.OPTCD)
                                  DECODE((SELECT prod_opt_cd FROM line_item WHERE bd_id=i_bd_id AND line_type_cd='BD' AND PROD_GNRC_NR_TX=recbd.sku
                                 AND bmi_doc_No=recbd.bmi_doc_no AND rownum<=1),NULL,' ',(SELECT prod_opt_cd FROM line_item WHERE bd_id=i_bd_id AND line_type_cd='BD' AND PROD_GNRC_NR_TX=recbd.sku
                                 AND bmi_doc_No=recbd.bmi_doc_no AND rownum<=1))
                                  AND bd_id=i_bd_id
                                  and bmi_doc_no=recbd.BMI_DOC_NO
                                  and ROWNUM<2;

                */
            --need to check with lakshmi
            --commented by Harsh shah 30-Jan-2015
            --T0 get the unique line Nor

                SELECT line_nr
                  INTO l_line_nr
                  FROM line_item
                 WHERE line_type_cd = 'BD' AND prod_gnrc_nr_tx = recbd.sku
                 AND  (SRC_BUNDLE_DESC_TX = recbd.BundleDesc  or SRC_BUNDLE_DESC_TX IS NULL)
                 AND bd_id = i_bd_id
                       AND ROWNUM < 2;
                --DBMS_OUTPUT.PUT_LINE('Updating Line Number: '||l_line_nr ||' to HOLD ');

            EXCEPTION
            --by Harsh Shah 11/21/2014 - for CR 165054 - GUS Ticket--Quantity not updated in Eclipse after Revise Quote (TD # 2710002) - zhirong.shen@hp.com
            WHEN NO_DATA_FOUND then
                l_errors:='Error occured during HOLD update for LINE_ITEM table : '||dbms_utility.format_error_backtrace();
                inserterror_output_messages (i_bd_id,i_bd_nr,i_bd_version_nr, null,null,null,null, null,null,null,l_errors,'WARNING', i_deal_creation_guid,NULL,NULL,NULL);

                --DBMS_OUTPUT.PUT_LINE(L_ERRORS);

                l_errors:='LINE_ITEM table error Sku to be put on HOLD is: '||recbd.sku||' bundledesc: '||RECBD.bundledesc||' optcd : '||recbd.OPTCD ;
                inserterror_output_messages (i_bd_id,i_bd_nr,i_bd_version_nr, null,null,null,null, null,null,null,l_errors,'WARNING', i_deal_creation_guid,NULL,NULL,NULL);

                l_line_nr := -1;
                --DBMS_OUTPUT.PUT_LINE(L_ERRORS);
            WHEN OTHERS THEN
                l_errors:='Error occured while getting line number from Line item table.'||dbms_utility.format_error_backtrace();
                inserterror_output_messages (i_bd_id,i_bd_nr,i_bd_version_nr, null,null,null,null, null,null,null,l_errors,'WARNING', i_deal_creation_guid,NULL,NULL,NULL);

                --DBMS_OUTPUT.PUT_LINE(L_ERRORS);

                --by Harsh Shah 11/21/2014 - for CR 165054 - GUS Ticket--Quantity not updated in Eclipse after Revise Quote (TD # 2710002) - zhirong.shen@hp.com
                l_errors:='LINE_ITEM table error Sku to be put on HOLD is: '||recbd.sku||' bundledesc: '||RECBD.bundledesc||' optcd : '||recbd.OPTCD ;
                inserterror_output_messages (i_bd_id,i_bd_nr,i_bd_version_nr, null,null,null,null, null,null,null,l_errors,'WARNING', i_deal_creation_guid,NULL,NULL,NULL);

                l_line_nr := -1;
                --DBMS_OUTPUT.PUT_LINE(L_ERRORS);
            END;

              UPDATE bundle_line SET item_prog_cd='H'
              WHERE line_nr =L_LINE_NR
                AND bd_id=i_bd_id;
              /* (SELECT line_nr FROM line_item--Commented by Lakshmi on 9/2/2014
                                  WHERE line_type_cd='BD'
                                  AND prod_gnrc_nr_tx= recbd.sku
                                 AND prod_opt_cd=DECODE(recbd.OPTCD,NULL,' ',recbd.OPTCD)
                                  AND LINE_PROG_CD='Y'
                                  AND SRC_BUNDLE_DESC_TX = RECBD.bundledesc
                                  AND bd_id=i_bd_id) */

            --dbms_output.put_line('Updated Bundle line on HOLD -- rows updated : ' || sql%rowcount);

                  --Update line_item table
                  --dbms_output.put_line('Updating line item table on HOLD');
                  UPDATE line_item SET line_prog_cd='H'
                  WHERE line_nr =l_line_nr
                   AND bd_id=i_bd_id;
                  /* WHERE line_type_cd='BD'
                  AND prod_gnrc_nr_tx= recbd.sku
                  AND prod_opt_cd=DECODE(recbd.OPTCD,NULL,' ',recbd.OPTCD)
                  AND LINE_PROG_CD='Y'
                  AND bd_id=i_bd_id; */

            --dbms_output.put_line('Updating line disc scale on HOLD');

            /*
                Updated by Harsh Shah 11/10/2014
                Commented this line as this is not required. If lines are on HOLD and auth staus is set to N then Quote is failing. Hence we are not going to change the auth status
                Same behaviour is seen on production deals and hence making this change.
                Also removing commented code which is not required as of now.
                --lds.AUTH_FL  ='N',
            */
                UPDATE LINE_DISC_SCALE LDS
                        SET
                            lds.upper_bndry_dt=(SELECT end_Dt FROM deal WHERE bd_id=i_bd_id)
                        WHERE lds.BD_ID  =i_bd_id
                        AND lds.LINE_NR =L_LINE_NR
                         AND lds.scale_id=
                          (SELECT NVL(MAX(scale_id),0)
                          FROM line_disc_scale
                          WHERE bd_id=i_bd_id
                          AND line_nr= L_LINE_NR
                        );

                l_errors:='Line disc scale for bundle line updated .. request type is HOLD : ROWS updated ' || sql%rowcount;
                inserterror_output_messages (i_bd_id,i_bd_nr,i_bd_version_nr, null,null,null,null, null,null,null,l_errors,'WARNING', i_deal_creation_guid,NULL,NULL,NULL);

--ELSIF UPPER(recbd.requesttype)='UPDATE' THEN
--Changes made by Lakshmi on 2/24/2015 for CR:199624 & 199573, US-7331 --> Eclipse Deal Sync Eclipse Processing
ELSIF (UPPER(recbd.requesttype) IN ('UPDATE','UPDATE_CURRENT_DATERANGE','REPLACE_CURRENT_DATERANGE')) THEN
    --BEGIN  -- updating Bundle Headers
        --dbms_output.put_line ('Updating Bundle Header values for the request type : ' || recbd.requesttype );
        --dbms_output.put_line (' SKU :' || recbd.sku);
        --dbms_output.put_line (' Bundle  header opt Code ' || recbd.optcd || ',bmi doc no:' || recbd.BMI_DOC_NO ||',config id:' || recbd.configid);
--need to check with Lakshmi on the below query
--commented by Harsh shah 30-Jan-2015
/*
         SELECT line_nr INTO L_LINE_NR
          FROM line_item
          WHERE bd_id        =i_bd_id
          AND line_type_cd   ='BD'
          AND PROD_GNRC_NR_TX=recbd.sku
          and BMI_DOC_NO=recbd.bmi_doc_no
          AND prod_opt_cd    =--DECODE(recbd.OptCd,NULL,' ',RECBD.OptCd)
  DECODE((SELECT prod_opt_cd FROM line_item WHERE bd_id=i_bd_id AND line_type_cd='BD' AND PROD_GNRC_NR_TX=recbd.sku
                                 AND bmi_doc_No=recbd.bmi_doc_no AND rownum<=1),NULL,' ',(SELECT prod_opt_cd FROM line_item WHERE bd_id=i_bd_id AND line_type_cd='BD' AND PROD_GNRC_NR_TX=recbd.sku
                                 AND bmi_doc_No=recbd.bmi_doc_no AND rownum<=1))

    */
--dbms_OUTPUT.put_line('recbd.sku: '||recbd.sku);
--dbms_OUTPUT.put_line('recbd.BundleDesc: '||recbd.BundleDesc||' i_bd_id: '||i_bd_id);

            --Added by Lakshmi on 3/22/2015 to fix the issue of no_data_found error
            --Issue: When bundle header component is changed, the query is unable to derive the line number.
            IF UPPER(recbd.requesttype) = 'REPLACE_CURRENT_DATERANGE' THEN
                            SELECT bd.line_nr INTO l_line_nr
                  FROM line_item li , bundle bd
                 WHERE li.line_type_cd = 'BD'
                       AND (SRC_BUNDLE_DESC_TX = 'Auto Bundle Header'
                            OR src_bundle_desc_Tx IS NULL)
                       AND li.bd_id = i_bd_id
                       AND bd.config_id='99999'
                       AND bd.line_nr=li.line_nr
                       AND ROWNUM < 2;
            ELSE
            -- by Harsh shah 30-Jan-2015
            --T0 get the unique line Nor
                SELECT line_nr
                  INTO l_line_nr
                  FROM line_item
                 WHERE line_type_cd = 'BD' AND prod_gnrc_nr_tx = recbd.sku
                 AND (SRC_BUNDLE_DESC_TX = recbd.BundleDesc  OR src_bundle_desc_Tx IS NULL)
                 AND bd_id = i_bd_id
                       AND ROWNUM < 2;
                DBMS_OUTPUT.PUT_LINE('Updating Line Number: '||l_line_nr ||' Request Type Update ');
            END IF;
--Changes made by Lakshmi on 11/18 for CR177159
          --AND ROWNUM<2;
          --dbms_output.PUT_LINE ('current line Nr:' || L_LINE_NR || ',sku : ' || recbd.sku || ',config bid ' || recbd.configid || 'bmi doc No ' || recbd.bmi_doc_no );

                     --Clear the auth of the line if it is authorized.
           /*  IF (i_add_date_range='N') THEN
                SELECT LINE_AUTH_TYPE INTO L_LINE_AUTH_TYPE FROM line_item WHERE line_nr=L_LINE_NR AND bd_id=i_BD_ID;
                IF l_line_auth_type IN ('BDM') THEN
                    clear_auth(i_bd_id ,
                                    L_LINE_NR,
                                    i_deal_creation_guid);
                END IF;
            END IF; */


    --Add new date range in line_disc_scale table for the given bd_id
    --IF (old_version_end_date<> new_version_end_date) THEN
    --IF i_add_date_range='Y' THEN
    IF (UPPER(recbd.REQUESTTYPE) IN ('UPDATE')) THEN
    add_date_range( L_LINE_NR,
                    i_bd_id,
                    return_status);
    END IF;
    --END IF;
    --BY HARSH 11/24
    inserterror_output_messages (i_bd_id,i_bd_nr,i_bd_version_nr, null,null,null,null, null,null,null,return_status,'WARNING',
            i_deal_creation_guid,NULL,NULL,return_status);

    --If add_date_range has failed, log it into errors table.
        IF return_status <>'SUCCESS' THEN
            inserterror_output_messages (i_bd_id,i_bd_nr,i_bd_version_nr, null,null,null,null, null,null,null,return_status,'WARNING',
            i_deal_creation_guid,NULL,NULL,return_status);
        END IF;

/*DBMS_OUTPUT.PUT_LINE('Calling   update_rollout procedure with these parameters: l_begindate: '|| l_begindate||' for sku: '||RECbd.sku ||' , l_enddate: '||l_enddate||',
        recBD.header_qty: '||recbd.header_qty||',   recbd.rolloutmonthqtys: '||recbd.rolloutmonthqtys||',  recbd.orderminqty: '||recbd.orderminqty||', RECbd.optcd: '||RECbd.optcd||', i_bd_id: '||i_bd_id||', L_LINE_NR: '||L_LINE_NR);*/
                         update_rollout(RECbd.sku,
                         l_begindate,
                         l_enddate,
                         recbd.header_qty,
                         recbd.rolloutmonthqtys,
                         recbd.orderminqty,
                         recbd.optcd,
                         i_bd_id,
                         L_LINE_NR,
                         out_status);

    IF recbd.authempnr IS NULL AND recbd.authempemail IS NOT NULL THEN
        recbd.authempnr  :=get_emp_nr(recbd.authempemail);
      END IF;

    IF (RECBD.AUTHDATE IS NOT NULL OR RECBD.AUTHDATE<>'') THEN
        L_AUTH_MC_DATE   :=TO_TIMESTAMP (SUBSTR(RECBD.AUTHDATE,1,19),'YYYY-MM-DD"T"HH24:MI:SS');
      ELSE
        L_AUTH_MC_DATE:=NULL;
    END IF;

    IF (RECBD.AUTHDATEGMT IS NOT NULL OR RECBD.AUTHDATEGMT<>'') THEN
        L_AUTH_DATE_GMT     :=TO_TIMESTAMP (SUBSTR(RECBD.AUTHDATEGMT,1,19),'YYYY-MM-DD"T"HH24:MI:SS');
      ELSE
        L_AUTH_DATE_GMT:=NULL;
    END IF;


           BEGIN  -- Update  headery qty in the line item table for the bundle header

           --dbms_output.put_line ('updating bundle prices starts for line:' || l_line_nr );
           update_bundle_line_prices(
                recbd.bundleindex,
                recbd.bundlesource,
                i_bd_id,
               l_line_nr,
               i_deal_creation_guid,
                recbd.stddiscpct,
                recbd.authdategmt,
                recbd.authempnr,
                l_auth_generic_emp_nr
        );
        --dbms_output.PUT_LINE ('updating bundle prices ..done :' || ',AUTH STAT CODE:' ||recbd.authstatcd );
--Changes made by Lakshmi on 1/6/2015 for CR:187267 - Commented all the conditions in WHERE clause and added line_nr check

   /* Changes made by Lakshmi for CR: 198880- [Channel_PST][US-7824]No Deal Number Generated for Newly added Product which is Deleted in Previous version
               Change made: Updated bmi_doc_No from the XML, as BMI could not set the Deal ID due to mismatch in BMI Doc Numbers.
            */
                              UPDATE LINE_ITEM
                                 SET ESTMTD_QT=RECBD.HEADER_QTY,
                                     LINE_PROG_CD=RECBD.AUTHSTATCD, --'N',
                                     --SQ_AUTH_EMP_NR=DECODE(RECBD.AUTHSTATCD,'N',NULL,SQ_AUTH_EMP_NR),
                                     PREV_GENERIC_EMP_NR=AUTH_GENERIC_EMP_NR,
                                     AUTH_MC_HP_EMP_NR=DECODE(RECBD.AUTHSTATCD,'N',NULL,RECBD.AUTHEMPNR),
                                     AUTH_GENERIC_EMP_NR =DECODE(RECBD.AUTHSTATCD,'N',NULL,L_AUTH_GENERIC_EMP_NR),
                                     LINE_AUTH_TYPE=DECODE(RECBD.AUTHSTATCD,'N',NULL ,DECODE(LOWER(l_dealsourcecd),'bmi','EAB','ngq','EAN')), --Added condition for CR: 3259
                                     AUTH_MC_DATE=DECODE(RECBD.AUTHSTATCD,'N',NULL ,L_AUTH_MC_DATE),
                                     AUTH_DT_GMT= DECODE(RECBD.AUTHSTATCD,'N',NULL ,L_AUTH_DATE_GMT)
                                     , bmi_doc_no=recbd.bmi_doc_No --Added by Lakshmi on 2/20/2015 for CR:198880
                                     , PROD_GNRC_NR_TX=TRIM(RECBD.SKU) -- Added by Lakshmi on 3/22/2015
                               WHERE line_nr=L_LINE_NR
                                AND BD_ID=I_BD_ID;
                             /*   LINE_TYPE_CD='BD'
                                    AND PROD_GNRC_NR_TX=RECBD.SKU
                                    AND PROD_OPT_CD=DECODE(RECBD.OPTCD,NULL,' ',RECBD.OPTCD)
                                    AND BMI_DOC_NO=RECBD.BMI_DOC_NO --BY HARSH SHAH 14 MARCH 2014
                                    AND BD_ID=I_BD_ID
                                    AND ROWNUM<2; --TODO: NEED A BETTER FILTER FROM XML TO AVOid updating multiple rows. */

                                    IF SQL%ROWCOUNT <=0 THEN -- IF LINE ITEM ROWS ARE UPDATED
                                        l_errors:=' LIne Item Row cound not be updated  with Quantity value for product : ' ||      TRIM(RECBD.SKU) || ' cannot proceed with the line item update' ;
                                        --dbms_output.put_line (l_errors);
                                        inserterror_output_messages (i_bd_id,i_bd_nr,i_bd_version_nr, null,null,null,null, null,null,null,l_errors,'WARNING', i_deal_creation_guid,NULL,NULL,l_errors);
                          ELSE
                                        --dbms_output.put_line ('Updating line items 1 ' );
                                        --get the line nr from line_item
                                        --Commented by Lakshmi on 1/6/2015 for CR:187267
--                                        SELECT line_nr INTO L_LINE_NR
--                                                                      FROM line_item
--                                                                      WHERE bd_id        =i_bd_id
--                                                                      AND line_type_cd   ='BD'
--                                                                      AND PROD_GNRC_NR_TX=recbd.sku
--                                                                      AND prod_opt_cd    =DECODE(recbd.OptCd,NULL,' ',RECBD.OptCd)
--                                                                      and BMI_DOC_NO=recbd.bmi_doc_no --by harsh Shah 14 March 2014
--                                                                      and rownum<2;

                                        --dbms_output.put_line (' Bundle Line ' || l_line_nr);
                                        -- update by Harsh Shah 11/17/2014
                                        -- For CR 170133 -[Channel][Regression] Bundle's rqst% is modified in dealV2 after accept quote for a HT deal

                                      BEGIN  -- UPDATE LINE DISC SCALE table.

                                                         dbms_output.PUT_LINE ('Updating Header Bundle BDNet ' ||  recbd.bdnetamt || ' : sku :' || recbd.sku);

                --Changes made by Lakshmi on 1/6/2015 for CR:187267 - Commented all the conditions in WHERE clause and added line_nr check
                                                          UPDATE line_disc_scale lds
                                                          --set lds.rqst_bd_net_prc_am  = DECODE (recbd.authstatcd,'N', recbd.bdnetamt,'Y',  lds.rqst_bd_net_prc_am ,recbd.bdnetamt), --modified by Harsh Shah 11/17/2014  Commented for CR:255890
                                                          set lds.rqst_bd_net_prc_am  = DECODE (recbd.authstatcd,'N', recbd.bdnetamt,'Y',  recbd.bdnetamt ,recbd.bdnetamt), --modified by Harsh Shah 11/17/2014  Changed for CR:255890
                                                          --LDS.rqst_disc_ot_pc=fcalcRqstDiscPCT(DECODE (recbd.authstatcd,'N', recbd.bdnetamt,'Y',  lds.rqst_bd_net_prc_am ,recbd.bdnetamt),LDS.PROD_LST_PRC_AM,recbd.stddiscpct), --modified by Harsh Shah 11/17/2014 Commented for CR:255890
                                                          LDS.rqst_disc_ot_pc=fcalcRqstDiscPCT(DECODE (recbd.authstatcd,'N', recbd.bdnetamt,'Y',  recbd.bdnetamt ,recbd.bdnetamt),LDS.PROD_LST_PRC_AM,recbd.stddiscpct), --modified by Harsh Shah 11/17/2014
                                                          lds.auth_bd_net_prc_am=decode(recbd.authstatcd,'Y',recbd.bdnetamt,NULL),
                                                          lds.RQST_INCR_DISC_AM=null,
                                                          lds.AUTH_MARGIN_PCT=decode(recbd.authstatcd,'N',NULL,AUTH_MARGIN_PCT),
                                                          lds.PREV_AUTH_BASIS_TEXT =lds.AUTH_BASIS_TEXT,
                                                          lds.AUTH_BASIS_TEXT =decode(recbd.authstatcd,'N',NULL,recbd.authbasisdesc),
                                                          lds.auth_fl= recbd.authstatcd,
                                                          lds.EXT_PRE_APPRV_PRC_AM = recbd.ExtPreApprvPrice,
                                                          lds.auth_disc_ot_pc=decode(RECBD.AUTHSTATCD,'Y',fcalcRqstDiscPCT(recbd.bdnetamt,LDS.PROD_LST_PRC_AM,recbd.stddiscpct),NULL),
                                                          --below guidance fiels are added by Lakshmi on 11/12/014 for
                                                            lds.GUIDANCE_AVAILABLE_FL=recbd.GuidanceAvailFl, --Added by Lakshmi for CR162102
                                                            lds.GUIDANCE_DETAILS_ID=DECODE(recbd.GuidanceAvailFl,'Y',recbd.GuidanceDetailsID,NULL), --Added by Lakshmi for CR162102
                                                            lds.GUIDANCE_EXPERT_PCT=DECODE(recbd.GuidanceAvailFl,'Y',RECbd.GuidanceDiscExpertPct,NULL), --Added by Lakshmi for CR162102
                                                            lds.GUIDANCE_FLOOR_PCT=DECODE(recbd.GuidanceAvailFl,'Y',recbd.GuidanceDiscFloorPct,NULL), --Added by Lakshmi for CR162102
                                                            lds.GUIDANCE_TYPICAL_PCT=DECODE(recbd.GuidanceAvailFl,'Y',RECbd.GuidanceDiscTypicalPct,NULL) ,--Added by Lakshmi for CR162102
                                                            INSTANT_PRC_METHOD = RECBD.instantprcmethod, --Added for CR: 255803-[HPE][Channel][US-7301] The deal reg info in eclipse deal is incorrect after BMI quote revised.
                                                            INSTANT_PRC_AMT = RECBD.Instantprcamt --Added for CR: 255803-[HPE][Channel][US-7301] The deal reg info in eclipse deal is incorrect after BMI quote revised.
                                                        WHERE lds.line_nr =l_line_nr --CR187267
--                                                                      (SELECT line_nr
--                                                                      FROM line_item
--                                                                      WHERE bd_id        =i_bd_id
--                                                                      AND line_type_cd   ='BD'
--                                                                      AND PROD_GNRC_NR_TX=recbd.sku
--                                                                      and BMI_DOC_NO=recbd.bmi_doc_no --by harsh Shah 14 March 2014
--
--                                                                      AND prod_opt_cd    =DECODE(recbd.OptCd,NULL,' ',RECBD.OptCd)
--                                                                      )
                                                                and lds.bd_id=i_bd_id
                                                                and lds.scale_id=
                                                                     (SELECT NVL(MAX(scale_id),0)
                                                                        FROM line_disc_scale
                                                                        WHERE bd_id=i_bd_id
                                                                        AND line_nr=l_line_nr --CR187267
--                                                                        (
--                                                                         SELECT line_nr
--                                                                      FROM line_item
--                                                                      WHERE bd_id        =i_bd_id
--                                                                      AND line_type_cd   ='BD'
--                                                                      AND PROD_GNRC_NR_TX=recbd.sku
--                                                                      and BMI_DOC_NO=recbd.bmi_doc_no --by harsh Shah 14 March 2014
--                                                                      AND prod_opt_cd    =DECODE(recbd.OptCd,NULL,' ',RECBD.OptCd)
--                                                                        )
                                                                        );
                                                                        --dbms_output.PUT_LINE ('Updating Header Bundle BDNet,line disc scale..done,rows updated' || sql%rowcount);

                                        END; -- UPDATE LINE DISC SCALE table.
                        END IF;      ---- IF LINE ITEM ROWS ARE UPDATED
                 END;  -- END OF UPDATE  header Qty in the line item table for the bundle header
        END IF; -- end if  of request type ='Hold'
END LOOP; --end of loop for bundle products
EXCEPTION
            WHEN OTHERS THEN
           l_errors := 'Updating bundles failed for the bundle : '||l_sku ||' with option code: '||l_OPTCD||SQLERRM  ||'. Error at Line : ' || dbms_utility.format_error_backtrace();
        --    l_errors := 'Updating bundles failed for the bundle : '||recbd.sku||' with option code: '||recbd.optcd||SQLERRM  ||'. Error at Line : ' || dbms_utility.format_error_backtrace();
            --l_msg_type := 'WARNING';
            INSERTERROR_OUTPUT_MESSAGES ( i_bd_id, i_bd_nr, i_bd_version_nr, null, null, null, null, null, null, null, l_errors, 'WARNING', i_deal_creation_guid, NULL, NULL,l_errors);
END UpdateBundles;

--Changes made for US6339 and US6381
PROCEDURE BMICreateNewDeal(
    i_deal_creation_guid IN VARCHAR2,
    p_result OUT sys_refcursor,
    p_prod_details OUT SYS_REFCURSOR )
IS
  l_xml_path_to_Query VARCHAR2(100);
  l_bus_justify_bd_id deal.bd_id%type;
  L_RECTEST user_tab.user_id%type;--VARCHAR2(100);   Commented VARCHAR2 as part of EDMS Hardening process
  L_DEALSOURCEEUPROFILEDESC DEAL.DEAL_SOURCE_DEAL_IDENTIFIER%type;
  l_euv_at_won_fl bus_model.euv_at_won_fl%type;
  l_euv_required_fl bus_model.euv_required_fl%type;
  l_quote_send_pdf_fl bus_model.quote_send_pdf_fl%type;
  l_quote_send_txt_fl bus_model.quote_send_txt_fl%type;
  l_new_opg_num deal.opg_num%type;
  l_quote_recepients_email_list VARCHAR2(4000);
  l_temp_emails                 VARCHAR2(200);
  l_send_quote_fl               VARCHAR2(1):='N';
  l_ConflictCheckPassedFl deal.CONFLICT_CHK_FL%type;
type deal_auth_actions_rec
IS
  record
  (
    bundle_exists              VARCHAR (1) :='N',
    bd_line_exists             VARCHAR (1) :='N',
    line_item_line_exists      VARCHAR2 (1):='N',
    bd_lines_authorized        VARCHAR2 (1):='N',
    line_item_lines_authorized VARCHAR2 (1):='N',
    line_disc_lines_exists     VARCHAR2 (1):='N',
    line_disc_lines_authorized VARCHAR2 (1):='N',
    reseller_a_added           VARCHAR2 (1):='N',
    reseller_b_added           VARCHAR2 (1):='N' );
  set_deal_actions_rec deal_auth_actions_rec;
  l_Line_Item_authorized VARCHAR (1):='N';
  L_euc_cntry_cd DEAL.euc_cntry_cd%TYPE;
  l_auth_date_gmt bundle_line.auth_dt_gmt%type;
  L_AUTH_MC_DATE LINE_ITEM.AUTH_MC_DATE%type;
  l_is_all_lines_authorized VARCHAR2(1):='N'; -- This flag is used at the end of the package to check, if all lines (bundle_line, Line_disc_scale,line_item) are authorized.
  l_bm_conflict_chk_reqd_fl bus_model.conflict_chk_reqd_fl%type;
  l_bd_line_auth_status   VARCHAR2(1):='N'; -- Used to check if the Bundle lines are marked as authorised --This variable is not used anywhere, can be removed.
  l_oe_user_seq_nr        NUMERIC(5) :=0;
  l_bd_hdr_sku_list_price  NUMERIC(16,2); --NUMERIC(10,2); Commented this to match the precision and scale of Line Disc Scale table
  l_BD_HDR_SKU_qty        NUMERIC(10);
  l_rslr_a_added          VARCHAR2(1):='N';
  l_rslr_b_added          VARCHAR2(1):='N';
  l_reccount              NUMBER(10);
  l_reccount_oe           NUMBER(10);
  l_max_sq_oe             NUMBER(10);
  l_errors                VARCHAR2 (3000);
  l_lang_cd               deal.lang_cd%TYPE; --VARCHAR2 (2); -- Temp assignment. It should come from XML. Commented VARCHAR2 as part of EDMS Hardening process
  l_optionalcode          VARCHAR2 (10) := '(optional)';
  l_current_version_fl    deal.current_version_fl%TYPE := 'Y'; --VARCHAR2 (1)  := 'Y'; Commented VARCHAR2 as part of EDMS Hardening process
  l_deal_creation_guid edms_deal_queue.deal_creation_guid%type;
  l_requesttype  VARCHAR2 (30);
  l_xmlnamespace VARCHAR2 (250);
  --Deal Table
  l_asapindicator deal.asap_indicator_cd%type;
  l_begindate deal.beg_dt%type;
  l_busmodelcd deal.bus_model_cd%type;
  L_DEALSOURCECD DEAL.DEAL_SOURCE_CD%type;
  --l_dealsourcedealidentifier deal.deal_source_deal_identifier%type;
  l_dealsourcedealtype deal.deal_source_deal_type%type;
  l_dealsourceflagvalue deal.deal_source_flag_value%type;
  l_dealsourcekeyval deal.deal_source_keyval%type;
  l_crmopportunityid deal.crm_opp_nr%type;
  l_complexdealfl deal.complex_deal_fl%type;
  l_countrycd deal.control_cntry_cd%type;
  l_currencycd deal.curr_cd%type;
  l_dealdescription deal.deal_desc_tx%type;
  l_dealnr deal.bd_nr%type;
  l_enddate deal.end_dt%type;
  l_leadbusgroup deal.lead_bus_grp%type;
  l_leadbusunit deal.bus_unit_cd%type;
  l_mcchargecd deal.mc_charge%type;
  l_pricelistcd deal.price_list_cd%type;
  l_pricetermcd deal.price_term_cd%type;
  l_routingindicator deal.routing_indicator_cd%type;
  l_singlecompanydeal deal.single_cmpny_deal_fl%type;
  l_suppliesonlyfl DEAL.supplies_only_fl%TYPE;
  l_quotedbyempnr deal.quote_hp_emp_nr%type;
  l_quotedbyempemail employee.email_unix_addr_tx%type;-----email change for ePrime and BMI
  l_quoted_by_user_id user_tab.user_id%type;
  l_wonlostdate deal.w_l_upd_dt%type;
  l_wonlostempnr deal.w_l_upd_emp_nr%type;
  l_wonlostempemail employee.email_unix_addr_tx%type;-----email change for ePrime and BMI
  l_wonloststatcd deal.w_l_stat_cd%type;
  l_eclipse_user_id user_tab.user_id%type;
  --deal Actions variables
  l_dealapprfl  deal.bdme_aprvl_cd%TYPE; --VARCHAR2(1); Commented VARCHAR2 as part of EDMS Hardening process
  l_dealquotefl deal.quote_dist_cd%TYPE; --VARCHAR2(1); Commented VARCHAR2 as part of EDMS Hardening process
  l_dealroutefl VARCHAR2 (1);
  l_dealvertocreate deal.bd_version_nr%type;
  l_cancelreasoncd VARCHAR2 (30); --need to check which table will contain this
  l_euvcompletiondate deal_euv.euv_comp_dts%type;
  l_euvcompletionhpempnr deal_euv.euv_emp_nr%type;
  l_euvcompletionhpempemail employee.email_unix_addr_tx%type;-----email change for ePrime and BMI
  L_EUVTYPECD DEAL_EUV.EUV_TYPE%type;
  L_EUVREASONCD DEAL_EUV.EUV_REASON_CD%type;
  l_EUVReasonDesc deal_euv.euv_reason_txt%type;
  l_busjustifycd deal_bus_justify.bus_justify_cd%type;
  l_busjustifycommentblob CLOB;       --varchar2(32767);-- (4000); --CR4482
  l_busjustifycommentblob_temp BLOB; ---CR4482
  l_BusJustifySubject deal_bus_justify.SUBJECT%type;
  --DEAL_BUS_JUSTIFY.COMMENTS%type; --mightneed to change ...as this is a blob
  -- column...not sure how xml will handle this.
  l_busjustifyempnr deal_bus_justify.last_change_emp_nr%type;
  l_busjustifyempemail employee.email_unix_addr_tx%type;-----email change for ePrime and BMI
  l_crmid deal.crm_id%type;
  l_custindustry industry.industry_nr%type;
  l_custrfpnr VARCHAR2(500);                 --deal.euc_rfp_nr%type;          --varchar CR4815
  l_custsegment cust_seg.cust_seg_desc%type; --varchar
  --l_cust_seg_cd deal.cust_seg_cd%type;
  l_dunsnr         VARCHAR2(500);                --deal.euc_duns_nr%type;                --varchar CR4815
  L_PRESALESCUSTID VARCHAR2 (30);                --need to validate further
  l_presalessource eu_cust.presales_source%type; -- added on 31-Oct-2011
  l_deal_creator_dc deal.init_hp_emp_nr%type;
  l_sales_rep_sr_emp deal.driving_hp_emp_nr%type;
  l_deal_lead_dl_emp deal.deal_lead_emp_nr%type;
  l_dist_sales_mgr_dsm_emp deal.dsm_hp_emp_nr%type;
  l_incentivefl VARCHAR2 (1); --need to decide in which table it will go.
  l_incentivepct deal_pl.sales_incentive_pct%type;
  l_pl deal_pl.prod_line_cd%type;
  l_bd_nr   deal.bd_nr%TYPE; --NUMBER;  Commented NUMBER as part of EDMS Hardening process
  new_bd_nr deal.bd_nr%TYPE; --NUMBER (10); Commented NUMBER as part of EDMS Hardening process
  l_bd_id   deal.bd_id%TYPE; --NUMBER; Commented NUMBER as part of EDMS Hardening process
  l_seq     NUMBER (10) := 0;
  l_region ww_cntry.region%type;
  l_global_fl bus_model.global_fl%type;
  l_hierarchy_cd deal_matrix.hierarchy_cd%type;
  l_revsn_dt_gmt deal.revsn_dt%type;
  l_catalog_deal_fl deal.catalog_deal_fl%type;
  l_deal_audience_fl deal.deal_audience_fl%type;
  l_line_type_cd line_item.line_type_cd%type;
  l_line_nr line_item.line_nr%type;
  l_line_prog_cd line_item.line_prog_cd%type;
  l_support_pack_fl line_item.support_pack_fl%type;
  l_future_prod_fl line_item.future_prod_fl%type;
  l_change_pndg_fl line_item.change_pndg_fl%type;
  l_bd_version_nr deal.bd_version_nr%TYPE; --NUMBER (10); Commented NUMBER as part of EDMS Hardening process
  --line_item table variables
  l_line_bus_group_cd line_item.bus_group_cd%type; --used for LIne_item data
  l_line_bus_unit_cd line_item.bus_unit_cd%type;   --used for line item data
  l_line_prod_gnrc_desc_tx line_item.prod_gnrc_desc_tx%type;
  l_line_prod_gnrc_nr_tx line_item.prod_gnrc_nr_tx%type;
  --line_disc_scale variables
  l_scale_id line_disc_scale.scale_id%TYPE; --NUMBER (5); Commented NUMBER as part of EDMS Hardening process
  l_auth_mc_hp_emp_nr line_item.auth_mc_hp_emp_nr%type;
  l_auth_generic_emp_nr line_item.auth_generic_emp_nr%type;--added for new auth changes
  l_line_auth_type line_item.line_auth_type%type;         ---added newly for new auth changes
  --deal customer info
  l_eu_cust_nr deal.eu_cust_nr%type; --X10001058868
  l_eu_cmpny_nm deal.eu_cmpny_nm%type;
  l_euc_city_nm deal.euc_city_nm%type;
  l_euc_st_prov deal.euc_st_prov%type;
  l_bus_justify_reqd_fl bus_model.bus_justify_reqd_fl%type; --bus justification\
  l_mdcp_org_id eu_cust.org_id%type;
  l_mdcp_other_prty_site_id eu_cust.dft_endcust_otrprtysite_id%type;
  --l_eprime_euc_nr eu_cust.euc_nr%type; Commented by Lakshmi on 9/10/2014 to use generic variable l_euc_nr declared in the below line.
  l_euc_nr eu_cust.euc_nr%type; --Added by Lakshmi on 9/10/2014.
  -- required flag
  l_bus_justify_code_exists NUMBER (3);
  --l_euc_industry_nr deal.euc_industry_nr%type;
  l_deal_bus_justify_id NUMBER (10);
  l_bus_justify_comp_fl deal.bus_justify_comp_fl%type;
  a_out1              NUMBER (10);
  a_out2              NUMBER (10);
  a_out3              VARCHAR2 (500);
  a_out4              VARCHAR2 (500);
  a_out5              VARCHAR2 (500);
  a_out6              VARCHAR2 (500);
  a_out7              VARCHAR2 (500);
  l_prod_fam_cd       VARCHAR2 (10);
  l_temp_sku          VARCHAR2 (50);
  l_quote_queue_id    NUMBER (10);
  l_deal_prog_cd      deal.deal_prog_cd%TYPE :='U'; --  VARCHAR2(2):='U'; Commented VARCHAR2 as part of EDMS Hardening process
  l_bdme_aprvl_cd     deal.bdme_aprvl_cd%TYPE :='N'; --VARCHAR2(2):='N'; Commented VARCHAR2 as part of EDMS Hardening process
  l_quote_dist_cd     deal.quote_dist_cd%TYPE :='N'; --VARCHAR2(2):='N'; Commented VARCHAR2 as part of EDMS Hardening process
  l_high_risk_fl      deal.deal_risk_fl%TYPE :='N'; --VARCHAR2(1):='N'; Commented VARCHAR2 as part of EDMS Hardening process
  --l_high_risk_fl      VARCHAR2(1):='Y';
  l_risk_reasion_desc VARCHAR2(100);
  L_EUV_STAT_CODE     VARCHAR2(10);
  L_RISK_REASON_DESC GT_EDMS_SMQT_ERR_RESULTS.RISK_REASON_DESC%type;
  l_risk_desc gt_edms_smqt_err_results.risk_desc%type;
  l_msg_type                 VARCHAR2(15);
  l_routing_indicator_rqd_fl VARCHAR2(1):='N';
  L_AUTH_BASIS_TEXT LINE_DISC_SCALE.AUTH_BASIS_TEXT%type;
  l_auth_disc_otc_pc line_disc_scale.auth_disc_ot_pc%TYPE:=0;  --NUMBER(5,2)      :=0;Commented NUMBER as part of EDMS Hardening process
  l_rqst_disc_otc_pc line_disc_scale.rqst_disc_ot_pc%TYPE:=0; --NUMBER(5,2)      :=0; Commented NUMBER as part of EDMS Hardening process
  l_euv_comp_fl deal.euv_comp_fl%type :='N';
  p_gypsy_price sys_refcursor; --Contains the GPSy price details - fetched
  p_route_deal_messages sys_refcursor;
  rec_rout_deal gt_edms_smqt_err_results%rowtype;
  l_auth_bdnet_amt line_disc_scale.rqst_bd_net_prc_am%type;
  L_EXT_PRE_APPRV_PRC_AM LINE_DISC_SCALE.EXT_PRE_APPRV_PRC_AM%TYPE;
  L_RISK_REASON VARCHAR2(300);
  l_hdr_bd_sku_opt_cd line_item.prod_opt_cd%type;
  L_CISYS_ID EU_CUST.CISYS_ID%type;
  L_HDR_PROD_STD_DISC line_disc_scale.HIGH_RSLR_A_SD_PC%type;
  l_line_AuthBasisDesc LINE_DISC_SCALE.AUTH_BASIS_TEXT%type;
  l_line_AuthStat bundle_line.ITEM_PROG_CD%type;
  l_line_AuthDtGMT DATE;
  l_line_AuthDtGMT_Char varchar2(200);
  l_weigh_avg_std_disc_pct line_disc_scale.high_rslr_a_sd_pc%type:=0;
  insert_into_line_item VARCHAR2(1);
  pn_count NUMBER;
  --by Harsh Shah 15-nov-2013
  l_ignoreV0_to_V1Validations varchar2 (1):='N';
  L_GenerateOPGNbrFl varchar2(1):='N'; -- By Harsh Shah 20-Dec-2013
  l_ismultibg_deal deal.ismultibg_deal%TYPE;
  o_error_message VARCHAR2(2000);
  -- through DARTWWI
/*type gypsy_rec
IS
  RECORD
  (
    prod_nr         VARCHAR2 (50),
    prod_opt_cd     VARCHAR2 (10),
    prod_desc       VARCHAR2 (100),
    stat            VARCHAR2 (10),
    price           NUMBER (16, 2),
    prod_line       VARCHAR2 (5),
    prod_family     VARCHAR2 (100),
    start_eff_dt    DATE,
    low_price       NUMBER (16, 2),
    qty_brk         NUMBER (10),
    end_eff_dt      DATE,
    ref_price_fl    VARCHAR2 (1),
    non_discount_fl VARCHAR2 (1),
    plc_fl          VARCHAR2 (10) );
  */
  gprice gypsy_rec;
  l_gypsy_prod_string VARCHAR2(200);
  l_createnewversion  VARCHAR2(1):='Y';
  l_bundle_config bundle.config_id%type; -- NUMBER(10) :=0; --Commented as part of CR5020
  l_bundle_line_nr     NUMBER(10) :=0;
  l_bundle_dtl_line_nr NUMBER(10) :=0;
  l_progress           VARCHAR2(70);
  l_high_list_line_nr bundle_line.line_nr%type; --CR 4744
  l_high_list_pl bundle_line.assoc_pl%type;     --CR 4744
  --Rollout Variables
  l_rollout_ins_qry VARCHAR2(4000);
  l_no_of_months    NUMBER;
  l_rollout_mnths t_rollout_mnths:=t_rollout_mnths();
  --Exception Declaration.
  reject_deal            EXCEPTION;
  reject_deal_bundles    EXCEPTION;
  reject_won_lost_update EXCEPTION;
  TEMP_TABLE_FAILURE exception; -- by Harsh Shah 27-Jan-2015, US7832, for performance Improvement.
  l_allow_sq_deals_creation bus_model.allow_sq_deals_creation%type;
  L_BUS_MODEL_DESC BUS_MODEL.DESC_TXT%type;
  L_DEFAULT_QUOTE_EXPIRE_ITEM_FL BUS_MODEL.DEFAULT_QUOTE_EXPIRE_ITEM_FL%type;
  L_O_DCTEXPIRETHRESHOLDPCT BUS_MODEL.MAX_QTY_THRESHOLD_PCT%type;
  l_rebatable_fl deal.rebatable_fl%type; ---Added for CR4760
  l_rt_qty rollout_schedule.rtqty%type;
  L_RQST_MARGIN_PCT LINE_DISC_SCALE.RQST_MARGIN_PCT%type;
  L_AUTH_MARGIN_PCT LINE_DISC_SCALE.AUTH_MARGIN_PCT%type;
  L_PROD_COST_PRICE_HDR_PROD BUNDLE_LINE.PROD_COST_AM%TYPE:=0;
  l_oe_emp_exist VARCHAR2(32767); ----added for oe employee check
  l_oe_emp_nr employee.emp_nr%type;
  l_rslra_proid NUMBER;
  l_rslrb_proid NUMBER;
  l_emp_exists  NUMBER;
  l_sr_exists   NUMBER;
  l_sfdc_opp_id deal.crm_opp_nr%type;                     --Added in ePrime and BMI requirement
  l_sfdc_rqst_id deal.request_id%type;                   ---Added in ePrime, BMI requirement
  l_ext_quote_nr deal.deal_source_ext_quote_nr%type;      --added to store BMI values
  l_ext_quote_version deal.deal_source_ext_quote_ver%type;--added to store BMI values
  l_prc_pro_cd deal.prc_pro_cd%type:='N';--Changed O to N for CR:281985
  l_splitdealfl deal.split_deal_fl%TYPE;
  deal_cnt NUMBER;
  l_sap_appr_fl bus_model.sap_apprvl_fl%type;
  --l_deal_time_seq NUMBER;
  start_time NUMBER;
  end_time NUMBER;
  l_v$instance VARCHAR2(200);
  --l_deal_default_duration_days bus_model.deal_default_duration_days%TYPE;
  cnt_valid_rslr_a_cbn NUMBER;
  --l_rtm VARCHAR2(100);
  l_ptnr_exclusivity_fl deal.PARTNER_EXCLUSIVITY_FL%TYPE:= 'N'; --VARCHAR2(1) := 'N'; Commented VARCHAR2 as part of EDMS Hardening process
  l_CorpRslrAsDistFl deal.CORPORATE_RESELLER_FL%TYPE;--New tag added by Lakshmi as part of US6339 -APJ Corporate Resellers

  --List of variables added by Lakshmi on 9/16/2014 to send emails when deal goes to High Risk:
l_app_value APP_CONFIG_KEYS.app_value%TYPE;
l_from_address eclp_email_template.email_from_id%TYPE;
l_email_subject eclp_email_template.EMAIL_SUBJECT_TX%TYPE;
l_email_body eclp_email_template.EMAIL_BODY_TX%TYPE;
l_to_address  eclp_email_template.email_from_id%TYPE;
emp_email_address eclp_email_template.email_from_id%TYPE;
receipient_email_address VARCHAR2(4000);
l_cntry_cd deal.control_cntry_cd%TYPE;
l_bus_model_cd deal.bus_MODEL_CD%TYPE;
l_euc_cmpny_Nm deal.eu_cmpny_nm%TYPE;
l_tenantid deal.tenantid_data_cd%type;---l_tenantid deal.tenantid%type;---Added for SMO changes (tenantid column is replace with tenantid_data_cd for Federal project)
l_mixed_tenant_cd deal.MIXEDTENANTCD%type;
--l_res_comp VARCHAR2(4000); --Added to get the result for complex deal flag

user_cancelled EXCEPTION;

PRAGMA EXCEPTION_INIT(user_cancelled, -1013);

l_app_value_regions APP_CONFIG_KEYS.app_value%TYPE;

l_won_lost_prob_pct deal.w_l_prob%TYPE; --New variable added by Lakshmi to update Won/Loss probability

l_created_by deal.created_by%TYPE; --New variable added by Lakshmi for Aruba
l_product_mix deal.product_mix%TYPE; --New variable added by Lakshmi for Aruba

l_log_messages VARCHAR2(1);

l_update_deal_disc_sources APP_CONFIG_KEYS.APP_VALUE%TYPE; --New variable added by Lakshmi to update Deal Disc Type codes

BEGIN
start_time := dbms_utility.get_time();
--SELECT instance_name INTO l_v$instance  FROM sys.v_$instance ;
--l_errors := 'Deal created using Oracle Instance: '|| l_v$instance;
--INSERTERROR_OUTPUT_MESSAGES(NULL, NULL, NULL, NULL, NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,l_deal_creation_guid,NULL, NULL, l_errors);
  --initializing the paramters/Local variables.
  --L_BD_ID        :=-1;
  --l_bd_nr        :=-1;
  L_BD_ID        :=0;
  l_bd_nr        :=0;
  l_bd_version_nr:=0;
  DELETE
  FROM edms_deal_error_report
  WHERE DEAL_CREATION_GUID = I_DEAL_CREATION_GUID;
  --initializing the global temporary table
  L_PROGRESS :='Delete from  GT_EDMS_SMQT_ERR_RESULTS';
  DELETE FROM GT_EDMS_SMQT_ERR_RESULTS;
  COMMIT;
  
  SELECT app_value
  INTO l_log_messages
  FROM APP_CONFIG_KEYS
 WHERE app_key='LOG_EXT_LP_MSG';
 
  --deal creation guid
  l_deal_creation_guid := i_deal_creation_guid;
  --assigning to global variable.
  g_deal_creation_guid     := i_deal_creation_guid;
  IF (i_deal_creation_guid IS NULL OR i_deal_creation_guid = ' ') THEN
    l_errors               :=' Deal Creation Guid is blank ';
    l_msg_type             :='ERROR';
    raise reject_deal;
  END IF;
  --xml namespace declaration
  L_XMLNAMESPACE := 'xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://schemas.datacontract.org/2004/07/HP.Eclipse.Data.EDMS"' ;
  --  l_dealsourcecd            := getsqtxmlvalue ( '/DealCreationRequest/DealRequestSource/DealSourceCD/', l_deal_creation_guid);


 --Commented by Harsh Shah 27-Jan-2015 for performance improvement
 --US7832
 /*

  l_dealsourcecd      := getsqtxmlvalue ( '/DealCreationRequest/DealRequestSource/ExtSourceCD/', l_deal_creation_guid);     --tag from new  xml
  l_ext_quote_nr      := getsqtxmlvalue ( '/DealCreationRequest/DealRequestSource/ExtQuoteNr/', l_deal_creation_guid);      --tag from new  BMI xml
  l_ext_quote_version := getsqtxmlvalue ( '/DealCreationRequest/DealRequestSource/ExtQuoteVersion/', l_deal_creation_guid); --tag from new  BMI xml
  l_DealSourceEUProfileDesc := getsqtxmlvalue ( '/DealCreationRequest/DealRequestSource/ExtEUProfileDesc/', l_deal_creation_guid); --tag from new xml

  l_dealsourcedealtype  := getsqtxmlvalue ( '/DealCreationRequest/DealRequestSource/DealCreationType/', l_deal_creation_guid);--tag from new xml
  l_dealsourceflagvalue := getsqtxmlvalue ( '/DealCreationRequest/DealRequestSource/DealSourceFlagValue/', l_deal_creation_guid);

  l_dealsourcekeyval := getsqtxmlvalue ( '/DealCreationRequest/DealRequestSource/ExtUniqueKey/', l_deal_creation_guid);---tag from new xml
  l_requesttype      := getsqtxmlvalue ( '/DealCreationRequest/DealRequestSource/RequestType/', l_deal_creation_guid);
  */

   --by Harsh Shah 23-Jan-2015 For performance improvement
   -- --US7832
  --<DealRequestSource>

  SELECT EXTRACT ( VALUE (D), '//ExtSourceCD/text()', L_XMLNAMESPACE). GETSTRINGVAL ()    AS ExtSourceCD,
      EXTRACT ( VALUE (D), '//ExtQuoteNr/text()', L_XMLNAMESPACE). GETSTRINGVAL ()          AS ExtQuoteNr,
      EXTRACT ( VALUE (D), '//ExtQuoteVersion/text()', L_XMLNAMESPACE). GETSTRINGVAL ()     AS ExtQuoteVersion,
      EXTRACT ( VALUE (D), '//ExtEUProfileDesc/text()', L_XMLNAMESPACE). GETSTRINGVAL ()    AS ExtEUProfileDesc,
      EXTRACT ( VALUE (D), '//DealCreationType/text()', L_XMLNAMESPACE). GETSTRINGVAL ()    AS DealCreationType,
      EXTRACT ( VALUE (D), '//DealSourceFlagValue/text()', L_XMLNAMESPACE). GETSTRINGVAL () AS DealSourceFlagValue,
      EXTRACT ( VALUE (D), '//ExtUniqueKey/text()', L_XMLNAMESPACE). GETSTRINGVAL ()        AS ExtUniqueKey,
      EXTRACT ( VALUE (D), '//RequestType/text()', L_XMLNAMESPACE). GETSTRINGVAL ()         AS RequestType
      INTO
      l_dealsourcecd,
      l_ext_quote_nr,
      l_ext_quote_version,
      l_DealSourceEUProfileDesc,
      l_dealsourcedealtype,
      l_dealsourceflagvalue,
      l_dealsourcekeyval,
      l_requesttype
    FROM edms_deal_queue x,
      TABLE ( xmlsequence ( EXTRACT ( x.xml_data_xml, 'DealCreationRequest/DealRequestSource', L_XMLNAMESPACE))) d
    WHERE x.deal_creation_guid =i_deal_creation_guid;


  --deal header
  -- commented by Harsh Shah for performance improvement
  -- 27-Jan-2015
  /*
  l_asapindicator := getsqtxmlvalue ('/DealCreationRequest/DealHeader/ASAPIndicator/', l_deal_creation_guid);

  l_begindate             := to_timestamp ( SUBSTR(getsqtxmlvalue ( '/DealCreationRequest/DealHeader/BeginDate/', l_deal_creation_guid),1,19), 'YYYY-MM-DD"T"HH24:MI:SS');
  l_busmodelcd            := getsqtxmlvalue ('/DealCreationRequest/DealHeader/BusModelCD/', l_deal_creation_guid);
  l_complexdealfl         := getsqtxmlvalue ('/DealCreationRequest/DealHeader/ComplexDealFl/', l_deal_creation_guid);
  l_countrycd             := getsqtxmlvalue ('/DealCreationRequest/DealHeader/CountryCD/', l_deal_creation_guid);
  l_currencycd            := getsqtxmlvalue ('/DealCreationRequest/DealHeader/CurrencyCD/', l_deal_creation_guid);
  l_dealdescription       := getsqtxmlvalue ( '/DealCreationRequest/DealHeader/DealDescription/', l_deal_creation_guid);
  l_dealdescription := REPLACE(REPLACE(l_dealdescription, chr(10),' '), chr(13),' ');
  l_conflictcheckpassedfl := getsqtxmlvalue ( '/DealCreationRequest/DealHeader/ConflictCheckPassedFl/', l_deal_creation_guid);

   l_CorpRslrAsDistFl :=  getsqtxmlvalue ( '/DealCreationRequest/DealHeader/CorpRslrAsDistFl/', l_deal_creation_guid);--Added by Lakshmi as part of US6339 -APJ Corporate Resellers

   */

   --by Harsh Shah 27-Jan-2015
   --for Performance Improvement
   --US 7832
   --         to_timestamp ( EXTRACT ( VALUE (D), '//BeginDate/text()', l_xmlnamespace). GETSTRINGVAL ()      ,'YYYY-MM-DD"T"HH24:MI:SS')       AS BeginDate,
   --Date timestamp format modified by Harsh for NGQ- 03/11/2015
   SELECT
          EXTRACT ( VALUE (D), '//ASAPIndicator/text()', l_xmlnamespace). GETSTRINGVAL ()    AS ASAPIndicator,
        to_timestamp ( SUBSTR(EXTRACT ( VALUE (D), '//BeginDate/text()', l_xmlnamespace). GETSTRINGVAL () ,1,19)  ,'YYYY-MM-DD"T"HH24:MI:SS')       AS BeginDate,
          EXTRACT ( VALUE (D), '//BusModelCD/text()', l_xmlnamespace). GETSTRINGVAL ()            AS BusModelCD,
          EXTRACT ( VALUE (D), '//ComplexDealFl/text()', l_xmlnamespace). GETSTRINGVAL ()         AS ComplexDealFl,
          EXTRACT ( VALUE (D), '//CountryCD/text()', l_xmlnamespace). GETSTRINGVAL ()             AS CountryCD,
          EXTRACT ( VALUE (D), '//CurrencyCD/text()', l_xmlnamespace). GETSTRINGVAL ()            AS CurrencyCD,
          EXTRACT ( VALUE (D), '//DealDescription/text()', l_xmlnamespace). GETSTRINGVAL ()       AS DealDescription,
          EXTRACT ( VALUE (D), '//ConflictCheckPassedFl/text()', l_xmlnamespace). GETSTRINGVAL () AS ConflictCheckPassedFl,
          EXTRACT ( VALUE (D), '//CorpRslrAsDistFl/text()', l_xmlnamespace). GETSTRINGVAL ()      AS CorpRslrAsDistFl,
          EXTRACT ( VALUE (D), '//TenantID/text()', l_xmlnamespace). GETSTRINGVAL ()      AS tenantid,---Added for SMO
          EXTRACT ( VALUE (D), '//CreatedBy/text()', l_xmlnamespace). GETSTRINGVAL ()      AS CreatedBy,--New variable added by Lakshmi for Aruba
          EXTRACT ( VALUE (D), '//ProductMix/text()', l_xmlnamespace). GETSTRINGVAL ()      AS ProductMix--New variable added by Lakshmi for Aruba
        INTO l_asapindicator,
          l_begindate,
          l_busmodelcd,
          l_complexdealfl,
          l_countrycd,
          l_currencycd,
          l_dealdescription,
          l_conflictcheckpassedfl,
          l_CorpRslrAsDistFl,
          l_tenantid -- Added for SMO changes
          ,l_created_by --New variable added by Lakshmi for Aruba
          ,l_product_mix --New variable added by Lakshmi for Aruba
FROM edms_deal_queue x,
  TABLE ( xmlsequence ( EXTRACT ( x.xml_data_xml, 'DealCreationRequest/DealHeader', l_xmlnamespace))) d
WHERE x.deal_creation_guid =i_deal_creation_guid;

l_dealdescription := REPLACE(REPLACE(l_dealdescription, chr(10),' '), chr(13),' ');

--by Harsh Shah 04/01/2015
l_errors:='TenantID received from Source System is ' || l_tenantid;
INSERTERROR_OUTPUT_MESSAGES ( NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, l_errors, 'WARNING', l_deal_creation_guid, NULL, NULL,l_errors);

--dbms_output.put_line (l_errors);

--dbms_output.put_line (l_errors);

  --dbms_output.put_line (' l_ConflictCheckPassedFl ' || l_conflictcheckpassedfl);
  --deal No is not required since we are going to generate the deal No from
  -- this package.
  l_enddate           := to_timestamp ( SUBSTR(getsqtxmlvalue ( '/DealCreationRequest/DealHeader/EndDate/', l_deal_creation_guid),1,19) ,'YYYY-MM-DD"T"HH24:MI:SS');
  l_leadbusgroup      := getsqtxmlvalue ('/DealCreationRequest/DealHeader/LeadBusGroup/', l_deal_creation_guid);
  l_leadbusunit       := getsqtxmlvalue ('/DealCreationRequest/DealHeader/LeadBusUnit/', l_deal_creation_guid);
  l_mcchargecd        := getsqtxmlvalue ('/DealCreationRequest/DealHeader/McChargeCD/', l_deal_creation_guid);
  l_pricelistcd       := getsqtxmlvalue ('/DealCreationRequest/DealHeader/PriceListCD/', l_deal_creation_guid);
  l_pricetermcd       := getsqtxmlvalue ('/DealCreationRequest/DealHeader/PriceTermCD/', l_deal_creation_guid);
  l_routingindicator  := getsqtxmlvalue ( '/DealCreationRequest/DealHeader/RoutingIndicator/', l_deal_creation_guid);
  l_singlecompanydeal := getsqtxmlvalue ( '/DealCreationRequest/DealHeader/SingleCompanyDeal/', l_deal_creation_guid);
   l_suppliesonlyfl    := getsqtxmlvalue ( '/DealCreationRequest/DealHeader/SuppliesOnlyFl/', l_deal_creation_guid);
  l_sfdc_opp_id       := getsqtxmlvalue ( '/DealCreationRequest/DealHeader/SFDCOppID/', l_deal_creation_guid);
  l_sfdc_rqst_id      :=getsqtxmlvalue ( '/DealCreationRequest/DealHeader/SFDCRequestID/', l_deal_creation_guid);
  l_splitdealfl       :=getsqtxmlvalue ( '/DealCreationRequest/DealHeader/SplitDealFl/', l_deal_creation_guid);
  
          
  --Below code added by Lakshmi to read Price Protection Code from XML.
  --l_prc_pro_cd := NVL(getsqtxmlvalue ( '/DealCreationRequest/DealHeader/ProtectionCD/', l_deal_creation_guid),'O');
  l_prc_pro_cd := NVL(getsqtxmlvalue ( '/DealCreationRequest/DealHeader/ProtectionCD/', l_deal_creation_guid),'N'); --Changed O to N for CR:281985
  ----dbms_output.PUT_LINE('l_sfdc_rqst_id: '||l_sfdc_rqst_id);
  --<DealActions>
  l_dealapprfl      := getsqtxmlvalue ('/DealCreationRequest/DealActions/DealApprFl/', l_deal_creation_guid);
  l_dealquotefl     := getsqtxmlvalue ('/DealCreationRequest/DealActions/DealQuoteFl/', l_deal_creation_guid);
  l_dealroutefl     := getsqtxmlvalue ('/DealCreationRequest/DealActions/DealRouteFl/', l_deal_creation_guid);
  l_dealvertocreate := getsqtxmlvalue ( '/DealCreationRequest/DealActions/DealVerToCreate/', l_deal_creation_guid);
  l_ignoreV0_to_V1Validations:=getsqtxmlvalue ('/DealCreationRequest/DealActions/IgnoreV0toV1Validations/', l_deal_creation_guid);
  l_ignoreV0_to_V1Validations :='N';--Temporarily hard coded this value
  --by Harsh Shah 20-Dec-2013
  L_GENERATEOPGNBRFL := GETSQTXMLVALUE ( '/DealCreationRequest/DealActions/GenerateOPGNbrFl/', L_DEAL_CREATION_GUID);

  -- l_quotedbyempnr   := getsqtxmlvalue ('/DealCreationRequest/DealActions/QuotedByEmpNr/', l_deal_creation_guid);
  l_quotedbyempnr    := getsqtxmlvalue ('/DealCreationRequest/DealActions/QuotedByHPEmployee/EmployeeNr/', l_deal_creation_guid); ---new eprime change
  l_quotedbyempemail :=getsqtxmlvalue ('/DealCreationRequest/DealActions/QuotedByHPEmployee/EmailAddress/', l_deal_creation_guid);---new eprime change
  l_quotedbyempemail := lOWER(l_quotedbyempemail);
  IF l_quotedbyempnr IS NULL AND l_quotedbyempemail IS NOT NULL THEN
      --dbms_output.PUT_LINE ('Getting Quoted by emp no ');
    l_quotedbyempnr  :=get_emp_nr(l_quotedbyempemail);

  END IF;
  ---<DealWonLostStat>
  l_cancelreasoncd := getsqtxmlvalue ( '/DealCreationRequest/DealWonLostSta/CancelReasonCD/', l_deal_creation_guid);
  l_wonlostdate    := to_timestamp ( SUBSTR(getsqtxmlvalue ( '/DealCreationRequest/DealWonLostStat/WonLostDate/', l_deal_creation_guid),1,19), 'YYYY-MM-DD"T"HH24:MI:SS');
  -- l_wonlostempnr   := getsqtxmlvalue ( '/DealCreationRequest/DealWonLostStat/WonLostEmpNr/', l_deal_creation_guid);
  l_wonlostempnr    := getsqtxmlvalue ( '/DealCreationRequest/DealWonLostStat/WonLostHPEmployee/EmployeeNr/', l_deal_creation_guid); ---new eprime xml
  l_wonlostempemail :=getsqtxmlvalue ( '/DealCreationRequest/DealWonLostStat/WonLostHPEmployee/EmailAddress/', l_deal_creation_guid);---new eprime xml
  l_wonlostempemail := lower(l_wonlostempemail);
  
  
  l_won_lost_prob_pct :=getsqtxmlvalue ( '/DealCreationRequest/DealWonLostStat/WonLostProbPct/', l_deal_creation_guid); --New Variable added by Lakshmi to update Won/Loss probability
  
  
  
  ----dbms_output.PUT_LINE('l_wonlostempemail: '||l_wonlostempemail);
  IF l_wonlostempnr IS NULL AND l_wonlostempemail IS NOT NULL THEN
    l_wonlostempnr  :=get_emp_nr(l_wonlostempemail);
  END IF;
  l_wonloststatcd := getsqtxmlvalue ( '/DealCreationRequest/DealWonLostStat/WonLostStatCD/', l_deal_creation_guid);
  --<DealEUVStat>
  ----dbms_output.PUT_LINE('l_wonloststatcd: '||l_wonloststatcd);
  l_euvcompletiondate := to_timestamp ( SUBSTR(getsqtxmlvalue ( '/DealCreationRequest/DealEUVStat/EUVCompletionDate/', l_deal_creation_guid),1,19), 'YYYY-MM-DD"T"HH24:MI:SS');
  --L_EUVCOMPLETIONHPEMPNR := GETSQTXMLVALUE ( '/DealCreationRequest/DealEUVStat/EUVCompletionHPEmpNr/', L_DEAL_CREATION_GUID);
  l_euvcompletionhpempnr    := getsqtxmlvalue ( '/DealCreationRequest/DealEUVStat/EUVCompletionHPEmployee/EmployeeNr/', L_DEAL_CREATION_GUID);  --new eprime change
  l_euvcompletionhpempemail := getsqtxmlvalue ( '/DealCreationRequest/DealEUVStat/EUVCompletionHPEmployee/EmailAddress/', L_DEAL_CREATION_GUID);--new eprime change
  l_euvcompletionhpempemail := lower(l_euvcompletionhpempemail);
  ----dbms_output.PUT_LINE('l_euvcompletionhpempemail: '||l_euvcompletionhpempemail);
  IF l_euvcompletionhpempnr IS NULL AND l_euvcompletionhpempemail IS NOT NULL THEN
  ----dbms_output.PUT_LINE('Calling get_emp_nr function');
    l_euvcompletionhpempnr  :=get_emp_nr(l_euvcompletionhpempemail);
    ----dbms_output.PUT_LINE('l_euvcompletionhpempnr: from get_emp_nr : '||l_euvcompletionhpempnr);
  END IF;
  ----dbms_output.PUT_LINE('Getting value of l_euvtypecd: ');
   L_EUVTYPECD     := GETSQTXMLVALUE ('/DealCreationRequest/DealEUVStat/EUVTypeCD/', L_DEAL_CREATION_GUID);
   ----dbms_output.PUT_LINE('l_euvtypecd: '||l_euvtypecd);
  L_EUVREASONCD   := GETSQTXMLVALUE ('/DealCreationRequest/DealEUVStat/EUVReasonCD/', L_DEAL_CREATION_GUID);
  ----dbms_output.PUT_LINE('L_EUVREASONCD: '||L_EUVREASONCD);
  L_EUVREASONDESC := GETSQTXMLVALUE ('/DealCreationRequest/DealEUVStat/EUVReasonDesc/', L_DEAL_CREATION_GUID);
  --<DealBusJustification>
  l_busjustifycd := getsqtxmlvalue ('/DealCreationRequest/DealBusJustification/BusJustifyCD/', l_deal_creation_guid);
  ----dbms_output.PUT_LINE('l_busjustifycd: '||l_busjustifycd);
  --  L_BUSJUSTIFYCOMMENTBLOB := GETSQTXMLVALUE ( '/DealCreationRequest/DealBusJustification/BusJustifyCommentBlob/', L_DEAL_CREATION_GUID);
    SELECT extract (xml_data_xml, '/DealCreationRequest/DealBusJustification/BusJustifyCommentBlob/text()', l_xmlnamespace). getclobval () AS result
  INTO L_BUSJUSTIFYCOMMENTBLOB
  FROM edms_deal_queue
  WHERE deal_creation_guid = l_deal_creation_guid;
  ----dbms_output.PUT_LINE('l_busjustifycommentblob: '||l_busjustifycommentblob);
  -- l_busjustifyempnr := getsqtxmlvalue ( '/DealCreationRequest/DealBusJustification/BusJustifyEmpNr/', l_deal_creation_guid);
  l_busjustifyempnr    := getsqtxmlvalue ( '/DealCreationRequest/DealBusJustification/BusJustifyHPEmployee/EmployeeNr/', l_deal_creation_guid); ---new eprime change
  l_busjustifyempemail :=getsqtxmlvalue ( '/DealCreationRequest/DealBusJustification/BusJustifyHPEmployee/EmailAddress/', l_deal_creation_guid);---new eprime change
  IF l_busjustifyempnr IS NULL AND l_busjustifyempemail IS NOT NULL THEN
    l_busjustifyempnr  :=get_emp_nr(l_busjustifyempemail);
  END IF;
  l_BusJustifySubject:=getsqtxmlvalue ( '/DealCreationRequest/DealBusJustification/BusJustifySubject/', l_deal_creation_guid);

  --<Customers>
  l_crmid := getsqtxmlvalue ('/DealCreationRequest/DealCustomer/CRMID/', l_deal_creation_guid);
  ----dbms_output.put_line ('13');
  --CRMOpportunityID
  l_crmopportunityid:= getsqtxmlvalue ( '/DealCreationRequest/DealCustomer/CRMOpportunityID/', l_deal_creation_guid);
  ----dbms_output.put_line ('14');
  ----dbms_output.PUT_LINE ('l_crmopportunityid :' || L_CRMOPPORTUNITYID);
  ----dbms_output.put_line ('15');
  --CYSISID
  L_CISYS_ID:=getsqtxmlvalue ('/DealCreationRequest/DealCustomer/CYSISID/',l_deal_creation_guid);
  --l_deal_creation_guid);
  l_custindustry            :=getsqtxmlvalue( '/DealCreationRequest/DealCustomer/CustIndustry/',l_deal_creation_guid); --its
  L_CUSTRFPNR               := GETSQTXMLVALUE ('/DealCreationRequest/DealCustomer/CustRFPNr/', L_DEAL_CREATION_GUID);
  L_CUSTSEGMENT             :=GETSQTXMLVALUE('/DealCreationRequest/DealCustomer/CustSegment/' ,L_DEAL_CREATION_GUID);
  l_dunsnr                  := getsqtxmlvalue ('/DealCreationRequest/DealCustomer/DunsNr/', l_deal_creation_guid);
  l_presalescustid          := getsqtxmlvalue ( '/DealCreationRequest/DealCustomer/PreSalesCustID/', l_deal_creation_guid);
  l_presalessource          := getsqtxmlvalue ( '/DealCreationRequest/DealCustomer/PreSalesSource/', l_deal_creation_guid);
  l_mdcp_org_id             := getsqtxmlvalue ( '/DealCreationRequest/DealCustomer/MDCPOrgID/', l_deal_creation_guid);
  l_mdcp_other_prty_site_id := getsqtxmlvalue ( '/DealCreationRequest/DealCustomer/MDCPOtherPartyID/', l_deal_creation_guid);
  --l_eprime_euc_nr           := getsqtxmlvalue ( '/DealCreationRequest/DealCustomer/EuCustNr/', l_deal_creation_guid); Commented by Lakshmi on 9/10/2014
  l_euc_nr           := getsqtxmlvalue ( '/DealCreationRequest/DealCustomer/EuCustNr/', l_deal_creation_guid);--Added by Lakshmi on 9/10/2014.

  l_rtm                     := getsqtxmlvalue ('/DealCreationRequest/DealHeader/RTM/',l_deal_creation_guid);

  /************************
  --XML data validation
  *************************/
  l_lang_cd :='99';
  --  l_auth_mc_hp_emp_nr:=-999999996;--this should be the actual authoriser from xml
  --conditon added for the new changes related to line authorization
  IF lower(l_dealsourcecd)   ='eprime' THEN
    l_auth_generic_emp_nr   :=-999999998;
    l_line_auth_type        :='EAP';
    l_prc_pro_cd            :='N';
  ELSIF lower(l_dealsourcecd) IN ('bmi') THEN --,'ngq','sts') THEN --Commented by Lakshmi, to make sure that Auth type: "BMI" appears only for BMI sourced deals.
    --l_auth_generic_emp_nr   :=-999999996;
    l_auth_generic_emp_nr   :=-999999911  ;
    l_line_auth_type        :='EAB';
    ELSIF lower(l_dealsourcecd) = ('ngq') THEN --Added this condition for CR:3259
      l_auth_generic_emp_nr   :=-999999922  ;
      l_line_auth_type        :='EAN';
  END IF; --end of new condition
  l_deal_prog_cd  :='U';
  l_bdme_aprvl_cd :='N';
  l_quote_dist_cd :='N';
  l_countrycd     :=upper(l_countrycd);
 --Validate request type
  --at present only Addition is allowed
  --commented by Harsh Shah 17-Nov-2013
  /*IF ( l_requesttype IS NULL OR( l_requesttype <>c_request_type_add AND trim(l_requesttype)<>c_request_type_add_copy_src)) THEN
    l_errors         := 'Request Type for this deal is missing or Invalid Request Type : ' || l_requesttype ||'  , Cannot proceed with the deal creation' ;
    l_msg_type       :=c_m_type_error;
    raise reject_deal;
  END IF;
  */
  --dbms_output.put_line ('Generate OPG Flag ' || l_GenerateOPGNbrFl);
  --Validate Deal's Begin and Endate


  ---ADDED for SMO  changes
    IF L_TENANTID IS NULL  OR L_TENANTID ='HPQ' THEN
    --   l_tenantid    :=GET_TENANTCD_FROM_BG  (l_leadbusgroup);
        select tenantid into l_tenantid from bus_group where bus_group_cd=l_leadbusgroup and rownum<2;
        L_errors:='TenantID derived is : ' ||l_tenantid;
       INSERTERROR_OUTPUT_MESSAGES ( NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, l_errors, 'INFO', l_deal_creation_guid, NULL, NULL,l_errors);
    END IF;

  IF L_DEALSOURCECD IS NULL THEN
    l_errors        := 'Deal Source Code is empty. Cannot proceed with the deal creation' ;
    l_msg_type      :=c_m_type_error;
    raise reject_deal;
  END IF;
   --IF LOWER(L_DEALSOURCECD) NOT IN ('eprime','bmi','smqt') THEN Commented by Lakshmi to read deal sources from DEAL_SOURCE table.
                BEGIN
                   SELECT COUNT(1)
                     INTO l_reccount
                     FROM deal_source
                    WHERE deal_src_cd = l_dealsourcecd;
                IF l_reccount=0 THEN
                    RAISE reject_deal;
                END IF;
                EXCEPTION
                   WHEN OTHERS
                   THEN
                      l_errors :=
                         'Deal Source Code is not valid . Cannot proceed with the deal creation';
                      l_msg_type := c_m_type_error;
                      RAISE reject_deal;
                END;
--  END IF;
  g_err_src          :=lower(L_DEALSOURCECD);--added for error messages

  --check if the enddate is NULL in the XML. If yes, get the deal_default_duration_days from bus_model table
  /* IF l_enddate IS NULL THEN
  BEGIN
    SELECT deal_default_duration_days INTO l_deal_default_duration_days FROM bus_model
    WHERE bus_model_cd= l_busmodelcd
    AND country_cd=l_countrycd
    AND active_fl='Y';
    dbms_output.put_line(' deal_default_duration_days: '||l_deal_default_duration_days);
     dbms_output.put_line(' Deal l_begindate: '||l_begindate);

 SELECT (l_deal_default_duration_days  + TO_DATE(l_begindate,'DD-MM-YYYY HH24:MI:SS')) INTO l_enddate FROM DUAL;
 --SELECT TRUNC(TO_DATE('21-MAR-2014 23:40:32','DD-MM-YYYY HH24:MI:SS')) + 180 FROM DUAL

--  --  l_enddate := to_timestamp (l_enddate ,'YYYY-MM-DD HH24:MI:SS');
  DBMS_OUTPUT.PUT_LINE(' l_enddate: '||L_ENDDATE);
  dbms_output.put_line(' New l_enddate: '||l_enddate);
  l_enddate             := to_timestamp ( l_enddate, 'YYYY-MM-DD"T"HH24:MI:SS');
--
 EXCEPTION
  WHEN OTHERS THEN
    l_errors            := ' Deal end date could not be determined for the given bus model and country code'||sqlerrm;
    l_msg_type          :='ERROR';
--    --raise reject_deal;
    END;
  END IF; */

  --dbms_output.put_line(' New l_enddate outside the block: '||l_enddate);

  IF (TRUNC(l_enddate)<TRUNC(l_begindate)) THEN
    l_errors         := ' Deal end date should be greater than deal begin date ' ;
    l_msg_type       :='ERROR';
    raise reject_deal;
  ELSIF months_between( TRUNC(l_enddate),TRUNC(l_begindate))>15 THEN
    l_errors                                               := ' Deal end date should be greater than deal begin date ' ;
    l_msg_type                                             :='ERROR';
    raise reject_deal;
  elsif (TRUNC(l_enddate)< TRUNC(sysdate)) THEN
    l_errors            := ' Deal end date should be greater than current date  : ' || TRUNC(sysdate) ;
    l_msg_type          :='ERROR';
    raise reject_deal;
  END IF;
  IF l_dealsourcekeyval IS NULL OR LENGTH(ltrim(rtrim(l_dealsourcekeyval)))=0 THEN
    l_errors            := 'Deal Source Key Val cannot be empty';
    l_msg_type          :=c_m_type_error;
    RAISE REJECT_DEAL;
  END IF;
  IF l_dealsourcedealtype IS NULL OR LENGTH(ltrim(rtrim(l_dealsourcedealtype)))=0 THEN
    l_errors              := 'Deal Source Deal Type cannot be empty';
    l_msg_type            :=c_m_type_error;
    raise reject_deal;
  END IF;

      --by Harsh Shah , filling temp table, 23-Jan-2015
   DBMS_OUTPUT.PUT_LINE ('Performance check temp table filling.. start time : '||  to_char(SYSDATE,'DD-MON-YYYY HH:MI:SS'));

  IF FILL_TEMP_TABLES(I_DEAL_CREATION_GUID,L_XMLNAMESPACE)='N' THEN
        --DBMS_OUTPUT.PUT_LINE ('eRROR IN TEMP TABLE ');
    RAISE TEMP_TABLE_FAILURE;

  END IF;
  DBMS_OUTPUT.PUT_LINE ('Performance check temp table filling.. end time : '||   to_char(sysdate,'DD-MON-YYYY HH:MI:SS'));

  --validate lead bus group id deal source is not BMI
  IF l_dealsourcecd              NOT IN ('BMI','NGQ','STS','SMARTQUOTE','EDP') THEN --Added the check as BMI doesn't have the lead bus group and bus unit

    IF (LTRIM(RTRIM(L_LEADBUSGROUP)) IS NULL OR LTRIM(RTRIM(L_LEADBUSGROUP)) =' ' ) THEN
      l_errors                       := 'Lead Business Group is required for this deal';
      L_MSG_TYPE                     :=C_M_TYPE_ERROR;

      --this change has been introduced to accept the special request from BMI to allow deal creation irrespective of other values are not available.
      -- Andrew, Greg approved the change.
      IF l_ignoreV0_to_V1Validations='N' THEN
        RAISE REJECT_DEAL;
      ELSE
        INSERTERROR_OUTPUT_MESSAGES ( NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, l_errors, 'WARNING', l_deal_creation_guid, NULL, NULL,l_errors);
      END IF;
    END IF;

    BEGIN
      SELECT 1
      INTO L_RECCOUNT
      FROM BUS_GROUP
      WHERE BUS_GROUP_CD=L_LEADBUSGROUP
      AND ACTIVE_FL     ='Y';
    EXCEPTION
    WHEN no_data_found THEN
      L_RECCOUNT :=0;
    WHEN TOO_MANY_ROWS THEN
      L_RECCOUNT :=2;
    END;
    IF L_RECCOUNT =0 THEN
      l_errors   := 'Invalid or Inactive Lead Business Group ' ||L_LEADBUSGROUP ;
      L_MSG_TYPE :=C_M_TYPE_ERROR;
      --RAISE REJECT_DEAL;
      IF l_ignoreV0_to_V1Validations='N' THEN
        RAISE REJECT_DEAL;
      ELSE
        ----dbms_output.PUT_LINE ('Ignore validations for version 1. Invalid Business Group' || L_LEADBUSGROUP);
        INSERTERROR_OUTPUT_MESSAGES ( NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, l_errors, 'WARNING', l_deal_creation_guid, NULL, NULL,l_errors);
      END IF;

    END IF;
    --dbms_output.put_line (' bus group validated ' || l_reccount);
    --validate bus unit
    BEGIN
      SELECT 1
      INTO L_RECCOUNT
      FROM bus_group
      WHERE bus_group_cd   =L_LEADBUSGROUP
      AND show_bus_unit_fl ='Y'
      AND ACTIVE_FL        ='Y';
    EXCEPTION
    WHEN no_data_found THEN
      L_RECCOUNT :=0;
    WHEN TOO_MANY_ROWS THEN
      L_RECCOUNT :=2;
    END;
    IF L_RECCOUNT        =1 THEN
      IF (L_LEADBUSUNIT IS NULL ) THEN
        L_ERRORS        := 'Unable to create deal.Please provide Bus Unit for the Bus Group : ' || L_LEADBUSGROUP;
        L_MSG_TYPE      :=C_M_TYPE_ERROR;

        --RAISE REJECT_DEAL;
        IF l_ignoreV0_to_V1Validations='N' THEN
                RAISE REJECT_DEAL;
        ELSE
            ----dbms_output.PUT_LINE ('Ignore validations for version 1. Bus Unit is Empty  for Bus Group :' || L_LEADBUSGROUP);
            INSERTERROR_OUTPUT_MESSAGES ( NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, l_errors, 'WARNING', l_deal_creation_guid, NULL, NULL,l_errors);
        END IF;

      END IF;
      BEGIN
        SELECT 1
        INTO L_RECCOUNT
        FROM BUS_UNIT
        WHERE BUS_UNIT_CD=L_LEADBUSUNIT
        AND ACTIVE_FL    ='Y'
        AND BUS_GROUP_CD =L_LEADBUSGROUP;
      EXCEPTION
      WHEN no_data_found THEN
        L_RECCOUNT :=0;
      WHEN TOO_MANY_ROWS THEN
        L_RECCOUNT :=2;
      END;
      IF L_RECCOUNT =0 THEN
        L_ERRORS   := 'Unable to create deal.Invalid Bus Unit. Business unit is not valid or Inactive or Bus Unit does not belongs to Bus Group :' || l_leadbusgroup;
        L_MSG_TYPE :=C_M_TYPE_ERROR;

        --RAISE REJECT_DEAL;
        IF l_ignoreV0_to_V1Validations='N' THEN
                RAISE REJECT_DEAL;
        ELSE
            ----dbms_output.PUT_LINE ('Ignore validations for version 1. Invalid Business Unit' || L_LEADBUSGROUP);
            INSERTERROR_OUTPUT_MESSAGES ( NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, l_errors, 'WARNING', l_deal_creation_guid, NULL, NULL,l_errors);
        END IF;

      END IF;
    END IF;
  END IF ; ---End of BUS gropu and bus unit validation if  deal source is not BMI
  --validate quoted by emp nr
  --if deal is a low touch deal then quotedby emp nr is mandatory
  ----dbms_output.PUT_LINE('l_dealsourcedealtype: '||l_dealsourcedealtype);
    IF (l_dealsourcedealtype <>C_HIGH_TOUCH_DEALTYPE_DESC) THEN
    L_QUOTED_BY_USER_ID    :=GETVALID_ECLIPSE_USERID (L_QUOTEDBYEMPNR,L_ERRORS);
       IF L_ERRORS IS NOT NULL THEN
      L_MSG_TYPE:=C_M_TYPE_ERROR;
      raise reject_deal;
    ELSIF L_QUOTED_BY_USER_ID IS NULL THEN
      L_ERRORS                :='Invalid Quoted by Employee No';
      l_msg_type              :=c_m_type_ERROR;
      RAISE REJECT_DEAL;
    END IF;
  END IF;
  ----dbms_output.put_line('quoted by user id : ' || L_QUOTED_BY_USER_ID);
  --get customer details
  ----dbms_output.PUT_LINE (' l_presalescustid ' || L_PRESALESCUSTID) ;

  IF (L_PRICETERMCD IS NULL OR L_PRICETERMCD='') THEN
    L_ERRORS        := 'Deal Price Term is missing. Cannot proceed with Deal Creation' ;
    L_MSG_TYPE      :='ERROR';
    --dbms_output.put_line (l_errors);
    RAISE REJECT_DEAL;
  ELSIF (L_PRICELISTCD IS NULL OR L_PRICELISTCD='') THEN
    l_errors           := 'Deal Price List is missing. Cannot proceed with Deal Creation' ;
    L_MSG_TYPE         :='ERROR';
    --dbms_output.put_line (l_errors);
    RAISE REJECT_DEAL;
  ELSIF (L_BUSMODELCD IS NULL OR L_BUSMODELCD ='' ) THEN
    L_ERRORS          := 'Deal Bus Model is missing. Cannot proceed with Deal Creation' ;
    l_msg_type        :='ERROR';
    RAISE REJECT_DEAL;
  ELSIF ( L_CURRENCYCD IS NULL OR L_CURRENCYCD ='') THEN
    L_ERRORS           := 'Deal Currency is missing. Cannot proceed with Deal Creation' ;
    L_MSG_TYPE         :='ERROR';
    RAISE REJECT_DEAL;
  ELSIF ( L_countrycd IS NULL OR L_countrycd ='' ) THEN
    L_ERRORS          := 'Deal Country is missing. Cannot proceed with Deal Creation' ;
    L_MSG_TYPE        :='ERROR';
    --dbms_output.put_line (l_errors);
    RAISE REJECT_DEAL;
  end if;
  --dbms_output.put_line ('TEST 101');

  --Validate price descriptor as per Deal_matrix table
  --dbms_output.PUT_LINE (' getting country details ') ;
  SELECT COUNT(*)
  INTO l_reccount
  FROM deal_matrix
  WHERE country_cd  =l_countrycd
  AND curr_cd       =l_currencycd
  AND lang_cd       =l_lang_cd
  AND bus_model_cd  =l_busmodelcd
  AND price_term_cd =l_pricetermcd
  AND price_list_cd =l_pricelistcd;
  --dbms_output.put_line (' valid price descriptor ' || l_reccount);
  --get deal audiencing flag
  IF l_reccount =0 THEN
    L_ERRORS   := 'Invalid Price Descriptor. Check Deal Matrix in Eclipse-System Maintenance Tool to get a valid price descriptor';
    L_MSG_TYPE :='ERROR';
    RAISE REJECT_DEAL;
  END IF;
  l_reccount:=0;
  --get the region code from ww_cntry table

  BEGIN
  ----dbms_output.PUT_LINE ('GETTING REGION DATA');
    SELECT region INTO l_region FROM ww_cntry WHERE cntry_cd = l_countrycd;
  EXCEPTION
  WHEN no_data_found THEN
    l_errors  := 'Cannot Create Deal. Unable to find the country for the deal. Invalid Country : ' || l_countrycd;
    l_msg_type:='ERROR';
    raise reject_deal;
  END;
  ------------------------------------------
  --Add customer details to Deal
  ------------------------------------------
  ----dbms_output.PUT_LINE('Add customer details to DEAL');
  --IF upper(l_dealsourcecd )   =upper(c_deal_souce_bmi) THEN ---Added for BMI changes

   L_EU_CUST_NR := l_euc_nr;--Added by Lakshmi on 9/10/2014 to use the EUC_NR provided by EDMS.(Remove redundant EUC_NR logic in the EDMS package)
   BEGIN
        SELECT
          /* +   index (Eu_cust  NDX_EUC_CISYS_ID)   */
         euc_nr,
          euc_cmpny_nm,
          euc_city_nm,
          EUC_ST_PROV_CD,
          euc_cntry_cd
        INTO L_EU_CUST_NR,
          l_eu_cmpny_nm,
          l_euc_city_nm,
          l_euc_st_prov,
          L_euc_cntry_cd
        FROM EU_CUST
        WHERE euc_nr=l_euc_nr
        AND ROWNUM                    <2;
      EXCEPTION
      WHEN NO_DATA_FOUND THEN
        l_eu_cust_nr :=NULL;
        l_eu_cmpny_nm:=NULL;
        l_euc_city_nm:=NULL;
        l_euc_st_prov:=NULL;
        l_errors     := 'Customer details not found for the Customer Number: '||l_euc_nr;
        l_msg_type   :='WARNING';
        INSERTERROR_OUTPUT_MESSAGES ( NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, l_errors, 'WARNING', l_deal_creation_guid, NULL, NULL,l_errors);
        --   raise reject_deal;
      END;

     --Commented by Lakshmi on 9/10/2014 to use the EUC_NR which is provided in package and not to derive it for BMI deals.
   /* IF (l_mdcp_org_id IS NOT NULL AND l_mdcp_other_prty_site_id IS NOT NULL) THEN
        --dbms_output.PUT_LINE ('Customer MDCP org id and other party side id is not null ' || ' l_mdcp_org_id ' || l_mdcp_org_id || ' l_mdcp_other_prty_site_id ' || l_mdcp_other_prty_site_id);
      BEGIN
        SELECT
          /*+   index (Eu_cust  NDX_EUC_CISYS_ID)   */
         /* euc_nr,
          euc_cmpny_nm,
          euc_city_nm,
          EUC_ST_PROV_CD,
          euc_cntry_cd
        INTO L_EU_CUST_NR,
          l_eu_cmpny_nm,
          l_euc_city_nm,
          l_euc_st_prov,
          L_euc_cntry_cd
        FROM EU_CUST
        WHERE ORG_ID                  = l_mdcp_org_id
        AND DFT_ENDCUST_OTRPRTYSITE_ID=l_mdcp_other_prty_site_id
        AND (active_fl                ='Y'
        OR active_fl                 IS NULL)
        AND ROWNUM                    <2;
      EXCEPTION
      WHEN NO_DATA_FOUND THEN
        l_eu_cust_nr :=NULL;
        l_eu_cmpny_nm:=NULL;
        l_euc_city_nm:=NULL;
        l_euc_st_prov:=NULL;
        l_errors     := 'Customer not found for the org id : ' || l_mdcp_org_id ||' and other party site id '||l_mdcp_other_prty_site_id;
        l_msg_type   :='WARNING';
        INSERTERROR_OUTPUT_MESSAGES ( NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, l_errors, 'WARNING', l_deal_creation_guid, NULL, NULL,l_errors);

        --   raise reject_deal;
      END;
    ELSIF (l_mdcp_org_id IS NOT NULL AND l_mdcp_other_prty_site_id IS NULL) THEN
        ----dbms_output.PUT_LINE ('Customer MDCP org id not null  and other party side id is null ' || ' l_mdcp_org_id ' || l_mdcp_org_id || ' l_mdcp_other_prty_site_id ' || l_mdcp_other_prty_site_id);
      BEGIN
        SELECT
          /*+   index (Eu_cust  NDX_EUC_CISYS_ID)   */
          /* euc_nr,
          euc_cmpny_nm,
          euc_city_nm,
          EUC_ST_PROV_CD,
          euc_cntry_cd
        INTO L_EU_CUST_NR,
          l_eu_cmpny_nm,
          l_euc_city_nm,
          l_euc_st_prov,
          L_euc_cntry_cd
        FROM EU_CUST
        WHERE ORG_ID   = l_mdcp_org_id
        AND (active_fl ='Y'
        OR active_fl  IS NULL)
        AND ROWNUM     <2;
      EXCEPTION
      WHEN NO_DATA_FOUND THEN
        l_eu_cust_nr :=NULL;
        l_eu_cmpny_nm:=NULL;
        l_euc_city_nm:=NULL;
        l_euc_st_prov:=NULL;
        --  l_errors     := 'Cannot Create Deal. Customer not found for the org id : ' || l_mdcp_org_id ;
        l_errors   := ' Customer not found for the org id : ' || l_mdcp_org_id ;
        l_msg_type :='WARNING';
        INSERTERROR_OUTPUT_MESSAGES ( NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, l_errors, 'WARNING', l_deal_creation_guid, NULL, NULL,l_errors);
        --  l_msg_type   :='ERROR';
        -- raise reject_deal;
      END;
    ELSE
      l_eu_cust_nr :=NULL;
      l_eu_cmpny_nm:=NULL;
      l_euc_city_nm:=NULL;
      l_euc_st_prov:=NULL;
      l_errors     := 'Customer org id and other party site id is not specified';
      l_msg_type   :='WARNING';
      --                l_errors     := 'Cannot Create Deal as org id and other party site id is not specified';
      --                l_msg_type   :='ERROR';
      --                raise reject_deal;
      ----dbms_output.PUT_LINE (l_errors);
      INSERTERROR_OUTPUT_MESSAGES ( NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, l_errors, 'WARNING', l_deal_creation_guid, NULL, NULL,l_errors);
    END IF;*/

    --end of BMI change
    --ePrime changes for customer
 /*  ELSIF lower(l_dealsourcecd)='eprime' THEN
    --This change is for the ePrime deals. WebService will always sends the Customer ID (from eclipse table) and database package
    --will search customer based on the customer id provided by web service
    --change done on 18-May-2013 - by Harsh Shah
    --dbms_output.PUT_LINE ('ePrime Customer Search -----');
    BEGIN
      SELECT
        /*+   index (Eu_cust  NDX_EUC_CISYS_ID)   */
        /* l_euc_nr,
        euc_cmpny_nm,
        euc_city_nm,
        EUC_ST_PROV_CD,
        euc_cntry_cd
      INTO l_eu_cust_nr,
        l_eu_cmpny_nm,
        l_euc_city_nm,
        l_euc_st_prov,
        l_euc_cntry_cd
      FROM eu_cust
      WHERE euc_nr   =l_euc_nr
      AND (active_fl ='Y'
      OR active_fl  IS NULL)
      AND ROWNUM     <2;
    EXCEPTION
    WHEN NO_DATA_FOUND THEN
      l_eu_cust_nr                :=NULL;
      l_eu_cmpny_nm               :=NULL;
      l_euc_city_nm               :=NULL;
      l_euc_st_prov               :=NULL;
      L_ERRORS                    := 'Cannot Create Deal. Customer not found for the Customer ID : ' || L_EU_CUST_NR;
      l_msg_type                  :='ERROR';
      IF ltrim(rtrim(l_eu_cust_nr))='' THEN
        L_ERRORS                  := 'Cannot Create Deal. Customer is not provided for this deal.';
        INSERTERROR_OUTPUT_MESSAGES ( NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, l_errors, 'WARNING', l_deal_creation_guid, NULL, NULL,l_errors);
      END IF;
      --dbms_output.PUT_LINE ('ePrime Customer Search not found----');
      --raise reject_deal;


      IF l_ignoreV0_to_V1Validations='N' THEN
                RAISE REJECT_DEAL;
        ELSE
            --dbms_output.PUT_LINE ('Customer not found');
            l_errors:='Customer not found for this deal';
            INSERTERROR_OUTPUT_MESSAGES ( NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, l_errors, 'WARNING', l_deal_creation_guid, NULL, NULL,l_errors);
        END IF;


    END;
  ELSE
    BEGIN
      --CSYS_ID Chanages as suggested by kwok wee
      -- search for only csysid in case of deal's region is APJ.
      --dbms_output.put_line (' CISYS_ID ' || L_CISYS_ID);
      IF L_REGION            ='AP' THEN
        IF l_presalescustid IS NULL THEN
          --dbms_output.put_line (' l_presalescustid is null ' );
          BEGIN
            SELECT
              /*+   index (Eu_cust  NDX_EUC_CISYS_ID)   */
              /* euc_nr,
              euc_cmpny_nm,
              euc_city_nm,
              EUC_ST_PROV_CD,
              euc_cntry_cd
            INTO L_EU_CUST_NR,
              l_eu_cmpny_nm,
              l_euc_city_nm,
              l_euc_st_prov,
              L_euc_cntry_cd
            FROM EU_CUST
            WHERE CISYS_ID     IS NOT NULL
            AND UPPER(CISYS_ID) = UPPER(L_CISYS_ID) ---Upper check added in Nov release
            AND (active_fl      ='Y'
            OR active_fl       IS NULL)
            AND (EU_CUST_SRC   IS NULL
            OR EU_CUST_SRC     <>'MDCP') ----Added in eRFC
            AND ROWNUM          <2;
          EXCEPTION
          WHEN NO_DATA_FOUND THEN
            SELECT
              /*+   index (Eu_cust  NDX_EUC_CISYS_ID)   */
              /* euc_nr,
              euc_cmpny_nm,
              euc_city_nm,
              EUC_ST_PROV_CD,
              euc_cntry_cd
            INTO L_EU_CUST_NR,
              l_eu_cmpny_nm,
              l_euc_city_nm,
              l_euc_st_prov,
              L_euc_cntry_cd
            FROM EU_CUST
            WHERE CISYS_ID     IS NOT NULL
            AND UPPER(CISYS_ID) = UPPER(L_CISYS_ID) ---Upper check added in Nov release
            AND (active_fl      ='Y'
            OR active_fl       IS NULL)
            AND EU_CUST_SRC     ='MDCP' ----Added in eRFC
            AND ROWNUM          <2;
          END;
        ELSIF (l_presalescustid IS NOT NULL AND L_CISYS_ID IS NOT NULL ) THEN
          --dbms_output.put_line (' both are not null ' );
          BEGIN
            SELECT
              /*+   index_combine(Eu_cust NDX_EUCU_PRESALES_CUST_ID  NDX_EUC_CISYS_ID)   */
             /* euc_nr,
              euc_cmpny_nm,
              euc_city_nm,
              EUC_ST_PROV_CD,
              euc_cntry_cd
            INTO L_EU_CUST_NR,
              l_eu_cmpny_nm,
              l_euc_city_nm,
              l_euc_st_prov,
              L_euc_cntry_cd
            FROM EU_CUST
            WHERE CISYS_ID             IS NOT NULL
            AND PRESALES_CUST_ID       IS NOT NULL
            AND UPPER(CISYS_ID)         = UPPER(L_CISYS_ID)      ---Upper check added in Nov release
            AND UPPER(PRESALES_CUST_ID) = UPPER(L_PRESALESCUSTID)---Upper check added in Nov release
            AND (active_fl              ='Y'
            OR active_fl               IS NULL)
            AND (EU_CUST_SRC           IS NULL
            OR EU_CUST_SRC             <>'MDCP') ----Added in eRFC
            AND ROWNUM                  <2 ;
          EXCEPTION
          WHEN NO_DATA_FOUND THEN
            SELECT
              /*+   index_combine(Eu_cust NDX_EUCU_PRESALES_CUST_ID  NDX_EUC_CISYS_ID)   */
             /* euc_nr,
              euc_cmpny_nm,
              euc_city_nm,
              EUC_ST_PROV_CD,
              euc_cntry_cd
            INTO L_EU_CUST_NR,
              l_eu_cmpny_nm,
              l_euc_city_nm,
              l_euc_st_prov,
              L_euc_cntry_cd
            FROM EU_CUST
            WHERE CISYS_ID             IS NOT NULL
            AND PRESALES_CUST_ID       IS NOT NULL
            AND UPPER(CISYS_ID)         = UPPER(L_CISYS_ID)      ---Upper check added in Nov release
            AND UPPER(PRESALES_CUST_ID) = UPPER(L_PRESALESCUSTID)---Upper check added in Nov release
            AND (active_fl              ='Y'
            OR active_fl               IS NULL)
            AND EU_CUST_SRC             ='MDCP' ----Added in eRFC
            AND ROWNUM                  <2 ;
          END;
        ELSE
          BEGIN
            --dbms_output.put_line (' else part for customer search - in case of AP region ' );
            SELECT
              /*+   index  (Eu_cust NDX_EUCU_PRESALES_CUST_ID )   */
             /* euc_nr,
              euc_cmpny_nm,
              euc_city_nm,
              EUC_ST_PROV_CD,
              euc_cntry_cd
            INTO L_EU_CUST_NR,
              l_eu_cmpny_nm,
              l_euc_city_nm,
              l_euc_st_prov,
              L_euc_cntry_cd
            FROM EU_CUST
            WHERE PRESALES_CUST_ID     IS NOT NULL
            AND UPPER(PRESALES_CUST_ID) = UPPER(L_PRESALESCUSTID) ---Upper check added in Nov release
            AND (active_fl              ='Y'
            OR active_fl               IS NULL)
            AND (EU_CUST_SRC           IS NULL
            OR EU_CUST_SRC             <>'MDCP') ----Added in eRFC
            AND ROWNUM                  <2 ;
          EXCEPTION
          WHEN NO_DATA_FOUND THEN
            SELECT
              /*+   index  (Eu_cust NDX_EUCU_PRESALES_CUST_ID )   */
              /* euc_nr,
              euc_cmpny_nm,
              euc_city_nm,
              EUC_ST_PROV_CD,
              euc_cntry_cd
            INTO L_EU_CUST_NR,
              l_eu_cmpny_nm,
              l_euc_city_nm,
              l_euc_st_prov,
              L_euc_cntry_cd
            FROM EU_CUST
            WHERE PRESALES_CUST_ID     IS NOT NULL
            AND UPPER(PRESALES_CUST_ID) = UPPER(L_PRESALESCUSTID) ---Upper check added in Nov release
            AND (active_fl              ='Y'
            OR active_fl               IS NULL)
            AND EU_CUST_SRC             = 'MDCP'----Added in eRFC
            AND ROWNUM                  <2 ;
          END;
        END IF;
      ELSE
        BEGIN
          --dbms_output.put_line ('Non AP Region deal ..customer');
          SELECT
            /*+   index (Eu_cust NDX_EUCU_PRESALES_CUST)   */
            /* euc_nr,
            euc_cmpny_nm,
            euc_city_nm,
            EUC_ST_PROV_CD,
            euc_cntry_cd
          INTO L_EU_CUST_NR,
            l_eu_cmpny_nm,
            l_euc_city_nm,
            l_euc_st_prov,
            L_euc_cntry_cd
          FROM eu_cust
          WHERE PRESALES_CUST_ID     IS NOT NULL
          AND UPPER(presales_cust_id) = UPPER(l_presalescustid) ---Upper check added in Nov release
          AND (active_fl              ='Y'
          OR active_fl               IS NULL)
          AND (EU_CUST_SRC           IS NULL
          OR EU_CUST_SRC             <>'MDCP') ----Added in eRFC
          AND rownum                  <2 ;
        EXCEPTION
        WHEN NO_DATA_FOUND THEN
          SELECT
            /*+   index (Eu_cust NDX_EUCU_PRESALES_CUST)   */
            /* euc_nr,
            euc_cmpny_nm,
            euc_city_nm,
            EUC_ST_PROV_CD,
            euc_cntry_cd
          INTO L_EU_CUST_NR,
            l_eu_cmpny_nm,
            l_euc_city_nm,
            l_euc_st_prov,
            L_euc_cntry_cd
          FROM eu_cust
          WHERE PRESALES_CUST_ID     IS NOT NULL
          AND UPPER(presales_cust_id) = UPPER(l_presalescustid) ---Upper check added in Nov release
          AND (active_fl              ='Y'
          OR active_fl               IS NULL)
          AND EU_CUST_SRC             ='MDCP' ----Added in eRFC
          AND rownum                  <2 ;
        END;
        --dbms_output.put_line (' l_eu_cust_nr ' || l_eu_cust_nr);
      END IF;
    EXCEPTION
    WHEN no_data_found THEN
      l_eu_cust_nr          :=NULL;
      l_eu_cmpny_nm         :=NULL;
      l_euc_city_nm         :=NULL;
      l_euc_st_prov         :=NULL;
      IF L_REGION            ='AP' THEN
        IF L_PRESALESCUSTID IS NULL THEN
          L_ERRORS          := 'Cannot Create Deal. Customer not found for the CISYS_ID : ' || L_CISYS_ID || '. Check if Cusomter is an Active Customer in Eclipse';
        ELSE
          L_ERRORS := 'Cannot Create Deal. Customer not found for the CISYS_ID : ' || L_CISYS_ID || ' and the pre sales cust id : ' || l_presalescustid || ' . Check if Cusomter is an Active Customer in Eclipse';
        END IF;
      ELSE
        l_errors := 'Cannot Create Deal. Customer not found for the pre sales cust id : ' || l_presalescustid || '. Check if Cusomter is an Active Customer in Eclipse';
      END IF;
      l_msg_type :='ERROR';
      INSERTERROR_OUTPUT_MESSAGES ( NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, l_errors, 'WARNING', l_deal_creation_guid, NULL, NULL,l_errors);
      --raise reject_deal;

      IF l_ignoreV0_to_V1Validations='N' THEN
        RAISE REJECT_DEAL;
        ELSE
        --dbms_output.PUT_LINE ('Cannot create customer ' || ' l_presalescustid ' || l_presalescustid || ' L_CISYS_ID ' || L_CISYS_ID  );
        INSERTERROR_OUTPUT_MESSAGES ( NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, l_errors, 'WARNING', l_deal_creation_guid, NULL, NULL,l_errors);
        END IF;

    END; */

  --END IF;

  BEGIN
    SELECT audience_rslr_fl,
      conflict_chk_reqd_fl,
      EUV_REQUIRED_FL,
      euv_at_won_fl,
      'Y',--decode(ALLOW_SQ_DEALS_CREATION,null,'N',ALLOW_SQ_DEALS_CREATION) ALLOW_SQ_DEALS_CREATION,  ---change for new xml
      DESC_TXT,
      DEFAULT_QUOTE_EXPIRE_ITEM_FL
    INTO l_deal_audience_fl,
      l_bm_conflict_chk_reqd_fl,
      l_euv_required_fl,
      l_euv_at_won_fl,
      l_ALLOW_SQ_DEALS_CREATION,
      L_BUS_MODEL_DESC,
      l_DEFAULT_QUOTE_EXPIRE_ITEM_FL
    FROM bus_model
    WHERE bus_model_cd       = l_busmodelcd
    AND bus_model.country_cd = l_countrycd
    AND tenantid = l_tenantid;---Added for SMO Changes
  EXCEPTION
  WHEN NO_DATA_FOUND THEN
    l_errors  := 'Cannot Create Deal. Unable to find Bus Model Details for the Bus Model : ' || l_busmodelcd || ' and Country : '|| l_countrycd;
    l_msg_type:='ERROR';
    raise reject_deal;
  END;
  --------------------------------------------------------------------------------
  --check if the bmi is allowed to create deal on the selected bus model.
  --------------------------------------------------------------------------------
  --ask andrew to provide the language code
  BEGIN
    SELECT MAX (hierarchy_cd)
    INTO l_hierarchy_cd
    FROM deal_matrix
    WHERE country_cd  = l_countrycd
    AND curr_cd       = l_currencycd
    AND lang_cd       = l_lang_cd
    AND bus_model_cd  = l_busmodelcd
    AND price_term_cd = l_pricetermcd
    AND price_list_cd = l_pricelistcd;
  EXCEPTION
  WHEN no_data_found THEN
    l_errors  := 'Cannot Create Deal. Unable to find Hierarcy code in eclipse ';
    l_msg_type:='ERROR';
    raise reject_deal;
  END;
  --get global flag,deal description  for a given business model
  BEGIN
    IF (LTRIM(RTRIM(L_DEALDESCRIPTION))=' ' OR L_DEALDESCRIPTION IS NULL ) THEN
      L_ERRORS                        := 'Cannot proceed with deal creation.Please provide deal description.';
      l_msg_type                      :=c_m_type_error;
      raise reject_deal;
    END IF;
    IF (LTRIM(RTRIM(L_DEALDESCRIPTION))=' ' OR L_DEALDESCRIPTION IS NULL ) THEN
      SELECT NVL (global_fl, 'N'),
        NVL (default_deal_desc_tx, '[Enter Deal Description]'),
        NVL (default_catalog_deal_fl, 'N'),
        NVL( bus_justify_reqd_fl,'N'),
        NVL(routing_indicator_rqd_fl,'N') ,
        rebatable_fl ---Added for CR 4760
      INTO l_global_fl,
        l_dealdescription,
        l_catalog_deal_fl,
        l_bus_justify_reqd_fl,
        l_routing_indicator_rqd_fl ,
        l_rebatable_fl ---Added for CR4760
      FROM BUS_MODEL
      WHERE bus_model.bus_model_cd = l_busmodelcd
      AND bus_model.country_cd     = l_countrycd
      AND tenantid =l_tenantid;---Added for SMO Changes
    ELSE
      SELECT NVL (global_fl, 'N'),
        NVL (default_catalog_deal_fl, 'N'),
        NVL( bus_justify_reqd_fl,'N'),
        NVL(routing_indicator_rqd_fl,'N') ,
        rebatable_fl ---Added for CR 4760
      INTO l_global_fl,
        l_catalog_deal_fl,
        l_bus_justify_reqd_fl,
        l_routing_indicator_rqd_fl ,
        l_rebatable_fl ---Added for CR4760
      FROM bus_model
      WHERE bus_model.bus_model_cd = l_busmodelcd
      AND bus_model.country_cd     = l_countrycd
      AND Tenantid =l_tenantid;---Added for SMO Changes
    END IF;
  EXCEPTION
  WHEN no_data_found THEN
    l_errors  := ' Cannot Create Deal. Bus Model details not found for the bus model : ' || l_busmodelcd || ' and Country : '|| l_countrycd;
    l_msg_type:='ERROR';
    raise reject_deal;
  END;
  ---Flags changed for BMI deals as business justification and routing indicator checks are not required
  IF l_dealsourcecd             IN ('BMI','NGQ','STS','SMARTQUOTE','EDP') THEN
    l_bus_justify_reqd_fl      :='N';
    l_routing_indicator_rqd_fl :='N';
  END IF;
  --get the routing indicator code.
   --IF l_dealsourcecd <> c_deal_souce_bmi THEN ---Added for BMI as no need of  checking routing indicator
  BEGIN
    SELECT routing_indicator_cd
    INTO l_routingindicator
    FROM routing_indicator
    WHERE region_cd         =l_region
    AND routing_indicator_cd=l_routingindicator;
  EXCEPTION
  WHEN no_data_found THEN
    l_routingindicator          :=NULL;
    IF l_routing_indicator_rqd_fl='Y' THEN
      IF lower(l_dealsourcecd)   ='eprime' THEN --added this condition to alow deal creation with version 0 even routing indicator is not provided for ePrime deals.
        l_msg_type              :='ERROR';
        l_errors                := ' Creating 0 Version deal as routing indicator is not specified for Business Model ' || l_busmodelcd;
        l_dealvertocreate       :=0;
        INSERTERROR_OUTPUT_MESSAGES ( l_bd_id, l_bd_nr, l_bd_version_nr, l_deal_prog_cd, l_bdme_aprvl_cd, l_quote_dist_cd, l_euv_stat_code, l_high_risk_fl, l_risk_reasion_desc, l_risk_desc, l_errors, l_msg_type, l_deal_creation_guid, NULL, NULL,l_errors);
      ELSE
        l_msg_type :='ERROR';
        l_errors   := 'Routing Indicator is required for the Business Model ' || l_busmodelcd;
        --raise reject_deal;

        IF l_ignoreV0_to_V1Validations='N' THEN
                RAISE REJECT_DEAL;
        ELSE
                --dbms_output.PUT_LINE ('Routing Indicator is required for the Business Model ' || l_busmodelcd );
                INSERTERROR_OUTPUT_MESSAGES ( NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, l_errors, 'WARNING', l_deal_creation_guid, NULL, NULL,l_errors);
        END IF;

      END IF;
    END IF;
    END;
  --get the ASAP_INDICATOR_CD
  IF lower (l_asapindicator) = l_optionalcode THEN
    l_asapindicator         := NULL;
  ELSE
    BEGIN
      SELECT asap_indicator_cd
      INTO l_asapindicator
      FROM asap_indicator
      WHERE cntry_cd        = l_countrycd
      AND asap_indicator_cd = l_asapindicator;
    EXCEPTION
    WHEN no_data_found THEN
      l_asapindicator:=NULL;
    WHEN OTHERS THEN
      l_asapindicator:=NULL;
    END;
  END IF;
  --get gmtdate
  BEGIN
    SELECT gmtdate INTO l_revsn_dt_gmt FROM dual;
  EXCEPTION
  WHEN OTHERS THEN
    l_revsn_dt_gmt := sysdate;
  END;
  --get customer segment
  --dbms_output.put_line (' CUST SEGMENT  ' || l_custsegment);

  --Validating Customer Segment.
  IF l_dealsourcecd          NOT IN ('BMI','NGQ','STS','SMARTQUOTE','EDP') THEN --Added as BMI will not send the customer segment and customer industry details
    IF l_custsegment         IS NULL THEN
      IF lower(l_dealsourcecd)='eprime' THEN --added this condition to alow deal creation with version 0 even routing indicator is not provided for ePrime deals.
        l_msg_type           :='ERROR';
        l_errors             := ' Creating 0 Version deal as Customer Segment value is not provided ';
        l_dealvertocreate    :=0;
        INSERTERROR_OUTPUT_MESSAGES ( l_bd_id, l_bd_nr, l_bd_version_nr, l_deal_prog_cd, l_bdme_aprvl_cd, l_quote_dist_cd, l_euv_stat_code, l_high_risk_fl, l_risk_reasion_desc, l_risk_desc, l_errors, l_msg_type, l_deal_creation_guid, NULL, NULL,l_errors);
      ELSE
        l_msg_type :=c_m_type_error;
        l_errors   := 'Customer Segment value is empty. Please provide Customer Segment to proceed with the deal creation';
        --raise reject_deal;

        IF l_ignoreV0_to_V1Validations='N' THEN
            RAISE REJECT_DEAL;
        ELSE
            --dbms_output.PUT_LINE ('Customer Segment not found');
            INSERTERROR_OUTPUT_MESSAGES ( NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, l_errors, 'WARNING', l_deal_creation_guid, NULL, NULL,l_errors);
        END IF;

      END IF;
    END IF;
    BEGIN
      --check if customer segment exists in cust_seg table.
      SELECT 1
      INTO l_reccount
      FROM cust_seg
      WHERE cust_seg_region   = l_region
      AND cust_seg_active_fl  = 'Y'
      AND upper (cust_seg_cd) = upper (l_custsegment);
    EXCEPTION
    WHEN no_data_found THEN
      l_reccount:=0;
    WHEN TOO_MANY_ROWS THEN
      l_reccount := 2;
    END;
    --reinitializing the reccount variable.
    IF l_reccount <=0 THEN
      l_errors    := ' Customer Segment does not exists in Eclipse for ' ||l_custsegment ;
      l_msg_type  :=c_m_type_warning;
      --insert into error and output table
      INSERTERROR_OUTPUT_MESSAGES ( l_bd_id, l_bd_nr, l_bd_version_nr, l_deal_prog_cd, l_bdme_aprvl_cd, l_quote_dist_cd, l_euv_stat_code, l_high_risk_fl, l_risk_reasion_desc, l_risk_desc, l_errors, l_msg_type, l_deal_creation_guid, NULL, NULL,l_errors);
    END IF;
    l_reccount:=0;
    --Validate Customer Industry
    IF (l_custindustry       IS NULL) THEN
      IF lower(l_dealsourcecd)='eprime' THEN --added this condition to alow deal creation with version 0 even routing indicator is not provided for ePrime deals.
        l_msg_type           :='ERROR';
        l_errors             := ' Creating 0 Version deal as Customer Industry is not provided ';
        l_dealvertocreate    :=0;
        INSERTERROR_OUTPUT_MESSAGES ( l_bd_id, l_bd_nr, l_bd_version_nr, l_deal_prog_cd, l_bdme_aprvl_cd, l_quote_dist_cd, l_euv_stat_code, l_high_risk_fl, l_risk_reasion_desc, l_risk_desc, l_errors, l_msg_type, l_deal_creation_guid, NULL, NULL,l_errors);
      ELSE
        l_msg_type :=c_m_type_error;
        l_errors   := c_m_cust_ind_empty;
        --raise reject_deal;
        IF l_ignoreV0_to_V1Validations='N' THEN
            RAISE REJECT_DEAL;
        ELSE
            --dbms_output.PUT_LINE ('Industry not found');
            INSERTERROR_OUTPUT_MESSAGES ( NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, l_errors, 'WARNING', l_deal_creation_guid, NULL, NULL,l_errors);
        END IF;

      END IF;
    END IF;
    BEGIN
      --dbms_output.put_line (' cust industry ' || l_custindustry);
      SELECT 1
      INTO l_reccount
      FROM industry
      WHERE country_cd =l_countrycd
      AND industry_nr  =l_custindustry;
    EXCEPTION
    WHEN no_data_found THEN
      l_reccount:=0;
    WHEN TOO_MANY_ROWS THEN
      l_reccount := 2;
    END;
    IF l_reccount            <=0 THEN
      IF lower(l_dealsourcecd)='eprime' THEN --added this condition to alow deal creation with version 0 even routing indicator is not provided for ePrime deals.
        l_msg_type           :='ERROR';
        l_errors             := ' Creating 0 Version deal as Customer Industry does not exists in Eclipse for ' ||l_custindustry;
        l_dealvertocreate    :=0;
        INSERTERROR_OUTPUT_MESSAGES ( l_bd_id, l_bd_nr, l_bd_version_nr, l_deal_prog_cd, l_bdme_aprvl_cd, l_quote_dist_cd, l_euv_stat_code, l_high_risk_fl, l_risk_reasion_desc, l_risk_desc, l_errors, l_msg_type, l_deal_creation_guid, NULL, NULL,l_errors);
      ELSE
        l_msg_type :=c_m_type_error;
        l_errors   := ' Customer Industry does not exists in Eclipse for ' ||l_custindustry;
        raise reject_deal;
      END IF;
    END IF;
  END IF;---BMI check end;
  --Generate BD_NR
  SELECT seq_bd_nr.nextval INTO new_bd_nr FROM dual;
  --Generate BD_ID
  SELECT seq_deal.nextval
  INTO l_seq
  FROM dual;
  l_bd_id:=l_seq;
  l_bd_nr:=new_bd_nr;

  --*******************************--****************************--****************************
  --Deal HP Users / Sales Representative Screen details
  --****************************--****************************--****************************
  --get dealhp user data for the sales rep screen in deal manager
  --initializing the OE User Sr No to zero
  l_oe_user_seq_nr:=0;
  BEGIN
    FOR rec IN
    (SELECT extract (value (d), '//HPEmployee/EmployeeNr/text()', l_xmlnamespace).getstringval () AS employeenr,   --new xml change for emp nr
      extract (value (d), '//HPEmployee/EmailAddress/text()', l_xmlnamespace).getstringval ()     AS employeemail, --new xml change for emp nr
      extract (value (d), '//DealUserTypeCD/text()', l_xmlnamespace) .getstringval ()             AS dealusertypecd
    FROM edms_deal_queue x,
      TABLE ( xmlsequence ( extract (x.xml_data_xml, 'DealCreationRequest/HPUsers/DealHPUser', l_xmlnamespace))) d
    WHERE x.deal_creation_guid = l_deal_creation_guid
    )
    LOOP

      ---Added for eprime/BMI deal creation
      IF rec.employeenr IS NULL AND rec.employeemail IS NOT NULL THEN
        rec.employeenr  :=get_emp_nr(rec.employeemail);
      END IF;

      IF rec.dealusertypecd      = 'DC' THEN
        l_deal_creator_dc       := rec.employeenr;--to_number (NVL(rec.employeenr,0));
      elsif rec.dealusertypecd   = 'SR' THEN
        l_sales_rep_sr_emp      :=rec.employeenr;-- to_number (NVL(rec.employeenr,0));
      elsif rec.dealusertypecd   = 'DL' THEN
      l_deal_lead_dl_emp := rec.employeenr;--to_number (NVL(rec.employeenr,0));
        /*IF lower(l_dealsourcecd) ='bmi'THEN
          BEGIN
                      SELECT emp_nr
            INTO l_deal_lead_dl_emp
            FROM employee
            WHERE email_unix_addr_tx=rec.employeemail
            AND emp_stat_cd         = 'Active'
            and rownum<2;
          EXCEPTION
          WHEN NO_DATA_FOUND THEN
            l_deal_lead_dl_emp := NULL;
          END;
        ELSE
          l_deal_lead_dl_emp := rec.employeenr;--to_number (NVL(rec.employeenr,0));
        END IF;
        */
      elsif rec.dealusertypecd    = 'DM' THEN
        l_dist_sales_mgr_dsm_emp := rec.employeenr;--to_number (NVL(rec.employeenr,0));
      END IF;
      --Added for CR 4746
      IF (rec.dealusertypecd='OS') THEN
        BEGIN
          SELECT 1
          INTO l_emp_exists
          FROM employee
          WHERE emp_nr   =rec.employeenr
          AND emp_stat_cd='Active'
          AND rownum     <2;
        EXCEPTION
        WHEN no_data_found THEN
          l_emp_exists :=0;
        END;
        IF (l_emp_exists >0 ) THEN
          BEGIN
            SELECT 1
            INTO l_sr_exists
            FROM sales_rep
            WHERE sr_hp_emp_nr =rec.employeenr
            AND bd_id          = l_bd_id;
          EXCEPTION
          WHEN no_data_found THEN
            l_sr_exists:=0;
          END;
          IF (l_sr_exists = 0) THEN
            INSERT
            INTO sales_rep
              (
                bd_id,
                seq_id,
                sr_hp_emp_nr,
                creation_dts,
                update_dts
              )
              VALUES
              (
                l_bd_id,
                (SELECT NVL(MAX(seq_id),0)+1 FROM sales_rep WHERE bd_id = l_bd_id
                ),
                rec.employeenr,
                sysdate,
                sysdate
              );
            IF (sql%rowcount =0 ) THEN
              l_msg_type    :=c_m_type_warning;
              l_errors      :='Unable to add OS user : '||rec.employeenr;
              inserterror_output_messages ( NULL,NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, l_msg_type, i_deal_creation_guid, NULL,NULL,l_errors);
            END IF;
          ELSE
            l_msg_type :=c_m_type_warning;
            l_errors   :='OS user already exists in deal employee No : '||rec.employeenr ;
            inserterror_output_messages ( NULL,NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, l_msg_type, i_deal_creation_guid, NULL,NULL,l_errors);
          END IF;
        ELSE
          l_msg_type :=c_m_type_warning;
          l_errors   :='OS employee  '||rec.employeenr ||' does not exists';
          inserterror_output_messages ( NULL,NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, l_msg_type, i_deal_creation_guid, NULL,NULL,l_errors);
        END IF;
      END IF;
      --End of CR4746
      IF (rec.dealusertypecd=c_deal_user_type_cd_oe) THEN
        BEGIN
          SELECT 1
          INTO l_reccount
          FROM user_tab ut,
            user_login ui ,
            employee emp
          WHERE user_hp_emp_nr         =rec.employeenr
          AND ut.user_id               =ui.user_id
          AND ut.user_hp_emp_nr        =emp.emp_nr
          AND lower(ui.windows_user_id)=lower(emp.nt_user_id)
          AND rownum                   <2 ;
        EXCEPTION
        WHEN no_data_found THEN
          l_reccount := 0;
        END;
        IF ( l_reccount     >0 )THEN
          l_oe_user_seq_nr :=l_oe_user_seq_nr+1;
          --dbms_output.put_line (' OE User Exists ' || l_reccount);
          ----added for checking existance of user in others_auth on 05-Apr-2012
          l_oe_emp_exist    := is_oe_user_exists(l_bd_id,rec.employeenr);
          IF (l_oe_emp_exist ='N' ) THEN
            INSERT
            INTO others_auth
              (
                bd_id,
                seq_id,
                oa_hp_emp_nr
              )
              VALUES
              (
                l_bd_id,
                l_oe_user_seq_nr,
                rec.employeenr
              );
            IF (sql%rowcount=0) THEN
              l_msg_type   :=c_m_type_warning;
              l_errors     :='Unable to add OE Employee ' || rec.employeenr || ' in the deal';

              inserterror_output_messages ( NULL,NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, l_msg_type, i_deal_creation_guid, NULL,NULL,l_errors);
            END IF;
          ELSIF l_oe_emp_exist ='Y' THEN
            l_msg_type        :=c_m_type_warning;
            l_errors          :='OE user already exists in deal OE Employee No : '||rec.employeenr ;
            inserterror_output_messages ( NULL,NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, l_msg_type, i_deal_creation_guid, NULL,NULL,l_errors);
          ELSE
            l_msg_type :=c_m_type_warning;
            l_errors   :=' Error in finding OE User '||l_oe_emp_exist;
            inserterror_output_messages ( NULL,NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, l_msg_type, i_deal_creation_guid, NULL,NULL,l_errors);
          END IF;
        ELSIF ( lower(l_dealsourcecd)='eprime' ) THEN
          BEGIN
            SELECT 1
            INTO l_reccount_oe
            FROM employee
            WHERE email_unix_addr_tx = rec.employeemail
            AND rownum               <2 ;
          EXCEPTION
          WHEN OTHERS THEN
            l_reccount_oe:=0;
          END;
          IF ( l_reccount_oe >0 )THEN
            SELECT NVL(MAX(seq_id),0)+1
            INTO l_max_sq_oe
            FROM sales_rep
            WHERE bd_id =l_bd_id ;
            SELECT emp_nr
            INTO l_oe_emp_nr
            FROM employee
            WHERE email_unix_addr_tx = rec.employeemail
            AND rownum               <2 ;
            INSERT
            INTO sales_rep VALUES
              (
                l_bd_id,
                l_max_sq_oe,
                l_oe_emp_nr,
                sysdate,
                sysdate
              );
            IF (sql%rowcount=0) THEN
              l_msg_type   :=c_m_type_warning;
              l_errors     :='Unable to add OE Employee ' || rec.employeemail || ' in the deal';
              inserterror_output_messages ( NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL, NULL, l_errors, l_msg_type, i_deal_creation_guid, NULL, NULL,l_errors );
            END IF;
          ELSE
            l_msg_type :=c_m_type_warning;
            l_errors   :='OE Employee ' || rec.employeemail || ' does not exists';
            inserterror_output_messages ( NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL, NULL, l_errors, l_msg_type, i_deal_creation_guid, NULL, NULL,l_errors );
          END IF;
        ELSE
          l_msg_type :=c_m_type_warning;
          l_errors   :='OE Employee ' || NVL(rec.employeenr,rec.employeemail) || ' does not exists in Eclipse ';

          inserterror_output_messages ( NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL, NULL, l_errors, l_msg_type, i_deal_creation_guid, NULL, NULL,l_errors );
        END IF;
      END IF;
      --dbms_output. put_line ( 'Deal User Type code : ' || rec.dealusertypecd || ' EMP ' || to_number ( NVL(rec.employeenr,0)) );
    END LOOP;
  END;
  --check for the valid eclipse deal creator and get the deal creators user id
  --need to check if the user login is not created or user login is disabled
  -- then should we allow them to create deal
  --check with Max 31-Oct-2011
  --At present user_tab has primary key only user_id but i have observed
  -- multiple user_id created for the same employee and that's the reason I am
  --checking with employee, and user_login table so ensure that employee id and
  -- NT user_id if of the corect employee.
  --get eclipse user id
  --commented as BMI gets issue with employee number 0
  -- l_deal_creator_dc       :=NVL(l_deal_creator_dc,0);
  -- l_sales_rep_sr_emp      :=NVL(l_sales_rep_sr_emp,0);
  -- l_deal_lead_dl_emp      :=NVL(l_deal_lead_dl_emp,0);
  --l_dist_sales_mgr_dsm_emp:=NVL(l_dist_sales_mgr_dsm_emp,0);
  --dbms_output.PUT_LINE ('get  deal creator user id ');
  L_ECLIPSE_USER_ID         :=getValid_Eclipse_UserID(L_DEAL_CREATOR_DC,L_ERRORS);
  --dbms_output.PUT_LINE (' deal creator user id ' || L_ECLIPSE_USER_ID);


  IF (lower(l_dealsourcecd) NOT IN ('bmi','ngq','sts','smartquote','edp') ) THEN ---added this check as bmi allows external users to created the deal
    IF L_ERRORS             IS NOT NULL THEN
      l_msg_type            :=c_m_type_ERROR;
      raise reject_deal;
    ELSIF L_ECLIPSE_USER_ID IS NULL THEN
      L_ERRORS              :='Invalid Deal Creator employee no';
      l_msg_type            :=c_m_type_ERROR;
      RAISE REJECT_DEAL;
    END IF;
  ELSIF(lower(l_dealsourcecd)  IN ('bmi'))THEN -- ,'ngq','sts') ) THEN
    IF L_ERRORS              IS NOT NULL OR L_ECLIPSE_USER_ID IS NULL THEN
      L_DEAL_CREATOR_DC      :=NULL;
      g_deal_creator_dc_bmi  :=-999999910;
    ELSE
      g_deal_creator_dc_bmi:= L_DEAL_CREATOR_DC;
    END IF;
  END IF;
  --dbms_output.PUT_LINE (' L_ECLIPSE_USER_ID ' || L_ECLIPSE_USER_ID);
  --dbms_output.put_line (' l_deal_lead_dl_emp' || l_deal_lead_dl_emp);



  --*********************************************************************************
  --Getting BMI Default Employee list if these details are not provided in XML
  -- BMI Default Employee details
  --added by HarshShah 17-Feb-2014
  --Condition: If all the 4 sales representative details are not available then only we will check for default BMI employee table.
  --*********************************************************************************

  IF L_DEAL_CREATOR_DC is null and l_deal_lead_dl_emp is null and l_sales_rep_sr_emp is null and l_dist_sales_mgr_dsm_emp is null then


                        BEGIN
                          SELECT driving_hp_emp_nr,
                            init_hp_emp_nr,
                            deal_lead_emp_nr,
                            dsm_hp_emp_nr
                          INTO l_sales_rep_sr_emp,
                            l_deal_creator_dc,
                            l_deal_lead_dl_emp,
                            l_dist_sales_mgr_dsm_emp
                          FROM default_bmi_employee
                          WHERE region_cd=l_region
                          AND country_cd ='*'
                          AND UPPER(route_to_market) = UPPER(l_rtm)
                          AND tenantid =l_tenantid --Added for SMO changes
                          AND source_asset_ID = l_dealsourcecd --Added for US-9408 --> Encore Retirement  
                          AND rownum     <2;
                          --dbms_output.put_line ('Getting BMI Default Employee ...Start');
                          --dbms_output.put_line ( ' l_deal_lead_dl_emp ' ||l_deal_lead_dl_emp );
                          --dbms_output.put_line ( ' l_deal_creator_dc ' ||l_deal_creator_dc );
                          --dbms_output.put_line ( ' l_sales_rep_sr_emp ' ||l_sales_rep_sr_emp );
                          --dbms_output.put_line ( ' l_dist_sales_mgr_dsm_emp ' ||l_dist_sales_mgr_dsm_emp );
                          --dbms_output.put_line ('Getting BMI Default Employee--End ');
                        EXCEPTION
                        WHEN NO_DATA_FOUND THEN
                                    l_deal_lead_dl_emp      := -99991003;
                                    l_deal_creator_dc       := -99991001;
                                    l_sales_rep_sr_emp      := -99991004;
                                    l_dist_sales_mgr_dsm_emp:= -99991002;
                                    l_errors                := 'No data found for the default BMI employee ' || ' Region : ' || l_region ;
                                    g_user_message:='Error while getting default BMI employee details,unable to proceed';
                        WHEN OTHERS THEN
                                  l_deal_lead_dl_emp      := -99991003;
                                  l_deal_creator_dc       := -99991001;
                                  l_sales_rep_sr_emp      := -99991004;
                                  l_dist_sales_mgr_dsm_emp:= -99991002;
                                  l_errors                := 'An error was encountered in getting BMI Default Employee - ' || SQLCODE || ' -ERROR- ' || sqlerrm || '. Error at Line : ' || dbms_utility.format_error_backtrace();
                                  g_user_message:='Error while getting default BMI employee details,unable to proceed';
                                  inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr,l_deal_prog_cd ,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code,l_high_risk_fl, l_risk_reasion_desc,l_risk_desc,l_errors,l_msg_type,l_deal_creation_guid, NULL,NULL,g_user_message);
                                  --dbms_output.PUT_LINE (L_ERRORS);
                        END;

  end if; -- getting BMI Default Employee



   --*********************************************************************************
  --Insert Into Deal  - Zero version deal
  -- Create New Deal
  --*********************************************************************************
  -- l_dealdescription:=replace(l_dealdescription,'&'||'amp;','&');---Added as a part of CR 4815
  l_dealdescription:=replace_special_chars(l_dealdescription);---Added as a part of CR 4815
  --dbms_output.put_line('  l_dealdescription  : '||l_dealdescription);
  l_dunsnr           :=replace_special_chars(l_dunsnr);
  l_custrfpnr        :=replace_special_chars(l_custrfpnr);
  L_EUVREASONCD      :=replace_special_chars(L_EUVREASONCD);
  L_EUVREASONDESC    :=replace_special_chars(L_EUVREASONDESC);
  IF LENGTH (l_busjustifycd)>0 THEN
            l_busjustifycd     :=replace_special_chars(l_busjustifycd);
    END IF;
  IF LENGTH (l_BusJustifySubject)>0 THEN
        --dbms_output.PUT_LINE (' l_BusJustifySubject : ' || l_BusJustifySubject);
      l_BusJustifySubject:=replace_special_chars(l_BusJustifySubject);
  END IF;

-----  BEGIN ---mehnaz
  l_ptnr_exclusivity_fl       := getsqtxmlvalue ( '/DealCreationRequest/DealHeader/PartnerExclusivityFl/', l_deal_creation_guid);

  IF (l_ptnr_exclusivity_fl is NULL or l_ptnr_exclusivity_fl = ' ' ) THEN
    l_ptnr_exclusivity_fl := 'N';
   END IF;

  ---EXCEPTION
  ----WHEN OTHERS THEN
  ---be silent, Dont fail the deal creation
 ---- l_ptnr_exclusivity_fl := 'N';
  ----END;


---test by harsh
 --dbms_output.put_line ('      l_seq'||      l_seq);
--dbms_output.put_line ('      new_bd_nr' ||      new_bd_nr);

--dbms_output.put_line ('      l_dealdescription' ||      l_dealdescription);
--dbms_output.put_line ('      l_global_fl' ||      l_global_fl);
--dbms_output.put_line ('      l_currencycd' ||      l_currencycd);

--dbms_output.put_line ('      l_asapindicator' ||      l_asapindicator);
--dbms_output.put_line ('      l_begindate' ||      l_begindate);
--dbms_output.put_line ('      l_busmodelcd' ||      l_busmodelcd);
--dbms_output.put_line ('      l_complexdealfl' ||      l_complexdealfl);
--dbms_output.put_line ('      l_countrycd' ||      l_countrycd);
--dbms_output.put_line ('      l_enddate' ||      l_enddate);
--dbms_output.put_line ('      l_leadbusgroup' ||      l_leadbusgroup);
--dbms_output.put_line ('      l_leadbusunit' ||      l_leadbusunit);
--dbms_output.put_line ('      l_pricelistcd' ||      l_pricelistcd);
--dbms_output.put_line ('      l_pricetermcd' ||      l_pricetermcd);
--dbms_output.put_line ('      l_routingindicator' ||      l_routingindicator);
--dbms_output.put_line ('      l_singlecompanydeal' ||      l_singlecompanydeal);
--dbms_output.put_line ('      l_dealsourcecd' ||      l_dealsourcecd);
--dbms_output.put_line ('      l_deal_creator_dc' ||      l_deal_creator_dc);
--dbms_output.put_line ('      L_SALES_REP_SR_EMP' ||      L_SALES_REP_SR_EMP);
--dbms_output.put_line ('l_deal_lead_dl_emp ' || l_deal_lead_dl_emp);
--dbms_output.put_line ('      l_dist_sales_mgr_dsm_emp' ||      l_dist_sales_mgr_dsm_emp);
--dbms_output.put_line ('      l_region' ||      l_region);
--dbms_output.put_line ('      l_lang_cd' ||      l_lang_cd);
--dbms_output.put_line ('      l_revsn_dt_gmt' ||      l_revsn_dt_gmt);
--dbms_output.put_line ('      l_revsn_dt_gmt' ||      l_revsn_dt_gmt);
--dbms_output.put_line ('      sysdate' ||      sysdate);
--dbms_output.put_line ('      l_hierarchy_cd' ||      l_hierarchy_cd);
--dbms_output.put_line ('      l_current_version_fl' ||      l_current_version_fl);
--dbms_output.put_line ('      l_mcchargecd' ||      l_mcchargecd);
--dbms_output.put_line ('      l_eu_cust_nr' ||      l_eu_cust_nr);
--dbms_output.put_line ('      l_begindate' ||      l_begindate);
--dbms_output.put_line ('      l_enddate ' ||      l_enddate );
--dbms_output.put_line ('      l_eu_cmpny_nm ' ||      l_eu_cmpny_nm );
--dbms_output.put_line ('      l_euc_city_nm ' ||      l_euc_city_nm );
--dbms_output.put_line ('      l_euc_st_prov' ||      l_euc_st_prov);
--dbms_output.put_line ('      L_custsegment' ||      L_custsegment);
--dbms_output.put_line ('      l_custindustry' ||      l_custindustry);
--dbms_output.put_line ('      l_bus_justify_comp_fl' ||      l_bus_justify_comp_fl);
--dbms_output.put_line ('      l_euv_comp_fl' ||      l_euv_comp_fl);
--dbms_output.put_line ('      l_dealsourcecd' ||      l_dealsourcecd);
--dbms_output.put_line ('      l_dealsourcekeyval' ||      l_dealsourcekeyval);
--dbms_output.put_line ('      l_dealsourcedealtype' ||      l_dealsourcedealtype);
--dbms_output.put_line ('      L_DEALSOURCEEUPROFILEDESC' ||      L_DEALSOURCEEUPROFILEDESC);
--dbms_output.put_line ('      l_dealsourceflagvalue' ||      l_dealsourceflagvalue);
--dbms_output.put_line ('      l_crmopportunityid' ||      l_crmopportunityid);
--dbms_output.put_line ('      l_catalog_deal_fl' ||      l_catalog_deal_fl);
--dbms_output.put_line ('      l_deal_audience_fl' ||      l_deal_audience_fl);
--dbms_output.put_line ('      l_dunsnr' ||      l_dunsnr);
--dbms_output.put_line ('      l_custrfpnr' ||      l_custrfpnr);
--dbms_output.put_line ('      l_ConflictCheckPassedFl' ||      l_ConflictCheckPassedFl);
--dbms_output.put_line ('      sysdate ' ||      sysdate);
--dbms_output.put_line ('      GMTDATE ' ||      GMTDATE);
--dbms_output.put_line ('      L_EUC_CNTRY_CD  ' ||      L_EUC_CNTRY_CD);
--dbms_output.put_line ('      L_DEFAULT_QUOTE_EXPIRE_ITEM_FL   ' ||      L_DEFAULT_QUOTE_EXPIRE_ITEM_FL);
--dbms_output.put_line ('      l_rebatable_fl     ---Added for CR 4760   ' ||      l_rebatable_fl   );
--dbms_output.put_line ('      l_sfdc_opp_id      ' ||      l_sfdc_opp_id  );
--dbms_output.put_line ('      l_sfdc_rqst_id   ' ||      l_sfdc_rqst_id    );
--dbms_output.put_line ('      l_ext_quote_nr     ---Added for BMI deals :' ||      l_ext_quote_nr     );
--dbms_output.put_line ('      l_ext_quote_version --Added for BMI deals   --need to discuss about the validations :' ||      l_ext_quote_version );
--dbms_output.put_line ('      l_prc_pro_cd' ||      l_prc_pro_cd);
  ---
  --Commenting this part as this is handled in webservice
--  eclipse.get_deal_complex_flag(l_region,l_pricelistcd,l_busmodelcd,l_countrycd,l_tenantid,l_complexdealfl,l_res_comp);  ---Added to get the deal complex flag
--  IF l_complexdealfl ='Y' THEN
--  L_MSG_TYPE:='INFO';
--  l_res_comp:= 'Deal marked as complex due to '||l_res_comp;
--   INSERTERROR_OUTPUT_MESSAGES ( l_seq, new_bd_nr,0, NULL, NULL, NULL, NULL, NULL,NULL, NULL, l_res_comp, L_MSG_TYPE, I_DEAL_CREATION_GUID, NULL, NULL,NULL );
--  ELSIF l_complexdealfl <> 'Y' AND l_res_comp IS NOT NULL THEN
--  L_MSG_TYPE:='INFO';
--  l_res_comp:= 'Error in marking deal as complex due to '||l_res_comp;
--  INSERTERROR_OUTPUT_MESSAGES ( l_seq, new_bd_nr,0, NULL, NULL, NULL, NULL, NULL,NULL, NULL, l_res_comp, L_MSG_TYPE, I_DEAL_CREATION_GUID, NULL, NULL,NULL );
--  END IF;

  INSERT
  INTO deal
    (
      bd_id,
      bd_nr,
      bd_version_nr,
      deal_desc_tx,
      euc_strat_acct_fl,
      other_ns_req_fl,
      advance_net_fl,
      eu_agree_fl,
      support_pack_fl,
      supplies_only_fl,
      federal_fl,
      wrnty_conv_fl,
      hm_st_rstrct_fl,
      mktplace_fl,
      var_export_fl,
      mktplace_apvl_fl,
      milestone_prc_fl,
      intl_deal_fl,
      intl_buy_in_us_fl,
      intl_export_fl,
      rslr_exclv_fl,
      drop_ship_fl,
      bd_create_dt,
      deal_prog_cd,
      bdme_aprvl_cd,
      auto_requote_fl,
      cust_sat_fl,
      vend_xpress_fl,
      chan_assem_fl,
      drop_ship_appvl_fl,
      ref_account_fl,
      ntfy_mc_prc_drp_fl,
      deal_lock_fl,
      curr_cd,
      dct_enabled_fl,
      dct_notify_fl,
      asap_indicator_cd,
      beg_dt,
      bus_model_cd,
      complex_deal_fl,
      control_cntry_cd,
      end_dt,
      lead_bus_grp,
      bus_unit_cd,
      price_list_cd,
      price_term_cd,
      routing_indicator_cd,
      single_cmpny_deal_fl,
      deal_source_id,
      init_hp_emp_nr,
      driving_hp_emp_nr,
      deal_lead_emp_nr,
      dsm_hp_emp_nr,
      quote_dist_cd,
      region,
      lang_cd,
      revsn_dt_gmt,
      submit_dt_gmt,
      submit_dt,
      hierarchy_cd,
      current_version_fl,
      mc_charge,
      eu_cust_nr,
      order_bgn_dt,
      order_end_dt,
      eu_cmpny_nm,
      euc_city_nm,
      euc_st_prov,
      cust_seg_cd,
      bus_justify_comp_fl,
      euv_comp_fl,
      deal_source_cd,
      deal_source_keyval,
      deal_source_deal_type,
      deal_source_deal_identifier,
      deal_source_flag_value,
      crm_id,
      catalog_deal_fl,
      deal_audience_fl,
      EUC_DUNS_NR,
      EUC_RFP_NR,
      CONFLICT_CHK_FL,
      last_save_dt,
      last_save_dt_gmt,
      EUC_CNTRY_CD,
      QUOTE_EXPIRE_ITEM_FL,
      rebatable_fl, --Added for CR4760
      crm_opp_nr,
      request_id,
      deal_source_ext_quote_nr,
      deal_source_ext_quote_ver,
      PRC_PRO_CD ,
      EUC_INDUSTRY_NR,
      PARTNER_EXCLUSIVITY_FL,
      CORPORATE_RESELLER_FL,  --Added by Lakshmi as part of US6339 -APJ Corporate Resellers
      Tenantid ----Added for SMO
      ,MIXEDTENANTCD ---Added for SMO
      ,tenantid_data_cd --Added for Federal Project
      ,created_by --New variable added by Lakshmi for Aruba
      ,product_mix --New variable added by Lakshmi for Aruba
      ,SUPPRESS_PCOMM_VIS_FL -- New variable added by Mani for Aruba
    )
    VALUES
    (
      l_seq,
      new_bd_nr,
      0,
      l_dealdescription,
      'N',
      'N',
      'N',
      'N',
      'N',
      l_suppliesonlyfl,--'N',
      'N',
      'N',
      'N',
      'N',
      'N',
      'N',
      'N',
      l_global_fl,
      'N',
      'N',
      'N',
      'N',
      sysdate,
      'U',
      'N',
      'N',
      'N',
      'N',
      'N',
      'N',
      'N',
      'N',
      'N',
      l_currencycd,
      'N',
      'N',
      l_asapindicator,
      l_begindate,
      l_busmodelcd,
      l_complexdealfl,
      l_countrycd,
      l_enddate,
      l_leadbusgroup,
      l_leadbusunit,
      l_pricelistcd,
      l_pricetermcd,
      l_routingindicator,
      l_singlecompanydeal,
      l_dealsourcecd,
      l_deal_creator_dc,
      L_SALES_REP_SR_EMP,
      DECODE(l_deal_lead_dl_emp,0,NULL,l_deal_lead_dl_emp),
      l_dist_sales_mgr_dsm_emp,
      'N',
      l_region,
      l_lang_cd,
      l_revsn_dt_gmt,
      l_revsn_dt_gmt,
      sysdate,
      l_hierarchy_cd,
      l_current_version_fl,
      l_mcchargecd,
      l_eu_cust_nr,
      l_begindate,
      l_enddate ,
      l_eu_cmpny_nm ,
      l_euc_city_nm ,
      l_euc_st_prov,
      L_custsegment,
      l_bus_justify_comp_fl,
      l_euv_comp_fl,
      l_dealsourcecd,
      l_dealsourcekeyval,
      l_dealsourcedealtype,
      L_DEALSOURCEEUPROFILEDESC,
      l_dealsourceflagvalue,
      l_crmopportunityid,
      l_catalog_deal_fl,
      l_deal_audience_fl,
      l_dunsnr,
      l_custrfpnr,
      l_ConflictCheckPassedFl,
      sysdate,
      GMTDATE,
      L_EUC_CNTRY_CD,
      L_DEFAULT_QUOTE_EXPIRE_ITEM_FL,
      l_rebatable_fl,     ---Added for CR 4760
      l_sfdc_opp_id,       --Added in ePrime and BMI changes
      l_sfdc_rqst_id,      --Added in ePrime and BMI changes
      l_ext_quote_nr,     ---Added for BMI deals
      l_ext_quote_version,
      l_prc_pro_cd,
      DECODE(l_custindustry,NULL,NULL,l_custindustry),
      l_ptnr_exclusivity_fl,
      l_CorpRslrAsDistFl, --Added by Lakshmi as part of US6339 -APJ Corporate Resellers
      l_tenantid  --Added for SMO changes
      ,'C' --Added for SMO defaulted MIXEDTENANTCD to 'C'
      ,l_tenantid --Added for Federal Project
      ,l_created_by--New variable added by Lakshmi for Aruba
      ,l_product_mix--New variable added by Lakshmi for Aruba
      --,DECODE(l_created_by,'HPE Sales','Y',NULL) -- New variable added by Mani for Aruba
      ,case when l_created_by='Sales Rep' and l_product_mix='NETWORK_ONLY' then 'Y' else NULL end -- New variable added by Mani for Aruba
    );

     DBMS_OUTPUT.PUT_LINE ('Performance check after insert into deal 15802 : '||  to_char(SYSDATE,'DD-MON-YYYY HH:MI:SS'));
  --Added by Lakshmi for CR: 2895 - Business model default Sales Rep notification is not set in case deal is created by copy deal function
BEGIN
    BEGIN
        SELECT app_value
            INTO l_app_value_regions
            FROM app_config_keys
         WHERE app_key='RESET_SALES_REP_FLAGS_COPY';
    EXCEPTION
        WHEN OTHERS THEN
        l_app_value_regions :=NULL;
    END;

FOR regions IN (SELECT REGEXP_SUBSTR(l_app_value_regions,'[^,]+',1, level) regions_to_update FROM DUAL CONNECT BY level<=LENGTH(l_app_value_regions)- LENGTH(REPLACE(l_app_value_regions,','))+1)
    LOOP
        IF l_region = regions.regions_to_update THEN
                UPDATE deal
                SET (SR_EXP_NOTIFY_FL,DEAL_LEAD_EXP_NOTIFY_FL, BDM_EXP_NOTIFY_FL) =
                    (SELECT SR_DEAL_EXPIRY_NOTIFY,
                                    DL_DEAL_EXPIRY_NOTIFY,
                                    DM_DEAL_EXPIRY_NOTIFY
                    FROM bus_model
                    WHERE country_cd= l_countrycd
                        AND bus_model_cd= l_busmodelcd
                        AND tenantid =l_tenantid )
                    WHERE bd_nr=new_bd_nr AND current_version_FL='Y';
        END IF;
    END LOOP;
EXCEPTION
     WHEN OTHERS THEN
        NULL;
END;


--Below code added by Lakshmi on 2/26/2015 for CR:201211 - BMI deals: Total/Additional falg is not correctly populated on the BMI deals
BEGIN
UPDATE deal SET TOTAL_ADDTL_DISC_FL = (SELECT NVL (DEFAULT_TOTAL_ADDTL_DISC_FL, 'A') FROM bus_model WHERE country_cd=l_countrycd
                                            AND bus_model_cd=l_busmodelcd
                                            AND active_fl='Y'
                                           AND tenantid=l_tenantid   ---Add for SMO Changes
                                            AND rownum<=1),
                            BUNDLE_ACCUMULATION_MODE_FL = (SELECT NVL (DFLT_BNDL_ACCUM_MODE_FL, 'D') FROM bus_model WHERE country_cd=l_countrycd
                                            AND bus_model_cd=l_busmodelcd
                                            AND active_fl='Y'
                                             AND tenantid =l_tenantid ---Add for SMO  Changes
                                            AND rownum<=1)
WHERE bd_nr=new_bd_nr AND current_version_FL='Y';
    EXCEPTION
WHEN OTHERS THEN
l_errors   :=' Cannot perform update of TOTAL_ADDTL_DISC_FL and BUNDLE_ACCUMULATION_MODE_FL on Deal' ;
      l_msg_type :='WARNING';
     INSERTERROR_OUTPUT_MESSAGES ( NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL, NULL, L_ERRORS, L_MSG_TYPE, I_DEAL_CREATION_GUID, NULL, NULL,l_errors );
END;

BEGIN
SELECT app_value 
  INTO l_update_deal_disc_sources
    FROM APP_CONFIG_KEYS 
WHERE app_key='UPDATE_DEAL_DISC_TYPE_CD';
EXCEPTION
WHEN OTHERS THEN
    l_update_deal_disc_sources :=NULL;
END;


FOR deal_sources IN (SELECT REGEXP_SUBSTR(l_update_deal_disc_sources,'[^,]+',1, level) 
sources_to_update FROM DUAL CONNECT BY level<=LENGTH(l_update_deal_disc_sources)- LENGTH(REPLACE(l_update_deal_disc_sources,','))+1)
LOOP
    BEGIN
    IF l_dealsourcecd = deal_sources.sources_to_update THEN
    UPDATE deal
       SET mc_disc_type =(SELECT  mcdt.mc_deal_disc_type_desc 
                                FROM mc_charge mch , mc_charge_deal_types mcdt 
                                    WHERE mch.MC_DEAL_DISC_TYPE_CD = mcdt.MC_DEAL_DISC_TYPE_CD
                                    AND     mch.mc_chrg = l_mcchargecd
                                    AND mch.country_cd = l_countrycd
                                    AND mch.bus_model_cd = l_busmodelcd
                                 )
     WHERE bd_nr = new_bd_nr AND current_version_FL = 'Y';
     END IF;
    EXCEPTION
    WHEN OTHERS THEN
    UPDATE deal SET mc_disc_type = null
    WHERE bd_nr=new_bd_nr AND current_version_FL='Y';            
    END;
END LOOP;

  --dbms_output.put_line (' l_dealsourcecd,' || l_dealsourcecd);
  --dbms_output.put_line ('l_dealsourcekeyval,' ||l_dealsourcekeyval);
  --dbms_output.put_line ('l_dealsourcedealtype,' ||l_dealsourcedealtype);
  --  --dbms_output.put_line ('l_dealsourcedealidentifier,' ||l_dealsourcedealidentifier);
  --dbms_output.PUT_LINE ('l_dealsourceflagvalue,' ||L_DEALSOURCEFLAGVALUE);
  --dbms_output.put_line ('l_crmid,' ||l_crmid);
  --dbms_output.put_line ('l_crmopportunityid,' ||l_crmopportunityid);
  --dbms_output.put_line ('l_catalog_deal_fl,' ||l_catalog_deal_fl);
  --dbms_output.put_line ('l_deal_audience_fl' ||l_deal_audience_fl);
  --dbms_output.put_line (' l_rebatable_fl,' || l_rebatable_fl);
  --verify if bus justifiation required for this deal's business model
  --add more validations - what if business model string is wrong or no data
  -- found error appears.. add exception
  --already getting in the bus model query qbove.
  --  SELECT
  --    bus_justify_reqd_fl
  --  INTO
  --    l_bus_justify_reqd_fl
  --  FROM
  --    bus_model
  --  WHERE
  --    bus_model_cd = l_busmodelcd
  --  AND country_cd = l_countrycd;
  --***************************
  --Update Won Lost Code
  --***************************
  IF (l_wonloststatcd IS NOT NULL ) THEN
    BEGIN
      SELECT 1
      INTO l_reccount
      FROM w_l_stat_code
      WHERE w_l_stat_cd = l_wonloststatcd;
    EXCEPTION
    WHEN NO_DATA_FOUND THEN
      l_reccount :=0 ;
    END;
    IF l_reccount =0 THEN
      l_errors   :=' Invalid Won/ Lost status code ' || l_wonloststatcd || ' .Cannot perform update. Won / Lost Status code should be W,L,C or O .Please select the appropriate Won/Lost status and re-try.' ;
      l_msg_type :='WARNING';
      raise reject_won_lost_update;
    END IF;
    --dbms_output.put_line ('l_wonloststatcd ' || l_wonloststatcd);
    BEGIN
      SELECT 1
      INTO l_reccount
      FROM employee emp  ---employee has tenantid check if this need tenantid condition
      WHERE emp_nr              =l_wonlostempnr
      AND upper(emp.emp_stat_cd)='ACTIVE';
    EXCEPTION
    WHEN TOO_MANY_ROWS THEN
      l_reccount := 2;
    WHEN no_data_found THEN

      if l_wonlostempnr is null or l_wonlostempnr='' then
            l_errors  :='Please provide a valid Employee No';
      else
            l_errors  :=' Invalid Employee No. for Won/Loss Update : ' || l_wonlostempnr || '. Cannot proceed with the WON/LOSS update.';
      end if;
      l_msg_type:='ERROR';
      raise reject_won_lost_update;
    END;
    UPDATE deal
    SET w_l_stat_cd       =l_wonloststatcd,
      deal_won_upd_emp_nr = l_wonlostempnr,
      w_l_upd_dt          = gmtdate,
      --w_l_prob            =DECODE( l_wonloststatcd,'W',100,0), --Commented by Lakshmi to read it from XML as below
      w_l_prob            =NVL(l_won_lost_prob_pct,0),
      w_l_crt_dt          =DECODE(l_wonlostdate,NULL,gmtdate,w_l_crt_dt),
      w_l_crt_emp_nr      =DECODE(l_wonlostdate,NULL,l_wonlostempnr, l_wonlostempnr)
    WHERE bd_id           =l_bd_id;
    --update result table wiith success message
    --l_errors  :='Won /Lost status for the deal has been updated successfully by ' || l_full_name;
    --l_msg_type:='SUCCESS';
    --inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr,l_deal_prog_cd, l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code,l_deal_risk_fl, l_euv_reason_cd,l_euv_reason_txt,l_errors,l_msg_type,'UPDATEWONLOST', l_w_l_stat_cd,NULL,l_errors);
  END IF;
  --****************************************************
  -- Insert Affiliates Details
  --****************************************************
  ins_eu_auth_affil (l_bd_id,l_deal_creation_guid,l_xmlnamespace);
  --***************************************************
  --if business justification is required
  IF l_bus_justify_reqd_fl='Y' THEN
    BEGIN
      -- check if business justification code exists for the combination of
      -- Country Code, REgion Code and MC Charge Code

      SELECT COUNT (*)
      INTO l_bus_justify_code_exists
      FROM bus_justify_reason_details
      WHERE region_cd   = l_region
      AND ( country_cd  = l_countrycd
      OR COUNTRY_CD     ='*')
      AND ( mc_code     = l_mcchargecd
      OR MC_CODE        ='*')
      AND bus_justify_cd=L_BUSJUSTIFYCD;
      --dbms_output.put_line ('Business Justification details : ' || L_REGION || '  , Country : ' || L_COUNTRYCD || ' and MC Charge : ' || L_MCCHARGECD || ' Bus justify code : ' || L_BUSJUSTIFYCD );
      --if no code exits then add to the error table.
      -- Pending: if no code exits then add to the deal , raise exception and
      -- don't create version 1 deal.
      --dbms_output.PUT_LINE ('L_BUSJUSTIFYCD' || L_BUSJUSTIFYCD);
      IF l_bus_justify_code_exists <= 0 THEN
        L_ERRORS                   := 'Business Justification is required but business justification details are not available for the Region : ' || L_REGION || '  , Country : ' || L_COUNTRYCD || ' and MC Charge : ' || L_MCCHARGECD || ' Bus justify code : ' || L_BUSJUSTIFYCD;
        l_msg_type                 :=c_m_type_error;
        raise reject_deal;
      END IF;
      --validate Bus justify emp nr
      l_rectest   :=GETVALID_ECLIPSE_USERID (l_busjustifyempnr,L_ERRORS);
      IF L_ERRORS IS NOT NULL THEN
        L_MSG_TYPE:=C_M_TYPE_ERROR;
        raise reject_deal;
      elsif l_busjustifyempnr IS NULL THEN
        L_ERRORS              :='Invalid Employee No for Business Justification Check if employee : ' || l_busjustifyempnr || ' exists in eclipse and has valid access to eclipse.';
        l_msg_type            :=c_m_type_ERROR;
        RAISE REJECT_DEAL;
      END IF;
      --check if bus justification subject line is empty
      IF (ltrim(rtrim(l_busjustifysubject)) IS NULL) THEN
        l_errors                            :='Bus Justficiation Subject is empty';
        INSERTERROR_OUTPUT_MESSAGES ( NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL, NULL, L_ERRORS, L_MSG_TYPE, I_DEAL_CREATION_GUID, NULL, NULL,l_errors );
      END IF;
      SELECT seq_deal_bus_justify.nextval INTO l_deal_bus_justify_id FROM dual;
      --      {\rtf1\ansi test for c and q team}
      --  l_busjustifycommentblob:=replace(l_busjustifycommentblob,'&'||'amp;','&');---Added as part of CR4815

      --Commented by Lakshmi on 7/4/2014,as part of US6381- Direct Escalation Form, Comment blob will be populated from web service
      -- /*
      l_busjustifycommentblob                  :=replace_special_chars(l_busjustifycommentblob);
      IF ltrim(rtrim(l_busjustifycommentblob)) IS NULL THEN
        l_errors                               :='Business Justification comments are not provided.Please provide the comments and retry creating a deal';
        l_msg_type                             :=c_m_type_ERROR;
        RAISE REJECT_DEAL;
      END IF;
      l_busjustifycommentblob:='{\rtf1\ansi ' ||l_busjustifycommentblob || '}';
      --dbms_output.put_line (' l_busjustifycommentblob ' || l_busjustifycommentblob);
      --CR 4482

      IF (LENGTH(l_busjustifycommentblob)>500) THEN
        l_busjustifycommentblob_temp    :=convert_to_blob(l_busjustifycommentblob);
      ELSE
        l_busjustifycommentblob_temp:=utl_raw.cast_to_raw (l_busjustifycommentblob);
      END IF;
     -- */
      ---End of CR 4482
      INSERT
      INTO deal_bus_justify
        (
          BD_ID,
          deal_bus_justify_id,
          bus_justify_cd,
          comments, --Commented by Lakshmi on 7/4/2014,as part of US6381-Direct Escalation Form, Comment blob will be populated from web service
          subject,
          last_change_emp_nr,
          creation_dts,
          update_dts
        )
        VALUES
        (
          L_BD_ID,
          l_deal_bus_justify_id,
          l_busjustifycd,
          --   ( SELECT utl_raw.cast_to_raw (l_busjustifycommentblob) AS comments FROM dual
          --  ) ,
           l_busjustifycommentblob_temp,-- Commented by Lakshmi on 7/4/2014,as part of US6381- Direct Escalation Form, Comment blob will be populated from web service
          ltrim(rtrim(l_BusJustifySubject)),
          l_busjustifyempnr,
          sysdate,
          sysdate
        );
      IF sql%ROWCOUNT=0 THEN
        l_errors    :='Business Justification details could not be added to the deal. Cannot proceed with deal creation';
        l_msg_type  :=c_m_type_error;
        raise reject_deal;
      END IF;
      --store the zero version bd_id .
      -- this will be required when deal goes to version 1 , using this bd_id, search for the deal's bus justifcation in deal_bus_justify table and updtate the record with the version 1 bd_id
      l_bus_justify_bd_id:=l_bd_id;
      --dbms_output.put_line (' 0 version bus justify bd_id '|| l_bus_justify_bd_id);
    END;
  END IF;
  --EUV insert for zero version
  --if l_euv_required_fl='Y' AND l_euvcompletiondate IS NULL
  --desc deal_euv
  --pending
  /*
  1. validate euv type code is valid code
  2. validate if bus mode says euv is required and euv at won is N and euv details are
  not provided by bmi quote then reject the deal.
  3. Also need to validate in both , the below code and special EUV update procedure. EUV tuype code should be valid, reason should be valid
  --if reason is required and details are not supplied then we have to generate errors.
  */
  IF (L_EUVTYPECD       IS NULL OR L_EUVCOMPLETIONDATE IS NULL OR L_EUVCOMPLETIONHPEMPNR IS NULL ) THEN
    IF ( L_EUV_AT_WON_FL ='N' AND L_EUV_REQUIRED_FL='Y' AND ( L_DEALSOURCEDEALTYPE=C_LOW_TOUCH_DEALTYPE_DESC ) ) THEN
      l_errors          :='EUV details are missing. Check EVU Type, EUV Completion Date, EUV Completion by Employee No';
      L_MSG_TYPE        :=c_m_type_ERROR;
      RAISE REJECT_DEAL;
    END IF;
  ELSE
  --added by Harsh Shah for Checking BMI default employee
  --22-Feb-2014
  IF is_emp_bmi_default (L_EUVCOMPLETIONHPEMPNR
  ,l_dealsourcecd --Added for US-9408 --> Encore Retirement  
  ) ='N' THEN
        IF is_user_exists (L_EUVCOMPLETIONHPEMPNR
        ,l_dealsourcecd --Added for US-9408 --> Encore Retirement  
        )='N' THEN
          L_ERRORS                               :='Invalid  EUV Completion Employee No ' || L_EUVCOMPLETIONHPEMPNR;
          l_msg_type                             :=c_m_type_error;
          raise reject_deal;
        END IF;
    END IF;
    IF ( L_EUVREASONDESC IS NULL AND iseuvreasonrequired(l_busmodelcd,l_countrycd,L_EUVREASONCD) >0) THEN
      L_ERRORS           :='EUV Reason Details are empty. Please provide the EUV Reason Details';
      l_msg_type         :=c_m_type_error;
      raise reject_deal;
    END IF;
    INSERT
    INTO deal_euv
      (
        bd_id,
        euv_type,
        EUV_COMP_DTS,
        EUV_EMP_NR,
        EUV_REASON_CD,
        EUV_REASON_TXT
      )
      VALUES
      (
        l_bd_id,
        l_euvtypecd ,
        l_euvcompletiondate,
        L_EUVCOMPLETIONHPEMPNR,
        L_EUVREASONCD ,
        L_EUVREASONDESC
      );
    IF sql%rowcount >0 THEN
      L_EUV_COMP_FL:='Y';
      --dbms_output.put_line('EUV COMP FL  EUV inserted ' || l_euv_comp_fl);
    ELSE
      l_euv_comp_fl :='N';
    END IF;
  END IF;
  --update deal table with euv_comp_fl
  UPDATE DEAL
  SET EUV_COMP_FL=l_euv_comp_fl
  WHERE BD_ID    =l_bd_id;
  --getting <AgentIncentives> details and inserting into deal_pl table.

  --pending   <Competitors>

  --****************************************************************************************
  --Adding Reseller A and Reseller B
  --****************************************************************************************
  --getting   <ResellerAs> details and inserting into RSLR_A

  --Add Reseller A
  ---Added as temporary solution for adding reseler ids
  BEGIN
    SELECT 1
    INTO l_rslra_proid
    FROM edms_deal_queue x,
      TABLE ( xmlsequence ( extract ( x.xml_data_xml, 'DealCreationRequest/ResellerAs/ResellerA',l_xmlnamespace))) d
    WHERE x.deal_creation_guid                                                = l_deal_creation_guid
    AND LENGTH(extract ( value (d), '//PartnerProID/text()',l_xmlnamespace) ) >0;
  EXCEPTION
  WHEN NO_DATA_FOUND THEN
    l_rslra_proid :=0;
  WHEN TOO_MANY_ROWS THEN
    l_rslra_proid :=2;
  END;

  IF (l_rslra_proid >0 )THEN

        --dbms_output.put_line('Adding ResellerA when xml has Partner ProId');
        l_rslr_a_added:=add_reseller_a_new (l_deal_creation_guid,l_xmlnamespace,l_bd_id,l_countrycd,l_region,l_busmodelcd,l_deal_creator_dc,l_errors);

  ELSE

          --dbms_output.put_line('Adding ResellerA when xml has Reseller Id');
          --dbms_output.put_line ('deal creation guid ' || l_deal_creation_guid);
          --dbms_output.put_line ('l_xmlnamespace ' || l_xmlnamespace);
          --dbms_output.put_line ('l_countrycd '|| l_countrycd);
          --dbms_output.put_line ('l_region '|| l_region);
          --dbms_output.put_line ('l_busmodelcd '|| l_busmodelcd);


          l_rslr_a_added:=add_reseller_a_new (l_deal_creation_guid,l_xmlnamespace,l_bd_id,l_countrycd,l_region,l_busmodelcd,l_deal_creator_dc,l_errors);

  END IF;

  --dbms_output.put_line (' Reseller A Addition status: ' || l_rslr_a_added );
  --dbms_output.put_line (' l_errors ' || l_errors);
  IF (L_RSLR_A_ADDED         ='N' AND UPPER(l_rtm) = 'INDIRECT' ) THEN--l_dealsourcecd<>c_deal_souce_bmi
  --THEN --Condition added as BMI  is not adding resellers other than default as all the deals are direct deals
    IF lower(l_dealsourcecd)='eprime' THEN                                 --added this condition to alow deal creation with version 0 even routing indicator is not provided for ePrime deals.
            l_msg_type           :='ERROR';
            l_errors             := ' Creating 0 Version deal as reseller A is not added ';
            l_dealvertocreate    :=0;
            INSERTERROR_OUTPUT_MESSAGES ( l_bd_id, l_bd_nr, l_bd_version_nr, l_deal_prog_cd, l_bdme_aprvl_cd, l_quote_dist_cd, l_euv_stat_code, l_high_risk_fl, l_risk_reasion_desc, l_risk_desc, l_errors, l_msg_type, l_deal_creation_guid, NULL, NULL,l_errors);
    ELSE
            --dbms_output.PUT_LINE ('Reseller A not added');
            L_ERRORS  :=l_errors||' Deal cannot be created. Unable to add Reseller A';
            L_MSG_TYPE:=C_M_TYPE_ERROR;
            RAISE REJECT_DEAL;
   END IF;
  END IF;

    --Adding Default BMI Volume resellers if SAP_APPRVL_FL='Y' AND region='AP'
    SELECT sap_apprvl_fl INTO l_sap_appr_fl
        FROM bus_model
        WHERE bus_model_cd=l_busmodelcd
        AND country_cd=l_countrycd
        AND tenantid =l_tenantid;  ---Added for SMO

        --dbms_output.PUT_LINE('Checking addition of default volume resellers procedure insert_BMI_Default_VOL_RSLR');
        --dbms_output.PUT_LINE('L_SAP_APPR_FL is: '||l_sap_appr_fl);
        --dbms_output.PUT_LINE('l_region is: '||l_region);
        IF (l_sap_appr_fl='Y' AND l_region='AP') THEN
            BEGIN
            SELECT 1 INTO cnt_valid_rslr_a_cbn FROM reseller WHERE rslr_id IN (SELECT rslr_id FROM rslr_a WHERE bd_id=l_bd_id ) AND cust_base_nr IS NOT NULL;
            EXCEPTION
            WHEN NO_DATA_FOUND THEN
                cnt_valid_rslr_a_cbn :=0;
            WHEN TOO_MANY_ROWS THEN
                cnt_valid_rslr_a_cbn :=2;
            WHEN OTHERS THEN
                cnt_valid_rslr_a_cbn :=0;
            END;
                IF cnt_valid_rslr_a_cbn > 0 THEN
                    insert_BMI_Default_VOL_RSLR(l_bd_id,
                                              l_deal_creator_dc,
                                              l_errors
                                              );
                END IF;
        END IF;
        IF l_errors<>'SUCCESS' THEN
        --dbms_output.PUT_LINE('Default Volume reseller cannot be added');
        l_msg_type := 'WARNING';
        INSERTERROR_OUTPUT_MESSAGES ( l_bd_id, l_bd_nr, l_bd_version_nr, l_deal_prog_cd, l_bdme_aprvl_cd, l_quote_dist_cd, l_euv_stat_code, l_high_risk_fl, l_risk_reasion_desc, l_risk_desc, l_errors, l_msg_type, l_deal_creation_guid, NULL, NULL,l_errors);
        ELSE
        --dbms_output.PUT_LINE('Default Volume reseller added');
        NULL;
        END IF;

  --Add Reseller B
  /*
  i_deal_creation_guid IN VARCHAR2,
  i_xmlnamespace      VARCHAR2,
  i_bd_id             NUMERIC,
  i_country_cd        VARCHAR2,
  i_bus_model_cd      VARCHAR2,
  i_rslr_added_emp_nr NUMERIC
  */
  --Add Reseller B

  ---Added as temporary solution for adding reseler ids

  SELECT COUNT(*)
  INTO l_rslrb_proid
  FROM edms_deal_queue x,
    TABLE ( xmlsequence ( extract ( x.xml_data_xml, 'DealCreationRequest/ResellerBs/ResellerB',l_xmlnamespace))) d
  WHERE x.deal_creation_guid                                                = l_deal_creation_guid
  AND LENGTH(extract ( value (d), '//PartnerProID/text()',l_xmlnamespace) ) >0;
  IF l_rslrb_proid                                                          >0 THEN
    --dbms_output.put_line('Adding ResellerB when xml has Partner ProId');
    l_rslr_b_added:=add_reseller_B_new (l_deal_creation_guid,l_xmlnamespace,l_bd_id,l_countrycd,l_region,l_busmodelcd,l_deal_creator_dc,l_errors);
  ELSE
    --dbms_output.put_line('Adding ResellerB when xml has Reseller Id');
    --l_rslr_b_added:=add_reseller_B_new (l_deal_creation_guid,l_xmlnamespace,l_bd_id,l_countrycd,l_region,l_busmodelcd,l_deal_creator_dc,'N',l_errors);
    --By Harsh Shah 20-Dec-2013,
    l_rslr_b_added:=add_reseller_B_new (l_deal_creation_guid,l_xmlnamespace,l_bd_id,l_countrycd,l_region,l_busmodelcd,l_deal_creator_dc,l_errors);
  END IF;
  --dbms_output.put_line (' Reseller B Addition status: ' || l_rslr_b_added);
  IF L_RSLR_B_ADDED='N' AND (l_dealsourcecd NOT IN ('BMI','NGQ','STS') OR lower(l_dealsourcecd) <> 'eprime' )THEN --Condition added as BMI  is not adding resellers other than default as all the deals are direct deals
    --dbms_output.PUT_LINE ('Reseller B not added');
    L_ERRORS  :=l_errors ||' Deal cannot be created. Unable to add Reseller B';
    L_MSG_TYPE:=C_M_TYPE_ERROR;
    RAISE REJECT_DEAL;
  END IF;

 DBMS_OUTPUT.PUT_LINE ('Performance check gypsy call 16230.. start time : '||  to_char(SYSDATE,'DD-MON-YYYY HH:MI:SS'));
  --get list price from Gpsy:
  get_list_prices_from_gypsy
        (l_countrycd,
        l_pricelistcd,
        l_currencycd,
        l_pricetermcd,
        l_deal_creation_guid,
        'N',
        l_hierarchy_cd,
        l_enddate);

 DBMS_OUTPUT.PUT_LINE ('Performance check gypsy call 16242.. end time : '||  to_char(SYSDATE,'DD-MON-YYYY HH:MI:SS'));
  --****************************************************************************************
  --Adding Bundles
  --****************************************************************************************

  ---commented by Harsh Shah 23-jan-2015 for performance improvement--US7832
  /*
   FOR recbd IN
    (SELECT    *
    FROM
      (SELECT extract ( value (d), '//LineItemBD/AddedByHPEmployee/EmployeeNr/text()', l_xmlnamespace). getstringval () AS addedbyempnr,    ---emp nr change from new xml
        extract ( value (d), '//LineItemBD/AddedByHPEmployee/EmailAddress/text()', l_xmlnamespace). getstringval ()     AS addedbyempemail, ---emp nr change from new xml
        extract ( value (d), '//LineItemBD/AuthBasisDesc/text()', l_xmlnamespace). getstringval ()                      AS authbasisdesc ,
        extract ( value (d), '//LineItemBD/AuthDate/text()', l_xmlnamespace ). getstringval ()                          AS authdate,
        extract ( value (d), '//LineItemBD/AuthDateGMT/text()', l_xmlnamespace). getstringval ()                        AS authdategmt,
        extract ( value (d), '//LineItemBD/AuthHPEmployee/EmployeeNr/text()', l_xmlnamespace). getstringval ()          AS authempnr,    ---emp nr change from new xml
        extract ( value (d), '//LineItemBD/AuthHPEmployee/EmailAddress/text()', l_xmlnamespace). getstringval ()        AS authempemail, ---emp nr change from new xml
        extract ( value (d), '//LineItemBD/AuthStatCD/text()', l_xmlnamespace). getstringval ()                         AS authstatcd,
        extract ( value (d), '//LineItemBD/BDNetAmt/text()', l_xmlnamespace ). getstringval ()                          AS bdnetamt,
        extract ( value (d), '//LineItemBD/CostPrice/text()', l_xmlnamespace). getstringval ()                          AS costprice,
        extract ( value (d), '//LineItemBD/ListPrice/text()', l_xmlnamespace). getstringval ()                          AS listprice,
        extract ( value (d), '//LineItemBD/PricingTypeCD/text()', l_xmlnamespace). getstringval ()                      AS pricingtypecd,
        extract (value (d), '//LineItemBD/ProdDesc/text()', l_xmlnamespace) . getstringval ()                           AS proddesc,
        extract (value (d), '//LineItemBD/RequestType/text()', l_xmlnamespace). getstringval ()                         AS requesttype,
        extract (value (d), '//LineItemBD/RolloutMonthQtys/text()', l_xmlnamespace). getstringval ()                    AS rolloutmonthqtys,
        extract (value (d), '//LineItemBD/ProdBaseNr/text()', l_xmlnamespace). getstringval ()                          AS sku,
        extract (value (d), '//LineItemBD/StdDiscPct/text()', l_xmlnamespace). getstringval ()                          AS stddiscpct,
        extract (value (d), '//LineItemBD/BundleDesc/text()', l_xmlnamespace). getstringval ()                          AS bundledesc,
        extract (value (d), '//LineItemBD/BundleSource /text()', l_xmlnamespace). getstringval ()                       AS bundlesource ,
        extract (value (d), '//LineItemBD/BundleIndex /text()', l_xmlnamespace). getstringval ()                        AS bundleindex,
        extract (value (d), '//LineItemBD/Qty/text()', l_xmlnamespace). getstringval ()                                 AS header_qty,
        extract (value (d), '//LineItemBD/OptCD/text()', l_xmlnamespace). getstringval ()                               AS optcd,
        extract (value (D), '//LineItemBD/ConfigID/text()', L_XMLNAMESPACE). GETSTRINGVAL ()                            as CONFIGID,
        extract (value (d), '//LineItemBD/PL/text()', l_xmlnamespace). getstringval ()                                  AS pl, --Added on 23-Jan for CR 3236
        extract ( value (D), '//LineItemBD/OrderMinQty/text()', l_xmlnamespace). GETSTRINGVAL () as ORDERMINQTY, ---Added for CR 4375
        extract (value (D), '//LineItemBD/DocNum/text()', l_xmlnamespace). GETSTRINGVAL ()                              as BMI_DOC_NO,  -- by Harsh Shah 17-Jan-2014,
        extract (value (D), '//LineItemBD/ExtPreApprvPrice/text()', l_xmlnamespace). GETSTRINGVAL ()                    as ExtPreApprvPrice,
        extract ( value (d), '//LineItemBD/DisplayCompPrcFl/text()', l_xmlnamespace). getstringval () AS DisplayCompPrcFl,--Added for US6037 --> Show Component Level Pricing
        extract ( value (d), '//LineItemBD/GuidanceAvailFl/text()', l_xmlnamespace). getstringval ()                        AS GuidanceAvailFl,--Added by Lakshmi for CR6012
        extract ( value (d), '//LineItemBD/GuidanceDetailsID/text()', l_xmlnamespace). getstringval ()                        AS GuidanceDetailsID,--Added by Lakshmi for CR6012
        extract ( value (d), '//LineItemBD/GuidanceDiscExpertPct/text()', l_xmlnamespace). getstringval ()                        AS GuidanceDiscExpertPct,--Added by Lakshmi for CR6012
        extract ( value (d), '//LineItemBD/GuidanceDiscFloorPct/text()', l_xmlnamespace). getstringval ()                        AS GuidanceDiscFloorPct,--Added by Lakshmi for CR6012
        extract ( value (d), '//LineItemBD/GuidanceDiscTypicalPct/text()', l_xmlnamespace). getstringval ()                        AS GuidanceDiscTypicalPct,--Added by Lakshmi for CR6012
        extract ( value (d), '//LineItemBD/GuidanceRefreshDateGMT/text()', l_xmlnamespace). getstringval ()                        AS GuidanceRefreshDateGMT,--Added by Lakshmi for CR6012
        extract ( value (d), '//LineItemBD/NonDiscFl/text()', l_xmlnamespace). getstringval ()                        AS NonDiscFl
      FROM edms_deal_queue x,
        TABLE ( xmlsequence ( extract ( x.xml_data_xml, 'DealCreationRequest/Bundles/LineItemBD', l_xmlnamespace))) d
      WHERE x.deal_creation_guid =l_deal_creation_guid
      )
    )
    LOOP
  */



  BEGIN
     FOR recbd IN
    (
    SELECT       ADDED_BY_EMP_NR       AS addedbyempnr,
              ADDED_BY_EMP_EMAIL         AS addedbyempemail,
              AUTH_BASIS_DESC            AS authbasisdesc,
              AUTH_DATE                  AS authdate,
              AUTH_DATE_GMT              AS authdategmt,
              AUTH_EMP_NR                AS authempnr,
              AUTH_EMP_EMAIL             AS authempemail,
              AUTH_STAT_CD               AS authstatcd,
              BD_NET_AMT                 AS bdnetamt,
              COST_PRICE                 AS costprice,
              LIST_PRICE                 AS listprice,
              PRICING_TYPE_CD            AS pricingtypecd,
              PROD_DESC                  AS proddesc,
              REQUEST_TYPE               AS requesttype,
              ROLLOUT_MONTH_QTY          AS rolloutmonthqtys,
              SKU                        AS sku,
              STD_DISC_PCT               AS stddiscpct,
              BUNDLE_DESC                AS bundledesc,
              BUNDLE_SOURCE              AS bundlesource,
              BUNDLE_INDEX               AS bundleindex,
              HEADER_QTY                 AS header_qty,
              OPT_CD                     AS optcd,
              CONFIG_ID                  AS CONFIGID,
              PROD_LINE_CD               AS pl,
              ORD_MIN_QTY                AS ORDERMINQTY,
              BMI_DOC_NO                 AS BMI_DOC_NO,
              EXT_PRE_APPRV_PRICE        AS ExtPreApprvPrice,
              DISPLAY_COMP_PRC_FL        AS DisplayCompPrcFl,
              ECLIPSE_BUNDLE_ID          AS EclipseBundleID,
              GUIDANCE_AVAIL_FL          AS GuidanceAvailFl,
              GUIDANCE_DETAEILS_ID       AS GuidanceDetailsID,
              GUIDANCE_DISC_EXPERT_PCT   AS GuidanceDiscExpertPct,
              GUIDANCE_DISC_FLOOR_PCT    AS GuidanceDiscFloorPct,
              GUIDANCE_DISC_TYPICAL_PCT  AS GuidanceDiscTypicalPct,
              GUIDANCE_REFRESHE_DATE_GMT AS GuidanceRefreshDateGMT,
              NO_DISC_FL                 AS NonDiscFl
              ---Added for US 7301
              ,INSTANT_PRC_METHOD As instantprcmethod
              ,Instant_prc_amt As Instantprcamt
              ,CONTRA_AMT As contraamt
             , USE_EXT_LIST_PRICE AS UseExternalListPriceFl
        FROM eclipse.GT_XML_BUNDLE
        WHERE GUID=l_deal_creation_guid

        )
    LOOP
            --by harsh shah 17-jan-2014
            --dbms_output.PUT_LINE (' BMI DOC No for Bundle Lines 2  : ' || RECBD.BMI_DOC_NO );

      ---Added for eprime/BMI deal creation
      IF recbd.addedbyempnr IS NULL AND recbd.addedbyempemail IS NOT NULL THEN
        recbd.addedbyempnr  :=get_emp_nr(recbd.addedbyempemail);
      END IF;
      IF recbd.authempnr IS NULL AND recbd.authempemail IS NOT NULL THEN
        recbd.authempnr  :=get_emp_nr(recbd.authempemail);
      END IF;
      IF (lower(l_dealsourcecd)='eprime' AND l_dealvertocreate = 0) THEN --aded to not authorise if eprime deal version to be created is 0
        recbd.AuthBasisDesc   :=NULL;
        recbd.AuthDate        :=NULL;
        recbd.AuthDateGMT     :=NULL;
        recbd.authempnr       :=NULL;
        recbd.authempemail    :=NULL;
        recbd.AuthStatCD      :='N';
      END IF;
      --added below condition as BMI takes the deal creator as line added by employee if null generic BMI employee
      IF lower(l_dealsourcecd)  IN ('bmi','smartquote','edp')--,'ngq','sts') 
    AND recbd.addedbyempnr IS NULL THEN
        recbd.addedbyempnr    :=g_deal_creator_dc_bmi;
      END IF;
      ---added as eprime is not going to send the order min qty and this will be default to 1
      IF recbd.orderminqty IS NULL THEN
        recbd.orderminqty  :=1 ;
      END IF;
      --Bundle header data
      --dbms_output.PUT_LINE ( 'Bundle Header -------' ) ;
      --dbms_output.put_line ( ' AddedByEmpNr :' || recbd.addedbyempnr ) ;
      --dbms_output.put_line (' AuthBasisDesc :' || recbd.authbasisdesc);
      --dbms_output.put_line (' AuthDate :' || recbd.authdate);
      --dbms_output.put_line (' AuthDateGMT ' || recbd.authdategmt);
      --dbms_output.put_line (' AuthEmpNr :' || recbd.authempnr);
      --dbms_output.put_line (' AuthStatCD :' || recbd.authstatcd);
      --dbms_output.put_line (' BDNetAmt :' || recbd.bdnetamt);
      --dbms_output.put_line (' CostPrice :' || recbd.costprice);
      --dbms_output.put_line (' ListPrice  :' || recbd.listprice);
      --dbms_output.put_line (' PricingTypeCD :' || recbd.pricingtypecd);
      --dbms_output.put_line (' ProdDesc    :' || recbd.proddesc);
      --dbms_output.put_line (' RequestType   :' || recbd.requesttype);
      --dbms_output.put_line (' RolloutMonthQtys :' || recbd.rolloutmonthqtys);
      --dbms_output.put_line (' SKU :' || recbd.sku);
      --dbms_output.put_line (' StdDiscPct :' || recbd.stddiscpct);
      --dbms_output.put_line (' BundleDesc   :' || recbd.bundledesc);
      --dbms_output.put_line (' BundleSource : '|| recbd.bundlesource);
      --dbms_output.put_line (' Bundle Index : '|| recbd.bundleindex);
      --dbms_output.put_line (' Bundle  header_qty ' || recbd.header_qty);
      --dbms_output.put_line (' Bundle  header opt Code ' || recbd.optcd);
      --dbms_output.PUT_LINE (' Bundle  header ConfigID ' || RECBD.CONFIGID);
      --check if added by employee No exists and it's a valid eclipse user
      l_errors              :='Bundle Header SKU : ' || recbd.sku || ' OptCode : ' || recbd.OptCd || ' Bundle Source ' || recbd.bundlesource || ' Config : ' || RECBD.CONFIGID || ' Bundle Index ' || recbd.bundleindex;
      IF recbd.addedbyempnr IS NULL THEN
        l_errors            :='Added by Employee No is not provided for ' || l_errors;
        l_msg_type          :=c_m_type_error;
        l_bd_id             :=0;
        l_bd_nr             :=0;
        l_bd_version_nr     :=0;
        raise reject_deal;
      END IF;
      --check if rollout months qty exists
      IF (ltrim(rtrim(recbd.rolloutmonthqtys))) IS NULL AND (l_dealsourcecd NOT IN ('BMI','NGQ','STS','SMARTQUOTE','EDP')) THEN
        l_errors                                :='Rollout Month Qtys is empty For ' || l_errors;
        l_msg_type                              :=c_m_type_error;
        l_bd_id                                 :=0;
        l_bd_nr                                 :=0;
        l_bd_version_nr                         :=0;
        raise reject_deal;
      END IF;

      --Added as BMI will not send the Rolout months (even rollout)
      IF (ltrim(rtrim(recbd.rolloutmonthqtys))) IS NULL AND (l_dealsourcecd IN ('BMI','NGQ','STS','SMARTQUOTE','EDP')) THEN
        recbd.rolloutmonthqtys                  :=Rollout_Qty_BMI(l_begindate,l_enddate,recbd.header_qty);
      END IF;

      IF (lower(l_dealsourcecd)               NOT IN ('bmi','ngq','sts','smartquote','edp')) THEN
        IF (is_user_exists(recbd.addedbyempnr,NULL) ='N') THEN
          l_errors                            :='Invalid Employee No ' || recbd.addedbyempnr || ' or Employee is not a valid Eclipse User, For  ' || l_errors;
          l_msg_type                          :=c_m_type_error;
          l_bd_id                             :=0;
          l_bd_nr                             :=0;
          l_bd_version_nr                     :=0;
          raise reject_deal;
        END IF;
      END IF;
      --l_errors:=null;
      --Check if auth basis description is null
      IF (l_dealsourcedealtype                 <>C_HIGH_TOUCH_DEALTYPE_DESC AND l_dealapprfl='Y') THEN
        IF recbd.authstatcd                     ='Y' THEN
          IF LTRIM(RTRIM(recbd.authbasisdesc)) IS NULL THEN
            L_ERRORS                           :='Auth Basis Description is empty for the ' || l_errors;
            l_msg_type                         :=c_m_type_error;
            l_bd_id                            :=0;
            l_bd_nr                            :=0;
            l_bd_version_nr                    :=0;
            raise reject_deal;
          elsif ltrim(rtrim(recbd.authempnr)) IS NULL THEN
            L_ERRORS                          :='Auth Emp Nr is empty for the ' || l_errors;
            l_msg_type                        :=c_m_type_error;
            l_bd_id                           :=0;
            l_bd_nr                           :=0;
            l_bd_version_nr                   :=0;
            raise reject_deal;
          elsif is_user_exists(recbd.authempnr
          ,l_dealsourcecd --Added for US-9408 --> Encore Retirement  
          ) ='N' THEN
              --By Harsh Shah 22-Feb-2014
              --added logic for ignoring emp check if the emp nr is default employee
               if is_emp_bmi_default(  recbd.authempnr
               , L_DEALSOURCECD--Added for US-9408 --> Encore Retirement  
               )='N' THEN
                        L_ERRORS                           :='Invalied Auth Emp Nr : ' || recbd.authempnr || ' for the ' || l_errors;
                        l_msg_type                         :=c_m_type_error;
                        l_bd_id                            :=0;
                        l_bd_nr                            :=0;
                        l_bd_version_nr                    :=0;
                        raise reject_deal;
              END IF;
          END IF;
        END IF;
      END IF;
      --add the below conditions for eprime as eprime can authorise a product even if it is a high_touch deal
      IF (lower(L_DEALSOURCECD)                 ='eprime' AND l_dealsourcedealtype = C_HIGH_TOUCH_DEALTYPE_DESC ) THEN
        IF recbd.authstatcd                     ='Y' THEN
          IF LTRIM(RTRIM(recbd.authbasisdesc)) IS NULL THEN
            L_ERRORS                           :='Auth Basis Description is empty for the ' || l_errors;
            l_msg_type                         :=c_m_type_error;
            l_bd_id                            :=0;
            l_bd_nr                            :=0;
            l_bd_version_nr                    :=0;
            raise reject_deal;
          elsif ltrim(rtrim(recbd.authempnr)) IS NULL THEN
            L_ERRORS                          :='Auth Emp Nr is empty for the ' || l_errors;
            l_msg_type                        :=c_m_type_error;
            l_bd_id                           :=0;
            l_bd_nr                           :=0;
            l_bd_version_nr                   :=0;
            raise reject_deal;
          elsif is_user_exists(recbd.authempnr
          ,l_dealsourcecd --Added for US-9408 --> Encore Retirement  
          ) ='N' THEN
          --By Harsh Shah, 22-Feb-2014
          --added to consider default bmi employee
          if is_emp_bmi_default(recbd.authempnr
             , L_DEALSOURCECD--Added for US-9408 --> Encore Retirement  
                                            )='N' THEN
                        L_ERRORS                           :='Invalied Auth Emp Nr : ' || recbd.authempnr || ' for the ' || l_errors;
                        l_msg_type                         :=c_m_type_error;
                        l_bd_id                            :=0;
                        l_bd_nr                            :=0;
                        l_bd_version_nr                    :=0;
                        raise reject_deal;
            END IF;
          END IF;
        END IF;
      END IF;---end of new condition for ePrime--
      L_AUTH_DATE_GMT       :=NULL;
      IF (RECBD.AUTHDATEGMT IS NOT NULL OR RECBD.AUTHDATEGMT<>'') THEN
        L_AUTH_DATE_GMT     :=TO_TIMESTAMP (SUBSTR(RECBD.AUTHDATEGMT,1,19),'YYYY-MM-DD"T"HH24:MI:SS');
      ELSE
        L_AUTH_DATE_GMT:=NULL;
      END IF;
      L_AUTH_MC_DATE:=NULL;
      --Get Auth MC date from XML and convert it to oracle date time format
      IF (RECBD.AUTHDATE IS NOT NULL OR RECBD.AUTHDATE<>'') THEN
        L_AUTH_MC_DATE   :=TO_TIMESTAMP (SUBSTR(RECBD.AUTHDATE,1,19),'YYYY-MM-DD"T"HH24:MI:SS');
      ELSE
        L_AUTH_MC_DATE:=NULL;
      END IF;
      ----dbms_output.PUT_LINE (' converted to date auth date gmt ' || L_AUTH_DATE_GMT );
      --generate bundle config.
      IF recbd.bundlesource=c_bundle_source_watson THEN
        l_bundle_config   :=recbd.configid;
        --dbms_output.put_line ('watson config id: ' || l_bundle_config);
      ELSIF recbd.bundlesource = c_bundle_source_ezconfig OR recbd.bundlesource=c_bundle_source_ecfix OR recbd.bundlesource= c_bundle_source_ecband THEN---condition added for ePrime
        l_bundle_config       :=recbd.configid;
        -- recbd.bundlesource ='EC-FIX';
      elsif recbd.bundlesource=c_bundle_source_soft OR recbd.bundlesource=c_bundle_source_ngce OR recbd.bundlesource=c_bundle_source_ngce_fix THEN --If  bundle source is ngce or soft thenn bundle config need to be created
        SELECT seq_ca_config_id.nextval
        INTO l_bundle_config
        FROM dual;
      ELSE
        l_bundle_config:=NULL;
        --Pending implementation -- exit if bundle source is other tahn watson/soft (only if required)
      END IF;
      --dbms_output.put_line (' New Bundle Config ID : '|| l_bundle_config);
      l_bundle_line_nr:=l_bundle_line_nr+1;
      --dbms_output.put_line (' recbd.sku ' || recbd.sku || ' Bundle Index ' || recbd.bundleindex || ' Bundle Header Line ' || l_bundle_line_nr);
      --*********************
      --Looping through bundle Header
      --*********************
      --Get the bundle Header SKU Auth BD Net amount from the BundleLines XMl Element
      l_HDR_PROD_STD_DISC:=0;

      --Modified byHarsh Shah 18-Oct-2013
      -- added l_xml_path_to_Query in order to generalize the changes with BMIs modified XQuery Path.

      --l_xml_path_to_Query:='DealCreationRequest/Bundles/LineItemBD/BundleLines/BundleLine';

     -- GET_BD_HDR_AUTH_LIST_AMT( l_xml_path_to_Query, L_DEAL_CREATION_GUID , L_XMLNAMESPACE, RECBD.BUNDLEINDEX, RECBD.BUNDLESOURCE, RECBD.SKU, L_BD_HDR_SKU_LIST_PRICE , L_AUTH_BDNET_AMT,L_BD_HDR_SKU_QTY,L_HDR_BD_SKU_OPT_CD,L_PROD_COST_PRICE_HDR_PROD,L_HDR_PROD_STD_DISC, l_line_AuthBasisDesc,l_line_AuthStat,l_line_AuthDtGMT);
     begin
          select nvl(list_price,0),nvl(BD_NET_AMT,0),nvl(qty,0),opt_cd,COST_PRICE,STD_DISC_PCT,AUTH_BASIS_DESC,nvl(AUTH_STAT_CD,'N'),AUTH_DATE_GMT
       INTO  L_BD_HDR_SKU_LIST_PRICE , L_AUTH_BDNET_AMT,L_BD_HDR_SKU_QTY,L_HDR_BD_SKU_OPT_CD,L_PROD_COST_PRICE_HDR_PROD,L_HDR_PROD_STD_DISC, l_line_AuthBasisDesc,l_line_AuthStat,l_line_AuthDtGMT_Char
         from gt_xml_bundle_line where guid =L_DEAL_CREATION_GUID and parent_index=RECBD.BUNDLEINDEX and bundle_line_source=RECBD.BUNDLESOURCE and sku=RECBD.SKU and rownum<2;

          IF (l_line_AuthDtGMT_Char IS NOT NULL OR l_line_AuthDtGMT_Char<>'') THEN
              l_line_AuthDtGMT              :=TO_TIMESTAMP (SUBSTR(l_line_AuthDtGMT_Char,1,19),'YYYY-MM-DD"T"HH24:MI:SS');
          ELSE
               l_line_AuthDtGMT:=NULL;
          END IF;
      exception
      when others then
      dbms_output.put_line('Error om get_bd_hdr_....    '||DBMS_UTILITY.FORMAT_ERROR_BACKTRACE()||' error    :'||sqlerrm);
       L_MSG_TYPE:='WARNING';
        l_errors  :='Error in get bundle header auth list amt   '||recbd.sku||'---'||substr(sqlerrm,1,200);
    --dbms_output.put_line (l_errors);
          inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr, l_deal_prog_cd,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code, l_high_risk_fl,l_risk_reasion_desc,l_risk_desc,l_errors,l_msg_type, l_deal_creation_guid,NULL,NULL,NULL);
      end;
     -- dbms_output.put_line('after new change  ');
      --dbms_output.PUT_LINE (' bundle header sku option code ' || L_HDR_BD_SKU_OPT_CD);
      --dbms_output.PUT_LINE (' bundle Headers bundle line auth bd net ' || L_AUTH_BDNET_AMT);
      --dbms_output.PUT_LINE (' Header bundle product std disc l_HDR_PROD_STD_DISC : ' || L_HDR_PROD_STD_DISC);
      --Insert prod line data (line_item,bundle_line,line_disc_scale table)
      --dbms_output.put_line (' bundle header auth bd_net amount ' || recbd.bdnetamt || ' and list price is ' || recbd.listprice);
      --dbms_output.put_line( ' recbd.rolloutmonthqtys '|| recbd.rolloutmonthqtys);
      --dbms_output.put_line( ' recbd.sku '|| recbd.sku);
      --dbms_output.PUT_LINE( ' HEADER QTY '|| RECBD.HEADER_QTY);
      --dbms_output.PUT_LINE( ' l_bd_hdr_sku_qty ' || L_BD_HDR_SKU_QTY);
      --dbms_output.PUT_LINE( ' L_PROD_COST_PRICE_HDR_PROD ' || L_PROD_COST_PRICE_HDR_PROD);
      --if the deal is high touch deal then auth bd_net should be null
      --l_auth_bdnet_amt:=null;
      /*
      if (l_dealsourcedealtype<>c_high_touch_dealtype_desc ) then
      l_auth_bdnet_amt:=recbd.bdnetamt;
      else
      l_auth_bdnet_amt:=null;
      end if;
      */
      --dbms_output.put_line ('Add Bundle Header ..before insert : Create New Version : ' || l_createnewversion  || ' l_auth_generic_emp_nr : '|| l_auth_generic_emp_nr);

      /*
         i_total_hdr_listprice_value NUMBER,
        i_total_hdr_bdnet_value number
        two extra fields have been added to resolve the issue of invalid auth discount % at the header level
        by Harsh Shah 10-Mar-2014
      */

      insert_prod_line (l_bd_id, l_bd_nr, l_bd_version_nr, recbd.authstatcd, l_deal_prog_cd, l_bdme_aprvl_cd, l_quote_dist_cd, l_euv_stat_code, l_high_risk_fl, l_risk_reasion_desc, l_risk_desc, l_deal_creation_guid, l_countrycd,
      l_pricelistcd, l_currencycd, l_pricetermcd, recbd.sku, 'N', l_hierarchy_cd, l_enddate,'BD', recbd.listprice, recbd.authbasisdesc, recbd.header_qty, recbd.bdnetamt, recbd.authempnr, l_auth_generic_emp_nr,-- l_auth_mc_hp_emp_nr,
      recbd.addedbyempnr, recbd.pricingtypecd, l_bundle_line_nr, l_begindate, 'Y','Y', recbd.bundlesource, l_bundle_config, NULL,l_hdr_prod_std_disc, l_bundle_line_nr,recbd.authstatcd, l_hdr_bd_sku_opt_cd,recbd.rolloutmonthqtys,
      l_auth_date_gmt,l_auth_mc_date,l_dealsourcedealtype, l_bd_hdr_sku_qty,recbd.bundledesc,recbd.pl,recbd.bdnetamt,--l_auth_bdnet_amt,
      recbd.costprice, l_prod_cost_price_hdr_prod,l_busmodelcd,recbd.orderminqty,l_line_auth_type,    --added for new auth changes
      L_LINE_AUTHBASISDESC,L_LINE_AUTHSTAT,L_LINE_AUTHDTGMT,L_CREATENEWVERSION,'N', RECBD.BMI_DOC_NO,RECBD.PRODDESC, L_EXT_PRE_APPRV_PRC_AM,
      recbd.listprice,recbd.bdnetamt, recbd.DisplayCompPrcFl,recbd.GuidanceAvailFl,recbd.GuidanceDetailsID,recbd.GuidanceDiscExpertPct,recbd.GuidanceDiscFloorPct,recbd.GuidanceDiscTypicalPct,recbd.GuidanceRefreshDateGMT, recbd.NonDiscFl
      ,recbd.instantprcmethod,recbd.Instantprcamt,recbd.contraamt  ----added for US 7301
      ,recbd.UseExternalListPriceFl
       );  ----proddesc added by Ramesh on 17-Feb-2014 For R8;

      --dbms_output.put_line ('Add Bundle Header ..done');
      --dbms_output.put_line ('Add Bundle Header ..after insert prod line : Create New Version : ' || l_createnewversion );
      IF (l_createnewversion IS NULL OR l_createnewversion='N' ) THEN
        l_errors             := 'Unable to proceed with deal creation as there are error while adding bundles. Check bundle Config  : ' || l_bundle_config || ', Bundle Desc :' || recbd.bundledesc || ',Bundle Source : ' || recbd.bundlesource || ', Bundle Line : ' || l_bundle_line_nr ;
        l_msg_type           :=c_m_type_error;
        raise reject_deal_bundles;
      END IF;
      l_auth_bdnet_amt:=NULL;
      --L_EXT_PRE_APPRV_PRC_AM := NULL;
      --Increasing bundle detail line nr.. as it already inserted  by the above code.
      -- l_bundle_dtl_line_nr:=1;
      --*************************************
      --Looping through Bundle Line
      -- inserting bundle line
      --*************************************
      --- commented by Harsh Shah 27-Jan-2015 for performance improvement--US7832

      /*
      FOR recbdline IN
      (

      SELECT        *
      FROM
        (SELECT extract ( value (D), '//AuthBasisDesc/text()', L_XMLNAMESPACE). GETSTRINGVAL ()         AS AUTHBASISDESC,
                extract ( value (d), '//AuthDate/text()', l_xmlnamespace). getstringval ()                    AS authdate,
                extract ( value (d), '//AuthDateGMT/text()', l_xmlnamespace). getstringval ()                 AS authdategmt,
                extract ( value (d), '//AuthHPEmployee/EmployeeNr/text()', l_xmlnamespace). getstringval ()   AS authempnr,    ---emp nr change as per new xml
                extract ( value (d), '//AuthHPEmployee/EmailAddress/text()', l_xmlnamespace). getstringval () AS authempemail, ---emp nr change as per new xml
                extract ( value (d), '//AuthStatCD/text()', l_xmlnamespace). getstringval ()                  AS authstatcd,
                extract ( value (d), '//BDNetAmt/text()', l_xmlnamespace). getstringval ()                    AS bdnetamt,
                extract ( value (D), '//ListPrice/text()', L_XMLNAMESPACE). GETSTRINGVAL ()                   AS LISTPRICE,
                extract ( value (d), '//PL/text()', l_xmlnamespace). getstringval ()                          AS pl,
                extract ( value (d), '//ProdDesc/text()', l_xmlnamespace). getstringval ()                    AS proddesc,
                extract ( value (d), '//Qty/text()', l_xmlnamespace). getstringval ()                         AS qty,
                extract ( value (d), '//ProdBaseNr/text()', l_xmlnamespace). getstringval ()                  AS sku,
                extract ( value (d), '//StdDiscPct/text()', l_xmlnamespace). getstringval ()                  AS stddiscpct,
                extract ( value (d), '//ParentIndex/text()', l_xmlnamespace). getstringval ()                 AS parentindex,
                extract ( value (d), '//BundleSource/text()', l_xmlnamespace). getstringval ()                AS bundleline_source,
                extract (value (D), '//OptCD/text()', L_XMLNAMESPACE). GETSTRINGVAL ()                        AS OPTCD,
                extract (value (d), '//CostPrice/text()', l_xmlnamespace). getstringval ()                    AS CostPrice,
                extract (value (d), '//ExtPreApprvPrice/text()', l_xmlnamespace). getstringval ()             AS ExtPreApprvPrice,
                --extract ( value (d), '//DisplayCompPrcFl/text()', l_XMLNAMESPACE). getstringval () AS DisplayCompPrcFl,
                extract ( value (d), '//GuidanceAvailFl/text()', l_xmlnamespace). getstringval ()             AS GuidanceAvailFl,--Added by Lakshmi for CR6012
                extract ( value (d), '//GuidanceDetailsID/text()', l_xmlnamespace). getstringval ()           AS GuidanceDetailsID,--Added by Lakshmi for CR6012
                extract ( value (d), '//GuidanceDiscExpertPct/text()', l_xmlnamespace). getstringval ()       AS GuidanceDiscExpertPct,--Added by Lakshmi for CR6012
                extract ( value (d), '//GuidanceDiscFloorPct/text()', l_xmlnamespace). getstringval ()        AS GuidanceDiscFloorPct,--Added by Lakshmi for CR6012
                extract ( value (d), '//GuidanceDiscTypicalPct/text()', l_xmlnamespace). getstringval ()      AS GuidanceDiscTypicalPct,--Added by Lakshmi for CR6012
                extract ( value (d), '//GuidanceRefreshDateGMT/text()', l_xmlnamespace). getstringval ()      AS GuidanceRefreshDateGMT,--Added by Lakshmi for CR6012
                extract ( value (d), '//NonDiscFl/text()', l_xmlnamespace). getstringval ()                        AS NonDiscFl
 FROM edms_deal_queue x,
          TABLE ( xmlsequence ( extract ( x.xml_data_xml, 'DealCreationRequest/Bundles/LineItemBD/BundleLines/BundleLine', l_xmlnamespace))) d
        WHERE x.deal_creation_guid =l_deal_creation_guid
        )
      WHERE parentindex                                         =recbd.bundleindex
      AND BUNDLELINE_SOURCE                                     =RECBD.BUNDLESOURCE
      AND (LTRIM(RTRIM(SKU)),DECODE(OPTCD,NULL,' ',OPTCD)) NOT IN
        (SELECT LTRIM(RTRIM(PROD_GNRC_NR_TX)),
          DECODE(PROD_OPT_CD,NULL,' ',PROD_OPT_CD)
        FROM BUNDLE_LINE BL
        WHERE BL.BD_ID=L_BD_ID
        AND LINE_NR   =L_BUNDLE_LINE_NR
        )
      )

      */

      FOR recbdline IN
      (

            SELECT
                AUTH_BASIS_DESC      AS AUTHBASISDESC,
              AUTH_DATE                 AS authdate,
              AUTH_DATE_GMT             AS authdategmt,
              AUTH_EMP_NR               AS authempnr,
              AUTH_EMP_EMAIL            AS authempemail,
              AUTH_STAT_CD              AS authstatcd,
              BD_NET_AMT                AS bdnetamt,
              LIST_PRICE                AS LISTPRICE,
              PROD_LINE_CD              AS pl,
              PROD_DESC                 AS proddesc,
              QTY                       AS qty,
              SKU                       AS sku,
              STD_DISC_PCT              AS stddiscpct,
              PARENT_INDEX              AS parentindex,
              BUNDLE_LINE_SOURCE        AS bundleline_source,
              OPT_CD                    AS OPTCD,
              COST_PRICE                AS CostPrice,
              BANDED_FL                 AS bandedfl,
              to_number(nvl(EXT_LINE_ITEM_NR,0))          AS EXT_LINE_ITEM_NR,
              EXT_PRE_APPRV_PRICE       AS ExtPreApprvPrice,
              GUIDANCE_AVAIL_FL         AS GuidanceAvailFl,
              GUIDANCE_DETAILS_ID       AS GuidanceDetailsID,
              GUIDANCE_DISC_EXPERT_PCT  AS GuidanceDiscExpertPct,
              GUIDANCE_DISC_FLOOR_PCT   AS GuidanceDiscFloorPct,
              GUIDANCE_TYPICAL_PCT      AS GuidanceDiscTypicalPct,
              GUIDANCE_REFRESH_DATE_GMT AS GuidanceRefreshDateGMT,
              NON_DISC_FL               AS NonDiscFl
              ,INSTANT_PRC_METHOD AS InstantPrcMethod---Added for US 7301
              ,INSTANT_PRC_AMT AS InstantPrcAmt---Added for US 7301
              ,CONTRA_AMT AS ContraAmt---Added for US 7301
              ,USE_EXT_LIST_PRICE AS UseExternalListPriceFL
            FROM ECLIPSE.GT_XML_BUNDLE_Line
      WHERE PARENT_INDEX                                         =recbd.bundleindex
      AND BUNDLE_LINE_SOURCE                                     =RECBD.BUNDLESOURCE
      AND guid =l_deal_creation_guid           --added as part of CR 239425 ( to not get the records based on guid)
      AND (LTRIM(RTRIM(SKU)),DECODE(OPT_CD,NULL,' ',OPT_CD)) NOT IN
        (SELECT LTRIM(RTRIM(PROD_GNRC_NR_TX)),
          DECODE(PROD_OPT_CD,NULL,' ',PROD_OPT_CD)
        FROM BUNDLE_LINE BL
        WHERE BL.BD_ID=L_BD_ID
        AND LINE_NR   =L_BUNDLE_LINE_NR
        )
        order by EXT_LINE_ITEM_NR asc --4-mar-2015 by Harsh Shah - CR 202569-[Channel_PST][US-7832]The products sequence in eclipse is not consistent with BMI page
      )
      LOOP
        ---Added for eprime/BMI deal creation
        IF recbdline.authempnr IS NULL AND recbdline.authempemail IS NOT NULL THEN
          recbdline.authempnr  :=get_emp_nr(recbdline.authempemail);
        END IF;
        IF (lower(l_dealsourcecd) ='eprime' AND l_dealvertocreate = 0) THEN --aded to not authorise if eprime deal version to be created is 0
          recbdline.AuthBasisDesc:=NULL;
          recbdline.AuthDate     :=NULL;
          recbdline.AuthDateGMT  :=NULL;
          recbdline.authempnr    :=NULL;
          recbdline.authempemail :=NULL;
          recbdline.AuthStatCD   :='N';
        END IF;


        l_bundle_dtl_line_nr:=l_bundle_dtl_line_nr+1;

        dbms_output.put_line(' Bundle Line Details  Start ');
        dbms_output.put_line (' bundle line for the parent Index ' || recbd.bundleindex);
        dbms_output.put_line(' Bundle Line detail line :' || l_bundle_dtl_line_nr);
        dbms_output.put_line('SKU: ' ||recbdline.sku);
        dbms_output.put_line('StdDiscPct: ' ||recbdline.stddiscpct);
        dbms_output.PUT_LINE('BundleLine_Source ' || RECBDLINE.BUNDLELINE_SOURCE);
        --dbms_output.put_line (' bundle line authbasisdesc ' || recbdline.authbasisdesc);
        --dbms_output.put_line(' Bundle Line Details  End');
        --dbms_output.PUT_LINE (' bundle line auth date gmt ' || RECBDLINE.AUTHDATEGMT);
        l_errors:='Bundle Line Detail SKU : ' || recbdline.sku || ' OptCode : ' || recbdline.OptCd || ' Bundle Source ' || recbd.bundlesource || ' Config : ' || RECBD.CONFIGID || ' Bundle Parent Index ' || recbdline.ParentIndex;
        --Check if auth basis description is null
        IF (l_dealsourcedealtype    <>C_HIGH_TOUCH_DEALTYPE_DESC AND l_dealapprfl='Y') THEN
          IF ( recbdline.authstatcd <>'Y' AND recbdline.authstatcd <>'N' )THEN
            L_ERRORS                :='Invalid value for Auth Stat Code : ' || recbdline.authstatcd || ' for ' || l_errors;
            l_msg_type              :=c_m_type_error;
            l_bd_id                 :=0;
            l_bd_nr                 :=0;
            l_bd_version_nr         :=0;
            raise reject_deal;
          END IF;
          IF recbdline.authstatcd                     ='Y' THEN
            IF LTRIM(RTRIM(recbdline.authbasisdesc)) IS NULL THEN
              L_ERRORS                               :='Auth Basis Description is empty for the ' || l_errors;
              l_msg_type                             :=c_m_type_error;
              l_bd_id                                :=0;
              l_bd_nr                                :=0;
              l_bd_version_nr                        :=0;
              raise reject_deal;
            elsif ltrim(rtrim(recbdline.authempnr)) IS NULL THEN
              L_ERRORS                              :='Auth Emp Nr is empty for the ' || l_errors;
              l_msg_type                            :=c_m_type_error;
              l_bd_id                               :=0;
              l_bd_nr                               :=0;
              l_bd_version_nr                       :=0;
              raise reject_deal;
            elsif is_user_exists(recbdline.authempnr
            ,l_dealsourcecd --Added for US-9408 --> Encore Retirement  
            ) ='N' THEN

              --By Harsh Shah, 22-Feb-2014
              --added to consider default bmi employee
              if is_emp_bmi_default(  recbd.authempnr
               , L_DEALSOURCECD--Added for US-9408 --> Encore Retirement  
                )='N' THEN
                          L_ERRORS                               :='Invalied Auth Emp Nr : ' || recbd.authempnr || ' for the ' || l_errors;
                          l_msg_type                             :=c_m_type_error;
                          l_bd_id                                :=0;
                          l_bd_nr                                :=0;
                          l_bd_version_nr                        :=0;
                          raise reject_deal;
              END IF;
            END IF;
          END IF;
        END IF;
        --add the below conditions for eprime as eprime can authorise a product even if it is a high_touch deal
        IF (lower(L_DEALSOURCECD)                 ='eprime' AND l_dealsourcedealtype = C_HIGH_TOUCH_DEALTYPE_DESC ) THEN
          IF recbd.authstatcd                     ='Y' THEN
            IF LTRIM(RTRIM(recbd.authbasisdesc)) IS NULL THEN
              L_ERRORS                           :='Auth Basis Description is empty for the ' || l_errors;
              l_msg_type                         :=c_m_type_error;
              l_bd_id                            :=0;
              l_bd_nr                            :=0;
              l_bd_version_nr                    :=0;
              raise reject_deal;
            elsif ltrim(rtrim(recbd.authempnr)) IS NULL THEN
              L_ERRORS                          :='Auth Emp Nr is empty for the ' || l_errors;
              l_msg_type                        :=c_m_type_error;
              l_bd_id                           :=0;
              l_bd_nr                           :=0;
              l_bd_version_nr                   :=0;
              raise reject_deal;
            elsif is_user_exists(recbd.authempnr
            ,l_dealsourcecd --Added for US-9408 --> Encore Retirement  
            ) ='N' THEN
                  --By Harsh Shah, 22-Feb-2014
                --added to consider default bmi employee
                  if is_emp_bmi_default(  recbd.authempnr
                    , L_DEALSOURCECD--Added for US-9408 --> Encore Retirement  
                  )='N' THEN
                            L_ERRORS                           :='Invalied Auth Emp Nr : ' || recbd.authempnr || ' for the ' || l_errors;
                            l_msg_type                         :=c_m_type_error;
                            l_bd_id                            :=0;
                            l_bd_nr                            :=0;
                            l_bd_version_nr                    :=0;
                            raise reject_deal;
                  END IF;
            END IF;
          END IF;
        END IF;---end of new condition for ePrime--
        L_AUTH_DATE_GMT           :=NULL;
        IF (RECBDLINE.AUTHDATEGMT IS NOT NULL OR RECBDLINE.AUTHDATEGMT<>'') THEN
          L_AUTH_DATE_GMT         :=TO_TIMESTAMP ( SUBSTR(RECBDLINE.AUTHDATEGMT,1,19),'YYYY-MM-DD"T"HH24:MI:SS');
        ELSE
          L_AUTH_DATE_GMT:=NULL;
        END IF;
        L_AUTH_MC_DATE:=NULL;
        --Get Auth MC date from XML and convert it to oracle date time format
        IF (RECBDLINE.AUTHDATE IS NOT NULL OR RECBDLINE.AUTHDATE<>'') THEN
          L_AUTH_MC_DATE       :=TO_TIMESTAMP ( SUBSTR(RECBDLINE.AUTHDATE,1,19),'YYYY-MM-DD"T"HH24:MI:SS');
        ELSE
          L_AUTH_MC_DATE:=NULL;
        END IF;
        --dbms_output.PUT_LINE (' converted to date auth date gmt for bundle line ' || L_AUTH_DATE_GMT );
        --insert bundle line details
        --insert bundle lines
        /*
        BD_ID
        LINE_NR
        DISC_BNDRY_ID
        SCALE_ID
        ITEM_NR
        */
        L_AUTH_BDNET_AMT          :=NULL;
        --L_EXT_PRE_APPRV_PRC_AM := NULL;
        L_PROD_COST_PRICE_HDR_PROD:=0;
        --add bundle line
        --  --dbms_output.PUT_LINE (' bundle line auth bd_net amount ' || RECBDLINE.BDNETAMT);
        --Insert prod line data (line_item,bundle_line,line_disc_scale table)

        --dbms_output.put_line (' Bundle Line  auth status code '|| recbdline.authstatcd || ' auth date gmt ' || recbdline.authdategmt || ' l_auth_generic_emp_nr ' || l_auth_generic_emp_nr);
        --if deal is high touch deal then auth bdnet amount should be null
        l_auth_bdnet_amt:=NULL;
        --L_EXT_PRE_APPRV_PRC_AM := NULL;

        --bundle desc is not required for Bundle Lines. It is only for the bundle Header Level.
        L_HDR_PROD_STD_DISC:=0; --initializing to zero as we don't need this for bundle line. Bundle line has got std disc values in XML
        --dbms_output.PUT_LINE (' bundle line std disc : ' || RECBDLINE.STDDISCPCT || ' bundle line No : ' || L_BUNDLE_DTL_LINE_NR);
         --   DBMS_OUTPUT.PUT_LINE('Calling INSERT_PROD_LINE for bundle lines');
INSERT_PROD_LINE ( L_BD_ID, L_BD_NR,L_BD_VERSION_NR, RECBDLINE.AUTHSTATCD,L_DEAL_PROG_CD,L_BDME_APRVL_CD,L_QUOTE_DIST_CD, L_EUV_STAT_CODE, L_HIGH_RISK_FL, L_RISK_REASION_DESC,L_RISK_DESC, L_DEAL_CREATION_GUID,
L_COUNTRYCD,L_PRICELISTCD,L_CURRENCYCD, L_PRICETERMCD, RECBDLINE.SKU,'N',L_HIERARCHY_CD,L_ENDDATE,'BD', RECBDLINE.LISTPRICE,RECBDLINE.AUTHBASISDESC, RECBDLINE.QTY, RECBDLINE.BDNETAMT , RECBDLINE.AUTHEMPNR,
l_auth_generic_emp_nr,-- L_AUTH_MC_HP_EMP_NR,
        RECBD.ADDEDBYEMPNR,RECBD.PRICINGTYPECD,L_BUNDLE_DTL_LINE_NR ,L_BEGINDATE,'Y','N',RECBD.BUNDLESOURCE, L_BUNDLE_CONFIG,null, RECBDLINE.STDDISCPCT, L_BUNDLE_LINE_NR,RECBDLINE.AUTHSTATCD,RECBDLINE.OPTCD,null,
        L_AUTH_DATE_GMT,L_AUTH_MC_DATE,L_DEALSOURCEDEALTYPE, 0,null,RECBDLINE.PL,null,RECBDLINE.COSTPRICE,L_PROD_COST_PRICE_HDR_PROD,L_BUSMODELCD,null,L_LINE_AUTH_TYPE,                                                                              --added for new auth changes
        NULL,NULL,NULL, l_createnewversion, 'N',null,recbdline.proddesc, recbdline.ExtPreApprvPrice,recbdline.listprice,recbdline.bdnetamt,NULL,-- recbdline.DisplayCompPrcFl,
           recbdline.GuidanceAvailFl,recbdline.GuidanceDetailsID,recbdline.GuidanceDiscExpertPct,recbdline.GuidanceDiscFloorPct,recbdline.GuidanceDiscTypicalPct,recbdline.GuidanceRefreshDateGMT, recbdline.NonDiscFl
            ,recbdline.InstantPrcMethod ,recbdline.InstantPrcAmt  ,recbdline.ContraAmt ---Added for US 7301
            ,recbdline.UseExternalListPriceFl
              );                     -- by Harsh Shah 17-Jan-2014 ,--,--proddesc added by Ramesh on 17-Feb-2014 For R8
        ---Added to reject the deal creation if  bundle line product is not found in gypsy  CR 209817
         IF (l_createnewversion IS NULL OR l_createnewversion='N' ) THEN
        l_errors             := 'Unable to proceed with deal creation as there are error while adding bundle lines. Check bundle Config  : ' || l_bundle_config || ', Bundle Desc :'
        || recbd.bundledesc || ',Bundle Source : ' || recbd.bundlesource || ', Bundle Line : ' || l_bundle_line_nr||' Item number :'||L_BUNDLE_DTL_LINE_NR ;
        l_msg_type           :=c_m_type_error;
        delete from bundle  where BD_ID=L_BD_ID AND line_NR =L_BUNDLE_LINE_NR ;
        DELETE FROM bundle_line  where BD_ID=L_BD_ID AND line_NR =L_BUNDLE_LINE_NR;
        DELETE FROM bundle_line_guidance where BD_ID=L_BD_ID AND line_NR =L_BUNDLE_LINE_NR;   -- By Mani -- Baseline in Sep -- Added to sync the Bundle line & Guidance tables
        DELETE FROM line_item WHERE BD_ID=L_BD_ID AND line_NR =L_BUNDLE_LINE_NR;
        DELETE FROM  line_disc_scale WHERE BD_ID=L_BD_ID AND line_NR =L_BUNDLE_LINE_NR;
        DELETE FROM  rollout_schedule WHERE BD_ID=L_BD_ID AND line_NR =L_BUNDLE_LINE_NR;
        DELETE FROM line_disc_bndry WHERE BD_ID=L_BD_ID AND line_NR =L_BUNDLE_LINE_NR;
       RAISE REJECT_DEAL_BUNDLES;
      END IF;                                                                                                                                                                                                                                                                                                                                                                           ---Added l_busmodelcd for CR4774  ,NULL for CR4735
        l_auth_bdnet_amt:=NULL;
        --L_EXT_PRE_APPRV_PRC_AM := NULL;
      end LOOP;
      --l_bundle_dtl_line_nr:=1;
      l_bundle_dtl_line_nr:=0;
    END LOOP;
    L_BUNDLE_DTL_LINE_NR:=1;
  END;
  --dbms_output.put_line (' Bundle Items ......Ends' );
  ---CR 4744 for highest list price PL in bundle product
  BEGIN
    SELECT line_nr,
      assoc_pl
    INTO l_high_list_line_nr,
      l_high_list_pl
    FROM
      (SELECT line_nr,
        assoc_pl,
        list_price,
        rank()over(partition BY line_nr order by list_price DESC) rank_list_price
      FROM bundle_line
      WHERE bd_id =l_bd_id
      )
    WHERE rank_list_price = 1;
    UPDATE line_item
    SET assoc_pl_cd = l_high_list_pl
    WHERE bd_id     = l_bd_id
    AND line_nr     = l_high_list_line_nr;
  EXCEPTION
  WHEN no_data_found THEN
    --dbms_output.put_line('No bundles');
    NULL;
  WHEN OTHERS THEN
    --dbms_output.put_line('Error in highest price updation');
    NULL;
  END;
  ---end of CR4744
  /*
  UPDATE LINE_DISC_SCALE
  SET
  select round (sum (list_price * disc_as_pct * qty) / sum (list_price * qty) ,2)
  from bundle_line
  where bd_id=88849081;
  */
  --update list prices for the bundle headers
  UPDATE line_disc_scale ldsc
  SET ldsc.prod_lst_prc_am =
    (SELECT SUM(bdline.qty * bdline.list_price)
    FROM bundle_line bdline
    WHERE BDLINE.bd_id =ldsc.bd_id
    AND bdline.line_nr =ldsc.line_nr
    AND bdline.scale_id=ldsc.scale_id
    GROUP BY bdline.line_nr
    )
  WHERE ldsc.BD_ID  =l_bd_id
  AND LDSC.LINE_NR IN
    (SELECT LINE_NR FROM LINE_ITEM WHERE BD_ID=l_bd_id AND LINE_TYPE_CD='BD'
    )
  AND ldsc.scale_id =
    (SELECT MAX( NVL(ldsc_b.scale_id,0))
    FROM line_disc_scale ldsc_b
    WHERE ldsc_b.bd_id=ldsc.bd_id
    AND ldsc_b.line_nr=ldsc.line_nr
    );
  --dbms_output.put_line ('bundle list price updated ' || sql%rowcount);
  ---------------------------------------------------------------------------
  --UPDATE LINE_DISC_SCALE TABLE WITH THE WEIGHTED AVG STD. DISC FOR BUNDLES
  --------------------------------------------------------------------------

  /*
  UPDATE line_disc_scale lds
  SET high_rslr_a_sd_pc= NVL(
    (SELECT ROUND (SUM (bl.list_price * bl.disc_as_pct * bl.qty) / SUM (bl.list_price * bl.qty) ,2)
    FROM bundle_line bl
    WHERE bl.bd_id     =lds.bd_id
    AND lds.scale_id   =scale_id
    AND scale_id       =1
    AND bl.line_nr     =lds.line_nr
    AND (bl.list_price >0
    AND bl.qty         >0)
    GROUP BY line_nr
    ),0)
  WHERE lds.line_nr IN
    ( SELECT line_nr FROM line_item WHERE bd_id=L_BD_ID AND line_type_cd='BD'
    )
  AND lds.bd_id=l_bd_id;
  */

   --by Harsh Shah 24 Mar 2014, to resolve the issue of 74654
  --std. discount was not getting calculated properly.

  UPDATE line_disc_scale lds
  SET high_rslr_a_sd_pc= NVL(
    (SELECT ROUND (SUM (bl.list_price * bl.disc_as_pct * bl.qty) / SUM (bl.list_price * bl.qty) ,2)
    FROM bundle_line bl
    where bl.bd_id     =lds.bd_id
    and bl.scale_id   =lds.scale_id
    and bl.scale_id       =(select nvl(max(scale_id),0) from line_disc_scale where bd_id=lds.bd_id and line_nr=bl.line_nr and bl.line_nr=lds.line_nr)
    AND bl.line_nr     =lds.line_nr
    AND (bl.list_price >0
    and bl.qty         >0)
    GROUP BY bl.line_nr
    ),0)
  WHERE lds.line_nr IN
    ( select line_nr from line_item where bd_id=l_bd_id and line_type_cd='BD'
    )
    and lds.scale_id       =(select nvl(max(scale_id),0) from line_disc_scale where bd_id=lds.bd_id and line_nr=lds.line_nr)
  and lds.bd_id=l_bd_id;
  DBMS_OUTPUT.PUT_LINE ('Updating std. Discount details, rows updated ' || sql%rowcount);

  --- update line_disc_scale table with rqst disc pct
  --Changes made by Lakshmi for CR:234403 --Used DECODE, to prevent "Divide by Zero" error, when prod_lst_prc_am =0
  UPDATE line_disc_scale ldsc
  SET ldsc.rqst_disc_ot_pc = ROUND( 100- ((DECODE(prod_lst_prc_am,0,0,rqst_bd_net_prc_am/prod_lst_prc_am)) * 100)- NVL(high_rslr_a_sd_pc,0), 2)
  WHERE ldsc.BD_ID         =l_bd_id
  AND LDSC.LINE_NR        IN
    (SELECT LINE_NR FROM LINE_ITEM WHERE BD_ID=l_bd_id AND LINE_TYPE_CD='BD'
    )
  AND ldsc.scale_id =
    (SELECT MAX( NVL(ldsc_b.scale_id,0))
    FROM line_disc_scale ldsc_b
    WHERE ldsc_b.bd_id=ldsc.bd_id
    AND ldsc_b.line_nr=ldsc.line_nr
    );



  --dbms_output.put_line ('bundle rqst_discount is updated ' || sql%rowcount);
  --**************************************************************
  -- Insert into LINE_ITEM table
  -- Read LINE_ITEM data from xml
  -- Inserting Non-bundle products - PN type
  --**************************************************************
  l_line_nr :=l_bundle_line_nr;
  l_scale_id:=0;
  BEGIN
    FOR rec IN
    (SELECT extract ( value (d), '//AddedByHPEmployee/EmployeeNr/text()', l_xmlnamespace). getstringval () AS addedbyempnr,    ---emp nr change from new xml
      extract ( value (d), '//AddedByHPEmployee/EmailAddress/text()', l_xmlnamespace). getstringval ()     AS addedbyempemail, ---emp nr change from new xml
      extract ( value (d), '//AuthBasisDesc/text()', l_xmlnamespace). getstringval ()                      AS authbasisdesc,
      extract ( value (d), '//AuthDate/text()', l_xmlnamespace).getstringval ()                            AS authdate,
      extract ( value (d), '//AuthDateGMT/text()', l_xmlnamespace). getstringval ()                        AS authdategmt,
      extract ( value (d), '//AuthHPEmployee/EmployeeNr/text()', l_xmlnamespace). getstringval ()          AS authempnr,    --emp nr change from new xml
      extract ( value (d), '//AuthHPEmployee/EmailAddress/text()', l_xmlnamespace). getstringval ()        AS authempemail, --emp nr change from new xml
      extract ( value (d), '//AuthStatCD/text()', l_xmlnamespace). getstringval ()                         AS authstatcd,
      extract ( value (d), '//BDNetAmt/text()', l_xmlnamespace). getstringval ()                           AS bdnetamt,
      extract ( value (d), '//ListPrice/text()', l_xmlnamespace). getstringval ()                          AS listprice,
      extract ( value (d), '//PL /text()', l_xmlnamespace). getstringval ()                                AS pl,
      extract ( value (d), '//PricingTypeCD /text()', l_xmlnamespace). getstringval ()                     AS pricingtypecd,
      extract ( value (d), '//ProdDesc/text()', l_xmlnamespace). getstringval ()                           AS proddesc,
      extract ( value (d), '//Qty/text()', l_xmlnamespace). getstringval ()                                AS qty,
      extract ( value (d), '//RequestType/text()', l_xmlnamespace). getstringval ()                        AS requesttype,
      extract ( value (d), '//RolloutMonthQtys/text()', l_xmlnamespace). getstringval ()                   AS rolloutmonthqtys,
      extract ( value (d), '//ProdBaseNr/text()', l_xmlnamespace). getstringval ()                         AS sku,
      extract ( value (d), '//StdDiscPct/text()', l_xmlnamespace). getstringval ()                         AS stddiscpct,
      extract ( value (d), '//OptCD/text()', l_xmlnamespace). getstringval ()                              AS optcd,
      extract ( value (d), '//CostPrice/text()', l_xmlnamespace). getstringval ()                          AS costprice,
      extract ( value (d), '//OrderMinQty/text()', l_xmlnamespace). getstringval ()                        AS orderminqty, -----CR 4735,
      extract ( value (d), '//DocNum/text()', l_xmlnamespace). getstringval ()                             AS bmi_doc_No,
      extract ( value (d), '//ExtPreApprvPrice/text()', l_xmlnamespace). getstringval ()                   AS ExtPreApprvPrice,
      extract ( value (d), '//GuidanceAvailFl/text()', l_xmlnamespace). getstringval ()                    AS GuidanceAvailFl,--Added by Lakshmi for CR6012
      extract ( value (d), '//GuidanceDetailsID/text()', l_xmlnamespace). getstringval ()                  AS GuidanceDetailsID,--Added by Lakshmi for CR6012
      extract ( value (d), '//GuidanceDiscExpertPct/text()', l_xmlnamespace). getstringval ()              AS GuidanceDiscExpertPct,--Added by Lakshmi for CR6012
      extract ( value (d), '//GuidanceDiscFloorPct/text()', l_xmlnamespace). getstringval ()               AS GuidanceDiscFloorPct,--Added by Lakshmi for CR6012
      extract ( value (d), '//GuidanceDiscTypicalPct/text()', l_xmlnamespace). getstringval ()             AS GuidanceDiscTypicalPct,--Added by Lakshmi for CR6012
      extract ( value (d), '//GuidanceRefreshDateGMT/text()', l_xmlnamespace). getstringval ()             AS GuidanceRefreshDateGMT,--Added by Lakshmi for CR6012
      extract ( value (d), '//NonDiscFl/text()', l_xmlnamespace). getstringval ()                        AS NonDiscFl,
       --New fields added for US 7301--
        extract ( value (d), '//CurrencyProgramBenefit/text()', l_xmlnamespace). getstringval ()                        AS CurrencyProgramBenefit,
        extract ( value (d), '//InstantPrcMethod/text()', l_xmlnamespace). getstringval ()                        AS InstantPrcMethod,
        extract ( value (d), '//InstantPrcAmt/text()', l_xmlnamespace). getstringval ()                        AS InstantPrcAmt
        ,extract ( value (d), '//UseExternalListPriceFl/text()', l_xmlnamespace). getstringval ()                        AS UseExternalListPriceFl
    FROM edms_deal_queue x,
      TABLE ( xmlsequence ( extract ( x.xml_data_xml, 'DealCreationRequest/LineItems/LineItemPN', l_xmlnamespace))) d
    WHERE x.deal_creation_guid = l_deal_creation_guid
    )
    LOOP
    SELECT COUNT(*) INTO pn_count FROM line_item WHERE prod_gnrc_nr_tx=rec.sku AND prod_opt_cd=NVL(rec.optcd,' ')
    AND bd_id=l_bd_id
    AND line_type_cd='PN';

    dbms_output.PUT_LINE('The count is: '||pn_count);
    --dbms_output.PUT_LINE('The pn is: '||rec.sku);
    --dbms_output.PUT_LINE('The opt is: '||rec.optcd);
    --dbms_output.PUT_LINE('The bd_id is: '||l_bd_id);

    --By Harsh Shah 17-Jan-2014
    --added docNo
    --dbms_output.PUT_LINE ('Line Item PN DocNum :' || rec.bmi_doc_no );

    --dbms_output.PUT_LINE('>>>>>>>>>>>>>>>>>>>>>>>>');

    IF pn_count>0 THEN
    insert_into_line_item:= 'N';
    L_MSG_TYPE:='WARNING';
    l_errors  :='Duplicate PN  '||rec.sku ||' found ';
    --dbms_output.put_line (l_errors);
          inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr, l_deal_prog_cd,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code, l_high_risk_fl,l_risk_reasion_desc,l_risk_desc,l_errors,l_msg_type, l_deal_creation_guid,NULL,NULL,l_errors);
    ELSE
    insert_into_line_item:= 'Y';
    END IF;

      --Added for ePrime and BMI deal creation changes
      IF rec.addedbyempnr IS NULL AND rec.addedbyempemail IS NOT NULL THEN
        rec.addedbyempnr  :=get_emp_nr(rec.addedbyempemail);
      END IF;
      IF rec.authempnr IS NULL AND rec.authempemail IS NOT NULL THEN
        rec.authempnr  :=get_emp_nr(rec.authempemail);
      END IF;
      IF (lower(l_dealsourcecd)='eprime' AND l_dealvertocreate = 0) THEN --aded to not authorise if eprime deal version to be created is 0
        rec.AuthBasisDesc     :=NULL;
        rec.AuthDate          :=NULL;
        rec.AuthDateGMT       :=NULL;
        rec.authempnr         :=NULL;
        rec.authempemail      :=NULL;
        rec.AuthStatCD        :='N';
      END IF;
      --added below condition as BMI takes the deal creator as line added by employee if null generic BMI employee
      IF lower(l_dealsourcecd) IN ('bmi','smartquote','edp')--,'ngq','sts') 
        AND rec.addedbyempnr IS NULL THEN
        rec.addedbyempnr      :=g_deal_creator_dc_bmi;
      END IF;
      IF rec.orderminqty IS NULL THEN
        rec.orderminqty  :=1;
      END IF;
      l_line_nr      :=l_line_nr+1;
      l_line_type_cd :='PN';
      l_line_prog_cd :='N';
      l_bd_version_nr:=0; -- pending ..this should be as per version..not the
      -- hard coded value.
      L_SCALE_ID:=0;
      --check if added by employee No exists and it's a valid eclipse user
      l_errors :='Line Item SKU : ' || rec.sku || ' OptCode : ' || rec.OptCd ;
      --TEST
      --  inserterror_output_messages ( null, null,null, null, null, null, null, null,null, null, L_ERRORS, l_msg_type, i_deal_creation_guid, null, null,l_errors );
      --commit;
      --TEST END
      IF rec.addedbyempnr IS NULL THEN
        l_errors          :='Added by Employee No is not provided for ' || l_errors;
        l_msg_type        :=c_m_type_error;
        l_bd_id           :=0;
        l_bd_nr           :=0;
        l_bd_version_nr   :=0;
        raise reject_deal;
      END IF;
      --check if rollout months qty exists
      IF (ltrim(rtrim(rec.rolloutmonthqtys))) IS NULL AND (l_dealsourcecd NOT IN ('BMI','NGQ','STS','SMARTQUOTE','EDP')) THEN
        l_errors                              :='Rollout Month Qtys is empty For ' || l_errors;
        l_msg_type                            :=c_m_type_error;
        l_bd_id                               :=0;
        l_bd_nr                               :=0;
        l_bd_version_nr                       :=0;
        raise reject_deal;
      END IF;
      ---Addded as BMI will not send the Rollout details
      IF (ltrim(rtrim(rec.rolloutmonthqtys))) IS NULL AND (l_dealsourcecd IN ('NGQ','BMI','STS','SMARTQUOTE','EDP')) THEN
        rec.rolloutmonthqtys                  :=Rollout_Qty_BMI(l_begindate,l_enddate,rec.qty);
      END IF;
      IF (lower(l_dealsourcecd)            NOT IN ('bmi','ngq','sts','smartquote','edp')) THEN
        IF (is_user_exists(rec.addedbyempnr
        ,NULL) ='N') THEN
          l_errors                          :='Invalid Employee No ' || rec.addedbyempnr || ' or Employee is not a valid Eclipse User , For  ' || l_errors;
          l_msg_type                        :=c_m_type_error;
          l_bd_id                           :=0;
          l_bd_nr                           :=0;
          l_bd_version_nr                   :=0;
          raise reject_deal;
        END IF;
      END IF;
      --Check if auth basis description is null
      IF (l_dealsourcedealtype               <>C_HIGH_TOUCH_DEALTYPE_DESC AND l_dealapprfl='Y') THEN
        IF rec.authstatcd                     ='Y' THEN
          IF LTRIM(RTRIM(rec.authbasisdesc)) IS NULL THEN
            L_ERRORS                         :='Auth Basis Description is empty for the ' || l_errors;
            l_msg_type                       :=c_m_type_error;
            l_bd_id                          :=0;
            l_bd_nr                          :=0;
            l_bd_version_nr                  :=0;
            raise reject_deal;
          elsif ltrim(rtrim(rec.authempnr)) IS NULL THEN
            L_ERRORS                        :='Auth Emp Nr is empty for the ' || l_errors;
            l_msg_type                      :=c_m_type_error;
            l_bd_id                         :=0;
            l_bd_nr                         :=0;
            l_bd_version_nr                 :=0;
            raise reject_deal;
          elsif is_user_exists(rec.authempnr
          ,l_dealsourcecd --Added for US-9408 --> Encore Retirement  
          ) ='N' THEN

              --By Harsh Shah, 22-Feb-2014
              --added to consider default bmi employee
              if is_emp_bmi_default( rec.authempnr
                 , L_DEALSOURCECD--Added for US-9408 --> Encore Retirement  
              )='N' THEN
                      L_ERRORS                         :='Invalied Auth Emp Nr : ' || rec.authempnr || ' for the ' || l_errors;
                      l_msg_type                       :=c_m_type_error;
                      l_bd_id                          :=0;
                      l_bd_nr                          :=0;
                      l_bd_version_nr                  :=0;
                      raise reject_deal;
              END IF;
          END IF;
        END IF;
      END IF;
      --add the below conditions for eprime as eprime can authorise a product even if it is a high_touch deal
      IF (lower(L_DEALSOURCECD)               ='eprime' AND l_dealsourcedealtype = C_HIGH_TOUCH_DEALTYPE_DESC ) THEN
        IF rec.authstatcd                     ='Y' THEN
          IF LTRIM(RTRIM(rec.authbasisdesc)) IS NULL THEN
            L_ERRORS                         :='Auth Basis Description is empty for the ' || l_errors;
            l_msg_type                       :=c_m_type_error;
            l_bd_id                          :=0;
            l_bd_nr                          :=0;
            l_bd_version_nr                  :=0;
            raise reject_deal;
          elsif ltrim(rtrim(rec.authempnr)) IS NULL THEN
            L_ERRORS                        :='Auth Emp Nr is empty for the ' || l_errors;
            l_msg_type                      :=c_m_type_error;
            l_bd_id                         :=0;
            l_bd_nr                         :=0;
            l_bd_version_nr                 :=0;
            raise reject_deal;
          elsif is_user_exists(rec.authempnr
          ,l_dealsourcecd --Added for US-9408 --> Encore Retirement  
          ) ='N' THEN

           --By Harsh Shah, 22-Feb-2014
              --added to consider default bmi employee
              if is_emp_bmi_default(  rec.authempnr
                 , L_DEALSOURCECD--Added for US-9408 --> Encore Retirement  
              )='N' THEN
            L_ERRORS                         :='Invalied Auth Emp Nr : ' || rec.authempnr || ' for the ' || l_errors;
            l_msg_type                       :=c_m_type_error;
            l_bd_id                          :=0;
            l_bd_nr                          :=0;
            l_bd_version_nr                  :=0;
            raise reject_deal;
            END IF;
          END IF;
        END IF;
      END IF;---end of new condition for ePrime--
      --Get Auth GMT Date from XML and convert it to oracle date time format
      L_AUTH_DATE_GMT     :=NULL;
      IF (REC.AUTHDATEGMT IS NOT NULL OR REC.AUTHDATEGMT<>'') THEN
        L_AUTH_DATE_GMT   :=TO_TIMESTAMP ( SUBSTR(REC.AUTHDATEGMT,1,19),'YYYY-MM-DD"T"HH24:MI:SS');
      ELSE
        L_AUTH_DATE_GMT:=NULL;
      END IF;
      L_AUTH_MC_DATE:=NULL;
      --Get Auth MC date from XML and convert it to oracle date time format
      IF (REC.AUTHDATE IS NOT NULL OR REC.AUTHDATE<>'') THEN
        L_AUTH_MC_DATE :=TO_TIMESTAMP ( SUBSTR(REC.AUTHDATE,1,19),'YYYY-MM-DD"T"HH24:MI:SS');
      ELSE
        L_AUTH_MC_DATE:=NULL;
      END IF;
      --get product details from WW_PRODUCTS for this demo only..
      ----dbms_output.put_line ('Get sku test');
      --Connect to DARTWWI to get price from GPSy
      --temp testing
      --l_gypsy_prod_string:='''' || rec.sku ||'''';
      IF rec.optcd         IS NOT NULL THEN
        l_gypsy_prod_string:=chr(39) || RPAD(rec.sku,12) || RPAD (rec.optcd,3) || chr(39);
      ELSE
        l_gypsy_prod_string:=chr(39) || rec.sku || chr(39);
      END IF;

      BEGIN
      ---Changes for CR 3156 (Invalid products are not allowed to be added to a deal)----
      
       l_price :=NULL;
      l_prod_desc:=NULL;
      l_prod_nr:=NULL;
      l_stat:=NULL;
      l_prod_line:=NULL;
      l_non_discount_fl :=NULL;
      l_ref_price_fl:=NULL;
      l_prod_family:=NULL;
      SELECT price, prod_desc , prod_nr, stat, prod_line, non_discount_fl , ref_price_fl , prod_family
          INTO l_price, l_prod_desc , l_prod_nr, l_stat, l_prod_line , l_non_discount_fl, l_ref_price_fl, l_prod_family
          FROM gt_product_bundles_prices
          WHERE prod_nr=rec.sku
          --AND prod_opt_cd=rec.optcd;
           and  prod_opt_cd= DECODE(rec.optcd,NULL,'1',rec.optcd);
    EXCEPTION
    --Below exception added for CR:282430-ORA-01422: exact fetch returns more than requested number of rows
  WHEN TOO_MANY_ROWS THEN
  SELECT DISTINCT price, prod_desc , prod_nr, stat, prod_line, non_discount_fl , ref_price_fl , prod_family
  INTO l_price, l_prod_desc , l_prod_nr, l_stat, l_prod_line , l_non_discount_fl, l_ref_price_fl, l_prod_family
  FROM gt_product_bundles_prices
  WHERE prod_nr=rec.sku
  and  prod_opt_cd= DECODE(rec.optcd,NULL,'1',rec.optcd)
  AND prod_line IN (SELECT prod_line_cd FROM prod_line WHERE tenantid =(SELECT tenantid FROM deal WHERE bd_id=l_bd_id));
        WHEN NO_DATA_FOUND THEN
      DBMS_OUTPUT.PUT_LINE('Data not found for: '|| rec.sku ||  '  '  || rec.optcd);
        ---Changes for CR 3156 (Invalid products are not allowed to be added to a deal)----
      l_price :=NULL;
      l_prod_desc:=NULL;
      l_prod_nr:=NULL;
      l_stat:=NULL;
      l_prod_line:=NULL;
      l_non_discount_fl :=NULL;
      l_ref_price_fl:=NULL;
      l_prod_family:=NULL;
      
      --Below exception added for CR:282430-ORA-01422: exact fetch returns more than requested number of rows
        WHEN OTHERS THEN
      DBMS_OUTPUT.PUT_LINE('Data not found for: '|| rec.sku ||  '  '  || rec.optcd);
        ---Changes for CR 3156 (Invalid products are not allowed to be added to a deal)----
      l_price :=NULL;
      l_prod_desc:=NULL;
      l_prod_nr:=NULL;
      l_stat:=NULL;
      l_prod_line:=NULL;
      l_non_discount_fl :=NULL;
      l_ref_price_fl:=NULL;
      l_prod_family:=NULL;
    END;

--dbms_output.put_line('   rec.UseExternalListPriceFl status: '||rec.UseExternalListPriceFL||' rec.listprice: '||rec.listprice); 
 --Below block added by Lakshmi for HP SW Project
  IF rec.UseExternalListPriceFl = 'Y' THEN
    l_errors  :='Gpsy List price: '||l_price||' of Product : ' || rec.sku||' '||rec.optcd || ' is overwritten by External List Price: '||rec.listprice;
    l_msg_type :='WARNING';
    dbms_output.put_line(l_errors);
    IF l_log_messages='Y' THEN
    inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr, l_deal_prog_cd,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code, l_high_risk_fl,l_risk_reasion_desc,l_risk_desc,l_errors,
    l_msg_type, l_deal_creation_guid,NULL,NULL,l_errors);
    END IF;
    l_price := rec.listprice;
  END IF;    
    
    

-- Added by Lakshmi for CR83540 The Non-discountable attribute in Eclipse is displayed incorrect for non-discountable product which set in Optimus
        l_non_discount_fl := rec.nondiscfl;

      --dbms_output.put_line ('GPSy Product No: ' || l_gypsy_prod_string);
      --pkgpricelst_chiante.gppricecollectdtlphd_ref (l_countrycd,l_pricelistcd, l_currencycd, l_pricetermcd,l_gypsy_prod_string,'N',l_hierarchy_cd, l_enddate,p_gypsy_price);
      --Loop through GPSy price cursor to get price details.
      --LOOP
        --FETCH p_gypsy_price INTO gprice;
        IF l_price     IS NULL THEN
          l_createnewversion:='N';
          l_errors          :='Product : ' || l_gypsy_prod_string || ' does not exists in GPSy. Cannot create new version of deal.';
          --dbms_output.put_line (l_errors);
          L_MSG_TYPE:='ERROR';
          inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr, l_deal_prog_cd,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code, l_high_risk_fl,l_risk_reasion_desc,l_risk_desc,l_errors,l_msg_type, l_deal_creation_guid,NULL,NULL,l_errors);
          RAISE reject_deal;
        END IF;
        --EXIT
      --WHEN p_gypsy_price%notfound;
      --get the product line details
        IF (to_number(l_price) >to_number(rec.listprice)) THEN
          l_errors                 := c_m_gypsy_high_price_mismatch || l_prod_nr ||'  ' || l_prod_desc ||'  GPSy Price : '|| l_price ||' , bmi Price : ' || rec.listprice ;-- ' , SmartQuote Price : ' || rec.listprice ;
          --dbms_output.put_line (l_errors);
          L_MSG_TYPE:=C_M_TYPE_WARNING;
          inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr, l_deal_prog_cd,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code, l_high_risk_fl,l_risk_reasion_desc,l_risk_desc,l_errors,l_msg_type, l_deal_creation_guid,NULL,NULL,l_errors);
        END IF;
        IF (to_number(l_price) <to_number(rec.listprice)) THEN
          l_errors                 := c_m_gypsy_low_price_mismatch || l_prod_nr ||'  ' || l_prod_desc ||'  GPSy Price : '|| l_price ||' , bmi Price : ' || rec.listprice ;-- ' , SmartQuote Price : ' || rec.listprice ;
          --dbms_output.put_line (l_errors);
          L_MSG_TYPE:=C_M_TYPE_WARNING;
          inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr, l_deal_prog_cd,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code, l_high_risk_fl,l_risk_reasion_desc,l_risk_desc,l_errors,l_msg_type, l_deal_creation_guid,NULL,NULL,l_errors);
        END IF;
        --Check product status - Active /Obsolete
        IF (l_stat='O') THEN
          l_errors    :='Product : ' || l_prod_nr ||'  ' || l_prod_desc ||'  is obsolete.' ;
          --dbms_output.put_line (l_errors);
          L_MSG_TYPE:='WARNING';
          INSERTERROR_OUTPUT_MESSAGES (L_BD_ID,L_BD_NR,L_BD_VERSION_NR, L_DEAL_PROG_CD,L_BDME_APRVL_CD,L_QUOTE_DIST_CD,L_EUV_STAT_CODE, L_HIGH_RISK_FL,L_RISK_REASION_DESC,L_RISK_DESC,L_ERRORS,L_MSG_TYPE, L_DEAL_CREATION_GUID,NULL,NULL,L_ERRORS);
        END IF;
        ----dbms_output.PUT_LINE (' Prod LIne ' || gprice.prod_line);
        BEGIN
          SELECT pl.prod_line_desc_tx,
            PL.BUS_UNIT_CD,
            bu.bus_group_cd
          INTO l_line_prod_gnrc_desc_tx,
            l_line_bus_unit_cd,
            l_line_bus_group_cd
          FROM prod_line pl,
            bus_unit bu
          WHERE pl.bus_unit_cd =bu.bus_unit_cd(+)
          AND pl.prod_line_cd  =l_prod_line;
        EXCEPTION
        WHEN no_data_found THEN
          l_msg_type :='ERROR';
          l_errors   := 'Unable to find prod line details in prod line master for the product ' || '''' || l_prod_line || '''' || ' Cannot proceed with deal creation';
          raise reject_deal;
        END;
        --decide to set line authorizer
        g_set_line_Authorizer_code   :=NULL;
        l_auth_mc_hp_emp_nr          := rec.authempnr;
        IF (rec.authempnr            IS NULL OR rec.authdate IS NULL OR rec.authdategmt IS NULL OR rec.authempnr IS NULL OR rec.authstatcd IS NULL OR rec.bdnetamt IS NULL OR rec.listprice IS NULL --OR rec.ExtPreApprvPrice IS NULL
        --OR rec.pricingtypecd IS NULL
        ) THEN
          G_SET_LINE_AUTHORIZER_CODE :=NULL;
          g_set_gnrc_line_authorizer :=NULL; --added for new auth changes for line_items
          g_line_auth_type           :=NULL;
        elsif (rec.authstatcd         ='Y') THEN
          g_set_line_Authorizer_code := l_auth_mc_hp_emp_nr;
          g_set_gnrc_line_authorizer := l_auth_generic_emp_nr; --added for new auth changes for line_items
          g_line_auth_type           :=l_line_auth_type;
          --dbms_output.put_line('at line 2761 auth status Y: '||'line authorizer :'||l_auth_mc_hp_emp_nr||' gnrc authorizer  :'||l_auth_generic_emp_nr||' line auth type  :'||l_line_auth_type);
        ELSE
          g_set_line_authorizer_code:=NULL;
          g_set_gnrc_line_authorizer:=NULL; --added for new auth changes for line_items
          g_line_auth_type          :=NULL;
        END IF;

        --if deal is a high touch deal then
        --auth bd net should be null
        --and bdnet amount should be populated to rqst_bd_net_prc_am
        --QC2554

        IF (L_DEALSOURCEDEALTYPE   <>C_HIGH_TOUCH_DEALTYPE_DESC ) THEN
            l_auth_bdnet_amt         :=rec.bdnetamt;
            L_EXT_PRE_APPRV_PRC_AM := REC.ExtPreApprvPrice;
        elsif (L_DEALSOURCEDEALTYPE = C_HIGH_TOUCH_DEALTYPE_DESC AND rec.authstatcd ='Y') THEN--added for ePrime requirement as auith amt should not be null if product is added with authoriszation
          l_auth_bdnet_amt         :=rec.bdnetamt;
          L_EXT_PRE_APPRV_PRC_AM := REC.ExtPreApprvPrice;
        ELSE
          l_auth_bdnet_amt:=NULL;
          --L_EXT_PRE_APPRV_PRC_AM := NULL;
          --L_AUTH_BDNET_AMT:=GPRICE.PRICE;
        END IF;


        ------------------------------------------
        --zero list price issue management
        ------------------------------------------
        IF l_price      =0 THEN
        --Added by Lakshmi to use LP and BDNet from XML when LP from Gpsy = 0    
        l_price := NVL(REC.LISTPRICE ,0); 
        l_auth_bdnet_amt :=  NVL(REC.BDNETAMT,0); 
        
--          L_AUTH_BDNET_AMT  :=0;
          --L_EXT_PRE_APPRV_PRC_AM := 0;
          l_auth_disc_otc_pc:=0;
          L_ERRORS          := 'Zero List Price for the GPSy Product : ' || ' Line Nr - ' || L_LINE_NR || ', ' || l_PROD_NR ||'  ' || l_PROD_DESC ||'  GPSy Price : '|| l_PRICE --|| ' , bmi Price : ' || REC.LISTPRICE || ', BD Net values will be marked as zero'; --' , SmartQuote Price : ' || REC.LISTPRICE || ', BD Net values will be marked as zero';
          ||' .Accepting BMI List price: '
          || REC.LISTPRICE 
          || ' and BD Net: '
          ||REC.BDNETAMT; --' , SmartQuote Price : ' || REC.LISTPRICE || ', BD Net values will be marked as zero';
          --dbms_output.put_line (l_errors);
          L_MSG_TYPE:=C_M_TYPE_WARNING;
          inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr, l_deal_prog_cd,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code, l_high_risk_fl,l_risk_reasion_desc,l_risk_desc,l_errors,l_msg_type, l_deal_creation_guid,NULL,NULL,l_errors);
        END IF;
        --Pending--
        --if required add validation for auth emp nr
        --auth emp nr is provided for information basis only.
        -- when the line is authroized, eclipse will show as EXT
        ----Added on 23-Jan for CR3236.
        IF rec.pl   <> l_prod_line THEN
          L_MSG_TYPE:='WARNING';
          l_errors  :='PL for SKU '||rec.sku ||' does not tally between '||g_err_src||' and Eclipse ' || '( '||g_err_src||' PL :'|| rec.pl||' GPSy PL :'||l_prod_line||' )'||' PL for SKU '||rec.sku ||' is overriden';
          --dbms_output.put_line (l_errors);
          inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr, l_deal_prog_cd,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code, l_high_risk_fl,l_risk_reasion_desc,l_risk_desc,l_errors,l_msg_type, l_deal_creation_guid,NULL,NULL,l_errors);
        END IF;
        ---End of change CR3236
        --DONE1
        --dbms_output.put_line('at line 2808 auth status  :' ||rec.authstatcd ||' line authorizer :'||l_auth_mc_hp_emp_nr||' gnrc authorizer  :'||l_auth_generic_emp_nr||' line auth type  :'||l_line_auth_type);
        IF insert_into_line_item='Y' THEN

        INSERT
        INTO line_item
          (
            line_prog_cd,
            support_pack_fl,
            future_prod_fl,
            change_pndg_fl,
            version_created,
            bd_id,
            line_nr,
            line_type_cd,
            prod_gnrc_desc_tx,
            prod_gnrc_nr_tx,
            line_added_by_emp_nr,
            bus_group_cd,
            bus_unit_cd,
            assoc_pl_cd,
            assoc_pf_cd,
            estmtd_qt,
            estmtd_dlr_am,
            price_list_cd,
            price_term_cd,
            currency_cd,
            --auth_mc_hp_emp_nr,--commented for new auth changes
            auth_generic_emp_nr,
            AUTH_MC_DATE,
            auth_dt_gmt,
            PROD_OPT_CD,
            REMAINING_AMT,
            --sq_auth_emp_nr
            auth_mc_hp_emp_nr,
            line_auth_type,
            bmi_doc_no
          )
          VALUES
          (
            REC.AUTHSTATCD,
            'N',
            'N',
            'N',
            l_bd_version_nr,
            l_bd_id,
            l_line_nr,
            l_line_type_cd,
            SUBSTRB(l_prod_desc,1,65),
            rec.sku,
            rec.addedbyempnr,
            L_LINE_BUS_GROUP_CD,
            L_LINE_BUS_UNIT_CD,
            l_prod_line,
            l_prod_family,
            rec.qty,
            NULL,
            L_PRICELISTCD,
            l_pricetermcd,
            L_CURRENCYCD,
            --G_SET_LINE_AUTHORIZER_CODE,
            g_set_gnrc_line_authorizer,
            DECODE (REC.AUTHSTATCD,'Y',L_AUTH_MC_DATE,NULL),
            DECODE (REC.AUTHSTATCD,'Y',L_AUTH_DATE_GMT,NULL),
            DECODE (LTRIM(RTRIM(REC.OPTCD)),NULL,' ',LTRIM(RTRIM(REC.OPTCD))),
            DECODE (L_AUTH_BDNET_AMT,NULL,REC.BDNETAMT * REC.QTY, L_AUTH_BDNET_AMT*REC.QTY), --remaining_amt
            DECODE (REC.AUTHSTATCD,'Y',REC.authempnr,NULL),
            g_line_auth_type,  --added for new auth changes
            DECODE(rec.bmi_doc_no,null,0,rec.bmi_doc_no)
          );
          --DBMS_OUTPUT.PUT_LINE('Adding one entry into line_disc_bndry table - per line - 2');
        INSERT
        INTO line_disc_bndry
          (
            bd_id,
            LINE_NR,
            disc_bndry_id,
            disc_bndry_type_cd,
            creation_dts,
            UPDATE_DTS
          )
          VALUES
          (
            l_bd_id,
            l_line_nr,
            1,
            'D',
            sysdate,
            sysdate
          );

        --get the new scale id for the line
        SELECT NVL(MAX(scale_id),0)+1
        INTO l_scale_id
        FROM line_disc_scale
        WHERE bd_id =l_bd_id
        AND line_nr =l_line_nr;
        --FOR PN product type
        --IF (rec.authbasisdesc=' ' OR rec.authbasisdesc IS NULL) THEN
        --l_auth_basis_text :=' Price Book Approved';
        --ELSE
        --l_auth_basis_text:=rec.authbasisdesc;
        --END IF;
        l_auth_basis_text:=rec.authbasisdesc;
        --calculate AUTH DISC %
        ----dbms_output.put_line (' gprice.price ' || gprice.price || ' auth bd net price ' || rec.bdnetamt);
        ----dbms_output.PUT_LINE (' issue 1');
        l_rqst_disc_otc_pc:=0;
        --IF ( gprice.price >0 AND l_dealsourcedealtype<>c_high_touch_dealtype_desc )THEN
        IF l_price >0 THEN
          --dbms_output.put_line (' REC.BDNETAMT ' || REC.BDNETAMT || ' and l_PRICE ' || GPRICE.PRICE || ' std disc ' || REC.STDDISCPCT);
          IF (ROUND(100 - (( REC.BDNETAMT/l_PRICE) *100)- NVL(REC.STDDISCPCT,0),2)>99.99) OR (ROUND(100- (( REC.BDNETAMT/l_PRICE) *100)- NVL(REC.STDDISCPCT,0),2)<-99.99) THEN

            IF L_DEALSOURCEDEALTYPE                                                  =C_HIGH_TOUCH_DEALTYPE_DESC THEN
                         L_ERRORS                                                                :=' Invalid Auth Disc % for Product Line SKU : '|| rec.sku||CASE WHEN rec.optcd IS NOT NULL THEN ','||rec.optcd END||
                         ' AuthBD Net :' || REC.BDNETAMT || ' List price :' || l_PRICE || ' Auth Disc Amt is : ' || (ROUND(100- (( REC.BDNETAMT/l_PRICE) *100)- NVL(REC.STDDISCPCT,0),2));
                         --fix by Harsh Shah
                         if  ROUND(100 - (( REC.BDNETAMT/l_PRICE) *100)- NVL(REC.STDDISCPCT,0),2)>99.99 THEN
                                l_auth_disc_otc_pc:=99;
                          ELSE
                                l_auth_disc_otc_pc:=-99;
                        END IF;

            ELSE
                          L_ERRORS :=' Invalid Rqst Disc % for Product Line SKU : '|| rec.sku||CASE WHEN rec.optcd IS NOT NULL THEN ','||rec.optcd END||
                          ' Rqst BDNet :' || REC.BDNETAMT || ' List price :' || l_PRICE || ' Rqst Disc Amt is : ' || (ROUND(100- (( REC.BDNETAMT/l_PRICE) *100)- NVL(REC.STDDISCPCT,0),2));
                            --fix by Harsh Shah
                         if  ROUND(100 - (( REC.BDNETAMT/l_PRICE) *100)- NVL(REC.STDDISCPCT,0),2)>99.99 THEN
                                l_rqst_disc_otc_pc:=99;
                          ELSE
                                l_rqst_disc_otc_pc:=-99;
                        END IF;
            END IF;
            L_MSG_TYPE :=C_M_TYPE_WARNING;
            --dbms_output.PUT_LINE (l_errors);
            --log errors
            INSERTERROR_OUTPUT_MESSAGES ( l_bd_id, NULL,l_bd_version_nr, NULL, NULL, NULL, NULL, NULL,NULL, NULL, L_ERRORS, L_MSG_TYPE, I_DEAL_CREATION_GUID, NULL, NULL,L_ERRORS );
            --for the testing setting it to 1..need to revert this change after testing
            -- set auth flag to N
            l_auth_disc_otc_pc:=NULL;
            l_rqst_disc_otc_pc:=0;
            --l_createnewversion:='N'; --temp disabled by Harsh 27-feb-2014

     --Condition added by Lakshmi for CR:3268 - NGQ: When Eclipse receives a BDNet of -0- with list price greater than -0- the Rqst% should be recalculated
            IF ((REC.BDNETAMT = 0 AND REC.STDDISCPCT=0) OR (ROUND(100 - (( REC.BDNETAMT/l_PRICE) *100)- NVL(REC.STDDISCPCT,0),2))>99.99) THEN 
               l_rqst_disc_otc_pc :=100;
               L_ERRORS                                                                 :='Adjusting Rqst Disc % to 100, for Product Line SKU : '|| rec.sku||CASE WHEN rec.optcd IS NOT NULL THEN ','||rec.optcd END||
                     ' Line: '||l_line_nr ||
                     ' Rqst BDNet :' || REC.BDNETAMT || ' List price :' || l_PRICE|| ' Rqst Disc Amt is : ' || 
                     (ROUND(100- (( REC.BDNETAMT/l_PRICE) *100)- NVL(REC.STDDISCPCT,0),2));
                     L_MSG_TYPE                                                               :=C_M_TYPE_WARNING;
                     inserterror_output_messages ( l_bd_id,NULL,l_bd_version_nr,  NULL, NULL, NULL, NULL, NULL,NULL, NULL, l_errors, l_msg_type, i_deal_creation_guid, NULL, NULL,l_errors );
                    ELSE 
                l_rqst_disc_otc_pc:=0;
            END IF; --End of Condition added for CR:3268 - NGQ: When Eclipse receives a BDNet of -0- with list price greater than -0- the Rqst% should be recalculated

          ELSE
            L_AUTH_DISC_OTC_PC:=ROUND(100- (( REC.BDNETAMT/l_PRICE) *100)- NVL(REC.STDDISCPCT,0),2);
            l_rqst_disc_otc_pc:=L_AUTH_DISC_OTC_PC;
          END IF;
        ELSE
          L_AUTH_DISC_OTC_PC  :=NULL;
          IF l_PRICE      =0 THEN
            L_AUTH_DISC_OTC_PC:=0;
            l_rqst_disc_otc_pc:=0;
          END IF;
        END IF;

        --set auth Disc % to Null in case of High Touch Deal
        --commenting this as for BMI there can be any deal type whcih can be fully authorized - applicable to R8
        --IF L_DEALSOURCEDEALTYPE=C_HIGH_TOUCH_DEALTYPE_DESC AND REC.authstatcd <> 'Y' THEN
          --L_AUTH_DISC_OTC_PC  :=NULL;
        --END IF;
        --added by Harsh Shah 29-Nov-2013
        --when auth status is not Authorized then there is no need to have auth values populated
        IF UPPER(REC.authstatcd) <> 'Y' THEN
            L_AUTH_DISC_OTC_PC  :=NULL;
        END IF;


        --Insert data into LINE_DISC_SCALE table.
        --done
        --margin
        L_RQST_MARGIN_PCT                                                                                                         :=0;
        IF REC.COSTPRICE                                                                                                           >0 THEN
          IF ((L_AUTH_BDNET_AMT                                                                                                   IS NULL OR L_AUTH_BDNET_AMT=0) AND l_PRICE>0 ) THEN
            IF REC.BDNETAMT                                                                                                        >0 THEN
              IF (ROUND((((REC.BDNETAMT                                               - REC.COSTPRICE) / REC.BDNETAMT) * 100), 2)) < -99 THEN -- CR  1262 (ROUND((((REC.BDNETAMT - REC.COSTPRICE) / REC.BDNETAMT) * 100), 2) <0 and length(ROUND((((REC.BDNETAMT - REC.COSTPRICE) / REC.BDNETAMT) * 100), 2)) >3) THEN --CR 4717
                L_RQST_MARGIN_PCT                                                                                                 :=-99.99;                                                 --CR 4717
              ELSIF (ROUND((((REC.BDNETAMT                                            - REC.COSTPRICE) / REC.BDNETAMT) * 100), 2)) > 100 THEN                                               -- CR  1262 (ROUND((((REC.BDNETAMT - REC.COSTPRICE) / REC.BDNETAMT) * 100), 2) >0 and length(ROUND((((REC.BDNETAMT - REC.COSTPRICE) / REC.BDNETAMT) * 100), 2)) >3) THEN --CR 4717
                L_RQST_MARGIN_PCT                                                                                                 :=999.99;                                                 --CR 4717
              ELSE                                                                                                                                                                          --CR 4717
                L_RQST_MARGIN_PCT:=ROUND((((REC.BDNETAMT - REC.COSTPRICE) / REC.BDNETAMT) * 100), 2);
              END IF;
            END IF;
          ELSIF ((L_AUTH_BDNET_AMT                                                                                                           IS NOT NULL AND L_AUTH_BDNET_AMT>0)) THEN
            IF (ROUND((( (L_AUTH_BDNET_AMT                                                   - REC.COSTPRICE) / L_AUTH_BDNET_AMT) * 100), 2)) < -99 THEN-- CR  1262 (ROUND(((  (L_AUTH_BDNET_AMT - REC.COSTPRICE) / L_AUTH_BDNET_AMT) * 100), 2)<0 AND LENGTH(ROUND(((  (L_AUTH_BDNET_AMT - REC.COSTPRICE) / L_AUTH_BDNET_AMT) * 100), 2))>3) THEN --CR 4717
              L_RQST_MARGIN_PCT                                                                                                              :=-99.99;                                                    --CR 4717
            ELSIF ( ROUND((( (L_AUTH_BDNET_AMT                                               - REC.COSTPRICE) / L_AUTH_BDNET_AMT) * 100), 2)) > 100 THEN                                                  --CR  1262 ( ROUND(((  (L_AUTH_BDNET_AMT - REC.COSTPRICE) / L_AUTH_BDNET_AMT) * 100), 2)>0 AND LENGTH(ROUND(((  (L_AUTH_BDNET_AMT - REC.COSTPRICE) / L_AUTH_BDNET_AMT) * 100), 2))>3) THEN --CR 4717
              L_RQST_MARGIN_PCT                                                                                                              :=999.99;
            ELSE
              L_RQST_MARGIN_PCT:=ROUND((( (L_AUTH_BDNET_AMT - REC.COSTPRICE) / L_AUTH_BDNET_AMT) * 100), 2);
            END IF;
          ELSE
            L_RQST_MARGIN_PCT:=0;
          END IF;
        ELSE
          L_RQST_MARGIN_PCT:=0;
        END IF;
        --Modified by Harsh Shah , 23-Jan-2013
        --CR 4786 - [APJ MTP] ???Auth Amt? and ???Auth%?  populated with some data after creating the deal via EIS.
        --updating AUTH_DISC_OT_PC column with Null when list price is zero.
        END IF;
        INSERT
        INTO line_disc_scale
          (
            bd_id,
            line_nr,
            disc_bndry_id,
            scale_id,
            disc_type_cd,
            upper_bndry_dt,
            lower_bndry_dt,
            auth_fl,
            rqst_disc_ot_pc,
            auth_disc_ot_pc,
            disc_as_pc_rqst,
            version_created,
            auth_bd_net_prc_am,
            prod_lst_prc_am,
            RQST_BD_NET_PRC_AM,
            cost_avail_fl,
            updated_by_emp_nr,
            auth_basis_text,
            non_discount_fl,
            prod_cost_am,
            PROD_COST_DATE,
            disc_as_pc,
            HIGH_RSLR_A_SD_PC,
            RQST_INCR_DISC_AM,
            RQST_MARGIN_PCT,
            AUTH_MARGIN_PCT,
            EXT_PRE_APPRV_PRC_AM,
            GUIDANCE_AVAILABLE_FL,
            GUIDANCE_DETAILS_ID,
            GUIDANCE_EXPERT_PCT,
            GUIDANCE_FLOOR_PCT,
            GUIDANCE_TYPICAL_PCT,
            GUIDANCE_LAST_REFRESH_DT
            ,INSTANT_PRC_METHOD  --Added for US 7301
            ,INSTANT_PRC_AMT  ---Added for US 7301
          )
          VALUES
          (
            l_bd_id,
            l_line_nr,
            1,
            l_scale_id,
            DECODE(rec.pricingtypecd,NULL,'B',rec.pricingtypecd),
            l_enddate,
            l_begindate,
            REC.AUTHSTATCD,
            DECODE(l_rqst_disc_otc_pc,NULL,0,l_rqst_disc_otc_pc), --RQST_DISC_OT_PC
            --DECODE(l_price,0,0,l_auth_disc_otc_pc),       --auth_disc_ot_pc
             DECODE(rec.authstatcd,'Y',DECODE(l_price,0,0,L_AUTH_DISC_OTC_PC),NULL),--Added by Lakshmi as part of CR96402
            0,                                                    --disc_as_pc_rqst
            l_bd_version_nr,
            DECODE (rec.authstatcd,'Y',l_auth_bdnet_amt,NULL),                                            --auth bd net prc amount
            l_PRICE,                                                --list price
            DECODE(L_AUTH_BDNET_AMT,NULL,REC.BDNETAMT,L_AUTH_BDNET_AMT), --rqst_bd_net_prc_am
            decode (rec.costprice,0,'N',null,'N','Y'),
            DECODE (rec.authstatcd,'Y',rec.authempnr,NULL),
            DECODE (rec.authstatcd,'Y',l_auth_basis_text,NULL),
            rec.NonDiscFl,
            rec.costprice,
            DECODE (REC.COSTPRICE,0,NULL,NULL,NULL,sysdate),
            0 ,                            --disc_as_pc
            REC.STDDISCPCT,                --HIGH_RSLR_A_SD_PC
            DECODE(l_price,0,0,NULL), --RQST_INCR_DISC_AM
            L_RQST_MARGIN_PCT,
            DECODE(L_AUTH_BDNET_AMT,NULL,0,L_RQST_MARGIN_PCT), --auth margin,
            L_EXT_PRE_APPRV_PRC_AM,--DECODE (l_EXT_PRE_APPRV_PRC_AM, NULL, 0, l_EXT_PRE_APPRV_PRC_AM),
            REC.GuidanceAvailFl,
            DECODE(REC.GuidanceAvailFl,'Y',REC.GuidanceDetailsID,NULL),
            DECODE(REC.GuidanceAvailFl,'Y',REC.GuidanceDiscExpertPct,NULL),
            DECODE(REC.GuidanceAvailFl,'Y',REC.GuidanceDiscFloorPct,NULL),
            DECODE(REC.GuidanceAvailFl,'Y',REC.GuidanceDiscTypicalPct,NULL),
            DECODE(rec.GuidanceAvailFl,'Y',TO_TIMESTAMP (SUBSTR(REC.GuidanceRefreshDateGMT,1,19),'YYYY-MM-DD"T"HH24:MI:SS'),NULL)
            ,rec.InstantPrcMethod---Added for Us 7301
            ,rec.InstantPrcAmt---- Added for Us 7301
          );

          ---Added for US 7301--  DEAL_CONTRA
          insert into line_disc_scale_contra(bd_id,
                                                           line_nr,
                                                           disc_bndry_id,
                                                           scale_id,
                                                           contra_type,
                                                           contra_amt)
                                                           VALUES
                                                          (l_bd_id,
                                                            l_line_nr,
                                                            1,
                                                            l_scale_id,
                                                            'MANUAL',
                                                            rec.CurrencyProgramBenefit
                                                            );
        ----------------------
        -- RTQTY
        ---------------------
        --select (rec.qty + (((L_O_DCTEXPIRETHRESHOLDPCT-100)/100) * NVL(rec.qty, 0))) into l_rt_qty from dual;
        --***************************************************
        --adding rollout schedule data
        --***************************************************
        l_rollout_mnths :=t_rollout_mnths();
        ----dbms_output.put_line('Rollout month qtys   :'||rec.rolloutmonthqtys);
        GET_ROLLOUT_MONTHS(REC.ROLLOUTMONTHQTYS,L_ROLLOUT_MNTHS );
        l_rollout_ins_qry        := 'insert into rollout_schedule (bd_id,
line_nr,
prod_base_nr,
ro_bgn_dt,
ro_end_dt,
load_type,
est_qty,
pct_prob,
mth1_qty,
mth2_qty,
mth3_qty,
mth4_qty,
mth5_qty,
mth6_qty,
mth7_qty,
mth8_qty,
mth9_qty,
mth10_qty,
mth11_qty,
mth12_qty,
mth13_qty,
mth14_qty,
mth15_qty,
schedule_change_fl,
ordr_min_qty,
line_max_qty,
creation_dts,
update_dts,
remaining_qty,
rtqty,
PROD_OPT_CD )
values ( ' ||l_bd_id||',' ||l_line_nr||',' ||'''' || rec.sku||'''' ||',' || 'to_date('||''''||l_begindate||''''||','||'''DD-MON-YY'''||')'||',' || 'to_date('||''''||l_enddate||''''||','||'''DD-MON-YY'''||')'||',' || '''Even'''||',' ||rec.qty||',' ||100||',';
        l_no_of_months           :=1;
        IF l_rollout_mnths.first IS NOT NULL THEN
          FOR months_rec IN l_rollout_mnths.first..l_rollout_mnths.last
          LOOP
            IF LENGTH
              (
                l_rollout_mnths(months_rec)
              )
                                =0 THEN
              l_rollout_ins_qry:=l_rollout_ins_qry||'NULL'||',';
            ELSE
              l_rollout_ins_qry:=l_rollout_ins_qry||l_rollout_mnths(months_rec) ||',';
            END IF;
            l_no_of_months:=l_no_of_months+1;
            ----dbms_output.put_line('Inside MOnth loop');
          END LOOP;
        END IF;
        FOR i IN l_no_of_months-1 ..14
        LOOP
          l_rollout_ins_qry:=l_rollout_ins_qry||'NULL'||',';
        END LOOP;
        L_ROLLOUT_INS_QRY:=L_ROLLOUT_INS_QRY || '''N'''||',' ||rec.orderminqty||','||REC.QTY||',' || 'SYSDATE'||',' ||' SYSDATE'||',' ||REC.QTY||',' ||REC.QTY || ',' || '''' ||NVL(ltrim(rtrim(REC.OPTCD)),' ')|| '''' || ')';
        --dbms_output.put_line(' Rollout query ' || l_rollout_ins_qry);
        --dbms_output.put_line ('rollout for line');
        EXECUTE immediate (l_rollout_ins_qry);
       END LOOP;

    --END LOOP;
  END;

  --updating deal table's values - deal_est_value and other fields.
  --commented by Harsh Shah 11-apr-2014 as it was updating wrong values
  -- the same values are being updated in the procedure INSERT_DEAL_PL

  --l_reccount:=update_deal_status_values(l_bd_id);


  --dbms_output.put_line (' Deal status update values '|| l_reccount);

  --by Harsh Shah 14 Mar 2014
  --Updating Total Bundle Header discount

  --by Harsh Shah 14 Mar 2014
  --Updating Total Bundle Header discount
  if UpdateHDRPricingValues(l_bd_id) ='N' then
      --dbms_output.PUT_LINE ('Header Pricing values could not be updated');
      NULL;
  END IF;

--dbms_output.put_line ('bundle list price updated ' || sql%rowcount);
  ---------------------------------------------------------------------------
  --UPDATE LINE_DISC_SCALE TABLE WITH THE WEIGHTED AVG STD. DISC FOR BUNDLES
  --------------------------------------------------------------------------

  /*
  UPDATE line_disc_scale lds
  SET high_rslr_a_sd_pc= NVL(
    (SELECT ROUND (SUM (bl.list_price * bl.disc_as_pct * bl.qty) / SUM (bl.list_price * bl.qty) ,2)
    FROM bundle_line bl
    WHERE bl.bd_id     =lds.bd_id
    AND lds.scale_id   =scale_id
    AND scale_id       =1
    AND bl.line_nr     =lds.line_nr
    AND (bl.list_price >0
    AND bl.qty         >0)
    GROUP BY line_nr
    ),0)
  WHERE lds.line_nr IN
    ( SELECT line_nr FROM line_item WHERE bd_id=L_BD_ID AND line_type_cd='BD'
    )
  AND lds.bd_id=l_bd_id;
  */

   --by Harsh Shah 25 Mar 2014, to resolve the issue of 74654
  --std. discount was not getting calculated properly.

  UPDATE line_disc_scale lds
  SET high_rslr_a_sd_pc= NVL(
    (SELECT ROUND (SUM (bl.list_price * bl.disc_as_pct * bl.qty) / SUM (bl.list_price * bl.qty) ,2)
    FROM bundle_line bl
    where bl.bd_id     =lds.bd_id
    and bl.scale_id   =lds.scale_id
    and bl.scale_id       =(select nvl(max(scale_id),0) from line_disc_scale where bd_id=lds.bd_id and line_nr=bl.line_nr and bl.line_nr=lds.line_nr)
    AND bl.line_nr     =lds.line_nr
    AND (bl.list_price >0
    and bl.qty         >0)
    GROUP BY bl.line_nr
    ),0)
  WHERE lds.line_nr IN
    ( select line_nr from line_item where bd_id=l_bd_id and line_type_cd='BD'
    )
    and lds.scale_id       =(select nvl(max(scale_id),0) from line_disc_scale where bd_id=lds.bd_id and line_nr=lds.line_nr)
  and lds.bd_id=l_bd_id;
  DBMS_OUTPUT.PUT_LINE ('Updating std. Discount details, rows updated ' || sql%rowcount);

  --- update line_disc_scale table with rqst disc pct
  UPDATE line_disc_scale ldsc
  SET ldsc.rqst_disc_ot_pc =  FCALCRQSTDISCPCT(rqst_bd_net_prc_am,prod_lst_prc_am,high_rslr_a_sd_pc)
  --SET ldsc.rqst_disc_ot_pc = ROUND( 100- ((rqst_bd_net_prc_am/prod_lst_prc_am) * 100)- NVL(high_rslr_a_sd_pc,0), 2) --Commented by Lakshmi on 1/6/2014 to fix the issue of "value larger than specified precision allowed for this column."
  WHERE ldsc.BD_ID         =l_bd_id
  AND LDSC.LINE_NR        IN
    (SELECT LINE_NR FROM LINE_ITEM WHERE BD_ID=l_bd_id AND LINE_TYPE_CD='BD'
    )
  AND ldsc.scale_id =
    (SELECT MAX( NVL(ldsc_b.scale_id,0))
    FROM line_disc_scale ldsc_b
    WHERE ldsc_b.bd_id=ldsc.bd_id
    AND ldsc_b.line_nr=ldsc.line_nr
    );


  --******************************************************************************
  -- INSERT INTO DEAL_PL TABLE
  --******************************************************************************
   INSERT
  INTO deal_pl
    (
      bd_id,
      prod_line_cd,
      pl_estmd_tot_am,
      creation_dts,
      update_dts,
      ap_region_pct,
      eu_region_pct,
      na_region_pct,
      la_region_pct,
      jp_region_pct,
      geo_change_fl,
      sales_incentive_pct,
      pl_ext_list_tot_am,
      pl_ext_cost_tot_am,
      pl_cost_avail_all_prod_fl,
      pl_est_list_tot_am,
      PL_EST_COST_TOT_AM
    )
  SELECT MAX(LI.BD_ID) bd_id,
    li.assoc_pl_cd ,
    SUM(LI.ESTMTD_QT * lds.rqst_bd_net_prc_am ) pl_estmd_tot_am,
    sysdate creation_dts,
    sysdate update_dts,
    DECODE (l_region,'AP',100,0) ap_region_pct,
    DECODE (l_region,'EU',100,0) eu_region_pct,
    DECODE (l_region,'NA',100,0) na_region_pct,
    DECODE (l_region,'LA',100,0) la_region_pct,
    DECODE (l_region,'AP',100,0) jp_region_pct,
    'N' geo_change_fl,
    NULL sales_incentive_pct,
    NULL pl_ext_list_tot_am,
    NULL pl_ext_cost_tot_am,
    'N' pl_cost_avail_all_prod_fl,
    SUM(LI.ESTMTD_QT * lds.prod_lst_prc_am ) lst_total,
    SUM(LI.ESTMTD_QT * lds.prod_cost_am ) cost_total
  FROM line_item li,
    line_disc_scale lds
  WHERE li.bd_id          =l_bd_id
  AND li.bd_id            =lds.bd_id
  AND li.line_nr          =lds.line_nr
  AND li.line_type_cd     ='PN'
  AND li.assoc_pl_cd NOT IN
    (SELECT assoc_pl FROM bundle_line WHERE bd_id=l_bd_id
    )
  AND li.assoc_pl_cd NOT IN
    (SELECT prod_line_cd FROM deal_pl WHERE bd_id=l_bd_id
    )
  GROUP BY li.assoc_pl_cd;
  --dbms_output.put_line ('DEAL PL PNs : ' ||sql%rowcount);
  ------------------------------------------------------------
  --INSERT INTO DEAL_PL FOR THE BUNDLE_LINE PLs --- PLs only part of bundle lines
  ------------------------------------------------------------
  ---correct
  INSERT
  INTO deal_pl
    (
      bd_id,
      prod_line_cd,
      pl_estmd_tot_am,
      creation_dts,
      update_dts,
      ap_region_pct,
      eu_region_pct,
      na_region_pct,
      la_region_pct,
      jp_region_pct,
      geo_change_fl,
      sales_incentive_pct,
      pl_ext_list_tot_am,
      pl_ext_cost_tot_am,
      pl_cost_avail_all_prod_fl,
      pl_est_list_tot_am,
      PL_EST_COST_TOT_AM
    )
  SELECT MAX(bl.bd_id),
    BL.ASSOC_PL ,
    SUM((BL.QTY * NVL(
    (SELECT LI.ESTMTD_QT
    FROM LINE_ITEM LI
    WHERE LI.BD_ID    =BL.BD_ID
    --AND LI.ASSOC_PL_CD=BL.ASSOC_PL
    AND LI.LINE_NR    =BL.LINE_NR
    ),1) * BL.RQST_BD_NET_PRC_AM ) ) pl_estmd_tot_am,
    sysdate creation_dts,
    sysdate update_dts,
    DECODE (l_region,'AP',100,0) ap_region_pct,
    DECODE (l_region,'EU',100,0) eu_region_pct,
    DECODE (l_region,'NA',100,0) na_region_pct,
    DECODE (l_region,'LA',100,0) la_region_pct,
    DECODE (l_region,'AP',100,0) jp_region_pct,
    'N' geo_change_fl,
    NULL sales_incentive_pct,
    NULL pl_ext_list_tot_am,
    NULL pl_ext_cost_tot_am,
    'N' pl_cost_avail_all_prod_fl,
    SUM((BL.QTY * BL.LIST_PRICE * NVL(
    (SELECT LI.ESTMTD_QT
    FROM LINE_ITEM LI
    WHERE LI.BD_ID    =BL.BD_ID
    --AND LI.ASSOC_PL_CD=BL.ASSOC_PL
    AND LI.LINE_NR    =BL.LINE_NR
    ),1) )) LST_TOTAL,
    SUM((BL.QTY * BL.PROD_COST_AM * NVL(
    (SELECT LI.ESTMTD_QT
    FROM LINE_ITEM LI
    WHERE LI.BD_ID    =BL.BD_ID
    --AND LI.ASSOC_PL_CD=BL.ASSOC_PL
    AND LI.LINE_NR    =BL.LINE_NR
    ),1) )) COST_TOTAL
  FROM BUNDLE_LINE BL
  WHERE bd_id          =l_bd_id
  AND bl.assoc_pl NOT IN
    (SELECT prod_line_cd FROM deal_pl WHERE bd_id=l_bd_id
    )
  GROUP BY bl.assoc_pl;
    --dbms_output.put_line ('DEAL PL BUNDLE LINE INSERT : ' ||sql%rowcount);
  ---------------------------------------------------------------------------------------------------------------------
  --UPDATE DEAL_PL table
  ---------------------------------------------------------------------------------------------------------------------
  UPDATE DEAL_PL DPL
  SET PL_ESTMD_TOT_AM=PL_ESTMD_TOT_AM +
    (SELECT SUM(LI.ESTMTD_QT          * LDS.RQST_BD_NET_PRC_AM ) EST_TOAL
    FROM LINE_ITEM LI,
      LINE_DISC_SCALE LDS
    WHERE LI.BD_ID      =L_BD_ID
    AND LI.BD_ID        =LDS.BD_ID
    AND LI.LINE_NR      =LDS.LINE_NR
    AND LDS.SCALE_ID    =1
    AND LI.ASSOC_PL_CD IN
      (SELECT ASSOC_PL FROM BUNDLE_LINE WHERE BD_ID=L_BD_ID
      )
    AND LI.LINE_TYPE_CD='PN'
    AND LI.BD_ID       =DPL.BD_ID
    AND LI.ASSOC_PL_CD =DPL.PROD_LINE_CD
    GROUP BY li.assoc_pl_cd
    )
  WHERE DPL.BD_ID       =L_BD_ID
  AND DPL.PROD_LINE_CD IN
    (SELECT ASSOC_PL_CD
    FROM LINE_ITEM
    WHERE BD_ID      =L_BD_ID
    AND LINE_TYPE_CD ='PN'
    AND ASSOC_PL_CD IN
      (SELECT ASSOC_PL FROM BUNDLE_LINE WHERE BD_ID=L_BD_ID
      )
    );
  --dbms_output.put_line ('DEAL PL UPDATE  EST TOTAL : ' ||sql%rowcount);
  --UPDATE LIST TOTAL
  UPDATE DEAL_PL DPL
  SET pl_est_list_tot_am=pl_est_list_tot_am +
    (SELECT SUM(LI.ESTMTD_QT                * LDS.PROD_LST_PRC_AM ) LIST_TOTAL
    FROM LINE_ITEM LI,
      LINE_DISC_SCALE LDS
    WHERE LI.BD_ID      =L_BD_ID
    AND LI.BD_ID        =LDS.BD_ID
    AND LI.LINE_NR      =LDS.LINE_NR
    AND LDS.SCALE_ID    =1
    AND LI.ASSOC_PL_CD IN
      (SELECT ASSOC_PL FROM BUNDLE_LINE WHERE BD_ID=L_BD_ID
      )
    AND LI.LINE_TYPE_CD='PN'
    AND LI.BD_ID       =DPL.BD_ID
    AND LI.ASSOC_PL_CD =DPL.PROD_LINE_CD
    GROUP BY LI.ASSOC_PL_CD
    )
  WHERE DPL.BD_ID       =L_BD_ID
  AND DPL.PROD_LINE_CD IN
    (SELECT ASSOC_PL_CD
    FROM LINE_ITEM
    WHERE BD_ID      =L_BD_ID
    AND LINE_TYPE_CD ='PN'
    AND ASSOC_PL_CD IN
      (SELECT ASSOC_PL FROM BUNDLE_LINE WHERE BD_ID=L_BD_ID
      )
    );
  --dbms_output.put_line ('DEAL PL UPDATE  LIST TOTAL : ' ||sql%rowcount);
  --UPDATE COST TOTAL
  UPDATE DEAL_PL DPL
  SET PL_EST_COST_TOT_AM=PL_EST_COST_TOT_AM +
    (SELECT SUM(LI.ESTMTD_QT                * LDS.PROD_COST_AM ) COST_TOTAL
    FROM LINE_ITEM LI,
      LINE_DISC_SCALE LDS
    WHERE LI.BD_ID      =L_BD_ID
    AND LI.BD_ID        =LDS.BD_ID
    AND LI.LINE_NR      =LDS.LINE_NR
    AND LDS.SCALE_ID    =1
    AND LI.ASSOC_PL_CD IN
      (SELECT ASSOC_PL FROM BUNDLE_LINE WHERE BD_ID=L_BD_ID
      )
    AND LI.LINE_TYPE_CD='PN'
    AND LI.BD_ID       =DPL.BD_ID
    AND LI.ASSOC_PL_CD =DPL.PROD_LINE_CD
    GROUP BY LI.ASSOC_PL_CD
    )
  WHERE DPL.BD_ID       =L_BD_ID
  AND DPL.PROD_LINE_CD IN
    (SELECT ASSOC_PL_CD
    FROM LINE_ITEM
    WHERE BD_ID      =L_BD_ID
    AND LINE_TYPE_CD ='PN'
    AND ASSOC_PL_CD IN
      (SELECT ASSOC_PL FROM BUNDLE_LINE WHERE BD_ID=L_BD_ID
      )
    );
  --dbms_output.put_line ('DEAL PL UPDATE  COST  TOTAL : ' ||sql%rowcount);
  -------------------------------------------------------------------------------
  --RECALCULATE ALL PL TOTALS
  -------------------------------------------------------------------------------
  UPDATE deal d
  SET
    (
      d.est_deal_value,
      d.est_net_tot_am,
      d.est_list_tot_am,
      d.est_tot_k_am
    )
    =
    (SELECT SUM (dp.pl_estmd_tot_am) pl_estmd_tot_am ,
      SUM (dp.pl_estmd_tot_am) pl_estmd_tot_am,
      SUM(dp.pl_est_list_tot_am)pl_est_list_tot_am,
      ROUND(SUM(dp.pl_estmd_tot_am/1000)) est_tot_k_am
    FROM deal_pl dp
    WHERE dp.bd_id=d.bd_id
    )
  WHERE d.bd_id=l_bd_id;


  --uncommented by Harsh Shah 6-Dec-2013
  --dbms_output.put_line ('Recalc running totals done');
  --RECALC_RUNNING_TOTALS(L_BD_ID);
  ----dbms_output.put_line ('Recalc running totals done');
  --Caculate Deal Discount and Margin PCT
  calculate_deal_disc_margin_pct (l_bd_id);
  --dbms_output.PUT_LINE (' Deal PL Row Inserted ' || sql%ROWCOUNT);
  --*****************************
  --Deal Competitors
  --*****************************
 --dbms_output.put_line ('Inserting data for deal competitors ');
  INS_COMPETITORS (L_BD_ID,L_DEAL_CREATION_GUID,L_XMLNAMESPACE);
  --dbms_output.PUT_LINE ('Dea competitors entry..done..');
  --*****************************
  --create new version --version 1 deal
  -- on l_dealvertocreate flag.
  --  l_dealvertocreate
  l_dealvertocreate:=NVL(l_dealvertocreate,0);
  --dbms_output.put_line ('Deal Version to Create ' ||l_dealvertocreate);
  ----deal Commentss
  INS_DEAL_COMMENT_MEMO (L_BD_ID , L_DEAL_CREATION_GUID, L_XMLNAMESPACE);
  --dbms_output.PUT_LINE (' Deal comment memo done');
  --Agent Incentives
  INS_DEAL_PL(L_BD_ID , L_DEAL_CREATION_GUID, L_XMLNAMESPACE , L_REGION, 100 );
  --dbms_output.PUT_LINE (' ins deal pl done');
  --Update agent apprval flag
  BEGIN
    SELECT 1
    INTO l_reccount
    FROM deal_pl
    WHERE NVL(sales_incentive_pct,0)>0
    AND bd_id                       =l_bd_id;
  EXCEPTION
  WHEN NO_DATA_FOUND THEN
    l_reccount := 0;
  WHEN TOO_MANY_ROWS THEN
    l_reccount := 2;
  END;
  --dbms_output.put_line ('SALES incentive pct exists in deal_pl ' || l_reccount);
  IF l_reccount >0 THEN
    UPDATE deal
    SET agent_deal_fl='Y'
      -- agent_apprvl_fl ='Y'  ---- CR 4721
    WHERE bd_id=l_bd_id;
  END IF;
  --calculate deal risk
  --dbms_output.PUT_LINE (' calculate deal risk start ...');

  CALCULATE_DEAL_RISK (L_BD_ID,L_RISK_REASON,L_ERRORS);
  --dbms_output.PUT_LINE (' deal risk errors: ' || L_ERRORS );
  --dbms_output.PUT_LINE (' deal risk reasons ' || L_RISK_REASON );
  IF (L_ERRORS    IS NULL AND LENGTH(LTRIM(RTRIM(L_RISK_REASON)))>2) THEN
    L_HIGH_RISK_FL:='Y';
    SELECT DECODE ( SUBSTR(l_risk_reason,1,1), ';', SUBSTR(l_risk_reason,2), SUBSTR(l_risk_reason,1) )
    INTO l_errors
    from DUAL;
    L_RISK_REASON:='High Risk Reasons : ' || L_ERRORS;
    L_ERRORS     :='WARNING';
    --dbms_output.put_line (' Deal High Risk Reasons using decode ' || l_risk_reason);
    inserterror_output_messages ( NULL,NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_risk_reason, 'WARNING', i_deal_creation_guid, NULL,NULL,l_risk_reason);
    --Added by Lakshmi on 9/16/2014 to send mails when deal goes to High Risk
    BEGIN
SELECT app_value
  INTO l_app_value
  FROM APP_CONFIG_KEYS
 WHERE app_key LIKE 'HIGH_RISK%';


SELECT email_from_id, email_subject_tx, email_body_tx
  INTO l_from_address, l_email_subject, l_email_body
  FROM ECLP_EMAIL_TEMPLATE
 WHERE email_template_cd = l_app_value
 AND tenantid =l_tenantid; ---Added for SMO changes CR 216348

SELECT LISTAGG (EMAIL_UNIX_ADDR_TX, ',') WITHIN GROUP (ORDER BY emp_nr)
  INTO l_to_address
  FROM employee emp
 WHERE emp_nr IN (SELECT SR_HP_EMP_NR
                    FROM sales_rep
                   WHERE bd_id = l_bd_id)
       AND UPPER (emp.emp_stat_cd) = 'ACTIVE';

       --For each receipient send a mail
FOR receipent_list IN (SELECT EMAIL_UNIX_ADDR_TX
                                 FROM employee emp
                              WHERE emp_nr IN (SELECT SR_HP_EMP_NR
                                            FROM sales_rep
                                            WHERE bd_id = l_bd_id)
                              AND UPPER (emp.emp_stat_cd) = 'ACTIVE')
    LOOP
     send_mail(
            l_from_address,
            l_to_address ,
            l_email_subject,
            l_email_body,
            receipent_list.email_unix_addr_tx,
            l_errors);
IF l_errors IS NOT NULL THEN
  --inserterror_output_messages ( NULL,NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, 'WARNING', i_deal_creation_guid, NULL,NULL,l_errors);
  inserterror_output_messages ( NULL,NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, 'WARNING', i_deal_creation_guid, NULL,NULL,'Error while sending High Risk Email');
END IF;
END LOOP;

EXCEPTION
WHEN OTHERS THEN
L_ERRORS:='Error occured while sending mails for High Risk Deal'||sqlerrm;
    inserterror_output_messages ( NULL,NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, 'WARNING', i_deal_creation_guid, NULL,NULL,l_errors);
END;
   --Added by Lakshmi on 9/16/2014 to send mails when deal goes to High Risk
--Changes made by Lakshmi on 9/18/2014
/* BEGIN*/
SELECT app_value
  INTO l_app_value
  FROM APP_CONFIG_KEYS
 WHERE app_key LIKE 'HIGH_RISK%';


SELECT email_from_id, email_subject_tx, email_body_tx
  INTO l_from_address, l_email_subject, l_email_body
  FROM ECLP_EMAIL_TEMPLATE
 WHERE email_template_cd = l_app_value
 and tenantid =l_tenantid;  ---Added for SMO changes CR 216348

 SELECT control_cntry_cd,bus_model_cd INTO l_cntry_cd, l_bus_model_cd FROM deal WHERE bd_id=l_bd_id;

 SELECT REPLACE(l_email_subject,'<DEAL.BD_NR>',l_bd_nr) INTO l_email_subject FROM DUAL;

BEGIN
 SELECT eu_cmpny_Nm INTO l_euc_cmpny_Nm FROM deal WHERE bd_nr=l_bd_nr AND current_version_Fl='Y';
 EXCEPTION
 WHEN OTHERS THEN
 l_euc_cmpny_Nm := NULL;
 END;

 SELECT REPLACE(l_email_subject,'( <Deal.CUSTOMER> )',l_euc_cmpny_Nm) INTO l_email_subject FROM DUAL;


FOR employee_email_list IN (SELECT d.init_hp_emp_nr,
                            d.driving_hp_emp_nr,
                            d.dsm_hp_emp_nr,
                            d.DEAL_LEAD_EMP_NR from deal d
                            where d.bd_id=l_bd_id)
LOOP
IF (is_emp_bmi_default(employee_email_list.init_hp_emp_nr
,l_dealsourcecd --Added for US-9408 --> Encore Retirement  
)='Y')  THEN
SELECT * INTO emp_email_address FROM (select dc_email  from default_bmi_employee demp where demp.region_cd in (select region from ww_cntry wc where wc.cntry_cd=L_CNTRY_CD)
AND (upper(route_to_market))=(SELECT DISTINCT DECODE(direct_fl,'Y','DIRECT','INDIRECT') FROM bus_model WHERE bus_model_cd=l_bus_model_cd AND country_cd=L_CNTRY_CD
                                                                                                                                                                AND tenantid = l_tenantid )---Added for SMO Changes
 AND (demp.country_cd=l_cntry_cd OR country_cd='*' )
 AND tenantid =l_tenantid --Added for SMO changes
 AND source_asset_ID = l_dealsourcecd  --Added for US-9408 --> Encore Retirement  
 ORDER BY COUNTRY_CD DESC)
  WHERE rownum<=1;
l_to_address := l_to_address||','||emp_email_address;
ELSE
SELECT email_unix_addr_tx INTO emp_email_address FROM employee emp WHERE emp_nr=employee_email_list.init_hp_emp_nr
AND UPPER (emp.emp_stat_cd) = 'ACTIVE';
l_to_address := l_to_address||emp_email_address;
END IF;

IF (is_emp_bmi_default(employee_email_list.driving_hp_emp_nr
,l_dealsourcecd --Added for US-9408 --> Encore Retirement  
)='Y')  THEN
SELECT * INTO emp_email_address FROM (select sr_email  from default_bmi_employee demp where demp.region_cd in (select region from ww_cntry wc where wc.cntry_cd=L_CNTRY_CD)
AND (upper(route_to_market))=(SELECT DISTINCT DECODE(direct_fl,'Y','DIRECT','INDIRECT') FROM bus_model WHERE bus_model_cd=l_bus_model_cd AND country_cd=L_CNTRY_CD
                                                                                                                                                                    AND tenantid = l_tenantid )---Added for SMO Changes
 AND (demp.country_cd=l_cntry_cd OR country_cd='*' )
 AND tenantid =l_tenantid --Added for SMO changes
 AND source_asset_ID = l_dealsourcecd  --Added for US-9408 --> Encore Retirement  
 ORDER BY COUNTRY_CD DESC)
  WHERE rownum<=1;
l_to_address := l_to_address||','||emp_email_address;
ELSE
SELECT email_unix_addr_tx INTO emp_email_address FROM employee emp WHERE emp_nr=employee_email_list.driving_hp_emp_nr
AND UPPER (emp.emp_stat_cd) = 'ACTIVE';
l_to_address := l_to_address||emp_email_address;
END IF;


IF (is_emp_bmi_default(employee_email_list.dsm_hp_emp_nr
,l_dealsourcecd --Added for US-9408 --> Encore Retirement  
)='Y')  THEN
SELECT * INTO emp_email_address FROM (select dm_email  from default_bmi_employee demp where demp.region_cd in (select region from ww_cntry wc where wc.cntry_cd=L_CNTRY_CD)
AND (upper(route_to_market))=(SELECT DISTINCT DECODE(direct_fl,'Y','DIRECT','INDIRECT') FROM bus_model WHERE bus_model_cd=l_bus_model_cd AND country_cd=L_CNTRY_CD
                                                                                                                                                                                    AND tenantid = l_tenantid )---Added for SMO Changes
 AND (demp.country_cd=l_cntry_cd OR country_cd='*' )
 AND tenantid =l_tenantid --Added for SMO changes
 AND source_asset_ID = l_dealsourcecd  --Added for US-9408 --> Encore Retirement  
 ORDER BY COUNTRY_CD DESC)
  WHERE rownum<=1;
l_to_address := l_to_address||','||emp_email_address;
ELSE
SELECT email_unix_addr_tx INTO emp_email_address FROM employee emp WHERE emp_nr=employee_email_list.dsm_hp_emp_nr
AND UPPER (emp.emp_stat_cd) = 'ACTIVE';
l_to_address := l_to_address||emp_email_address;
END IF;


IF (is_emp_bmi_default(employee_email_list.deal_lead_emp_nr
,l_dealsourcecd --Added for US-9408 --> Encore Retirement  
)='Y')  THEN
SELECT * INTO emp_email_address FROM (select dl_email  from default_bmi_employee demp where demp.region_cd in (select region from ww_cntry wc where wc.cntry_cd=L_CNTRY_CD)
AND (upper(route_to_market))=(SELECT DISTINCT DECODE(direct_fl,'Y','DIRECT','INDIRECT') FROM bus_model WHERE bus_model_cd=l_bus_model_cd AND country_cd=L_CNTRY_CD
                                                                                                                                                                                                        AND tenantid = l_tenantid )---Added for SMO Changes
 AND (demp.country_cd=l_cntry_cd OR country_cd='*' )
 AND tenantid =l_tenantid --Added for SMO changes
 AND source_asset_ID = l_dealsourcecd  --Added for US-9408 --> Encore Retirement  
 ORDER BY COUNTRY_CD DESC)
  WHERE rownum<=1;
l_to_address := l_to_address||','||emp_email_address;
ELSE
SELECT email_unix_addr_tx INTO emp_email_address FROM employee emp WHERE emp_nr=employee_email_list.deal_lead_emp_nr
AND UPPER (emp.emp_stat_cd) = 'ACTIVE';
l_to_address := l_to_address||emp_email_address;
END IF;

END LOOP;

--For each receipient send a mail
FOR receipent_list IN (SELECT d.init_hp_emp_nr,
                            d.driving_hp_emp_nr,
                            d.dsm_hp_emp_nr,
                            d.DEAL_LEAD_EMP_NR from deal d
                            where d.bd_id=l_bd_id)
LOOP
BEGIN
IF (is_emp_bmi_default(receipent_list.init_hp_emp_nr
,l_dealsourcecd --Added for US-9408 --> Encore Retirement  
)='Y')  THEN
SELECT * INTO receipient_email_address FROM (select dc_email  from default_bmi_employee demp where demp.region_cd in (select region from ww_cntry wc where wc.cntry_cd=L_CNTRY_CD)
AND (upper(route_to_market))=(SELECT DISTINCT DECODE(direct_fl,'Y','DIRECT','INDIRECT') FROM bus_model WHERE bus_model_cd=l_bus_model_cd AND country_cd=L_CNTRY_CD
                                                                                                                                                                                                        AND tenantid = l_tenantid )---Added for SMO Changes
 AND (demp.country_cd=l_cntry_cd OR country_cd='*' )
 AND tenantid =l_tenantid --Added for SMO changes
 AND source_asset_ID = l_dealsourcecd  --Added for US-9408 --> Encore Retirement  
 ORDER BY COUNTRY_CD DESC)
  WHERE rownum<=1;
ELSE
SELECT email_unix_addr_tx INTO receipient_email_address FROM employee emp WHERE emp_nr=receipent_list.init_hp_emp_nr
AND UPPER (emp.emp_stat_cd) = 'ACTIVE';
END IF;
     send_mail(
            l_from_address,
            l_to_address ,
            l_email_subject,
            l_email_body,
            receipient_email_address,
            l_errors);
IF l_errors IS NOT NULL THEN
  inserterror_output_messages ( NULL,NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, 'WARNING', i_deal_creation_guid, NULL,NULL,'Error while sending High Risk Email to Deal Creator');
END IF;

IF (is_emp_bmi_default(receipent_list.driving_hp_emp_nr
,l_dealsourcecd --Added for US-9408 --> Encore Retirement  
)='Y')  THEN
SELECT * INTO receipient_email_address FROM (select sr_email  from default_bmi_employee demp where demp.region_cd in (select region from ww_cntry wc where wc.cntry_cd=L_CNTRY_CD)
AND (upper(route_to_market))=(SELECT DISTINCT DECODE(direct_fl,'Y','DIRECT','INDIRECT') FROM bus_model WHERE bus_model_cd=l_bus_model_cd AND country_cd=L_CNTRY_CD
                                                                                                                                                                                    AND tenantid = l_tenantid )---Added for SMO Changes
 AND (demp.country_cd=l_cntry_cd OR country_cd='*' )
 AND tenantid =l_tenantid --Added for SMO changes
 AND source_asset_ID = l_dealsourcecd  --Added for US-9408 --> Encore Retirement  
 ORDER BY COUNTRY_CD DESC)
  WHERE rownum<=1;
   ELSE
SELECT email_unix_addr_tx INTO receipient_email_address FROM employee emp WHERE emp_nr=receipent_list.driving_hp_emp_nr
AND UPPER (emp.emp_stat_cd) = 'ACTIVE';
END IF;
     send_mail(
            l_from_address,
            l_to_address ,
            l_email_subject,
            l_email_body,
            receipient_email_address,
            l_errors);
IF l_errors IS NOT NULL THEN
  inserterror_output_messages ( NULL,NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, 'WARNING', i_deal_creation_guid, NULL,NULL,'Error while sending High Risk Email to Deal Creator');
END IF;

IF (is_emp_bmi_default(receipent_list.dsm_hp_emp_nr
,l_dealsourcecd --Added for US-9408 --> Encore Retirement  
)='Y')  THEN
SELECT * INTO receipient_email_address FROM (select dm_email  from default_bmi_employee demp where demp.region_cd in (select region from ww_cntry wc where wc.cntry_cd=L_CNTRY_CD)
AND (upper(route_to_market))=(SELECT DISTINCT DECODE(direct_fl,'Y','DIRECT','INDIRECT') FROM bus_model WHERE bus_model_cd=l_bus_model_cd AND country_cd=L_CNTRY_CD
                                                                                                                                                                                                            AND tenantid = l_tenantid )---Added for SMO Changes
 AND (demp.country_cd=l_cntry_cd OR country_cd='*' )
 AND tenantid =l_tenantid --Added for SMO changes
 AND source_asset_ID = l_dealsourcecd  --Added for US-9408 --> Encore Retirement  
 ORDER BY COUNTRY_CD DESC)
  WHERE rownum<=1;
   ELSE
SELECT email_unix_addr_tx INTO receipient_email_address FROM employee emp WHERE emp_nr=receipent_list.dsm_hp_emp_nr
AND UPPER (emp.emp_stat_cd) = 'ACTIVE';
END IF;
     send_mail(
            l_from_address,
            l_to_address ,
            l_email_subject,
            l_email_body,
            receipient_email_address,
            l_errors);
IF l_errors IS NOT NULL THEN
  inserterror_output_messages ( NULL,NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, 'WARNING', i_deal_creation_guid, NULL,NULL,'Error while sending High Risk Email to Deal Creator');
END IF;

IF (is_emp_bmi_default(receipent_list.DEAL_LEAD_EMP_NR
,l_dealsourcecd --Added for US-9408 --> Encore Retirement  
)='Y')  THEN
SELECT * INTO receipient_email_address FROM (select dl_email  from default_bmi_employee demp where demp.region_cd in (select region from ww_cntry wc where wc.cntry_cd=L_CNTRY_CD)
AND (upper(route_to_market))=(SELECT DISTINCT DECODE(direct_fl,'Y','DIRECT','INDIRECT') FROM bus_model WHERE bus_model_cd=l_bus_model_cd AND country_cd=L_CNTRY_CD
                                                                                                                                                                                                    AND tenantid = l_tenantid )---Added for SMO Changes
 AND (demp.country_cd=l_cntry_cd OR country_cd='*' )
 AND tenantid =l_tenantid --Added for SMO changes
 AND source_asset_ID = l_dealsourcecd  --Added for US-9408 --> Encore Retirement  
 ORDER BY COUNTRY_CD DESC)
  WHERE rownum<=1;
      ELSE
SELECT email_unix_addr_tx INTO receipient_email_address FROM employee emp WHERE emp_nr=receipent_list.DEAL_LEAD_EMP_NR
AND UPPER (emp.emp_stat_cd) = 'ACTIVE';
END IF;
     send_mail(
            l_from_address,
            l_to_address ,
            l_email_subject,
            l_email_body,
            receipient_email_address,
            l_errors);
IF l_errors IS NOT NULL THEN
  inserterror_output_messages ( NULL,NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, 'WARNING', i_deal_creation_guid, NULL,NULL,'Error while sending High Risk Email to Deal Creator');
END IF;

EXCEPTION
WHEN OTHERS THEN
L_ERRORS:='Error occured while sending mails for High Risk Deal'||sqlerrm;
    inserterror_output_messages ( NULL,NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, 'WARNING', i_deal_creation_guid, NULL,NULL,l_errors);
END;
END LOOP;

  ELSE
    L_ERRORS:='Deal Risk Errors : ' || L_ERRORS ;
    inserterror_output_messages ( NULL,NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, 'WARNING', i_deal_creation_guid, NULL,NULL,l_errors);
  END IF;



   --Update the existing high risk flag only if high risk is true from the below function. This is because, we may get high risk true from the calculate deal risk procedure and we don't want to disturb that logic.
  -- by Harsh Shah FOR  CR 2624 'High Risk Reseller
--  DBMS_OUTPUT.PUT_LINE ('Searching High Risk Reseller B ');
  IF Is_reseller_b_high_risk(L_BD_ID,i_deal_creation_Guid)='Y' THEN
      L_HIGH_RISK_FL:='Y';
  END IF;
  --DBMS_OUTPUT.PUT_LINE ('Searching High Risk Reseller B Ends');


--Below updates will fix the issue of CR:195728
--IM19519225 --> Incorrect data in TXT generated for BMI quote
--Issue: As bundle component's qty was not considered, the values of amounts were wrong.

/* BEGIN
/* UPDATE bundle_line bl SET auth_bd_net_prc_am=auth_bd_net_prc_am*qty WHERE bd_id=l_bd_id
AND scale_id=(SELECT max(scale_id) FROM line_disc_scale WHERE bd_id=l_bd_id AND line_nr=bl.line_nr); */

/* FOR update_line_item IN (SELECT line_nr FROM line_item WHERE bd_id=l_bd_id AND line_type_cd='BD')
LOOP

SELECT max(scale_id) INTO l_scale_id FROM line_disc_scale WHERE bd_id=l_bd_id AND line_nr=update_line_item.line_nr;

    UPDATE line_item SET remaining_amt=(SELECT sum(auth_bd_net_prc_am*qty) FROM bundle_line WHERE bd_id=l_bd_id
                                                                AND scale_id=l_scale_id)
            WHERE line_nr=update_line_item.line_nr
            AND bd_id=l_bd_id;

UPDATE line_disc_scale SET auth_bd_net_prc_am=(SELECT sum(auth_bd_net_prc_am*qty) FROM bundle_line WHERE bd_id=l_bd_id
                                                                AND scale_id=l_scale_id)
            WHERE line_nr=update_line_item.line_nr
            AND bd_id=l_bd_id
            AND scale_id=l_scale_id;

END LOOP;
EXCEPTION
WHEN OTHERS THEN
L_ERRORS:='Error occured while Updating Auth BD Net Values: l'||sqlerrm;
    inserterror_output_messages ( NULL,NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, 'WARNING', i_deal_creation_guid, NULL,NULL,l_errors);
END; */
--Above code commented  to avoid any performance issues.

BEGIN
UPDATE line_item li SET remaining_amt=(SELECT sum(auth_bd_net_prc_am*qty) FROM bundle_line bl WHERE bd_id=l_bd_id
                                                                AND scale_id=(SELECT max(scale_id) FROM line_disc_scale lds WHERE bd_id=l_bd_id AND lds.line_nr=bl.line_nr
                                                                AND lds.line_nr=li.line_nr)
                                                                GROUP BY bl.line_nr
                                                                )
    WHERE li.line_nr IN (SELECT line_nr FROM line_item WHERE line_type_cd='BD' AND bd_id=l_bd_id)
    AND li.bd_id=l_bd_id;

UPDATE line_disc_scale lds1 SET auth_bd_net_prc_am=(SELECT sum(auth_bd_net_prc_am*qty) FROM bundle_line bl WHERE bd_id=l_bd_id
                                                                AND scale_id=(SELECT max(scale_id) FROM line_disc_scale lds2 WHERE bd_id=bl.bd_id AND lds2.line_nr=bl.line_nr
                                                                AND lds1.line_nr=lds2.line_nr)
                                                                GROUP BY bl.line_nr)
WHERE line_nr IN (SELECT line_nr FROM line_item WHERE line_type_cd='BD' AND bd_id=l_bd_id)
AND bd_id=l_bd_id
AND scale_id=(SELECT max(scale_id) FROM line_disc_scale WHERE bd_id=l_bd_id );

EXCEPTION
WHEN OTHERS THEN
L_ERRORS:='Error occured while Updating Auth BD Net Values: l'||sqlerrm;
    inserterror_output_messages ( NULL,NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, 'WARNING', i_deal_creation_guid, NULL,NULL,l_errors);
END;

  --dbms_output.put_line (' calculate deal risk end ...');
  --update deal table with high risk flag
  UPDATE DEAL
  SET DEAL_RISK_FL =L_HIGH_RISK_FL
  WHERE BD_ID      =l_bd_id;
  --dbms_output.put_line ('Create New Version : ' || l_createnewversion);
  --check if product exists before submitting the deal and creating new version
  BEGIN
    SELECT 1 INTO L_RECCOUNT FROM LINE_ITEM WHERE BD_ID=L_BD_ID;
  EXCEPTION
  WHEN NO_DATA_FOUND THEN
    l_reccount :=0;
  WHEN TOO_MANY_ROWS THEN
    l_reccount :=2;
  END;
  ---added new code as part of CR4731
  IF l_reccount             <=0 THEN
    IF (l_dealsourcedealtype = C_HIGH_TOUCH_DEALTYPE_DESC AND l_dealvertocreate = 0) THEN
      L_errors              :='Version 0 deal has been created without products';
      L_MSG_TYPE            := c_m_type_success;
      inserterror_output_messages ( NULL,NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, l_msg_type, i_deal_creation_guid, NULL,NULL,l_errors);
    ELSE
      l_errors   :='Cannot submit the deal, Products does not exists';
      L_MSG_TYPE :=c_m_type_ERROR;
      RAISE REJECT_DEAL;
    END IF;
  END IF;
  --------------------
  --SET DCT STATUS
  --------------------
  L_O_DCTEXPIRETHRESHOLDPCT:=1;
  SET_DCT_STATUS(L_BD_ID,I_DEAL_CREATION_GUID,L_O_DCTEXPIRETHRESHOLDPCT);
  --dbms_output.PUT_LINE ('SET DCT STATUS L_O_DCTEXPIRETHRESHOLDPCT  ' || L_O_DCTEXPIRETHRESHOLDPCT);
  UPDATE ROLLOUT_SCHEDULE
  SET RTQTY  =ROUND(LINE_MAX_QTY + (((L_O_DCTEXPIRETHRESHOLDPCT-100)/100) * NVL(LINE_MAX_QTY, 0)))
  WHERE bd_id=L_BD_ID;
  ----- Handling auto event in deal timings table ----
  ins_deal_timings(l_bd_id, sysdate,l_deal_creator_dc,sysdate,l_deal_creator_dc,'DC01',NULL,'CREATEDEAL','CREATEDEAL');
  ---end of create v0 event---
  --------------------------------------
  --Test by harsh for routing issue on 20-Jul-2012
  --------------------------------------
  l_errors:='NOROUTE';
  inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr,l_deal_prog_cd ,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code,l_high_risk_fl, l_risk_reasion_desc,l_risk_desc,l_errors,l_msg_type,l_deal_creation_guid, NULL,NULL,l_errors);
  --------------------------------------

  --==================================
  --Call check_ismultibg_deal function
  --==================================
  l_ismultibg_deal := check_ismultibg_deal (l_bd_id);

  IF (l_ismultibg_deal = 'Y') THEN
    UPDATE deal SET ismultibg_deal=l_ismultibg_deal WHERE bd_id=l_bd_id;
  END IF;

  --==================================
  --Update split_deal_fl in DEAL table
  --==================================

  UPDATE deal SET split_deal_fl=l_splitdealfl WHERE bd_nr=l_bd_nr AND bd_id=l_bd_id;

    --COde added by Lakshmi on 8/29/2014 for CR147359: Error: I have an Eclipse deal that was initiated through BMI quote complete.. without the Customer Content populated... and the deal is in "quote" status????
    /* The below code checks if the customer is present in V0. If yes, only then V1 will be created */
    BEGIN
   SELECT eu_cust_nr
     INTO l_eu_cust_nr
     FROM deal
    WHERE bd_nr = l_bd_nr AND bd_version_nr = 0;

   IF l_eu_cust_nr IS NULL
   THEN
      l_dealvertocreate := 0;
      l_errors := 'Forcing Version 0 deal, as we could not find the Customer details for this quote.';
    inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr,NULL ,NULL,NULL,NULL,NULL, NULL,NULL, l_errors,'INFO',l_deal_creation_guid, NULL,NULL,NULL);
   END IF;
    EXCEPTION
   WHEN OTHERS
   THEN
      l_dealvertocreate := 0;
      L_ERRORS      := 'An error was encountered - ' || SQLCODE || ' -ERROR- ' || SQLERRM || '. Error at Line : ' || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE();
        L_MSG_TYPE    :='ERROR';
    --insert into error table and output table.
    inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr,NULL,NULL,NULL, NULL,NULL,NULL,NULL,l_errors,l_msg_type,NULL,NULL,NULL,NULL);
      END;

       -------------------------------------------------------------------------
-- Rechecking the Tenant ID Derivation based on the actual deal data
---------------------------------------------------------------------------
 DEAL_TENANTID (l_bd_id,l_tenantID,l_mixed_tenant_cd);

 update deal
   set
      tenantid=l_tenantid,
      MIXEDTENANTCD=l_mixed_tenant_cd,
      tenantid_data_cd=l_tenantid
   where
      bd_nr=l_bd_nr;

    l_msg_type :='INFO';
   l_errors   :='Tenant ID Dervied as per the products added on a deal is  : '  || l_tenantid || ', Mixed Tenant Code :' ||l_mixed_tenant_cd ;
   inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr,l_deal_prog_cd ,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code,l_high_risk_fl, l_risk_reasion_desc,l_risk_desc,l_errors,l_msg_type,l_deal_creation_guid, NULL,NULL,l_errors);

---------------------------------------------------------------------------


--CREATE NEW VERSION OF DEAL
  IF (l_createnewversion='Y' AND to_number(l_dealvertocreate) >=1) THEN
    --call a procedure to create a new version of  deal.-- version 1 deal
    ----dbms_output.put_line ('Deal Version to Create is :' || l_dealvertocreate);

    --dbms_output.PUT_LINE (' create new version parameters ' || '  bd nr ' || L_BD_NR || '  l_eclipse_user_id : ' || L_ECLIPSE_USER_ID || ' l_deal_creator_dc : ' ||L_DEAL_CREATOR_DC );
    --L_ERRORS:=' create new version parameters = ' || '  bd nr ' || L_BD_NR || '  l_eclipse_user_id : ' || L_ECLIPSE_USER_ID || ' l_deal_creator_dc : ' ||L_DEAL_CREATOR_DC ;

    --inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr,l_deal_prog_cd ,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code,l_high_risk_fl, l_risk_reasion_desc,l_risk_desc,l_errors,'INFO',l_deal_creation_guid, NULL,NULL,null);

    CREATE_BD_VERSION_40 (L_BD_NR,0,L_ECLIPSE_USER_ID,L_DEAL_CREATOR_DC,sysdate ,sysdate,A_OUT1, A_OUT2,A_OUT3,A_OUT4,A_OUT5,A_OUT6,A_OUT7);
    --dbms_output.put_line (' 101');
    unauthorized_zero_version_deal (l_bd_nr);


  elsif (l_createnewversion='N') THEN
    l_deal_prog_cd        :='U';
    l_bdme_aprvl_cd       :='N';
    l_quote_dist_cd       :='N';
    --display the below message only in case where deal actions specifies to create version 1 deal but package
    --is not able to create due to errors/warnings.
    IF to_number(l_dealvertocreate) =1 THEN
      --dbms_output.put_line (' 102');
      unauthorized_zero_version_deal (l_bd_nr);
      l_errors := 'New Deal Version cannot be created. Please check all the Error and Warning messages' ;
      --dbms_output.put_line (l_errors);
      l_msg_type:='WARNING';
      inserterror_output_messages (l_bd_id,l_bd_nr,a_out2,l_deal_prog_cd ,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code,l_high_risk_fl, l_risk_reasion_desc,l_risk_desc,
      l_errors,l_msg_type,l_deal_creation_guid, NULL,NULL,l_errors);
    END IF;
  END IF;

 /*  --Update MC Charge of the new version:
  BEGIN
  l_mcchargecd        := getsqtxmlvalue ('/DealCreationRequest/DealHeader/McChargeCD/', l_deal_creation_guid);
    L_BD_ID := TO_NUMBER (A_OUT1);
    UPDATE deal SET mc_charge=l_mcchargecd
    WHERE EXISTS (SELECT mc_chrg,bus_model_cd,country_cd
                        FROM mc_charge
                        WHERE mc_chrg=l_mcchargecd
                        AND bus_model_cd=l_busmodelcd
                        AND country_cd=l_countrycd
                        AND active_fl='Y')
    AND bd_id=L_BD_ID;
    IF SQL%ROWCOUNT=0 THEN
    l_errors:='Could not update MC Charge for the deal: '||l_bd_nr||' , BD_ID :' || L_BD_ID ||'  ,and BD Version Nr :' || a_out2;
    --dbms_output.put_line (l_errors);
    inserterror_output_messages ( l_bd_id,l_bd_nr, a_out2,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, 'WARNING',
     l_deal_creation_guid, NULL,NULL,l_errors);
    END IF;
    END; --End of update MC Charge. */

    --Update end date of the new version of the deal.
    update_deal_enddate  ( L_BD_ID,
                           i_deal_creation_guid,
                           l_errors);



    IF (l_errors <>'SUCCESS') THEN
    inserterror_output_messages ( l_bd_id,l_bd_nr, a_out2,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, 'WARNING',
     l_deal_creation_guid, NULL,NULL,l_errors);
    END IF;


  --CR4721
    --IF (upper(a_out3)='SUCCESS' ) THEN --Commented by Lakshmi on 12/18/2014 for CR166557.
--Fix for CR166557- Added the condition to_number (a_out1) > 0 ) to check if new version is created successfully
    IF (upper(a_out3)='SUCCESS'  AND to_number (a_out1) > 0 ) THEN
    ----Handling auto event in for  submit deal---
    ins_deal_timings(l_bd_id,sysdate, l_deal_creator_dc,sysdate,l_deal_creator_dc,'DC02',NULL,'CREATEVER','CREATEVER');
    ins_deal_timings(l_bd_id,sysdate, l_deal_creator_dc,sysdate,l_deal_creator_dc,'DS01',NULL,'SUBMITNEW','SUBMITNEW');


    L_BD_ID := TO_NUMBER (A_OUT1);
    l_errors:=' Deal Created Successfully, New Deal Number: '||l_bd_nr||' , New BD_ID :' || L_BD_ID ||'  ,New BD Version Nr :' || a_out2;
    --dbms_output.put_line (l_errors);

    --by Harsh Shah 11-Apr-2014
    --new event for the new version deal
    --capturing SUBMITNEW for new version 1 deal
    ins_deal_timings(l_bd_id,sysdate, l_deal_creator_dc,sysdate,l_deal_creator_dc,'DC02',NULL,'CREATEVER','CREATEVER');
     --ins_deal_timings(l_bd_id,sysdate, l_deal_creator_dc,sysdate,l_deal_creator_dc,'DC02',NULL,'SUBMITNEW','SUBMITNEW');

    inserterror_output_messages ( l_bd_id,l_bd_nr, a_out2,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, 'SUCCESS',
     l_deal_creation_guid, NULL,NULL,l_errors);
    -- ins_deal_timings(l_bd_id,sysdate, l_deal_creator_dc,NULL,NULL,NULL,NULL,'SUBMITNEW',NULL);
    BEGIN
      SELECT 1
      INTO l_reccount
      FROM deal_pl
      WHERE NVL(sales_incentive_pct,0)>0
      AND bd_id                       =l_bd_id;
    EXCEPTION
    WHEN NO_DATA_FOUND THEN
      l_reccount :=0;
    WHEN TOO_MANY_ROWS THEN
      l_reccount :=2;
    END;
    --dbms_output.put_line ('SALES incentive pct exists in deal_pl ' || l_reccount);
    IF l_reccount >0 THEN
      UPDATE deal SET agent_apprvl_fl ='Y' /*---- CR 4721*/
      WHERE bd_id=l_bd_id;
    END IF;
  END IF;
       --IF (upper(a_out3)='SUCCESS' AND l_dealapprfl ='Y' )THEN ----Commented by Lakshmi on 12/18/2014 for CR166557.
       --a_out1 := -1; --Added temporarilty to test CR1666557
--Fix for CR166557- Added the condition to_number (a_out1) > 0 ) to check if new version is created successfully
    IF (upper(a_out3)='SUCCESS'  AND l_dealapprfl ='Y'  AND to_number (a_out1) > 0 ) THEN
    BEGIN
      --dbms_output.put_line (' Checking for Deal Actions ');
      L_BD_ID        := TO_NUMBER (A_OUT1);
      l_bd_version_nr:=to_number (a_out2);
      --update business justification details with latest bd_id
      IF l_bus_justify_reqd_fl='Y' THEN
        UPDATE deal_bus_justify SET bd_id=l_bd_id WHERE bd_id=l_bus_justify_bd_id;
      END IF;
      --******************************************************
      --Approve Deal/Quote Deal
      --******************************************************
      --Check if line_item has rows
      BEGIN
        SELECT 1 INTO l_reccount FROM line_item WHERE bd_id =l_bd_id;
      EXCEPTION
      WHEN NO_DATA_FOUND THEN
        l_reccount :=0;
      WHEN TOO_MANY_ROWS THEN
        l_reccount :=2;
      END;
      IF l_reccount                                >0 THEN
        set_deal_actions_rec.line_item_line_exists:='Y';
      ELSE
        set_deal_actions_rec.line_item_line_exists:='N';
      END IF;
      --check if bundle Exists
      BEGIN
        SELECT 1
        INTO l_reccount
        FROM line_item
        WHERE bd_id      =l_bd_id
        AND line_type_cd ='BD';
      EXCEPTION
      WHEN NO_DATA_FOUND THEN
        l_reccount :=0;
      WHEN TOO_MANY_ROWS THEN
        l_reccount :=2;
      END;
      IF l_reccount                        >0 THEN
        set_deal_actions_rec.bundle_exists:='Y';
      ELSE
        set_deal_actions_rec.bundle_exists:='N';
      END IF;
      --check if bundle line exists
      IF set_deal_actions_rec.bundle_exists='Y' THEN
        BEGIN
          SELECT 1 INTO l_reccount FROM BUNDLE_LINE WHERE bd_id=l_bd_id;
        EXCEPTION
        WHEN NO_DATA_FOUND THEN
          l_reccount :=0;
        WHEN TOO_MANY_ROWS THEN
          l_reccount :=2;
        END;
        IF l_reccount                         >0 THEN
          set_deal_actions_rec.bd_line_exists:='Y';
        ELSE
          set_deal_actions_rec.bd_line_exists:='N';
        END IF;
      END IF;
      --check if line_disc_scale rows exists
      --check if bundle exists
      BEGIN
        SELECT 1 INTO l_reccount FROM line_disc_scale WHERE bd_id =l_bd_id;
      EXCEPTION
      WHEN NO_DATA_FOUND THEN
        l_reccount :=0;
      WHEN TOO_MANY_ROWS THEN
        l_reccount :=2;
      END;
      IF l_reccount                                 >0 THEN
        set_deal_actions_rec.line_disc_lines_exists:='Y';
      ELSE
        set_deal_actions_rec.line_disc_lines_exists:='N';
      END IF;
      --check if bundle exists then bundle_lines table should have rows with item_prog_cd='Y' i.e. bundle lines should  be
      --authorized.
      IF set_deal_actions_rec.bd_line_exists='Y' THEN
        BEGIN
          SELECT 1
          INTO l_reccount
          FROM bundle_line
          WHERE bd_id      =l_bd_id
          AND item_prog_cd ='N'
          ;
        EXCEPTION
        WHEN NO_DATA_FOUND THEN
          l_reccount :=0;
        WHEN TOO_MANY_ROWS THEN
          l_reccount :=2;
        END;
        IF l_reccount                               >0 THEN
          set_deal_actions_rec.bd_lines_authorized :='N';
        ELSE
          set_deal_actions_rec.bd_lines_authorized :='Y';
        END IF;
      ELSE
        set_deal_actions_rec.bd_lines_authorized :='N';
      END IF;
      L_RECCOUNT:=0;
      --check LINE_ITEM lines which are not authorized
      IF set_deal_actions_rec.line_item_line_exists ='Y' THEN
        BEGIN
          SELECT 1
          INTO l_reccount
          FROM line_item
          WHERE bd_id      =l_bd_id
          AND line_prog_cd ='N';
        EXCEPTION
        WHEN NO_DATA_FOUND THEN
          l_reccount :=0;
        WHEN TOO_MANY_ROWS THEN
          l_reccount :=2;
        END;
        --if rows exists with unauthorized lines
        --CHECK might be required -- what if all the lines are on Hold/Denied
        IF l_reccount                                     >0 THEN
          set_deal_actions_rec.line_item_lines_authorized:='N';
          l_errors                                       :='Cannot Approve and Distribute the deal since there are Product Lines which are not authorized.';
          INSERTERROR_OUTPUT_MESSAGES ( l_bd_id, l_bd_nr, l_bd_version_nr, l_deal_prog_cd, l_bdme_aprvl_cd, l_quote_dist_cd, l_euv_stat_code, l_high_risk_fl, l_risk_reasion_desc, l_risk_desc, l_errors, c_m_type_warning, l_deal_creation_guid, NULL, NULL,l_errors);
        elsIF l_reccount                                  =0 THEN
          set_deal_actions_rec.line_item_lines_authorized:='Y';
        END IF;
      END IF;
      --Check if Line_Disc_scale rows are not authorized i.e.aut_fl='N'
      IF set_deal_actions_rec.line_disc_lines_exists ='Y' THEN
        BEGIN
          SELECT 1
          INTO l_reccount
          FROM line_disc_scale
          WHERE bd_id =l_bd_id
          AND auth_fl ='N';
        EXCEPTION
        WHEN NO_DATA_FOUND THEN
          l_reccount :=0;
        WHEN TOO_MANY_ROWS THEN
          l_reccount :=2;
        END;
        IF l_reccount                                      >0 THEN
          set_deal_actions_rec.line_item_lines_authorized :='N';
          g_user_message                                  :='Cannot Approve and Distribute the deal, Date Range details are not authorized';
          l_errors                                        :=' Check LINE_DISC_SCALE table. Auth_fl is set to N';
          INSERTERROR_OUTPUT_MESSAGES ( l_bd_id, l_bd_nr, l_bd_version_nr, l_deal_prog_cd, l_bdme_aprvl_cd, l_quote_dist_cd, l_euv_stat_code, l_high_risk_fl, l_risk_reasion_desc, l_risk_desc, l_errors, c_m_type_warning, l_deal_creation_guid, NULL, NULL,g_user_message );
        elsif l_reccount                                   =0 THEN
          set_deal_actions_rec.line_disc_lines_authorized :='Y';
        END IF;
      END IF;
      --check if reseller A exists
      BEGIN
        SELECT 1 INTO l_reccount FROM rslr_a WHERE bd_id =l_bd_id;
      EXCEPTION
      WHEN NO_DATA_FOUND THEN
        l_reccount :=0;
      WHEN TOO_MANY_ROWS THEN
        l_reccount :=2;
      END;
      IF l_reccount                           =0 THEN
        set_deal_actions_rec.reseller_a_added:='N';
        l_errors                             :='Cannot Approve and Distribute the deal.Please add Reseller A to the deal';
        INSERTERROR_OUTPUT_MESSAGES ( l_bd_id, l_bd_nr, l_bd_version_nr, l_deal_prog_cd, l_bdme_aprvl_cd, l_quote_dist_cd, l_euv_stat_code, l_high_risk_fl, l_risk_reasion_desc, l_risk_desc, l_errors, c_m_type_warning, l_deal_creation_guid, NULL, NULL,l_errors );
      elsif l_reccount                        >0 THEN
        set_deal_actions_rec.reseller_a_added:='Y';
      END IF;
      --check if reseller b exits
      BEGIN
        SELECT 1 INTO L_RECCOUNT FROM rslr_b WHERE BD_ID =L_BD_ID;
      EXCEPTION
      WHEN NO_DATA_FOUND THEN
        l_reccount :=0;
      WHEN TOO_MANY_ROWS THEN
        l_reccount :=2;
      END;
      IF l_reccount                           =0 THEN
        set_deal_actions_rec.reseller_B_added:='N';
        l_errors                             :='Cannot Approve and Distribute the deal.Please add Reseller B to the deal.';
        INSERTERROR_OUTPUT_MESSAGES ( l_bd_id, l_bd_nr, l_bd_version_nr, l_deal_prog_cd, l_bdme_aprvl_cd, l_quote_dist_cd, l_euv_stat_code, l_high_risk_fl, l_risk_reasion_desc, l_risk_desc, l_errors, c_m_type_warning, l_deal_creation_guid, NULL, NULL,l_errors );
      elsif l_reccount                        >0 THEN
        set_deal_actions_rec.reseller_B_added:='Y';
      END IF;
      IF ( set_deal_actions_rec.line_item_line_exists ='Y' AND set_deal_actions_rec.line_item_lines_authorized='Y' AND set_deal_actions_rec.line_disc_lines_exists='Y' AND  set_deal_actions_rec.reseller_a_added='Y' AND set_deal_actions_rec.reseller_b_added='Y' AND set_deal_actions_rec.bundle_exists='Y' AND set_deal_actions_rec.bd_line_exists='Y' AND set_deal_actions_rec.bd_lines_authorized ='Y' ) THEN
        --dbms_output.put_line (' ALL TRUE');
        l_is_all_lines_authorized                       :='Y';
      ELSIF ( set_deal_actions_rec.line_item_line_exists ='Y' AND set_deal_actions_rec.line_item_lines_authorized='Y' AND set_deal_actions_rec.line_disc_lines_exists='Y' AND set_deal_actions_rec.reseller_a_added='Y' AND set_deal_actions_rec.reseller_b_added='Y' AND set_deal_actions_rec.bundle_exists='N' ) THEN
        l_is_all_lines_authorized                       :='Y';
        --dbms_output.put_line (' NO BUNDLE EXISTS  BUT ALL LINES TRUE');
      ELSE
        l_is_all_lines_authorized:='N';
        --dbms_output.put_line (' ALL FALSE');
      END IF;
      --comment after testing.
      --dbms_output.put_line ('set_deal_actions_rec messages --------- Start');
--      dbms_output.put_line ('set_deal_actions_rec.line_item_line_exists ' || set_deal_actions_rec.line_item_line_exists);
--      dbms_output.put_line ('set_deal_actions_rec.line_item_lines_authorized ' ||set_deal_actions_rec.line_item_lines_authorized);
--      dbms_output.put_line ('set_deal_actions_rec.line_disc_lines_exists ' || set_deal_actions_rec.line_disc_lines_exists);
--      dbms_output.put_line ('set_deal_actions_rec.line_disc_lines_authorized ' ||set_deal_actions_rec.line_disc_lines_authorized);
--      dbms_output.put_line ('set_deal_actions_rec.reseller_a_added ' ||set_deal_actions_rec.reseller_a_added);
--      dbms_output.put_line ('set_deal_actions_rec.reseller_b_added ' ||set_deal_actions_rec.reseller_b_added);
--      dbms_output.put_line ('set_deal_actions_rec.bundle_exists ' ||set_deal_actions_rec.bundle_exists );
--      dbms_output.put_line ('l_is_all_lines_authorized ' || l_is_all_lines_authorized );
--      dbms_output.PUT_LINE ('set_deal_actions_rec messages --------- End');
      IF L_IS_ALL_LINES_AUTHORIZED='N' THEN
        --set the deal flags
        l_deal_prog_cd :='U';
        l_bdme_aprvl_cd:='N';
        --insert into error and output table
        --inserterror_output_messages ( l_bd_id, l_bd_nr, l_bd_version_nr, l_deal_prog_cd, l_bdme_aprvl_cd, l_quote_dist_cd, l_euv_stat_code, l_high_risk_fl, l_risk_reasion_desc, l_risk_desc, l_errors, c_m_type_warning, l_deal_creation_guid, null, null,l_errors );
        -- cannot proceed with Approve and Quote as there are lines which are not authorized.
        UPDATE DEAL D
        SET d.deal_prog_cd           = 'U',
          d.bdme_aprvl_cd            = 'N'
        WHERE d.bd_id                = to_number(a_out1);
      elsif l_is_all_lines_authorized='Y' THEN
        UPDATE deal d
        SET d.deal_prog_cd   = 'F',
          d.bdme_aprvl_cd    = 'S' ,
          d.last_save_dt     = sysdate,
          d.last_save_dt_gmt = gmtdate
        WHERE D.BD_ID        = TO_NUMBER(A_OUT1);
        l_deal_prog_cd      :='F';
        l_bdme_aprvl_cd     :='S';
        ins_deal_timings(l_bd_id,sysdate, l_deal_creator_dc,sysdate,l_deal_creator_dc,'DA01',NULL,'APPROVED','APPROVED'); ---Auto event for authorizing/Approving products---
      END IF;
      --quote deal
      --DBMS_output.put_line('Testing quote flags  ----');
--      DBMS_output.put_line('l_high_risk_fl  ----'||L_HIGH_RISK_FL);
--      DBMS_output.put_line('l_euv_at_won_fl  ----'||l_euv_at_won_fl);
--      DBMS_output.put_line('L_QUOTED_BY_USER_ID  ----'||L_QUOTED_BY_USER_ID);
--      DBMS_output.put_line(' first L_SEND_QUOTE_FL  ----'||L_SEND_QUOTE_FL);
      IF (l_dealquotefl ='Y' AND l_dealapprfl ='Y' AND l_is_all_lines_authorized='Y') THEN
        --dbms_output.put_line ('Deal to be quoted...');
     --dbms_output.PUT_LINE('Value of L_HIGH_RISK_FL is: 3 '||L_HIGH_RISK_FL);
        --IF L_HIGH_RISK_FL         ='N' THEN
        IF (L_HIGH_RISK_FL         ='N'  OR ( L_HIGH_RISK_FL         ='Y'  AND l_euv_at_won_fl='Y' ))THEN
         IF L_QUOTED_BY_USER_ID IS NULL THEN
         l_quoted_by_user_id := 'bmidef';
         END IF;
            L_SEND_QUOTE_FL      :='Y';
            --L_ERRORS             :='Cannot quote the deal. Quoted By Employee is not provided';
            --L_MSG_TYPE           :=C_M_TYPE_ERROR;
            --INSERTERROR_OUTPUT_MESSAGES (L_BD_ID,L_BD_NR,L_BD_VERSION_NR, L_DEAL_PROG_CD,L_BDME_APRVL_CD,L_QUOTE_DIST_CD,L_EUV_STAT_CODE, --L_HIGH_RISK_FL,L_RISK_REASION_DESC,L_RISK_DESC,L_ERRORS,L_MSG_TYPE, L_DEAL_CREATION_GUID,NULL,NULL,L_ERRORS);
          --ELSE
            --modified by Harsh Shah 21-dec-2013
            -- added generate opg flag from EDMS.
            SENDQUOTE (L_BD_ID,L_BD_NR,L_BD_VERSION_NR,L_QUOTED_BY_USER_ID,'Y','Y',L_GenerateOPGNbrFl,L_SEND_QUOTE_FL,L_NEW_OPG_NUM);
          --END IF;
        ELSE
          L_SEND_QUOTE_FL:='N';
        END IF;
        --DBMS_output.put_line(' second L_SEND_QUOTE_FL  ----'||L_SEND_QUOTE_FL);

        /* IF (L_HIGH_RISK_FL         ='Y' AND ( L_DEALSOURCEDEALTYPE=C_LOW_TOUCH_DEALTYPE_DESC AND l_euv_at_won_fl='Y' ))THEN
        DBMS_OUTPUT.PUT_LINE('Setting Send Quote Flag to Y for High Risk Low Touch Deal');
         IF L_QUOTED_BY_USER_ID IS NULL THEN
         l_quoted_by_user_id := 'bmidef';
         END IF;
            L_SEND_QUOTE_FL      :='Y';
            --L_ERRORS             :='Cannot quote the deal. Quoted By Employee is not provided';
            --L_MSG_TYPE           :=C_M_TYPE_ERROR;
            --INSERTERROR_OUTPUT_MESSAGES (L_BD_ID,L_BD_NR,L_BD_VERSION_NR, L_DEAL_PROG_CD,L_BDME_APRVL_CD,L_QUOTE_DIST_CD,L_EUV_STAT_CODE, --L_HIGH_RISK_FL,L_RISK_REASION_DESC,L_RISK_DESC,L_ERRORS,L_MSG_TYPE, L_DEAL_CREATION_GUID,NULL,NULL,L_ERRORS);
          --ELSE
            --modified by Harsh Shah 21-dec-2013
            -- added generate opg flag from EDMS.
            SENDQUOTE (L_BD_ID,L_BD_NR,L_BD_VERSION_NR,L_QUOTED_BY_USER_ID,'Y','Y',L_GenerateOPGNbrFl,L_SEND_QUOTE_FL,L_NEW_OPG_NUM);
          --END IF;
        ELSE
          L_SEND_QUOTE_FL:='N';
        END IF; */
        --if the record inserted successfully
        IF l_send_quote_fl ='Y' THEN
          l_deal_prog_cd  :='F';
          l_bdme_aprvl_cd :='S';
          l_quote_dist_cd :='A';
          UPDATE deal d
          SET d.deal_prog_cd   = 'F',
            d.bdme_aprvl_cd    = 'S' ,
            D.OPG_NUM          =L_NEW_OPG_NUM,
            D.DEAL_RISK_FL     =L_HIGH_RISK_FL,
            d.last_save_dt     = sysdate,
            d.last_save_dt_gmt = gmtdate
          WHERE D.BD_ID        = TO_NUMBER(A_OUT1);
          l_deal_prog_cd      :='F';
          l_bdme_aprvl_cd     :='S';
          l_msg_type          :='SUCCESS';
          --L_ERRORS            :='SUCCESS';
          l_errors:=' Deal Created Successfully, New Deal Number: '||l_bd_nr||' , New BD_ID :' || L_BD_ID ||'  ,New BD Version Nr :' || a_out2;
          ins_deal_timings(l_bd_id,sysdate, L_QUOTEDBYEMPNR,sysdate,L_QUOTEDBYEMPNR,'DQ01',NULL,'DISTRIB','DISTRIB'); ---Auto event for Quote deal---
          -- ins_deal_timings(l_bd_id,sysdate, L_QUOTEDBYEMPNR,sysdate,L_QUOTEDBYEMPNR,'DD01',NULL,'QUOTED','QUOTED'); ---Auto event for Quote deal---
          INSERTERROR_OUTPUT_MESSAGES (L_BD_ID,L_BD_NR,L_BD_VERSION_NR, L_DEAL_PROG_CD,L_BDME_APRVL_CD,L_QUOTE_DIST_CD,L_EUV_STAT_CODE, L_HIGH_RISK_FL,L_RISK_REASION_DESC,L_RISK_DESC,L_ERRORS,L_MSG_TYPE, L_DEAL_CREATION_GUID,NULL,NULL,L_ERRORS);
        elsif (l_high_risk_fl='Y' AND l_euv_at_won_fl = 'Y') THEN--Added the check: l_euv_at_won_fl = 'Y' on 3/5/2014.
        l_errors:= 'EUV required at WON, Please update the EUV details.';
        l_msg_type :='WARNING';
          INSERTERROR_OUTPUT_MESSAGES (L_BD_ID,L_BD_NR,L_BD_VERSION_NR, L_DEAL_PROG_CD,L_BDME_APRVL_CD,L_QUOTE_DIST_CD,L_EUV_STAT_CODE, L_HIGH_RISK_FL,L_RISK_REASION_DESC,L_RISK_DESC,L_ERRORS,L_MSG_TYPE, L_DEAL_CREATION_GUID,NULL,NULL,L_ERRORS);
          l_deal_prog_cd   :='F';
          l_bdme_aprvl_cd  :='S';
          l_quote_dist_cd  :='N';
          UPDATE deal d
          SET d.deal_prog_cd   = 'F',
            d.bdme_aprvl_cd    = 'S' ,
            D.DEAL_RISK_FL     =L_HIGH_RISK_FL,
            d.last_save_dt     = sysdate,
            d.last_save_dt_gmt = gmtdate
          WHERE D.BD_ID        = TO_NUMBER(A_OUT1);
          l_msg_type          :='SUCCESS';
          --L_ERRORS            :='SUCCESS';
          l_errors:=' Deal Created Successfully, New Deal Number: '||l_bd_nr||' , New BD_ID :' || L_BD_ID ||'  ,New BD Version Nr :' || a_out2;
          inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr, l_deal_prog_cd,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code, l_high_risk_fl,l_risk_reasion_desc,l_risk_desc,l_errors,l_msg_type, l_deal_creation_guid,NULL,NULL,l_errors);
          l_msg_type :='WARNING';
          --CR2916
          L_ERRORS :='Deal is approved but not quoted as it is assessed to be high risk. Please perform EUV in Eclipse';
          INSERTERROR_OUTPUT_MESSAGES (L_BD_ID,L_BD_NR,L_BD_VERSION_NR, L_DEAL_PROG_CD,L_BDME_APRVL_CD,L_QUOTE_DIST_CD,L_EUV_STAT_CODE, L_HIGH_RISK_FL,L_RISK_REASION_DESC,L_RISK_DESC,L_ERRORS,L_MSG_TYPE, L_DEAL_CREATION_GUID,NULL,NULL,L_ERRORS);
        ELSE
          --if the record couldn't be inserted
          l_deal_prog_cd :='F';
          l_bdme_aprvl_cd:='S';
          l_quote_dist_cd:='N';
          l_msg_type     :='WARNING';
          l_errors       :='Unable to quote the deal';
          inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr, l_deal_prog_cd,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code, l_high_risk_fl,l_risk_reasion_desc,l_risk_desc,l_errors,l_msg_type, l_deal_creation_guid,NULL,NULL,l_errors);
        END IF;
      END IF;
    END;
  elsif (upper(a_out3)='SUCCESS' AND l_dealapprfl ='N' )THEN
    l_bd_id          := to_number (a_out1);
    l_bd_version_nr  :=to_number (a_out2);
    --new version is created but cannot be approved as per the flag.
    l_deal_prog_cd :='U';
    l_bdme_aprvl_cd:='N';
    l_quote_dist_cd:='N';
    l_msg_type     :='SUCCESS';
    L_ERRORS       := 'New version of deal is created but cannot be approved as per the Deal Actions provided' ;
    inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr, l_deal_prog_cd,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code, l_high_risk_fl,l_risk_reasion_desc,l_risk_desc,l_errors,l_msg_type, l_deal_creation_guid,NULL,NULL,l_errors);
    --return all results
    --OPEN p_result FOR SELECT * FROM gt_edms_smqt_err_results order by msg_type DESC;
    --COMMIT;
  elsif (to_number(l_dealvertocreate)=0) THEN
    l_deal_prog_cd                  :='U';
    l_bdme_aprvl_cd                 :='N';
    l_quote_dist_cd                 :='N';
    l_msg_type                      :='SUCCESS';
    l_errors:='Deal Created Successfully, New Deal Number: '||l_bd_nr||', New BD_ID :' || L_BD_ID ||', New BD Version Nr : 0' ;
    --l_errors                        :='SUCCESS';
    -- insert into error table and output table.
    inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr,l_deal_prog_cd ,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code,l_high_risk_fl, l_risk_reasion_desc,l_risk_desc,l_errors,l_msg_type,l_deal_creation_guid, NULL,NULL,l_errors);
    --OPEN p_result FOR SELECT * FROM gt_edms_smqt_err_results order by msg_type DESC;
    --COMMIT;
  elsif (to_number(l_dealvertocreate)<>0) THEN
    IF ( a_out3                      IS NULL OR a_out3='' ) THEN
      l_errors                       :='Unable to create new version of deal ';
      l_msg_type                     :='ERROR';
      --dbms_output.PUT_LINE(' A_OUT3' || a_out3);
      --dbms_output.PUT_LINE(' A_OUT4' || a_out4);
      --dbms_output.PUT_LINE(' A_OUT5' || a_out5);
      --dbms_output.PUT_LINE(' A_OUT6' || a_out6);
      --dbms_output.PUT_LINE(' A_OUT7' || a_out7);
      -- insert into error table and output table.
      inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr, l_deal_prog_cd ,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code, l_high_risk_fl, l_risk_reasion_desc,l_risk_desc,l_errors,l_msg_type, l_deal_creation_guid, NULL,NULL,l_errors);
      inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr, l_deal_prog_cd ,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code, l_high_risk_fl, l_risk_reasion_desc,l_risk_desc,a_out7,l_msg_type, l_deal_creation_guid, NULL,NULL,NULL);
      inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr, l_deal_prog_cd ,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code, l_high_risk_fl, l_risk_reasion_desc,l_risk_desc,a_out6,l_msg_type, l_deal_creation_guid, NULL,NULL,NULL);
      inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr, l_deal_prog_cd ,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code, l_high_risk_fl, l_risk_reasion_desc,l_risk_desc,a_out5,l_msg_type, l_deal_creation_guid, NULL,NULL,NULL);
      inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr, l_deal_prog_cd ,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code, l_high_risk_fl, l_risk_reasion_desc,l_risk_desc,a_out4,l_msg_type, l_deal_creation_guid, NULL,NULL,NULL);

    ELSE
      l_errors  :='Unable to create new version of deal Oracle Error Code is ' || a_out3 ;
      l_msg_type:='ERROR';
      --Commented the below code as part of  US 8975 as these insertins will be rolled back when reject deal is raised.
      /*
        inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr, l_deal_prog_cd ,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code, l_high_risk_fl, l_risk_reasion_desc,l_risk_desc,a_out7,l_msg_type, l_deal_creation_guid, NULL,NULL,NULL);
      inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr, l_deal_prog_cd ,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code, l_high_risk_fl, l_risk_reasion_desc,l_risk_desc,a_out6,l_msg_type, l_deal_creation_guid, NULL,NULL,NULL);
      inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr, l_deal_prog_cd ,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code, l_high_risk_fl, l_risk_reasion_desc,l_risk_desc,a_out5,l_msg_type, l_deal_creation_guid, NULL,NULL,NULL);
      inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr, l_deal_prog_cd ,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code, l_high_risk_fl, l_risk_reasion_desc,l_risk_desc,a_out4,l_msg_type, l_deal_creation_guid, NULL,NULL,NULL);
      */
      raise reject_deal;
    END IF;
    --return all results
    --  OPEN p_result FOR SELECT * FROM gt_edms_smqt_err_results order by msg_type DESC;
  END IF;
  --Route Deal

  BEGIN
    SELECT euv_comp_fl INTO l_euv_comp_fl FROM deal WHERE bd_id = l_bd_id;
    --dbms_output.put_line('euv comp fl :'||l_euv_comp_fl);
  IF (l_dealroutefl         ='Y' ) THEN--AND to_number(l_dealvertocreate)>=0 ) THEN
      --dbms_output.PUT_LINE('Route flag is true');
      IF l_dealvertocreate    >0 THEN
      --dbms_output.PUT_LINE('Version to create >0');
        IF l_high_risk_fl     ='N' AND (l_dealsourcedealtype = c_high_touch_dealtype_desc OR l_dealsourcedealtype = c_low_touch_dealtype_desc OR l_dealsourcedealtype= c_ht_re_route_dealtype_desc) THEN
        --dbms_output.PUT_LINE('High risk flage is true');
          IF (l_euv_at_won_fl = 'Y') THEN --euv required at won
          --dbms_output.PUT_LINE('l_euv_at_won_fl is true');
            l_msg_type       :='INFO';
            l_errors         :='Routing LowRisk Deal as EUV required at WON' ;
            inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr,l_deal_prog_cd ,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code,l_high_risk_fl, l_risk_reasion_desc,l_risk_desc,l_errors,l_msg_type,l_deal_creation_guid, NULL,NULL,l_errors);
            routedeal(l_bd_id,l_eclipse_user_id,p_route_deal_messages);
            --dbms_output.PUT_LINE ('deal Routed as euv required at WON');
          ELSE --euv required at quote
          --dbms_output.PUT_LINE('EUV at quote');
            IF l_euv_comp_fl ='Y' THEN
              l_msg_type    :='INFO';
              l_errors      :='Routing LowRisk Deal as EUV required at Quote and euv is completed' ;
              inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr,l_deal_prog_cd ,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code,l_high_risk_fl, l_risk_reasion_desc,l_risk_desc,l_errors,l_msg_type,l_deal_creation_guid, NULL,NULL,l_errors);
              routedeal(l_bd_id,l_eclipse_user_id,p_route_deal_messages);
            ELSE --This is a rare scenario as all low risk deals are certified by sadmins as euv completed
              l_msg_type :='WARNING';
              l_errors   :='LowRisk Deal not routed as EUV required at quote and EUV not completed' ;
              --dbms_output.PUT_LINE ('LowRisk Deal not routed as EUV required at quote and EUV not completed');
              inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr,l_deal_prog_cd ,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code,l_high_risk_fl, l_risk_reasion_desc,l_risk_desc,l_errors,l_msg_type,l_deal_creation_guid, NULL,NULL,l_errors);
            END IF;
          END IF;
        ELSE
        --dbms_output.PUT_LINE('Before EUV at won');
          IF (l_euv_at_won_fl = 'Y') THEN --euv required at won
          --dbms_output.PUT_LINE('EUV at won');
            l_msg_type       :='INFO';
            l_errors         :='Routing HighRisk Deal as EUV required at WON' ;
            inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr,l_deal_prog_cd ,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code,l_high_risk_fl, l_risk_reasion_desc,l_risk_desc,l_errors,l_msg_type,l_deal_creation_guid, NULL,NULL,l_errors);
            routedeal(l_bd_id,l_eclipse_user_id,p_route_deal_messages);
            --dbms_output.PUT_LINE ('deal Routed as euv required at WON');
          ELSE --euv required at quote
            l_msg_type :='WARNING';
            --l_errors   :='Deal is not routed as it is a high risk deal' ;
            l_errors :='Deal is High Risk and EUV required at Quote, Update EUV is required before deal can be routed' ; --changes suggested by Lyn in Nov release
            --dbms_output.PUT_LINE ('HighRisk Deal not routed , Need EUV update');
            inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr,l_deal_prog_cd ,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code,l_high_risk_fl, l_risk_reasion_desc,l_risk_desc,l_errors,l_msg_type,l_deal_creation_guid, NULL,NULL,l_errors);
           END IF;
        END IF;
      ELSE
        l_msg_type :='WARNING';
        l_errors   :='Can not route the deal as it is a version0 deal' ; --changes suggested by Lyn in Nov release
        inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr,l_deal_prog_cd ,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code,l_high_risk_fl, l_risk_reasion_desc,l_risk_desc,l_errors,l_msg_type,l_deal_creation_guid, NULL,NULL,l_errors);
      END IF;
    END IF;
  EXCEPTION
  WHEN OTHERS THEN
    l_msg_type :='WARNING';
    l_errors   :='Error in routing' ;
    inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr,l_deal_prog_cd ,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code,l_high_risk_fl, l_risk_reasion_desc,l_risk_desc,l_errors,l_msg_type,l_deal_creation_guid, NULL,NULL,l_errors);
  END;
  --dbms_output.PUT_LINE('Calling update_guid_for_errors');
  ---End of New route deal logic as per CR4322 Aug release
  --update GUID for the debugging the errors
  update_guid_for_errors (l_deal_creation_guid,l_bd_id,l_bd_nr,l_bd_version_nr);
  --Update Global Temporary table rows with updated flags,high risk reasons, high risk flag
  UPDATE gt_edms_smqt_err_results
  SET DEAL_PROG_CD=L_DEAL_PROG_CD,
    BDME_APRVL_CD =L_BDME_APRVL_CD,
    QUOTE_DIST_CD =L_QUOTE_DIST_CD,
    RISK_DESC     =DECODE(l_high_risk_fl,'Y',L_RISK_REASON,NULL),
    HIGH_RISK_FL  =L_HIGH_RISK_FL,
    bd_id         =l_bd_id,
    BD_NR         =L_BD_NR,
    bd_version_nr =l_bd_version_nr;
    --dbms_output.PUT_LINE('UPDATE gt_edms_smqt_err_results done');
  --delete NOROUTE entry
  DELETE
  FROM GT_EDMS_SMQT_ERR_RESULTS
  WHERE ERROR_desc='NOROUTE';
     --dbms_output.PUT_LINE('delete from GT_EDMS_SMQT_ERR_RESULTS done');

     --Check if any version of deal exists in deal table.
    BEGIN
    SELECT 1 INTO deal_cnt FROM deal
    WHERE bd_nr=l_bd_nr;
    EXCEPTION
    WHEN NO_DATA_FOUND THEN
    deal_cnt :=0;
    WHEN TOO_MANY_ROWS THEN
    deal_cnt :=2;
    END;

    IF deal_cnt > 0 THEN
    UPDATE gt_edms_smqt_err_results SET msg_type='WARNING';
    l_errors := 'Deal Created Successfully';
  --   inserterror_output_messages ( l_bd_id,L_BD_NR, l_bd_version_nr,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, 'SUCCESS', i_deal_creation_guid, NULL,NULL,l_errors);
  SELECT DECODE(l_high_risk_fl,'Y',L_RISK_REASON,NULL) INTO l_risk_desc FROM DUAL;
          inserterror_output_messages ( l_bd_id,L_BD_NR, l_bd_version_nr,l_deal_prog_cd ,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code,l_high_risk_fl, l_risk_reasion_desc,l_risk_desc,l_errors, 'SUCCESS', i_deal_creation_guid, NULL,NULL,l_errors);
    END IF;

  DELETE
  FROM edms_deal_error_report
  WHERE deal_creation_guid=l_deal_creation_guid
  AND ERROR_MSG           = 'NOROUTE';
  --dbms_output.PUT_LINE('delete from edms_deal_error_report done');

  --get data into cursor,

  OPEN P_RESULT FOR SELECT * FROM GT_EDMS_SMQT_ERR_RESULTS order by MSG_TYPE DESC ;


  --Returning product details to BMI-Web Service
  --by Harsh Shah 17-Jan-2014
  OPEN p_prod_details FOR
  SELECT line_nr,
  line_type_cd,
  assoc_pl_cd,
  prod_gnrc_nr_tx,
  prod_gnrc_desc_tx ,
  NULL config_id,
  NULL CONFIG_SRC,
  NULL SRC_BUNDLE_DESC_TX,
  BMI_DOC_NO
  FROM line_item WHERE bd_id = l_bd_id AND line_type_cd <> 'BD'
  UNION
  SELECT l.line_nr,
    l.line_type_cd,
    l.assoc_pl_cd,
    l.prod_gnrc_nr_tx,
    l.prod_gnrc_desc_tx ,
    b.config_id,
    b.CONFIG_SRC,
    l.SRC_BUNDLE_DESC_TX,
    L.BMI_DOC_NO
  FROM line_item l,
    bundle b
  WHERE l.bd_id      = l_bd_id
  AND l.line_type_cd = 'BD'
  AND b.bd_id        = l.bd_id
  AND l.line_nr      =b.line_nr ;

  --by Harsh Shah 7-Mar-2014
    IF UnlockDeal(L_BD_NR,l_errors)='N'  THEN
                l_errors:='Deal could not be unlocked';
                inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr,l_deal_prog_cd ,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code,l_high_risk_fl, l_risk_reasion_desc,l_risk_desc,l_errors,'WARNING',l_deal_creation_guid, NULL,NULL,g_user_message);
             ELSE
                l_errors:='Deal Unlocked successfully';
                inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr,l_deal_prog_cd ,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code,l_high_risk_fl, l_risk_reasion_desc,l_risk_desc,l_errors,'WARNING',l_deal_creation_guid, NULL,NULL,g_user_message);
            END IF;

  COMMIT;

  DELETE FROM GT_EDMS_SMQT_ERR_RESULTS WHERE BD_ID=L_BD_ID;

  unauthorized_zero_version_deal (l_bd_nr);
  --dbms_output.put_line (' 103');
  COMMIT;
  end_time := dbms_utility.get_time();
  INSERTERROR_OUTPUT_MESSAGES ( (end_time-start_time)/100, NULL, NULL, NULL, NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,l_deal_creation_guid,NULL, NULL,'BMICREATENEWDEAL_MODULE');
EXCEPTION

--IM19726863---> Eclipse deal V0 with no products
WHEN user_cancelled THEN
        delete from eclipse.GT_XML_BUNDLE ;
        delete from eclipse.GT_XML_BUNDLE_Line;
        delete from eclipse.GT_XML_line_item;
        DELETE FROM deal WHERE bd_id=l_bd_id;
        l_msg_type:='ERROR'; --Added for Us 8975
        l_errors :='User Cancelled - Version 0 deal has been deleted';
        inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr,l_deal_prog_cd ,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code,l_high_risk_fl, l_risk_reasion_desc,l_risk_desc,l_errors,l_msg_type,l_deal_creation_guid, NULL,NULL,l_errors);
        commit;

WHEN TEMP_TABLE_FAILURE THEN
    --l_errors:='Unable to fill temp table or no data in XML';
    l_errors:='Deal is not created as  eclipse is unable to fill temp tables or no data in XML';
    l_bd_id :=0;
    l_bd_nr :=0;
    l_bd_version_nr :=0;
    l_msg_type:='ERROR';
     inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr,l_deal_prog_cd ,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code,l_high_risk_fl, l_risk_reasion_desc,l_risk_desc,l_errors,l_msg_type,l_deal_creation_guid, NULL,NULL,l_errors);

     --delete temp table data      by Harsh Shah 23-Jan-2015

    --delete temp table data      by Harsh Shah 30-JAN-2015
    delete from eclipse.GT_XML_BUNDLE ;
    delete from eclipse.GT_XML_BUNDLE_Line;
    delete from eclipse.GT_XML_line_item;
        commit; --Added as part of US 8975

WHEN reject_deal THEN
  BEGIN
  --dbms_output.put_line (l_errors);
    ROLLBACK;

    --delete temp table data      by Harsh Shah 23-Jan-2015
    --US7832
    --delete temp table data      by Harsh Shah 30-JAN-2015
    delete from eclipse.GT_XML_BUNDLE ;
    delete from eclipse.GT_XML_BUNDLE_Line;
        delete from eclipse.GT_XML_line_item;

    --by Harsh Shah 7-Mar-2014
    --dbms_output.put_line ('reject deal ');

     --insert into error table and output table.
    --Assigned 0 to these parameters, to prevent display of bd_id, bd_nr and bd_version_nr when Reseller B is not added and deal creation fails.
    --Below is the error message
    --Cannot Create Deal. Unable to Add Reseller B for the  Partner Pro ID : 2-5OB-88, Contract ID : , Country : SG , Region : AP Deal cannot be created.
    --Unable to add Reseller B
    l_bd_id :=0;
    l_bd_nr :=0;
    l_bd_version_nr :=0;
     inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr,l_deal_prog_cd ,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code,l_high_risk_fl, l_risk_reasion_desc,l_risk_desc,l_errors,l_msg_type,l_deal_creation_guid, NULL,NULL,l_errors);

/* Remove the unlock message
    IF UnlockDeal(L_BD_NR,l_errors)='N'  THEN
                l_errors:='Deal could not be unlocked';
                inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr,l_deal_prog_cd ,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code,l_high_risk_fl, l_risk_reasion_desc,l_risk_desc,l_errors,'WARNING',l_deal_creation_guid, NULL,NULL,g_user_message);
             else
                l_errors:='Deal Unlocked successfully';
                inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr,l_deal_prog_cd ,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code,l_high_risk_fl, l_risk_reasion_desc,l_risk_desc,l_errors,'WARNING',l_deal_creation_guid, NULL,NULL,g_user_message);
            END IF;
  */

--Deleting deal       (if it got created)
--delete from deal where bd_id=l_bd_id;

    --delete NOROUTE entry
    DELETE
    FROM GT_EDMS_SMQT_ERR_RESULTS
    WHERE ERROR_desc='NOROUTE' ;
    DELETE
    FROM edms_deal_error_report
    WHERE deal_creation_guid=l_deal_creation_guid
    AND ERROR_MSG           = 'NOROUTE';
    unauthorized_zero_version_deal (l_bd_nr);
    ----dbms_output.put_line (' 104');
    UPDATE gt_edms_smqt_err_results
    SET DEAL_PROG_CD=L_DEAL_PROG_CD,
      BDME_APRVL_CD =L_BDME_APRVL_CD,
      QUOTE_DIST_CD =L_QUOTE_DIST_CD,
      bd_id         =0,
      bd_nr         =0,
      bd_version_nr =0;
    --where bd_id     =l_bd_id;

    --Check if any version of deal exists in deal table.
    --- Commented the below code as the below query always not return any data as l_bd_nr =0 (This block is not required) --Addded as a part of US 8975.
    /*
    BEGIN
    SELECT 1 INTO deal_cnt FROM deal
    WHERE bd_nr=l_bd_nr;
    EXCEPTION
    WHEN NO_DATA_FOUND THEN
    deal_cnt :=0;
    WHEN TOO_MANY_ROWS THEN
    deal_cnt :=2;
    END;

    IF deal_cnt > 0 THEN
    UPDATE gt_edms_smqt_err_results SET msg_type='WARNING';
    l_errors := 'Deal Created Successfully';
     inserterror_output_messages ( l_bd_id,l_bd_nr, l_bd_version_nr,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, 'SUCCESS', i_deal_creation_guid, NULL,NULL,l_errors);
    END IF; */


     --update GUID for the debugging the errors
    update_guid_for_errors (l_deal_creation_guid,l_bd_id,l_bd_nr,l_bd_version_nr);
    OPEN P_RESULT FOR SELECT * FROM GT_EDMS_SMQT_ERR_RESULTS order by MSG_TYPE DESC;
    OPEN p_prod_details FOR SELECT line_nr,
    line_type_cd,
    assoc_pl_cd,
    prod_gnrc_nr_tx,
    prod_gnrc_desc_tx ,
    NULL config_id,
    NULL CONFIG_SRC,
    NULL SRC_BUNDLE_DESC_TX FROM line_item WHERE 1=2;
    --COMMIT;
    --DELETE FROM GT_EDMS_SMQT_ERR_RESULTS WHERE BD_ID=L_BD_ID;

    --delete temp table data      by Harsh Shah 23-Jan-2015
    --delete temp table data      by Harsh Shah 30-JAN-2015
    delete from eclipse.GT_XML_BUNDLE ;
    delete from eclipse.GT_XML_BUNDLE_Line;
        delete from eclipse.GT_XML_line_item;

    COMMIT;
  END;
WHEN reject_won_lost_update THEN
  BEGIN
    ROLLBACK;

    --by Harsh Shah 7-Mar-2014
    IF UnlockDeal(L_BD_NR,l_errors)='N'  THEN
                l_errors:='Deal could not be unlocked';
                inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr,l_deal_prog_cd ,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code,l_high_risk_fl, l_risk_reasion_desc,l_risk_desc,l_errors,'WARNING',l_deal_creation_guid, NULL,NULL,g_user_message);
             ELSE
                l_errors:='Deal Unlocked successfully';
                inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr,l_deal_prog_cd ,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code,l_high_risk_fl, l_risk_reasion_desc,l_risk_desc,l_errors,'WARNING',l_deal_creation_guid, NULL,NULL,g_user_message);
            END IF;
    --delete NOROUTE entry
    DELETE
    FROM GT_EDMS_SMQT_ERR_RESULTS
    WHERE ERROR_desc='NOROUTE';
    DELETE
    FROM edms_deal_error_report
    WHERE deal_creation_guid=l_deal_creation_guid
    AND ERROR_MSG           = 'NOROUTE';
    unauthorized_zero_version_deal (l_bd_nr);
    --dbms_output.put_line (' 105');
    UPDATE gt_edms_smqt_err_results
    SET DEAL_PROG_CD=L_DEAL_PROG_CD,
      BDME_APRVL_CD =L_BDME_APRVL_CD,
      quote_dist_cd =l_quote_dist_cd,
      bd_id         =l_bd_id,
      bd_nr         =l_bd_nr,
      bd_version_nr =l_bd_version_nr;

      --Check if any version of deal exists in deal table.
    BEGIN
    SELECT 1 INTO deal_cnt FROM deal
    WHERE bd_nr=l_bd_nr;
    EXCEPTION
    WHEN NO_DATA_FOUND THEN
    deal_cnt :=0;
    WHEN TOO_MANY_ROWS THEN
    deal_cnt :=2;
    END;

    IF deal_cnt > 0 THEN
    UPDATE gt_edms_smqt_err_results SET msg_type='WARNING';
    l_errors := 'Deal Created Successfully';
     inserterror_output_messages ( l_bd_id,l_bd_nr, l_bd_version_nr,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, 'SUCCESS', i_deal_creation_guid, NULL,NULL,l_errors);
    END IF;

    --insert into error table and output table.
    inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr,l_deal_prog_cd ,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code,l_high_risk_fl, l_risk_reasion_desc,l_risk_desc,l_errors,l_msg_type,l_deal_creation_guid, NULL,NULL,l_errors);
    --SELECT COUNT(*) INTO l_eclipse_user_id FROM gt_edms_smqt_err_results;
    --update GUID for the debugging the errors
    update_guid_for_errors (l_deal_creation_guid,l_bd_id,l_bd_nr,l_bd_version_nr);
    OPEN P_RESULT FOR SELECT * FROM GT_EDMS_SMQT_ERR_RESULTS order by MSG_TYPE DESC;
    OPEN p_prod_details FOR SELECT line_nr,
    line_type_cd,
    assoc_pl_cd,
    prod_gnrc_nr_tx,
    prod_gnrc_desc_tx ,
    NULL config_id,
    NULL CONFIG_SRC,
    NULL SRC_BUNDLE_DESC_TX FROM line_item WHERE 1=2;
    COMMIT;
    DELETE FROM GT_EDMS_SMQT_ERR_RESULTS WHERE BD_ID=L_BD_ID;
    COMMIT;
  END;
WHEN reject_deal_bundles THEN
  BEGIN
    --delete NOROUTE entry

    --by Harsh Shah 7-Mar-2014
    IF UnlockDeal(L_BD_NR,l_errors)='N'  THEN
                l_errors:='Deal could not be unlocked';
                inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr,l_deal_prog_cd ,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code,l_high_risk_fl, l_risk_reasion_desc,l_risk_desc,l_errors,'WARNING',l_deal_creation_guid, NULL,NULL,g_user_message);
             ELSE
                l_errors:='Deal Unlocked successfully';
                inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr,l_deal_prog_cd ,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code,l_high_risk_fl, l_risk_reasion_desc,l_risk_desc,l_errors,'WARNING',l_deal_creation_guid, NULL,NULL,g_user_message);
            END IF;
    DELETE
    FROM GT_EDMS_SMQT_ERR_RESULTS
    WHERE ERROR_desc='NOROUTE' ;
    DELETE
    FROM edms_deal_error_report
    WHERE deal_creation_guid=l_deal_creation_guid
    AND ERROR_MSG           = 'NOROUTE';
    unauthorized_zero_version_deal (l_bd_nr);
    ----dbms_output.put_line (' 104');
    UPDATE gt_edms_smqt_err_results
    SET DEAL_PROG_CD=L_DEAL_PROG_CD,
      BDME_APRVL_CD =L_BDME_APRVL_CD,
      QUOTE_DIST_CD =L_QUOTE_DIST_CD,
      bd_id         =0,
      bd_nr         =0,
      bd_version_nr =0;
    --where bd_id     =l_bd_id;

    --insert into error table and output table.

    --Check if any version of deal exists in deal table.
    BEGIN
    SELECT 1 INTO deal_cnt FROM deal
    WHERE bd_nr=l_bd_nr;
    EXCEPTION
    WHEN NO_DATA_FOUND THEN
    deal_cnt :=0;
    WHEN TOO_MANY_ROWS THEN
    deal_cnt :=2;
    END;

    IF deal_cnt > 0 THEN
    UPDATE gt_edms_smqt_err_results SET msg_type='WARNING';
    l_errors := 'Deal Created Successfully';
     inserterror_output_messages ( l_bd_id,l_bd_nr, l_bd_version_nr,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, 'SUCCESS', i_deal_creation_guid, NULL,NULL,l_errors);
    END IF;

    inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr,l_deal_prog_cd ,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code,l_high_risk_fl, l_risk_reasion_desc,l_risk_desc,l_errors,l_msg_type,l_deal_creation_guid, NULL,NULL,l_errors);
    update_guid_for_errors (l_deal_creation_guid,l_bd_id,l_bd_nr,l_bd_version_nr);
    OPEN P_RESULT FOR SELECT * FROM GT_EDMS_SMQT_ERR_RESULTS order by MSG_TYPE DESC;
    OPEN p_prod_details FOR SELECT line_nr,
    line_type_cd,
    assoc_pl_cd,
    prod_gnrc_nr_tx,
    prod_gnrc_desc_tx ,
    NULL config_id,
    NULL CONFIG_SRC,
    NULL SRC_BUNDLE_DESC_TX FROM line_item WHERE 1=2;
    --COMMIT;
    --DELETE FROM GT_EDMS_SMQT_ERR_RESULTS WHERE BD_ID=L_BD_ID;
    COMMIT;
  END;
WHEN OTHERS THEN
--RAISE;
---commented as part of US 8975
--dbms_output.PUT_LINE('Others exception raised');
/*
            if UNLOCKDEAL(L_BD_NR,L_ERRORS)='N'  then
                l_errors:='Deal could not be unlocked';
                inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr,l_deal_prog_cd ,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code,l_high_risk_fl, l_risk_reasion_desc,l_risk_desc,l_errors,'WARNING',l_deal_creation_guid, NULL,NULL,g_user_message);
             ELSE
                l_errors:='Deal Unlocked successfully';
                inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr,l_deal_prog_cd ,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code,l_high_risk_fl, l_risk_reasion_desc,l_risk_desc,l_errors,'WARNING',l_deal_creation_guid, NULL,NULL,g_user_message);
            END IF;
*/

  BEGIN
    ROLLBACK;

    delete from eclipse.GT_XML_BUNDLE ;
    delete from eclipse.GT_XML_BUNDLE_Line;
    delete from eclipse.GT_XML_line_item;
    --delete NOROUTE entry
    DELETE
    FROM GT_EDMS_SMQT_ERR_RESULTS;
   -- WHERE ERROR_desc='NOROUTE' ;
    DELETE
    FROM edms_deal_error_report
    WHERE deal_creation_guid=l_deal_creation_guid
    AND ERROR_MSG           = 'NOROUTE';
    UNAUTHORIZED_ZERO_VERSION_DEAL (L_BD_NR);
    --dbms_output.put_line (' 106');
   -- l_errors := 'An error was encountered - ' || SQLCODE || ' -ERROR- ' || sqlerrm || '. Error at Line : ' || dbms_utility.format_error_backtrace();
    --dbms_output.put_line (L_ERRORS);
    --No data found message from GetSMQTXml function where there is no data available for the guid in edms_deal_queue table.
    IF SQLCODE  =-20002 THEN
      l_errors := sqlerrm;
    ELSE
      --show the standard message
      L_ERRORS      := 'An error was encountered - ' || SQLCODE || ' -ERROR- ' || SQLERRM || '. Error at Line : ' || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE();
    --  g_user_message:='An error encountered while processing your deal. Deal Creation Failed';
    g_user_message:='An error encountered while processing your deal. Deal Creation failed -'|| substr(SQLERRM,1,100);
    END IF;
    --l_errors := 'An error was encountered - ' || SQLCODE || ' -ERROR- ' || sqlerrm || '. Error at Line : ' || dbms_utility.format_error_backtrace();
    l_msg_type:='ERROR';
--    l_bd_nr   :=-1;
--    l_bd_id   :=-1;
    --insert into error table and output table.

    --update GUID for the debugging the errors

    --Check if any version of deal exists in deal table.
    BEGIN
    SELECT 1 INTO deal_cnt FROM deal
    WHERE bd_nr=l_bd_nr;
    EXCEPTION
    WHEN NO_DATA_FOUND THEN
    deal_cnt :=0;
    WHEN TOO_MANY_ROWS THEN
    deal_cnt :=2;
    END;

    IF deal_cnt > 0 THEN
    ---Code changes done to delete the deal when a fatal error occurs (as a part of US 8975)
    --UPDATE gt_edms_smqt_err_results SET msg_type='WARNING';

    delete from deal where bd_nr=l_bd_nr;
    --     inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr, NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors,l_msg_type, i_deal_creation_guid, NULL,NULL,g_user_message);
     --inserterror_output_messages ( l_bd_id,l_bd_nr, l_bd_version_nr,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, 'SUCCESS', i_deal_creation_guid, NULL,NULL,l_errors);


     INSERT
                  INTO edms_deal_error_report
                    (
                      deal_creation_guid,
                      error_msg,
                      bd_nr,
                      bd_version_nr,
                      bd_id,
                      creation_dts
                    )
                    VALUES
                    (
                      i_deal_creation_guid,
                     'Deal with bd_nr - '|| l_bd_nr|| 'Is deleted as deal creation failed' ,
                      l_bd_nr,
                      l_bd_version_nr,
                      l_bd_id,
                      sysdate
                    );
    END IF;
    l_bd_id :=0;
    l_bd_nr :=0;
    l_bd_version_nr :=0;
    l_msg_type:='ERROR';
    l_errors := 'Deal Creation Failed';
    l_errors:=l_errors|| ' An error was encountered - ' || SQLCODE || ' -ERROR- ' || substr(SQLERRM,1,100) || '. Error at Line : ' || substr(DBMS_UTILITY.FORMAT_ERROR_BACKTRACE(),1,1000);
    g_user_message:='An error encountered while processing your deal. Deal Creation failed -'|| substr(SQLERRM,1,100);
 inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors,l_msg_type,l_deal_creation_guid, NULL,NULL,g_user_message);
 update_guid_for_errors (l_deal_creation_guid,l_bd_id,l_bd_nr,l_bd_version_nr);
    UPDATE gt_edms_smqt_err_results
              SET DEAL_PROG_CD=NULL,--L_DEAL_PROG_CD,
                bdme_aprvl_cd =NULL,--l_bdme_aprvl_cd,
                quote_dist_cd =NULL,--l_quote_dist_cd,
                bd_id         =l_bd_id,
                bd_nr         =l_bd_nr,
                bd_version_nr =l_bd_version_nr;

    --Return the results
    OPEN p_result FOR SELECT * FROM gt_edms_smqt_err_results order by msg_type DESC ;

    OPEN p_prod_details FOR SELECT line_nr,
    line_type_cd,
    assoc_pl_cd,
    prod_gnrc_nr_tx,
    prod_gnrc_desc_tx ,
    NULL config_id,
    NULL CONFIG_SRC,
    NULL SRC_BUNDLE_DESC_TX FROM line_item WHERE 1=2;
    COMMIT;
    DELETE FROM GT_EDMS_SMQT_ERR_RESULTS WHERE BD_ID=L_BD_ID;
    COMMIT;
    --DELETE FROM GT_EDMS_SMQT_ERR_RESULTS WHERE BD_ID=L_BD_ID;
    --COMMIT;
  END;
END BMICreateNewDeal;
    

procedure update_error_tables
(
i_deal_creation_guid IN VARCHAR2,
 i_new_bd_id               IN  DEAL.BD_ID%TYPE,
 i_new_bd_version_nr       IN  DEAL.BD_VERSION_NR%TYPE,
                            i_source_bd_nr               IN  DEAL.BD_NR%TYPE,
                            i_source_bd_version_nr       IN  DEAL.BD_VERSION_NR%TYPE,
                            i_source_bd_id       IN  DEAL.BD_ID%TYPE
)

IS

BEGIN
--dbms_output.put_line ('Updating error tables ');

--dbms_output.PUT_LINE (' new bd_id ' || i_new_bd_id || '  new bd version nr ' || I_NEW_BD_VERSION_NR);

 UPDATE gt_edms_smqt_err_results
              SET
                bd_id         =decode(i_new_bd_id,-1,i_source_bd_id,NULL,-1,i_new_bd_id),
                bd_nr         =i_source_bd_nr,
                bd_version_nr =DECODE(I_NEW_BD_VERSION_NR,-1,I_SOURCE_BD_VERSION_NR,NULL,-1,I_NEW_BD_VERSION_NR);

 UPDATE EDMS_DEAL_ERROR_REPORT
                    SET
                    bd_id         =decode(i_new_bd_id,-1,i_source_bd_id,NULL,-1,i_new_bd_id),
                    bd_nr         =i_source_bd_nr,
                    bd_version_nr =DECODE(I_NEW_BD_VERSION_NR,-1,I_SOURCE_BD_VERSION_NR, NULL,-1,I_NEW_BD_VERSION_NR)
    WHERE  deal_creation_guid=i_deal_creation_guid;

    --dbms_output.put_line ('Updating error tables ..done ');

end;
FUNCTION add_reseller_a_BMI_new(
    i_deal_creation_guid IN VARCHAR2,
    i_xmlnamespace      VARCHAR2,
    i_bd_id             NUMERIC,
    i_country_cd        VARCHAR2,
    i_region_cd         VARCHAR2,
    i_bus_model_cd      VARCHAR2,
    i_rslr_added_emp_nr NUMERIC,
    o_error_message OUT VARCHAR2)
  RETURN VARCHAR2
IS
  l_reseller_a_added VARCHAR2(1):='N';
  l_reccount         NUMERIC(10);
type bm_rec_type
IS
  RECORD
  (
    add_rslr_a_fl bus_model.add_rslr_a_fl%type,
    add_rslr_b_fl bus_model.add_rslr_b_fl%type,
    dflt_rslr_b_id bus_model.dflt_rslr_b_id%type,
    dflt_rslr_a_id bus_model.dflt_rslr_a_id%type );
  bm_rec bm_rec_type;
  l_msg_type           VARCHAR2(20);
  l_errors             VARCHAR2(3000);
  l_reseller_dtls_text VARCHAR2(300); -- stores the reseller ppro_id, contract_id, cac_cd
  reject_rslr_add      EXCEPTION;
BEGIN
  ----dbms_output.put_line (' adding reseller A ..start');
  BEGIN
    --get bus model default values for the reseller
    --dbms_output.put_line ('RA1');
    SELECT ADD_RSLR_A_FL ,
      add_rslr_b_fl ,
      dflt_rslr_b_id,--dflt_rslr_a_id, --CR 1261 Nov release
      dflt_rslr_a_id --dflt_rslr_b_id
    INTO bm_rec
    FROM bus_model
    WHERE bus_model_cd=i_bus_model_cd
    AND country_cd    =i_country_cd
    AND tenantid = (Select nvl(tenantid_data_cd,'HPE') from deal where bd_id = i_bd_id);-- AND tenantid = (Select nvl(tenantid,'HPE') from deal where bd_id = i_bd_id);---Added for SMO changes (tenantid is changed with tenantid_data_cd for Federal project)
    --Check for whether we can add Default Reseller
    IF bm_rec.dflt_rslr_a_id IS NOT NULL THEN
      --  --dbms_output.put_line (' adding default reseller A');
      INSERT
      INTO rslr_a
        (
          bd_id,
          rslr_id,
          quote_distrib_fl,     --'N'
          quote_apprvl_fl,      --'N'
          SR_EDIT_AUTH_FL,      --'N'
          can_recv_quote_fl,    --should come from XML - for default reseller it will be --'N'
          date_rslr_added,      --sysdate
          creation_dts,         --sysdate
          update_dts,           --sysdate
          contract_id,          --xref
          cac_cd,               --xref
          selected_contract_fl, --based on logic -- for default reseller  it will be --'N'
          iso_cntry_cd,         --RSLR_CNTRY_CD
          rslr_add_hp_emp_nr    -- deal creator no
        )
      SELECT i_bd_id,
        r.rslr_id,
        'N' QUOTE_DISTRIB_FL,
        'N' QUOTE_APPRVL_FL,
        'N' SR_EDIT_AUTH_FL,
        'N' can_recv_quote_fl,
        sysdate date_rslr_added,
        sysdate creation_dts,
        sysdate update_dts,
        rc.contract_id,
        rc.cac_cd,
        'N' selected_contract_fl,
        r.rslr_cntry_cd,
        i_rslr_added_emp_nr
      FROM reseller r,
        RSLR_CONTRACT_XREF RC
      WHERE r.rslr_id=bm_rec.dflt_rslr_a_id
      AND r.rslr_id  =rc.rslr_id(+)
      AND rownum     <2
      ORDER BY rc.update_dts DESC;
    END IF;
    --dbms_output.put_line (' adding reseller A ..ends');
    l_reseller_a_added:='Y';
    RETURN l_reseller_a_added;
  EXCEPTION
  WHEN no_data_found THEN
    l_reseller_a_added:='N';
    l_msg_type        :='ERROR';
    l_errors          :='Bus Model details not found for the bus model ' || i_bus_model_cd || ', and  country : ' || i_country_cd;
    O_error_message   :=l_errors;
    RAISE REJECT_RSLR_ADD;
  END;
  RETURN l_reseller_a_added;
EXCEPTION
WHEN reject_rslr_add THEN
  l_reseller_a_added:='N';
  --insert into error and output table
              /*
              i_bd_id in number ,
              i_bd_nr            NUMBER,
              i_bd_version_nr    NUMBER,
              i_deal_prog_cd     VARCHAR2,
              i_bdme_aprvl_cd    VARCHAR2,
              i_quote_dist_cd    VARCHAR2,
              i_euv_stat_cd      VARCHAR2,
              i_high_risk_fl     VARCHAR2,
              i_risk_reason_desc VARCHAR2,
              i_risk_desc        VARCHAR2,
              i_error_desc       VARCHAR2,
              i_msg_type         VARCHAR2,
              i_deal_guid        VARCHAR2,
              i_won_lost_stat_cd varchar2,
              i_quote_dist_dt_gmt DATE
              */
          INSERTERROR_OUTPUT_MESSAGES ( NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, L_ERRORS, L_MSG_TYPE, I_DEAL_CREATION_GUID, NULL, NULL,L_ERRORS );
  RETURN l_reseller_a_added;
WHEN OTHERS THEN
  l_reseller_a_added:='N';
  L_MSG_TYPE        :='ERROR';
  L_ERRORS          := 'An error was encountered while adding Reseller A - ' || SQLCODE || ' -ERROR- ' || SQLERRM;
  g_user_message    :='An error was encountered while adding a Reseller A';
  INSERTERROR_OUTPUT_MESSAGES ( NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, L_ERRORS, L_MSG_TYPE, I_DEAL_CREATION_GUID, NULL, NULL,g_user_message );
  --insert into error and output table
  /*
  i_bd_id in number ,
  i_bd_nr            NUMBER,
  i_bd_version_nr    NUMBER,
  i_deal_prog_cd     VARCHAR2,
  i_bdme_aprvl_cd    VARCHAR2,
  i_quote_dist_cd    VARCHAR2,
  i_euv_stat_cd      VARCHAR2,
  i_high_risk_fl     VARCHAR2,
  i_risk_reason_desc VARCHAR2,
  i_risk_desc        VARCHAR2,
  i_error_desc       VARCHAR2,
  i_msg_type         VARCHAR2,
  i_deal_guid        VARCHAR2,
  i_won_lost_stat_cd varchar2,
  i_quote_dist_dt_gmt DATE
  */
  inserterror_output_messages ( NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, l_errors, l_msg_type, i_deal_creation_guid, NULL, NULL,l_errors );
  RETURN l_reseller_a_added;
END add_reseller_a_bmi_new;
FUNCTION add_reseller_b_BMI_NEW(
    i_deal_creation_guid IN VARCHAR2,
    i_xmlnamespace      VARCHAR2,
    i_bd_id             NUMERIC,
    i_country_cd        VARCHAR2,
    i_region_cd         VARCHAR2,
    i_bus_model_cd      VARCHAR2,
    i_rslr_added_emp_nr NUMERIC ,
    i_add_additional_resellers IN VARCHAR2,
    o_error_message OUT VARCHAR2)
  RETURN VARCHAR2
IS
  l_reseller_b_added VARCHAR2(1):='N';
  l_reccount         NUMERIC(10);
type bm_rec_type
IS
  RECORD
  (
    add_rslr_a_fl bus_model.add_rslr_a_fl%type,
    add_rslr_b_fl bus_model.add_rslr_b_fl%type,
    dflt_rslr_b_id bus_model.dflt_rslr_b_id%type,
    dflt_rslr_a_id bus_model.dflt_rslr_a_id%type );
  bm_rec bm_rec_type;
  l_msg_type           VARCHAR2(20);
  l_errors             VARCHAR2(3000);
  L_RESELLER_DTLS_TEXT VARCHAR2(300);
  reject_rslr_add      EXCEPTION;
  l_def_rslr_count     NUMBER (10);
BEGIN
  o_error_message:=NULL;
  ----dbms_output.put_line (' adding reseller B ..start');
  l_def_rslr_count:=0;
  BEGIN
    --get bus model default values for the reseller
    SELECT add_rslr_a_fl ,
      add_rslr_b_fl ,
      dflt_rslr_b_id,--dflt_rslr_a_id, -- CR 1261 Nov Release
      dflt_rslr_a_id --dflt_rslr_b_id
    INTO bm_rec
    FROM bus_model
    WHERE bus_model_cd=i_bus_model_cd
    AND country_cd    =i_country_cd
     AND tenantid = (Select nvl(tenantid_data_cd,'HPE') from deal where bd_id = i_bd_id);--AND tenantid = (Select nvl(tenantid,'HPE') from deal where bd_id = i_bd_id);---Added for SMO changes (tenantid is replace with tenantid_data_cd for Federal project)
    --Check for whether we can add Default Reseller
    IF bm_rec.dflt_rslr_b_id IS NOT NULL THEN

      --dbms_output.put_line (' adding default reseller B');

      INSERT
      INTO rslr_b
        (
          bd_id,
          rslr_id,
          quote_distrib_fl,
          quote_apprvl_fl,
          sr_edit_auth_fl,
          can_recv_quote_fl,
          date_rslr_added,
          creation_dts,
          UPDATE_DTS,
          contract_id,
          cac_cd,
          rslr_add_hp_emp_nr
        )
      SELECT i_bd_id,
        r.rslr_id,
        'N' QUOTE_DISTRIB_FL,
        'N' QUOTE_APPRVL_FL,
        'N' SR_EDIT_AUTH_FL,
        'N' can_recv_quote_fl,
        sysdate date_rslr_added,
        sysdate creation_dts,
        sysdate update_dts,
        rc.contract_id,
        rc.cac_cd,
        i_rslr_added_emp_nr
      FROM reseller r,
        rslr_contract_xref rc
      WHERE r.rslr_id=bm_rec.dflt_rslr_b_id
      AND r.rslr_id  =rc.rslr_id(+)
      AND rownum     <2
      ORDER BY rc.update_dts DESC;
      IF sql%ROWCOUNT      =0 THEN
        l_reseller_b_added:='N';
        l_def_rslr_count  :=sql%rowcount;
      ELSE
        l_reseller_b_added:='Y';
        l_def_rslr_count  :=sql%rowcount;
      END IF;

    END IF;

    --extract ( value (d), '//CACCD/text()', i_xmlnamespace). getstringval ()                AS caccd,
    --adding Reseller B
    --dbms_output.put_line ('bm_rec.dflt_rslr_b_id ' || bm_rec.dflt_rslr_b_id);
    ----
    --if approved for 3958 then put the below conditionin for loop
    --and extract ( value (d), '//ResellerID /text()', i_xmlnamespace). getstringval () <>bm_rec.dflt_rslr_b_id
    ------
    --dbms_output.PUT_LINE ('Does BMI require additional resellers :  ' ||i_add_additional_resellers);
    IF  i_add_additional_resellers='Y' THEN
    IF (bm_rec.add_rslr_b_fl IS NOT NULL AND bm_rec.add_rslr_b_fl ='Y'  ) THEN

      FOR rec IN
      (SELECT extract ( value (d), '//CanRecvQuoteFl/text()', i_xmlnamespace). getstringval () AS canrecvquotefl,
        extract ( value (d), '//PartnerProID/text()', i_xmlnamespace). getstringval ()         AS partnerproid,
        extract ( value (d), '//ContractID/text()', i_xmlnamespace). getstringval ()           AS ContractID,
        extract ( value (d), '//ResellerID /text()', i_xmlnamespace). getstringval ()          AS Resellerid
      FROM edms_deal_queue x,
        TABLE ( xmlsequence ( extract ( x.xml_data_xml, 'DealCreationRequest/ResellerBs/ResellerB', i_xmlnamespace))) d
      WHERE x.deal_creation_guid                                                         =i_deal_creation_guid
      AND extract ( value (d), '//ResellerID /text()', i_xmlnamespace). getstringval () <> DECODE(bm_rec.dflt_rslr_b_id,NULL,' ',bm_rec.dflt_rslr_b_id)
      )
      LOOP
        --dbms_output.put_line (' Can recvquote fl' || rec.canrecvquotefl ) ;
        --dbms_output.put_line (' Contract id' || rec.contractid );
        --dbms_output.put_line (' Rec.PartnerProID' || rec.partnerproid );
        --dbms_output.put_line (' Rec.ResellerID' || rec.Resellerid );
        --dbms_output.put_line (' Adding reseller B');
        -- l_reseller_dtls_text :=' Partner Pro ID : ' || rec.partnerproid || ', Contract ID : ' || rec.contractid ||', Country : '|| i_country_cd ||' , Region : ' || i_region_cd;
        l_reseller_dtls_text :=' Reseller Id : ' || rec.Resellerid || ', Contract ID : ' || rec.contractid ||', Country : '|| i_country_cd ||' , Region : ' || i_region_cd;
        ----dbms_output.put_line ('default reseller count ' || l_def_rslr_count);
        BEGIN
          BEGIN
            SELECT 1
            INTO l_reccount
            FROM reseller r
            WHERE NVL(r.FLAG_RSLR_STAT,'C')       <> 'D'
            AND NVL(r.spl_prc_eligibility_fl,'Y') <> 'N'
              --  AND UPPER(r.rslr_search_key)           =upper(REC.partnerproid)
            AND r.rslr_id        = rec.Resellerid
            AND r.rslr_cntry_cd IN ( 'US','CA');
            --AND r.region_cd                        = 'NA';
          EXCEPTION
          WHEN NO_DATA_FOUND THEN
            l_reccount :=0;
          WHEN TOO_MANY_ROWS THEN
            l_reccount :=2;
          END;
          --l_def_rslr_count:=0;
          --select count(*) into l_def_rslr_count from rslr_b where rslr_id=rec.Resellerid and bd_id=i_bd_id;
          ----dbms_output.put_line (' Non NA Reseller B  ' ||rec.Resellerid || ' exists ? '  || l_def_rslr_count);
          IF l_reccount >0 THEN
            --dbms_output.PUT_LINE ('NA reseller B ');
            INSERT
            INTO rslr_b
              (
                bd_id,
                rslr_id,
                quote_distrib_fl,
                quote_apprvl_fl,
                sr_edit_auth_fl,
                can_recv_quote_fl,
                date_rslr_added,
                creation_dts,
                update_dts,
                contract_id,
                cac_cd,
                rslr_add_hp_emp_nr
              )
            SELECT i_bd_id,
              r.rslr_id,
              'N' QUOTE_DISTRIB_FL,
              'N' QUOTE_APPRVL_FL,
              'N' sr_edit_auth_fl,
              rec.canrecvquotefl,
              sysdate date_rslr_added,
              sysdate creation_dts,
              sysdate update_dts,
              'X', -- contract id
              rcx.cac_cd,
              i_rslr_added_emp_nr
            FROM reseller r,
              /*+ WW_CNTRY c*/
              rslr_contract_xref rcx
            WHERE r.rslr_id = rcx.rslr_id(+)
              --AND r.region_cd                        = i_region_cd
              --AND r.rslr_cntry_cd                    = i_country_cd
            AND r.rslr_id = rec.Resellerid
              --and upper(r.rslr_search_key)         =upper(rec.partnerproid)
            AND r.active_fl                        = 'Y'
            AND NVL(R.SPL_PRC_ELIGIBILITY_FL,'Y') <> 'N'
            AND r.rslr_id                          = rcx.rslr_id(+)
            AND NVL(RCX.CONTRACT_TIER(+),'B') LIKE '%B%'
            AND NVL(R.FLAG_RSLR_STAT,'C') <> 'D'
              --AND RCX.CONTRACT_ID            =REC.CONTRACTID
            AND rownum <2;
            --ORDER BY rcx.update_dts DESC;
          ELSE
            --dbms_output.put_line (' Non NA Reseller B');
            INSERT
            INTO rslr_b
              (
                bd_id,
                rslr_id,
                quote_distrib_fl,
                quote_apprvl_fl,
                sr_edit_auth_fl,
                can_recv_quote_fl,
                date_rslr_added,
                creation_dts,
                update_dts,
                contract_id,
                cac_cd,
                rslr_add_hp_emp_nr
              )
            SELECT i_bd_id,
              r.rslr_id,
              'N' QUOTE_DISTRIB_FL,
              'N' QUOTE_APPRVL_FL,
              'N' sr_edit_auth_fl,
              rec.canrecvquotefl,
              sysdate date_rslr_added,
              sysdate creation_dts,
              sysdate update_dts,
              DECODE (rcx.contract_id,NULL,'X',rcx.contract_id),
              rcx.cac_cd,
              i_rslr_added_emp_nr
            FROM reseller r,
              /*+ WW_CNTRY c*/
              rslr_contract_xref rcx
            WHERE r.rslr_id = rcx.rslr_id(+)
              --AND r.region_cd                        = i_region_cd
              --AND r.rslr_cntry_cd                    = i_country_cd
            AND r.rslr_id =rec.Resellerid
              -- AND upper(r.rslr_search_key)         =upper(rec.partnerproid)
            AND r.active_fl                        = 'Y'
            AND NVL(R.SPL_PRC_ELIGIBILITY_FL,'Y') <> 'N'
            AND r.rslr_id                          = rcx.rslr_id(+)
            AND NVL(RCX.CONTRACT_TIER(+),'B') LIKE '%B%'
            AND NVL(r.flag_rslr_stat,'C') <> 'D'
            AND RCX.CONTRACT_ID (+)        =REC.CONTRACTID
            AND rownum                     <2
            ORDER BY rcx.update_dts DESC;
          END IF;
          IF (sql%rowcount <=0) THEN
            L_MSG_TYPE     :='ERROR';
            L_ERRORS       :='Cannot Create Deal. Unable to Add Reseller B for the ' || L_RESELLER_DTLS_TEXT;
            o_error_message:=L_ERRORS;
            --inserterror_output_messages ( NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, l_errors, l_msg_type, i_deal_creation_guid, NULL, NULL,l_errors);
            l_reseller_b_added:='N';
            EXIT;
          ELSE
            l_reseller_B_added:='Y';
          END IF;
          --  --dbms_output.PUT_LINE (' Reseller B Rows Updated : ' || sql%rowcount);
        EXCEPTION
        WHEN no_data_found THEN
          l_reseller_B_added:='N';
          L_MSG_TYPE        :='ERROR';
          -- L_ERRORS          :='Cannot create deal.Reseller B not found for the PPRO_ID ' || REC.PARTNERPROID ||', Contract ID :' || REC.CONTRACTID ;
          L_ERRORS       :='Cannot create deal.Reseller B not found for the Reseller Id ' || REC.Resellerid ||', Contract ID :' || REC.CONTRACTID ;
          o_error_message:=L_ERRORS;
          --inserterror_output_messages ( NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, l_errors, l_msg_type, i_deal_creation_guid, NULL, NULL,l_errors);
        END;
      END LOOP; --for reseller B
    ELSIF (bm_rec.add_rslr_B_fl IS NULL OR bm_rec.add_rslr_b_fl ='N' ) THEN
      l_reseller_b_added        :='N';
      l_msg_type                :='WARNING';
      L_ERRORS                  :='Additional Reseller Bs cannot be added for this business model.';
      l_reseller_b_added        :='Y';--Added per BMI requiremet
      --inserterror_output_messages ( NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, l_errors, l_msg_type, i_deal_creation_guid, NULL, NULL,l_errors);
      o_error_message:=L_ERRORS;
    END IF;
  ELSE
          IF l_def_rslr_count>=0 THEN
              --dbms_output.PUT_LINE ('additional resellers are not required .. adding only default reselleres');
              l_reseller_b_added:='Y';
          END IF;
    END IF; -- END OF i_add_additional_resellers

    --dbms_output.put_line (' adding reseller b ..ends');

    RETURN l_reseller_b_added;

  EXCEPTION
  WHEN no_data_found THEN
    l_reseller_b_added:='N';
    l_msg_type        :='ERROR';
    l_errors          :='Bus Model details not found for the bus model ' || i_bus_model_cd || ', and  country : ' || i_country_cd;
    o_error_message   :=L_ERRORS;
    RAISE REJECT_RSLR_ADD;
  WHEN OTHERS THEN
    l_reseller_b_added:='N';
    l_msg_type        :='ERROR';
    l_errors          := 'An error was encountered while getting bus model details for adding Reseller B - ' || SQLCODE || ' -ERROR- ' || sqlerrm;
    o_error_message   :=L_ERRORS;
    raise reject_rslr_add;
  END;
  RETURN l_reseller_b_added;
EXCEPTION
WHEN reject_rslr_add THEN
  l_reseller_b_added:='N';
  --insert into error and output table
  /*
  i_bd_id in number ,
  i_bd_nr            NUMBER,
  i_bd_version_nr    NUMBER,
  i_deal_prog_cd     VARCHAR2,
  i_bdme_aprvl_cd    VARCHAR2,
  i_quote_dist_cd    VARCHAR2,
  i_euv_stat_cd      VARCHAR2,
  i_high_risk_fl     VARCHAR2,
  i_risk_reason_desc VARCHAR2,
  i_risk_desc        VARCHAR2,
  i_error_desc       VARCHAR2,
  i_msg_type         VARCHAR2,
  i_deal_guid        VARCHAR2,
  i_won_lost_stat_cd varchar2,
  i_quote_dist_dt_gmt DATE
  */
  inserterror_output_messages ( NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, l_errors, l_msg_type, i_deal_creation_guid, NULL, NULL,l_errors );
  RETURN l_reseller_b_added;
WHEN OTHERS THEN
  l_reseller_b_added:='N';
  l_msg_type        :='ERROR';
  l_errors          := 'An error was encountered while  adding Reseller B - ' || SQLCODE || ' -ERROR- ' || sqlerrm;
  g_user_message    :='An error was encountered while  adding Reseller B';
  --insert into error and output table
  /*
  i_bd_id in number ,
  i_bd_nr            NUMBER,
  i_bd_version_nr    NUMBER,
  i_deal_prog_cd     VARCHAR2,
  i_bdme_aprvl_cd    VARCHAR2,
  i_quote_dist_cd    VARCHAR2,
  i_euv_stat_cd      VARCHAR2,
  i_high_risk_fl     VARCHAR2,
  i_risk_reason_desc VARCHAR2,
  i_risk_desc        VARCHAR2,
  i_error_desc       VARCHAR2,
  i_msg_type         VARCHAR2,
  i_deal_guid        VARCHAR2,
  i_won_lost_stat_cd varchar2,
  i_quote_dist_dt_gmt DATE
  */
  inserterror_output_messages ( NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, l_errors, l_msg_type, i_deal_creation_guid, NULL, NULL,g_user_message );
  RETURN l_reseller_b_added;
END add_reseller_b_BMI_NEW;

 PROCEDURE GET_DEFAULT_ROUTINGINDICATOR (
                            a_bd_id     IN   PLS_INTEGER
                          , o_routingIndicatorCD   OUT  VARCHAR2

                                           ) IS
    l_cntr_cd                         VARCHAR2(2);
    l_bus_model_cd                  VARCHAR2(2);
    l_region_cd                        VARCHAR2(2);
    l_route_by_mc_charge_fl            VARCHAR2(2);
    l_route_by_st_prov_fl            VARCHAR2(2);
    l_count                         PLS_INTEGER;
    l_tenantid     deal.tenantid_data_cd%type;--l_tenantid     deal.tenantid%type;--Added for SMO Changes (modified tenantid with tenantid_data_cd column for Federal projectt)
    exit_now       EXCEPTION;
BEGIN

  --dbms_output.PUT_LINE ('Initial Default Routing Indicator=>' || o_routingIndicatorCD);

  SELECT  control_cntry_cd,bus_model_cd,region,nvl(tenantid_data_cd,'HPE')--nvl(tenantid,'HPE') --Added for SMO Changes (tenantid column is replaced with  tenantid_data_cd column for Federal project)
  INTO l_cntr_cd,l_bus_model_cd,l_region_cd,l_tenantid
  FROM deal
  WHERE bd_id = a_bd_id;

    l_route_by_mc_charge_fl := 'N';
    l_route_by_st_prov_fl := 'N';

    BEGIN
               SELECT 1
                 INTO l_count
               FROM bus_model where BUS_MODEL_CD = l_bus_model_cd and COUNTRY_CD = l_cntr_cd and Tenantid =l_tenantid;---Tenant id added for SMO Changes
         EXCEPTION
            WHEN NO_DATA_FOUND
            THEN
              l_count   := 0;
            WHEN TOO_MANY_ROWS
            THEN
              l_count   := 2;
             WHEN others then
                  --dbms_output.put_line ('err'||sqlerrm);
                  NULL;
        END;

 IF ( l_count > 0 ) THEN
         SELECT nvl(route_by_mc_charge_fl,'N'),nvl(route_by_st_prov_fl,'N')
         INTO l_route_by_mc_charge_fl,l_route_by_st_prov_fl
         FROM bus_model where BUS_MODEL_CD = l_bus_model_cd and COUNTRY_CD = l_cntr_cd
                                                                                                and tenantid = l_tenantid;---Added for SMO Changes
    END IF;
--
l_count :=0; --reset the counter for further use

  select count(1) into l_count from routing_indicator where  active_fl = 'Y' and  region_cd  = l_region_cd;

  IF ( l_count = 1 ) THEN
           select ROUTING_INDICATOR_CD into o_routingIndicatorCD   from routing_indicator where  active_fl = 'Y' and  region_cd  = l_region_cd;
        raise exit_now;
  END IF;

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   IF  l_route_by_mc_charge_fl= 'Y' and l_route_by_st_prov_fl= 'Y' THEN

select FLAG_COL_VAL into o_routingIndicatorCD from (

select /*+ index(uw PK_USER_WB) index(wc PK_WB_COL)*/wc.FLAG_COL_VAL, count(1),
 rank() over (order by count(1) desc ) as count_ranking
 from routing_indicator RI,WB_BUS_MODEL wm, wb_pl wp,wb_mc_charge wmc,wb_col wc,WB_CNTRY wcnt,WB_ST_PROV WS,user_wb uw
where  wm.bus_model_cd = l_bus_model_cd and wm.country_cd = l_cntr_cd  and wcnt.cntry_cd =  l_cntr_cd
 and  WS.country_cd =  l_cntr_cd and    WS.ST_PROV_CD =   (   select  euc_st_prov from deal  where bd_id = a_bd_id)
and  wp.wb_id = wm.wb_id and wm.wb_id = uw.wb_id and wm.wb_id = wc.wb_id and wm.wb_id = wmc.wb_id  and wm.wb_id = wcnt.wb_id and WS.wb_id = wm.wb_id
and wc.FLAG_COL_NM = 'routing_indicator_cd' and wc.flag_col_val = RI.ROUTING_INDICATOR_CD and RI.region_cd = l_region_cd and RI.active_fl  = 'Y'
and wp.prod_line_cd IN
              (select assoc_pl_cd from line_item where bd_id = a_bd_id and line_prog_cd = 'N'
              Union select assoc_pl from bundle_line where bd_id= a_bd_id and item_prog_cd = 'N'
              ) group by  wc.FLAG_COL_VAL

)where count_ranking  =1;

              raise exit_now;

  END IF;
 ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  IF  l_route_by_mc_charge_fl= 'Y' and l_route_by_st_prov_fl= 'N' THEN

select FLAG_COL_VAL into o_routingIndicatorCD from (

select /*+ index(uw PK_USER_WB) index(wc PK_WB_COL)*/wc.FLAG_COL_VAL, count(1),
 rank() over (order by count(1) desc ) as count_ranking
 from routing_indicator RI,WB_BUS_MODEL wm, wb_pl wp,wb_mc_charge wmc,wb_col wc,WB_CNTRY wcnt,user_wb uw
where  wm.bus_model_cd =l_bus_model_cd and wm.country_cd = l_cntr_cd  and wcnt.cntry_cd =  l_cntr_cd
and  wp.wb_id = wm.wb_id and wm.wb_id = uw.wb_id and wm.wb_id = wc.wb_id and wm.wb_id = wmc.wb_id  and wm.wb_id = wcnt.wb_id
and wc.FLAG_COL_NM = 'routing_indicator_cd' and wc.flag_col_val = RI.ROUTING_INDICATOR_CD and RI.region_cd =l_region_cd and RI.active_fl  = 'Y'
and wp.prod_line_cd IN
              (select assoc_pl_cd from line_item where bd_id = a_bd_id and line_prog_cd = 'N'
              Union select assoc_pl from bundle_line where bd_id= a_bd_id and item_prog_cd = 'N'
              ) group by  wc.FLAG_COL_VAL

)where count_ranking  =1;

              raise exit_now;

         END IF;
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

  IF  l_route_by_mc_charge_fl= 'N' and l_route_by_st_prov_fl= 'Y' THEN

select FLAG_COL_VAL into o_routingIndicatorCD from (

select /*+ index(uw PK_USER_WB) index(wc PK_WB_COL)*/wc.FLAG_COL_VAL, count(1),
 rank() over (order by count(1) desc ) as count_ranking
 from routing_indicator RI,WB_BUS_MODEL wm, wb_pl wp,wb_col wc,WB_CNTRY wcnt,WB_ST_PROV WS,user_wb uw
where  wm.bus_model_cd =l_bus_model_cd and wm.country_cd = l_cntr_cd  and wcnt.cntry_cd =  l_cntr_cd and  WS.country_cd =  l_cntr_cd and    WS.ST_PROV_CD =   (   select  euc_st_prov from deal  where bd_id = a_bd_id)
and  wp.wb_id = wm.wb_id and wm.wb_id = uw.wb_id and wm.wb_id = wc.wb_id and wm.wb_id = wcnt.wb_id and WS.wb_id = wm.wb_id
and wc.FLAG_COL_NM = 'routing_indicator_cd' and wc.flag_col_val = RI.ROUTING_INDICATOR_CD and RI.region_cd =l_region_cd and RI.active_fl  = 'Y'
and wp.prod_line_cd IN
              (select assoc_pl_cd from line_item where bd_id = a_bd_id and line_prog_cd = 'N'
              Union select assoc_pl from bundle_line where bd_id= a_bd_id and item_prog_cd = 'N'
              ) group by  wc.FLAG_COL_VAL

)where count_ranking  =1;

              raise exit_now;

         END IF;
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

  IF  l_route_by_mc_charge_fl= 'N' and l_route_by_st_prov_fl= 'N' THEN

select FLAG_COL_VAL into o_routingIndicatorCD from (

select /*+ index(uw PK_USER_WB) index(wc PK_WB_COL)*/wc.FLAG_COL_VAL, count(1),
 rank() over (order by count(1) desc ) as count_ranking
 from routing_indicator RI,WB_BUS_MODEL wm, wb_pl wp,wb_col wc,WB_CNTRY wcnt, user_wb uw
where  wm.bus_model_cd =l_bus_model_cd and wm.country_cd = l_cntr_cd  and wcnt.cntry_cd =  l_cntr_cd
and  wp.wb_id = wm.wb_id and wm.wb_id = uw.wb_id and wm.wb_id = wc.wb_id and wm.wb_id = wcnt.wb_id
and wc.FLAG_COL_NM = 'routing_indicator_cd' and wc.flag_col_val = RI.ROUTING_INDICATOR_CD and RI.region_cd =l_region_cd and RI.active_fl  = 'Y'
and wp.prod_line_cd IN
              (select assoc_pl_cd from line_item where bd_id = a_bd_id and line_prog_cd = 'N'
              Union select assoc_pl from bundle_line where bd_id= a_bd_id and item_prog_cd = 'N'
              ) group by  wc.FLAG_COL_VAL

)where count_ranking  =1;

              raise exit_now;

         END IF;
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  EXCEPTION
    WHEN exit_now THEN



       IF o_routingIndicatorCD is null THEN
            select ROUTING_INDICATOR_CD into o_routingIndicatorCD   from routing_indicator where  active_fl = 'Y' and  region_cd  = l_region_cd and ROWNUM <=1;
     END IF;


   --dbms_output.PUT_LINE ('exit_now Default Routing Indicator=>' || o_routingIndicatorCD);

    WHEN OTHERS THEN
     IF o_routingIndicatorCD is null  THEN
              --dbms_output.PUT_LINE ('region ' || l_region_cd);
     select ROUTING_INDICATOR_CD into o_routingIndicatorCD   from routing_indicator where  active_fl = 'Y' and  region_cd  = l_region_cd  and ROWNUM <=1;
     END IF;

   --dbms_output.PUT_LINE (' Other Default Routing Indicator=>' || o_routingIndicatorCD);

END GET_DEFAULT_ROUTINGINDICATOR;
PROCEDURE CLEAR_BUNDLE_LINE_AUTH(i_deal_creation_guid varchar2, i_xmlnamespace VARCHAR2,
 i_bd_id numeric,i_bundle_header_line_nr numeric ,i_bundle_index numeric,i_bundle_source varchar2)
IS
/*

This procedure
    1. Clears the authorization on bundle lines
    2. Re-calculates the Requested Discount %
*/
l_errors varchar2(1000);
l_bd_version_nr NUMBER;
BEGIN
    SELECT bd_version_nr
    INTO l_bd_version_nr
    FROM deal
    WHERE bd_id=i_bd_id;

--dbms_output.PUT_LINE ('Clearing Bundle line auth ....');
 FOR recbdline IN
      (
      SELECT        *
      FROM
        (SELECT extract ( value (D), '//AuthBasisDesc/text()', i_xmlnamespace). GETSTRINGVAL ()         AS AUTHBASISDESC,
          extract ( value (d), '//AuthDate/text()', i_xmlnamespace). getstringval ()                    AS authdate,
          extract ( value (d), '//AuthDateGMT/text()', i_xmlnamespace). getstringval ()                 AS authdategmt,
          extract ( value (d), '//AuthHPEmployee/EmployeeNr/text()', i_xmlnamespace). getstringval ()   AS authempnr,    ---emp nr change as per new xml
          extract ( value (d), '//AuthHPEmployee/EmailAddress/text()', i_xmlnamespace). getstringval () AS authempemail, ---emp nr change as per new xml
          extract ( value (d), '//AuthStatCD/text()', i_xmlnamespace). getstringval ()                  AS authstatcd,
          extract ( value (d), '//BDNetAmt/text()', i_xmlnamespace). getstringval ()                    AS bdnetamt,
          extract ( value (D), '//ListPrice/text()', i_xmlnamespace). GETSTRINGVAL ()                   AS LISTPRICE,
          extract ( value (d), '//PL/text()', i_xmlnamespace). getstringval ()                          AS pl,
          extract ( value (d), '//ProdDesc/text()', i_xmlnamespace). getstringval ()                    AS proddesc,
          extract ( value (d), '//Qty/text()', i_xmlnamespace). getstringval ()                         AS qty,
          extract ( value (d), '//ProdBaseNr/text()', i_xmlnamespace). getstringval ()                  AS sku,
          extract ( value (d), '//StdDiscPct/text()', i_xmlnamespace). getstringval ()                  AS stddiscpct,
          extract ( value (d), '//ParentIndex/text()', i_xmlnamespace). getstringval ()                 AS parentindex,
          extract ( value (d), '//BundleSource/text()', i_xmlnamespace). getstringval ()                AS bundleline_source,
          extract (value (D), '//OptCD/text()', i_xmlnamespace). GETSTRINGVAL ()                        AS OPTCD,
          extract (value (d), '//CostPrice/text()', i_xmlnamespace). getstringval ()                    AS CostPrice,
          extract (value (d), '//BandedFl/text()', i_xmlnamespace). getstringval ()                     AS BandedFl,
          extract ( value (d), '//ExtPreApprvPrice/text()', i_xmlnamespace). getstringval ()           AS ExtPreApprvPrice
        FROM edms_deal_queue x,
          TABLE ( xmlsequence ( extract ( x.xml_data_xml, 'DealCreationRequest/Bundles/LineItemBD/BundleLines/BundleLine', i_xmlnamespace))) d
        WHERE x.deal_creation_guid =i_deal_creation_guid
        )
      WHERE parentindex                                         =  i_bundle_index
      AND BUNDLELINE_SOURCE                            = i_bundle_source
        )
      LOOP

      --clearing auth for the existing bundle lines
       --dbms_output.put_line ('Updating bundle line components .. 1');
        --dbms_output.PUT_LINE( ' Clearing auth for i_bundle_header_line_nr: '||i_bundle_header_line_nr);
        --dbms_output.PUT_LINE( ' Clearing auth for recbdline.sku: '||recbdline.sku);
       UPDATE BUNDLE_LINE

                                           SET   ITEM_PROG_CD        ='N',
                                              AUTH_DISC_OT_PC     =0,
                                              AUTH_MARGIN_PCT     =0,
                                              AUTH_DT_GMT         =NULL,
                                              AUTH_BASIS_TEXT     =NULL,
                                              LINE_AUTH_TYPE      =NULL,
                                              --RQST_BD_NET_PRC_AM=recbdline.bdnetamt,
                                              AUTH_MC_DATE=NULL,
                                              AUTH_MC_HP_EMP_NR=NULL,
                                              QTY =NVL(recbdline.qty,1)--,
                                              --EXT_PRE_APPRV_PRC_AM= recbdline.ExtPreApprvPrice
                                            WHERE bd_id           =i_bd_id
                                            and scale_id= (select nvl(max(scale_id),0) from bundle_line
                                            where bd_id=i_bd_id);

                                           /*  AND LINE_NR           = i_bundle_header_line_nr
                                            and PROD_GNRC_NR_TX=recbdline.sku
                                            AND prod_opt_cd    =DECODE(recbdline.OptCd,NULL,' ',recbdline.OptCd)
                                            and scale_id =(
                                              SELECT NVL(MAX(scale_id),0)
                                              FROM bundle_line
                                              WHERE bd_id=i_bd_id
                                              AND line_nr=i_bundle_header_line_nr
                                              ); */

      --insert a line into bundle_line table with new scale_id and new version created.
    INSERT INTO bundle_line (bd_id,
                        line_nr,
                        prod_gnrc_nr_tx,
                        prod_opt_cd,
                        disc_bndry_id,
                        scale_id,
                        qty,
                        prod_type,
                        prod_gnrc_desc_tx,
                        disc_pc,
                        list_price,
                        extended_price,
                        subst_prod,
                        bundle_nr,
                        item_nr,
                        integrated_grp_cd,
                        rqst_bd_net_prc_am,
                        auth_bd_net_prc_am,
                        rqst_incr_disc_am,
                        auth_incr_disc_am,
                        version_created,
                        assoc_pl,
                        item_prog_cd,
                        auth_mc_date,
                        auth_mc_hp_emp_nr,
                        disc_as_pct,
                        disc_type_cd,
                        rqst_disc_ot_pc,
                        auth_disc_ot_pc,
                        prod_gm,
                        prod_gm_pct,
                        prod_vcm,
                        prod_vcm_pct,
                        prod_op_profit,
                        prod_op_profit_pct,
                        component_level_cd,
                        prev_auth_cd,
                        creation_dts,
                        update_dts,
                        ref_price_fl,
                        price_list_cd,
                        currency_cd,
                        price_term_cd,
                        banded_fl,
                        spcl_config_fl,
                        prod_cost_am,
                        prod_cost_date,
                        rqst_margin_pct,
                        auth_margin_pct,
                        cost_avail_fl,
                        auth_dt_gmt,
                        future_prod_fl,
                        non_discount_fl,
                        show_quote_long_desc_fl,
                        auth_type_cd,
                        prev_auth_mc_hp_emp_nr,
                        std_disc_change_user_id,
                        cost_status,
                        mult_cntry_vrfy_fl,
                        ship_charge_fl,
                        sp_status,
                        product_category,
                        offline_apprvl_fl,
                        bus_group_cd,
                        bus_unit_cd,
                        auth_basis_text,
                        guidance_last_refresh_dt,
                        guidance_expert_pct,
                        guidance_typical_pct,
                        guidance_floor_pct,
                        guidance_prev_rqst_pct,
                        guidance_available_fl,
                        line_auth_type,
                        auth_generic_emp_nr,
                        ref_disc_pct,
                        prev_auth_basis_text,
                        prev_line_auth_type,
                        prev_generic_emp_nr,
                        ref_src_cd,
                        ref_src_id)
        SELECT
                        bd_id,
                        line_nr,
                        prod_gnrc_nr_tx,
                        prod_opt_cd,
                        disc_bndry_id,
                        scale_id+1,
                        qty,
                        prod_type,
                        prod_gnrc_desc_tx,
                        disc_pc,
                        list_price,
                        extended_price,
                        subst_prod,
                        bundle_nr,
                        item_nr,
                        integrated_grp_cd,
                        rqst_bd_net_prc_am,
                        auth_bd_net_prc_am,
                        rqst_incr_disc_am,
                        auth_incr_disc_am,
                        l_bd_version_nr,
                        assoc_pl,
                        item_prog_cd,
                        auth_mc_date,
                        auth_mc_hp_emp_nr,
                        disc_as_pct,
                        disc_type_cd,
                        rqst_disc_ot_pc,
                        auth_disc_ot_pc,
                        prod_gm,
                        prod_gm_pct,
                        prod_vcm,
                        prod_vcm_pct,
                        prod_op_profit,
                        prod_op_profit_pct,
                        component_level_cd,
                        prev_auth_cd,
                        TRUNC(SYSDATE),
                        TRUNC(SYSDATE),
                        ref_price_fl,
                        price_list_cd,
                        currency_cd,
                        price_term_cd,
                        banded_fl,
                        spcl_config_fl,
                        prod_cost_am,
                        prod_cost_date,
                        rqst_margin_pct,
                        auth_margin_pct,
                        cost_avail_fl,
                        auth_dt_gmt,
                        future_prod_fl,
                        non_discount_fl,
                        show_quote_long_desc_fl,
                        auth_type_cd,
                        prev_auth_mc_hp_emp_nr,
                        std_disc_change_user_id,
                        cost_status,
                        mult_cntry_vrfy_fl,
                        ship_charge_fl,
                        sp_status,
                        product_category,
                        offline_apprvl_fl,
                        bus_group_cd,
                        bus_unit_cd,
                        auth_basis_text,
                        guidance_last_refresh_dt,
                        guidance_expert_pct,
                        guidance_typical_pct,
                        guidance_floor_pct,
                        guidance_prev_rqst_pct,
                        guidance_available_fl,
                        line_auth_type,
                        auth_generic_emp_nr,
                        ref_disc_pct,
                        prev_auth_basis_text,
                        prev_line_auth_type,
                        prev_generic_emp_nr,
                        ref_src_cd,
                        ref_src_id
                FROM bundle_line
                WHERE line_nr=i_bundle_header_line_nr
                AND bd_id=i_bd_id
                AND PROD_GNRC_NR_TX=recbdline.sku
                AND prod_opt_cd    =DECODE(recbdline.OptCd,NULL,' ',recbdline.OptCd)
                AND scale_id =(SELECT MAX(scale_id) FROM bundle_line
                                WHERE bd_id=i_bd_id
                                AND line_nr=i_bundle_header_line_nr
                                 AND PROD_GNRC_NR_TX=recbdline.sku
                                 AND prod_opt_cd    =DECODE(recbdline.OptCd,NULL,' ',recbdline.OptCd));

                                        --dbms_output.put_line ('Updating bundle line components .. 2');
                                        --dbms_output.PUT_LINE( ' Clearing auth for i_bundle_header_line_nr: '||i_bundle_header_line_nr);
                                        --dbms_output.PUT_LINE( ' Clearing auth for recbdline.sku: '||recbdline.sku);
                                        UPDATE BUNDLE_LINE

                                           SET   ITEM_PROG_CD        ='N',
                                              AUTH_DISC_OT_PC     =0,
                                              AUTH_MARGIN_PCT     =0,
                                              AUTH_DT_GMT         =NULL,
                                              AUTH_BASIS_TEXT     =NULL,
                                              LINE_AUTH_TYPE      =NULL,
                                              RQST_BD_NET_PRC_AM=recbdline.bdnetamt,
                                              AUTH_MC_DATE=NULL,
                                              AUTH_MC_HP_EMP_NR=NULL,
                                              QTY =NVL(recbdline.qty,1)--,
                                              --EXT_PRE_APPRV_PRC_AM= recbdline.ExtPreApprvPrice
                                            WHERE bd_id           =i_bd_id
                                            AND LINE_NR           = i_bundle_header_line_nr
                                            and PROD_GNRC_NR_TX=recbdline.sku
                                            AND prod_opt_cd    =DECODE(recbdline.OptCd,NULL,' ',recbdline.OptCd)
                                            and scale_id =(
                                              SELECT NVL(MAX(scale_id),0)
                                              FROM bundle_line
                                              WHERE bd_id=i_bd_id
                                              AND line_nr=i_bundle_header_line_nr
                                              );


                                              --l_errors :='Bundle line updated auth values cleared for SKU '|| recbdline.sku || ' BD ID ' || i_bd_id  || ' Rows updated ' || sql%rowcount ;
                                              ----dbms_output.put_line (L_errors);
                                              --inserterror_output_messages ( NULL,NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, 'INFO', i_deal_creation_guid, NULL,NULL,null);

                                              --updating requested disc %

                                              UPDATE bundle_line
                                              SET AUTH_BD_NET_PRC_AM=0,--NULL,
                                              rqst_disc_ot_pc =
                                                (SELECT (
                                                  CASE
                                                    WHEN ROUND(100- (( bl.rqst_bd_net_prc_am/bl.list_price) *100)- NVL(lds.HIGH_RSLR_A_SD_PC,0),2) >=99
                                                    THEN 99
                                                    WHEN ROUND(100- (( bl.rqst_bd_net_prc_am/bl.list_price) *100)- NVL(lds.HIGH_RSLR_A_SD_PC,0),2) <=-99
                                                    THEN          -99
                                                    ELSE ROUND(100- (( bl.rqst_bd_net_prc_am/bl.list_price) *100)- NVL(lds.HIGH_RSLR_A_SD_PC,0),2)
                                                  END ) rqst_disc_ot_pc
                                                FROM bundle_line bl,
                                                  line_disc_scale lds
                                                WHERE bl.bd_id        = i_bd_id
                                                AND bl.PROD_GNRC_NR_TX=recbdline.sku
                                            AND bl.prod_opt_cd    =DECODE(recbdline.OptCd,NULL,' ',recbdline.OptCd)
                                                AND lds.bd_id         =bl.bd_id
                                                AND lds.line_nr       =bl.line_nr
                                                AND lds.scale_id      =bl.scale_id
                                                AND bl.list_price     >0
                                                AND bl.line_nr        =i_bundle_header_line_nr
                                                AND lds.scale_id      =
                                                  (SELECT NVL(MAX(scale_id),0)
                                                  FROM line_disc_scale
                                                  WHERE bd_id=lds.bd_id
                                                  AND line_nr=lds.line_nr
                                                  )
                                                AND bl.scale_id =
                                                  (SELECT NVL(MAX(scale_id),0)
                                                  FROM bundle_line
                                                  WHERE bd_id=bl.bd_id
                                                  AND line_nr=bl.line_nr
                                                  )
                                                )
                                              WHERE bd_id        =i_bd_id
                                              AND LINE_NR        = i_bundle_header_line_nr
                                              AND PROD_GNRC_NR_TX=recbdline.sku
                                            AND prod_opt_cd    =DECODE(recbdline.OptCd,NULL,' ',recbdline.OptCd)
                                              AND scale_id       =
                                                (SELECT NVL(MAX(scale_id),0)
                                                FROM bundle_line
                                                WHERE bd_id=i_bd_id
                                                AND line_nr=i_bundle_header_line_nr
                                                );

                                                --l_errors: =' Bundle line  Requested Discount percentage  updated for SKU  '|| recbdline.sku || ' BD ID ' || i_bd_id  || ' Rows updated ' || sql%rowcount;
                                              ----dbms_output.put_line (L_errors);
                                              --inserterror_output_messages ( NULL,NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, 'INFO', i_deal_creation_guid, NULL,NULL,null);
      END LOOP;
EXCEPTION
WHEN NO_DATA_FOUND THEN
        l_errors:='An error was encountered in highesh price updation- ' || SQLCODE || ' -ERROR- ' || sqlerrm || '. Error at Line : ' || dbms_utility.format_error_backtrace();    inserterror_output_messages ( NULL,NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, 'ERROR', i_deal_creation_guid, NULL,NULL,l_errors);
        --dbms_output.PUT_LINE (l_errors);
WHEN OTHERS THEN
            l_errors:='An error was encountered in highesh price updation- ' || SQLCODE || ' -ERROR- ' || sqlerrm || '. Error at Line : ' || dbms_utility.format_error_backtrace();    inserterror_output_messages ( NULL,NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, 'ERROR', i_deal_creation_guid, NULL,NULL,l_errors);
            --dbms_output.PUT_LINE (l_errors);
END CLEAR_BUNDLE_LINE_AUTH;

PROCEDURE BMI_insert_prod_line
(
    i_bd_id                   NUMBER,
    i_bd_nr                   NUMBER,
    i_bd_version_nr           NUMBER,
    i_line_prog_cd            VARCHAR2,
    i_deal_prog_cd            VARCHAR2,
    i_bdme_aprvl_cd           VARCHAR2,
    i_quote_dist_cd           VARCHAR2,
    i_euv_stat_code           VARCHAR2,
    i_high_risk_fl            VARCHAR2,
    i_risk_reasion_desc       VARCHAR2,
    i_risk_desc               VARCHAR2,
    i_deal_creation_guid      VARCHAR2,
    i_countrycd               VARCHAR2,
    i_pricelistcd             VARCHAR2,
    i_currencycd              VARCHAR2,
    i_pricetermcd             VARCHAR2,
    i_prod_string             VARCHAR2,
    i_globai_fl               VARCHAR2,
    i_hierarchy_cd            VARCHAR2,
    i_enddate                 VARCHAR2,
    i_line_type_cd            VARCHAR2,
    i_prod_list_price         NUMBER,
    i_prod_auth_basis_text    VARCHAR2,
    i_prod_qty                NUMBER,
    i_bdnetamt                NUMBER,
    i_auth_emp_nr             NUMBER,
    i_auth_mc_hp_emp_nr       NUMBER,
    i_line_added_by_emp_nr    NUMBER,
    i_pricingtypecd           VARCHAR2,
    i_line_nr                 NUMBER,
    i_begindate               VARCHAR2,
    i_add_bundles             VARCHAR2,
    i_add_bundleheader        VARCHAR2,
    i_config_src              VARCHAR2,
    i_config_id               VARCHAR2,-- NUMBER,  commented as part of CR5020
    i_source_config_id        VARCHAR2,
    i_stddiscpct              NUMBER,
    i_line_item_nr_for_bundle NUMBER,
    i_auth_stat_cd            VARCHAR2,
    i_opt_cd                  VARCHAR2,
    I_ROLLOUTMONTHQTYS        VARCHAR2,
    --i_authdategmt             VARCHAR2,
    --i_auth_mc_date            VARCHAR2,
     i_authdategmt             DATE, --Changed as per CR:236715
    i_auth_mc_date            DATE, --Changed as per CR:236715
    i_dealsourcedealtype      VARCHAR2,
    i_bd_line_qty_for_hdr_sku NUMBER,
    i_bundle_desc             VARCHAR2,
    i_sku_pl                  VARCHAR2, ---Added for CR3236
    I_BD_HDR_LINE_AUTH_BD_NET LINE_DISC_SCALE.RQST_BD_NET_PRC_AM%type,
    I_PROD_COST_PRICE          NUMBER,
    I_PROD_COST_PRICE_HDR_PROD NUMBER,
    i_busmodelcd               VARCHAR2,          ---Added  for CR 4774
    i_minorder_qty             VARCHAR2 ,         ---Added for CR4735
    i_line_auth_type line_item.line_auth_type%type,--added for new auth changes
    i_line_authdesc VARCHAR2 ,
    i_line_AuthStat bundle_line.ITEM_PROG_CD%type,
    i_line_AuthDtGMT DATE,
    o_create_new_version OUT VARCHAR,
    i_banded_fl varchar2,
    i_bmi_doc_no varchar2,
    i_prod_desc  LINE_ITEM.PROD_GNRC_DESC_TX%TYPE , --Added by Ramesh on 17-Feb-2014 for R8
    i_EXT_PRE_APPRV_PRC_AM line_disc_scale.EXT_PRE_APPRV_PRC_AM%TYPE,
    i_total_hdr_listprice_value number,
    i_total_hdr_bdnet_value number,
      I_DisplayCompPrcFl VARCHAR2,--Added for US6037 --> Show Component Level Pricing
      i_guidance_available_fl VARCHAR2,--Added by Lakshmi for CR6012
      i_guidance_details_id NUMBER,--Added by Lakshmi for CR6012
      i_guidance_expert_pct NUMBER,--Added by Lakshmi for CR6012
      i_guidance_floor_pct NUMBER,--Added by Lakshmi for CR6012
      i_guidance_typical_pct NUMBER,--Added by Lakshmi for CR6012
      i_guidance_last_refresh_dt VARCHAR2,--Added by Lakshmi for CR6012
      i_non_discount_Fl VARCHAR2
     ,i_InstantPrcMethod  bundle_line.INSTANT_PRC_METHOD%TYPE  --Added for UsS7301
     ,i_InstantPrcAmount  bundle_line.INSTANT_PRC_AMT%TYPE --Added for US 7301
      ,i_ContraAmt bundle_line_contra.CONTRA_AMT%TYPE---Added for 7301
      , i_use_ext_list_price    GT_XML_line_item.use_ext_list_price%TYPE --New variable added by Lakshmi for HP SW Project
  )
IS
  l_auth_bdnet_amt LINE_DISC_SCALE.RQST_BD_NET_PRC_AM%TYPE;
  L_EXT_PRE_APPRV_PRC_AM LINE_DISC_SCALE.EXT_PRE_APPRV_PRC_AM%TYPE;
  l_rollout_ins_qry VARCHAR2(4000);
  L_NO_OF_MONTHS    number;
  l_rollout_mnths t_rollout_mnths:=t_rollout_mnths();
  l_gypsy_prod_string VARCHAR2(50);
  p_gypsy_price sys_refcursor; --Contains the GPSy price details - fetched
  -- through DARTWWI
  --l_auth_basis_text line_disc_scale.auth_basis_text%type;
  --l_rollout_mnths t_rollout_mnths:=t_rollout_mnths();
  --l_line_nr number(10);
  l_scale_id               NUMBER(10);
  l_errors                 VARCHAR2(3000);
  l_msg_type               VARCHAR2(20);
  L_LINE_PROD_GNRC_DESC_TX VARCHAR2(200);
  l_line_bus_unit_cd       VARCHAR2(10);
  L_LINE_BUS_GROUP_CD      VARCHAR2(10);
  l_auth_disc_otc_pc       NUMBER(5,2) :=0;
  l_rqst_disc_otc_pc       NUMBER(5,2) :=0;
  l_config_src bundle.config_src%type;
/*type gypsy_rec
IS
  record
  (
    prod_nr         VARCHAR2 (50),
    prod_opt_cd     VARCHAR2 (10),
    prod_desc       VARCHAR2 (100),
    stat            VARCHAR2 (10),
    price           NUMBER (16, 2),
    prod_line       VARCHAR2 (5),
    prod_family     VARCHAR2 (100),
    start_eff_dt    DATE,
    low_price       NUMBER (16, 2),
    qty_brk         NUMBER (10),
    end_eff_dt      DATE,
    ref_price_fl    VARCHAR2 (1),
    non_discount_fl VARCHAR2 (1),
    plc_fl          VARCHAR2 (10) );
  */
  gprice gypsy_rec;
  l_createnewversion     VARCHAR2(1)                    :='N';
  L_BUNDLE_LINE_SCALE_ID NUMBER(5)                      :=0;
  L_SET_LINE_AUTH_CODE   VARCHAR2(1)                    :='N';
  l_rqst_margin_pct line_disc_scale.rqst_margin_pct%type:=0;
  --l_disp_comp_prc_fl bus_model.DISP_COMP_PRC_FL%type; --Added with CR 4774
  l_disp_comp_prc_fl bus_model.DISP_COMP_PRC_FL%type; --ADDED BY LAKSHMI FOR US6037 --> Show Component Level Pricing
  l_disp_comp_prc_fl_BM bus_model.DISP_COMP_PRC_FL%type;
  reject_deal EXCEPTION;
  cntr NUMBER;
  l_TENANTID deal.tenantid_data_cd%type;--l_TENANTID deal.tenantid%type;---Added for SMO Changes (tenantid column is replaced with tenantid_data_cd  for Federal project)
  l_log_messages VARCHAR2(1);
  BEGIN
  
  SELECT app_value
  INTO l_log_messages
  FROM APP_CONFIG_KEYS
 WHERE app_key='LOG_EXT_LP_MSG';
 
  o_create_new_version:='Y';
  --dbms_output.PUT_LINE ('INSERT PROD LINE for bundle ');
  --dbms_output.PUT_LINE ('Deal type is : ' || i_dealsourcedealtype || ' and auth bdnet amount is : ' || i_bdnetamt);
  --l_gypsy_prod_string:='''' || i_prod_string ||'''';
  --add option code if the option code exists for that product.
  --IF i_opt_cd          IS NOT NULL THEN
--    l_gypsy_prod_string:= chr(39) || RPAD(i_prod_string,12) || rpad(i_opt_cd,3) || chr (39);
--  ELSE
    --l_gypsy_prod_string:= chr(39) || i_prod_string || chr(39);
  --END IF;

  BEGIN
  --dbms_output.put_line('i_use_ext_list_price: '||i_use_ext_list_price||' for product: '||l_prod_nr);
  ---Changes for CR 3156 (Invalid products are not allowed to be added to a deal)----
   l_price :=NULL;
   l_prod_desc:=NULL;
   l_prod_nr:=NULL;
   l_stat:=NULL;
   l_prod_line:=NULL;
   l_non_discount_fl :=NULL;
   l_ref_price_fl:=NULL;
   l_prod_family:=NULL;
  SELECT price, prod_desc , prod_nr, stat, prod_line, non_discount_fl , ref_price_fl , prod_family
  INTO l_price, l_prod_desc , l_prod_nr, l_stat, l_prod_line , l_non_discount_fl, l_ref_price_fl, l_prod_family
  FROM gt_product_bundles_prices
  WHERE prod_nr=i_prod_string
  AND prod_opt_cd= DECODE(i_opt_cd,NULL,'1',i_opt_cd);
  --DBMS_OUTPUT.PUT_LINE('Price found for the product: '|| i_prod_string ||' and opt_cd: '||i_opt_cd||'__is: '||l_price);
 EXCEPTION
 --Below exception added for CR:282430-ORA-01422: exact fetch returns more than requested number of rows
  WHEN TOO_MANY_ROWS THEN
  SELECT DISTINCT price, prod_desc , prod_nr, stat, prod_line, non_discount_fl , ref_price_fl , prod_family
  INTO l_price, l_prod_desc , l_prod_nr, l_stat, l_prod_line , l_non_discount_fl, l_ref_price_fl, l_prod_family
  FROM gt_product_bundles_prices
  WHERE prod_nr=i_prod_string
  AND prod_opt_cd= DECODE(i_opt_cd,NULL,'1',i_opt_cd)
  AND prod_line IN (SELECT prod_line_cd FROM prod_line WHERE tenantid =(SELECT tenantid FROM deal WHERE bd_id=i_bd_id));
  WHEN NO_DATA_FOUND THEN
  DBMS_OUTPUT.PUT_LINE('Data not found for: '|| i_opt_cd||','||i_prod_string);
  ---Changes for CR 3156 (Invalid products are not allowed to be added to a deal)----
   l_price :=NULL;
   l_prod_desc:=NULL;
   l_prod_nr:=NULL;
   l_stat:=NULL;
   l_prod_line:=NULL;
   l_non_discount_fl :=NULL;
   l_ref_price_fl:=NULL;
   l_prod_family:=NULL;
  WHEN OTHERS THEN
  DBMS_OUTPUT.PUT_LINE('Error occured while querying gt_product_bundles_prices: '||SQLERRM);
  ---Changes for CR 3156 (Invalid products are not allowed to be added to a deal)----
   l_price :=NULL;
   l_prod_desc:=NULL;
   l_prod_nr:=NULL;
   l_stat:=NULL;
   l_prod_line:=NULL;
   l_non_discount_fl :=NULL;
   l_ref_price_fl:=NULL;
   l_prod_family:=NULL;
  END;

--Changes made as per CR83540, Overwrite Gypy non_discount_flag with XML value from Optimus
--CR83540The Non-discountable attribute in Eclipse is displayed incorrect for non-discountable product which set in Optimus
  l_non_discount_fl := i_non_discount_Fl;

  --dbms_output.put_line (' GPSy PROD for Bundle : ' ||l_gypsy_prod_string);
  --Get GPSy Price
  --pkgpricelst_chiante.gppricecollectdtlphd_ref ( i_countrycd, i_pricelistcd, i_currencycd, i_pricetermcd, l_gypsy_prod_string, 'N', i_hierarchy_cd, i_enddate, p_gypsy_price );
  ----dbms_output.put_line (' insert prod line -- 1  ');
  --Loop through GPSy price cursor to get price details.
  --LOOP
  
    --Below block added by Lakshmi for HP SW Project
  IF i_use_ext_list_price ='Y' THEN
    --dbms_output.put_line('l_price: '||l_price||' i_prod_list_price: '||i_prod_list_price);
    IF l_log_messages='Y' THEN
    l_errors  :='Gpsy List price: '||l_price||' of Product : ' || i_prod_string||' '||i_opt_cd || ' is overwritten by External List Price: '||i_prod_list_price;
    l_msg_type :='WARNING';
    dbms_output.put_line('l_errors: '||l_errors);
    inserterror_output_messages (i_bd_id,i_bd_nr,i_bd_version_nr, i_deal_prog_cd,i_bdme_aprvl_cd,i_quote_dist_cd,i_euv_stat_code, 
        i_high_risk_fl,i_risk_reasion_desc,i_risk_desc,l_errors,l_msg_type, i_deal_creation_guid,NULL,NULL,l_errors);
    END IF;
    l_price := i_prod_list_price;
  END IF;
  
   -- FETCH p_gypsy_price INTO gprice;
      IF i_prod_desc is not null THEN  --Added by Ramesh on 17-Feb-2014 for R8
         l_prod_desc := i_prod_desc;
    END IF;

    ----dbms_output.put_line (' insert prod line -- 2  ');
    IF l_price IS NULL THEN
      ----dbms_output.put_line (' insert prod line -- 3  ');
      l_createnewversion:='N';
      l_errors          :='Product : ' || l_gypsy_prod_string || ' does not exists in GPSy. Cannot create new version of deal. Check Bundle Config : ' || i_config_id ||'Bundle Source config id: '|| i_source_config_id ||',Bundle Source : ' || i_config_src || ', Bundle Line : '|| i_line_nr;
      --dbms_output.put_line (l_errors);
      l_msg_type          :='WARNING';
      o_create_new_version:='N';
      --dbms_output.PUT_LINE (' Error from GPSy ---Cannot proceed .. Create New Version Flag : ' || o_create_new_version);
      --insert into message repository
      inserterror_output_messages (i_bd_id,i_bd_nr,i_bd_version_nr, i_deal_prog_cd,i_bdme_aprvl_cd,i_quote_dist_cd,i_euv_stat_code, i_high_risk_fl,i_risk_reasion_desc,i_risk_desc,l_errors,l_msg_type, i_deal_creation_guid,NULL,NULL,l_errors);
    END IF;
    --EXIT   WHEN P_GYPSY_PRICE%NOTFOUND;
    --get the product line details
    --dbms_output.put_line (' insert prod line -- 4  ');
    IF (to_number(l_price) >to_number(i_prod_list_price)) THEN
      -- l_errors                 := 'GPSy price is greater than smart quote price for the product : ' || gprice.prod_nr ||'  ' || gprice.prod_desc ||'  GPSy Price : '|| gprice.price || ' , SmartQuote Price : ' || i_prod_list_price;
      l_errors := 'GPSy price is greater than BMI price for the product : ' || l_prod_nr ||'  ' || l_prod_desc ||'  GPSy Price : '|| l_price || ' , bmi Price : ' || i_prod_list_price;
      --dbms_output.put_line (l_errors);
      L_MSG_TYPE:='WARNING';
      inserterror_output_messages (i_bd_id,i_bd_nr,i_bd_version_nr, i_deal_prog_cd,i_bdme_aprvl_cd,i_quote_dist_cd,i_euv_stat_code, i_high_risk_fl,i_risk_reasion_desc,i_risk_desc,l_errors,l_msg_type, i_deal_creation_guid,NULL,NULL,l_errors);
    END IF;
    IF (to_number(l_price) <to_number(i_prod_list_price)) THEN
      --l_errors                 := 'GPSy price is lesser than smart quote price for the product : ' || gprice.prod_nr ||'  ' || gprice.prod_desc ||'  GPSy Price : '|| gprice.price || ' , SmartQuote Price : ' || i_prod_list_price ;
      l_errors := 'GPSy price is lesser than BMI price for the product : ' || l_prod_nr ||'  ' || l_prod_desc ||'  GPSy Price : '|| l_price || ' , bmi Price : ' || i_prod_list_price ;
      --dbms_output.put_line (l_errors);
      --L_MSG_TYPE:='WARNING'; Commented as part of CR 74200
      L_MSG_TYPE:='WARNING';
      inserterror_output_messages (i_bd_id,i_bd_nr,i_bd_version_nr, i_deal_prog_cd,i_bdme_aprvl_cd,i_quote_dist_cd,i_euv_stat_code, i_high_risk_fl,i_risk_reasion_desc,i_risk_desc,l_errors,l_msg_type, i_deal_creation_guid,NULL,NULL,l_errors);
      --RAISE REJECT_DEAL;
    END IF;
    --Check product status - Active /Obsolete
    IF (l_stat='O') THEN
      l_errors    :='Product : ' || l_prod_nr ||'  ' || l_prod_desc ||'  is obsolete ' ;
      --dbms_output.put_line (l_errors);
      L_MSG_TYPE:='WARNING';
      inserterror_output_messages (i_bd_id,i_bd_nr,i_bd_version_nr, i_deal_prog_cd,i_bdme_aprvl_cd,i_quote_dist_cd,i_euv_stat_code, i_high_risk_fl,i_risk_reasion_desc,i_risk_desc,l_errors,l_msg_type, i_deal_creation_guid,NULL,NULL,l_errors);
    END IF;
    --if deal is a high touch deal then
    --auth bd net should be null
    --and bdnet amount should be populated to rqst_bd_net_prc_am
    --QC2554
    IF (i_dealsourcedealtype   <>c_high_touch_dealtype_desc ) THEN
      l_auth_bdnet_amt         :=i_bdnetamt;
      L_EXT_PRE_APPRV_PRC_AM := i_EXT_PRE_APPRV_PRC_AM;
    elsif (i_dealsourcedealtype = c_high_touch_dealtype_desc AND i_line_prog_cd ='Y') THEN--added for ePrime requorement as auith amt should not be null if product is added with authoriszation
      l_auth_bdnet_amt         :=i_bdnetamt;
      L_EXT_PRE_APPRV_PRC_AM := i_EXT_PRE_APPRV_PRC_AM;
    ELSE
      l_auth_bdnet_amt:=NULL;
      --L_EXT_PRE_APPRV_PRC_AM :=null;
    END IF;
    /*
    ---------------------------------------------------------------
    -- zero list price management for the bundle products
    ---------------------------------------------------------------
    if gprice.price=0 then
    L_AUTH_BDNET_AMT:=0;
    l_errors                 := 'Zero list Price for GPSy product (Bundle Product ) :' ||' Bundle Line - ' ||  i_line_item_nr_for_bundle ||' ' || gprice.prod_nr ||'  ' || gprice.prod_desc ||'  GPSy Price : '|| gprice.price || ' , SmartQuote Price : ' || i_prod_list_price || ' , BD Net values will be marked as zero';
    L_MSG_TYPE:='WARNING';
    inserterror_output_messages (i_bd_id,i_bd_nr,i_bd_version_nr, i_deal_prog_cd,i_bdme_aprvl_cd,i_quote_dist_cd,i_euv_stat_code, i_high_risk_fl,i_risk_reasion_desc,i_risk_desc,l_errors,l_msg_type, i_deal_creation_guid,NULL,NULL,l_errors);
    end if;
    */
    --get details from prod_line table
    BEGIN
      SELECT pl.prod_line_desc_tx,
        pl.bus_unit_cd,
        bu.bus_group_cd
      INTO l_line_prod_gnrc_desc_tx,
        l_line_bus_unit_cd,
        l_line_bus_group_cd
      FROM prod_line pl,
        bus_unit bu
      WHERE PL.BUS_UNIT_CD =BU.BUS_UNIT_CD
      AND pl.prod_line_cd  =l_prod_line;
    EXCEPTION
    WHEN NO_DATA_FOUND THEN
      l_errors :=' Prod line ' || l_prod_line || ' details does not exists in prodcut line master ';
      ----dbms_output.PUT_LINE (L_ERRORS);
      L_MSG_TYPE:='WARNING';
      inserterror_output_messages (i_bd_id,i_bd_nr,i_bd_version_nr, i_deal_prog_cd,i_bdme_aprvl_cd,i_quote_dist_cd,i_euv_stat_code, i_high_risk_fl,i_risk_reasion_desc,i_risk_desc,l_errors,l_msg_type, i_deal_creation_guid,NULL,NULL,l_errors);
    END;
    --**************************************************************************
    --Adding Non Header Bundles
    --**************************************************************************
    IF (i_add_bundles='Y' AND i_add_bundleheader ='N') THEN
      --get the new scale id for the line
      SELECT NVL(MAX(scale_id),0)
      INTO l_scale_id
      FROM line_disc_scale
      WHERE bd_id =i_bd_id
      AND line_nr =i_line_item_nr_for_bundle;
      --dbms_output.put_line ( ' insert into bundle line with scale id for the Line item ' || i_line_item_nr_for_bundle || ' and bundle line ' || i_line_nr );
      --pending
      --if scale id is null or zero then raise the error and exit from deal
      -- creation.
      /*
      bd_id
      line_nr
      disc_bndry_id
      scale_id
      item_nr
      */
      --                    --dbms_output.put_line (' Inserting into bundle line
      -- without Header details ' || i_line_nr);
      --When adding a bundle line details
      --i_line_nr contains the bundle line details NR
      --**************************************************************************
      -- Insert into Bundle_line table - Non Header.
      --**************************************************************************
      BEGIN
        G_SET_LINE_AUTHORIZER_CODE:=NULL;
        --decide on whether to authorize the line
        -----------
        --dbms_output.put_line (' --------- outputs for the bundle  line - g_set_line_authorizer_code fields');
        --dbms_output.PUT_LINE (' i_bdnetamt ' || I_BDNETAMT);
        --dbms_output.PUT_LINE (' GPRICE.PRICE ' || GPRICE.PRICE );
        --dbms_output.PUT_LINE (' I_AUTH_MC_HP_EMP_NR ' || I_AUTH_MC_HP_EMP_NR);
        --dbms_output.PUT_LINE ('I_LINE_ADDED_BY_EMP_NR      ' || I_LINE_ADDED_BY_EMP_NR );
        --dbms_output.PUT_LINE (' i_auth_stat_cd ' || I_AUTH_STAT_CD);
        --dbms_output.PUT_LINE (' i_auth_emp_nr ' || I_AUTH_EMP_NR);
        --dbms_output.PUT_LINE (' ------------outputs for the bundle  line - g_set_line_authorizer_code fields .. ends');

        IF ( I_BDNETAMT             IS NULL OR l_PRICE IS NULL OR I_AUTH_MC_HP_EMP_NR IS NULL OR I_LINE_ADDED_BY_EMP_NR IS NULL OR I_AUTH_STAT_CD IS NULL OR I_AUTH_EMP_NR IS NULL ) THEN
          g_set_line_authorizer_code:=NULL;
          g_set_gnrc_line_authorizer:= NULL;
          g_line_auth_type          := NULL;
        ELSIF (I_AUTH_STAT_CD        ='Y') THEN
          g_set_line_authorizer_code:= i_auth_emp_nr;
          g_set_gnrc_line_authorizer:= i_auth_mc_hp_emp_nr;
          g_line_auth_type          := i_line_auth_type;
        ELSE
          g_set_line_authorizer_code:=NULL;
          g_set_gnrc_line_authorizer:= NULL;
          g_line_auth_type          := NULL;
        END IF;

        ----dbms_output.put_line (' Non Header bundle auth code g_set_line_authorizer_code' ||g_set_line_authorizer_code);
        -----------------------------------
        --calculate Auth Disc PCT
        -----------------------------------
        --dbms_output.PUT_LINE (' in bundle line - std disc is : ' || I_STDDISCPCT || ' Non Header product ');
        --dbms_output.put_line ('i_dealsourcedealtype : ' || i_dealsourcedealtype);
        --IF (I_PROD_LIST_PRICE>0 AND GPRICE.PRICE>0 AND i_dealsourcedealtype<>c_high_touch_dealtype_desc) THEN
        IF l_PRICE>0 THEN
          --dbms_output.PUT_LINE (' Calculated Auth Disc % for Each Bundle LIne is : ' || (ROUND(100- (( I_BDNETAMT/GPRICE.PRICE) *100)- NVL(I_STDDISCPCT,0),2)) );
          --l_auth_disc_otc_pc:=ROUND(((gprice.price-i_bdnetamt)/gprice.price) *100 ,2);
          IF ( (ROUND(100 - (( I_BDNETAMT/l_PRICE) *100)- NVL(I_STDDISCPCT,0),2))>99.99 OR ROUND(100- (( I_BDNETAMT/l_PRICE) *100)- NVL(I_STDDISCPCT,0),2) <-99.99 ) THEN
            IF I_DEALSOURCEDEALTYPE                                                   =C_HIGH_TOUCH_DEALTYPE_DESC THEN
              L_ERRORS                                                               :=' Invalid Rqst Disc % for Bundle Line SKU: '|| i_prod_string||CASE WHEN i_opt_cd IS NOT NULL THEN ','||i_opt_cd END||
              ' Rqst BDNet :' || I_BDNETAMT || ' List price :' || l_PRICE || ' Rqst Disc Amt is : ' || (ROUND(100- (( I_BDNETAMT/l_PRICE) *100)- NVL(I_STDDISCPCT,0),2));
            ELSE
              L_ERRORS :=' Invalid Auth Disc % for Bundle Line SKU: '|| i_prod_string||CASE WHEN i_opt_cd IS NOT NULL THEN ','||i_opt_cd END||
              ' Auth BDNet :' || I_BDNETAMT || ' List price :' || l_PRICE || ' Auth Disc Amt is : ' || (ROUND(100- (( I_BDNETAMT/l_PRICE) *100)- NVL(I_STDDISCPCT,0),2));
            END IF;
            L_MSG_TYPE :=C_M_TYPE_WARNING;
            --dbms_output.PUT_LINE (l_errors);
            --log errors
            inserterror_output_messages ( i_bd_id,i_bd_nr,i_bd_version_nr,  NULL, NULL, NULL, NULL, NULL,NULL, NULL, l_errors, l_msg_type, i_deal_creation_guid, NULL, NULL,l_errors );
            l_auth_disc_otc_pc:=NULL;
            l_rqst_disc_otc_pc:=0;
            
                 --Condition added by Lakshmi for CR:3268 - NGQ: When Eclipse receives a BDNet of -0- with list price greater than -0- the Rqst% should be recalculated
            IF ((I_BDNETAMT = 0 AND I_STDDISCPCT=0) OR (ROUND(100 - (( I_BDNETAMT/l_PRICE) *100)- NVL(I_STDDISCPCT,0),2))>99.99) THEN 
               l_rqst_disc_otc_pc :=100;
            L_ERRORS                                                                 :='Adjusting Rqst Disc % to 100, for Bundle Line SKU: '|| i_prod_string||CASE WHEN i_opt_cd IS NOT NULL THEN ','||i_opt_cd END||
                     ' Line: '||i_line_nr ||
                     ' ,Item: '||i_line_item_nr_for_bundle ||
                     ' Rqst BDNet :' || I_BDNETAMT || ' List price :' || l_PRICE|| ' Rqst Disc Amt is : ' || 
                     (ROUND(100- (( I_BDNETAMT/l_PRICE) *100)- NVL(I_STDDISCPCT,0),2));
                     L_MSG_TYPE                                                               :=C_M_TYPE_WARNING;
                     inserterror_output_messages ( i_bd_id,i_bd_nr,i_bd_version_nr,  NULL, NULL, NULL, NULL, NULL,NULL, NULL, l_errors, l_msg_type, i_deal_creation_guid, NULL, NULL,l_errors );
                    ELSE 
                l_rqst_disc_otc_pc:=0;
            END IF; --End of Condition added for CR:3268 - NGQ: When Eclipse receives a BDNet of -0- with list price greater than -0- the Rqst% should be recalculated
            
            
            
          ELSE
            L_AUTH_DISC_OTC_PC:=ROUND(100- (( I_BDNETAMT/l_PRICE) *100)- NVL(I_STDDISCPCT,0),2);
            l_rqst_disc_otc_pc:=L_AUTH_DISC_OTC_PC;
          END IF;
        ELSE
          l_auth_disc_otc_pc  :=NULL;
          IF l_PRICE      =0 THEN
            l_auth_disc_otc_pc:=0;
            l_rqst_disc_otc_pc:=0;
          END IF; 
        END IF;


        --set auth Disc % to Null in case of High Touch Deal
        --IF i_dealsourcedealtype=c_high_touch_dealtype_desc AND i_line_prog_cd <> 'Y' THEN --i_line_prog_cd condition is added for ePrime as ePrime can approve high touch deal products
          --L_AUTH_DISC_OTC_PC  :=NULL;
        --END IF;

        --By Harsh Shah 29-Nov-2013
        --if auth stat code is No that means there is no authorization for that line
        -- the the auth discount % should be null

        IF i_line_prog_cd <> 'Y' THEN --i_line_prog_cd condition is added for ePrime as ePrime can approve high touch deal products
          L_AUTH_DISC_OTC_PC  :=NULL;
        END IF;

        ----dbms_output.PUT_LINE (' Bundle line Auth disc % value ' || L_AUTH_DISC_OTC_PC );
        ----dbms_output.put_line ('Bundle Line Auth Stat Code I_AUTH_STAT_CD : ' || I_AUTH_STAT_CD || ' AND auth date gmt is : ' || I_AUTHDATEGMT);
        ---Added on 23-Jan for CR3236
        IF I_SKU_PL <> l_PROD_LINE THEN
          L_MSG_TYPE:='WARNING';
          --l_errors                 :='PL '||i_sku_pl ||'does not tally between SQ and Eclipse' || '(SQ PL :'|| i_sku_pl||' GPSy PL :'||gprice.prod_line||')'||'PL '||i_sku_pl ||'Is Overriden';
          l_errors :='PL for SKU '||i_prod_string ||' does not tally between '||g_err_src||' and Eclipse ' || '( '||g_err_src||' PL :'|| i_sku_pl||' GPSy PL :'||l_prod_line||' )'||' PL for SKU '||i_prod_string ||' is overriden';
          --dbms_output.put_line (l_errors);
          inserterror_output_messages (i_bd_id,i_bd_nr,i_bd_version_nr, i_deal_prog_cd,i_bdme_aprvl_cd,i_quote_dist_cd,i_euv_stat_code, i_high_risk_fl,i_risk_reasion_desc,i_risk_desc,l_errors,l_msg_type, i_deal_creation_guid,NULL,NULL,l_errors);
        END IF;
        ---End of add CR3236
        ---------------------------------------------------------------
        -- zero list price management for the bundle products
        ---------------------------------------------------------------
        IF l_price    =0 THEN
        --Added by Lakshmi to use LP and BDNet from XML when LP from Gpsy = 0    
        l_price := NVL(i_prod_list_price,0);
        l_auth_bdnet_amt         :=NVL(i_bdnetamt,0);
        
          --L_AUTH_BDNET_AMT:=NULL;----Commented as part of CR81079
          --Commented the below code to support List price= 0 in Gpsy - Lakshmi 
          --L_AUTH_BDNET_AMT :=0; --Added as part of CR81079
          --L_EXT_PRE_APPRV_PRC_AM :=0;
          --L_ERRORS                 := 'Zero list Price for GPSy product (Bundle Product ) :' ||' Bundle Line - ' ||  I_LINE_ITEM_NR_FOR_BUNDLE ||' ' || GPRICE.PROD_NR ||'  ' || GPRICE.PROD_DESC ||'  GPSy Price : '|| GPRICE.PRICE || ' , SmartQuote Price : ' || I_PROD_LIST_PRICE || ' , BD Net values will be marked as zero';
          --L_ERRORS  := 'Zero list Price for GPSy product (Bundle Product ) :' ||' Bundle Line - ' || I_LINE_ITEM_NR_FOR_BUNDLE ||' ' || l_PROD_NR ||'  ' || l_PROD_DESC ||'  GPSy Price : '|| l_PRICE || ' , bmi Price : ' || I_PROD_LIST_PRICE || ' , BD Net values will be marked as zero';
          L_ERRORS  := 'Zero list Price for GPSy product (Bundle Product ) :' ||' Bundle Line - ' || I_LINE_ITEM_NR_FOR_BUNDLE ||' ' || l_PROD_NR ||'  ' || l_PROD_DESC ||'  GPSy Price : '|| l_PRICE || ' , bmi Price : ' || I_PROD_LIST_PRICE ;
          L_MSG_TYPE:='WARNING';
          INSERTERROR_OUTPUT_MESSAGES (I_BD_ID,I_BD_NR,I_BD_VERSION_NR, I_DEAL_PROG_CD,I_BDME_APRVL_CD,I_QUOTE_DIST_CD,I_EUV_STAT_CODE, I_HIGH_RISK_FL,I_RISK_REASION_DESC,I_RISK_DESC,L_ERRORS,L_MSG_TYPE, I_DEAL_CREATION_GUID,NULL,NULL,L_ERRORS);
        END IF;
        --inserting bundle line details
        --done
        --MARGINS
        IF I_PROD_COST_PRICE                                                                                                          >0 THEN
          IF ((L_AUTH_BDNET_AMT                                                                                                      IS NULL OR L_AUTH_BDNET_AMT=0) AND l_price>0 ) THEN
            IF I_BDNETAMT                                                                                                             >0 THEN
              IF (ROUND((( (I_BDNETAMT                                                 - I_PROD_COST_PRICE) / I_BDNETAMT) * 100), 2)) < -99 THEN --CR 1262 Nov release  (ROUND(((  (I_BDNETAMT - I_PROD_COST_PRICE) / I_BDNETAMT) * 100), 2) <0 AND length(ROUND(((  (I_BDNETAMT - I_PROD_COST_PRICE) / I_BDNETAMT) * 100), 2))>3 ) THEN ---CR4717
                L_RQST_MARGIN_PCT                                                                                                    :=-99.99;                                                   --CR4717
              ELSIF (ROUND((( (I_BDNETAMT                                              - I_PROD_COST_PRICE) / I_BDNETAMT) * 100), 2)) > 100 THEN                                                 --CR 1262 Nov release (ROUND(((  (I_BDNETAMT - I_PROD_COST_PRICE) / I_BDNETAMT) * 100), 2) >0 AND length(ROUND(((  (I_BDNETAMT - I_PROD_COST_PRICE) / I_BDNETAMT) * 100), 2))>3 ) THEN ---CR4717
                L_RQST_MARGIN_PCT                                                                                                    :=999.99;                                                   --CR4717
              ELSE                                                                                                                                                                              ---CR4717
                L_RQST_MARGIN_PCT:=ROUND((( (I_BDNETAMT - I_PROD_COST_PRICE) / I_BDNETAMT) * 100), 2);
              END IF;
            END IF;
          elsif ((L_AUTH_BDNET_AMT                                                                                                                   IS NOT NULL AND L_AUTH_BDNET_AMT > 0) ) THEN
            IF (ROUND((( (L_AUTH_BDNET_AMT                                                       - I_PROD_COST_PRICE) / L_AUTH_BDNET_AMT) * 100), 2)) < -99 THEN -- CR 1262 Nov release (ROUND(((  (L_AUTH_BDNET_AMT - I_PROD_COST_PRICE) / L_AUTH_BDNET_AMT) * 100), 2) <0 AND LENGTH(ROUND(((  (L_AUTH_BDNET_AMT - I_PROD_COST_PRICE) / L_AUTH_BDNET_AMT) * 100), 2))>3 ) THEN --CR4717
              L_RQST_MARGIN_PCT                                                                                                                      :=-99.99;                                                         --CR4717
            ELSIF (ROUND((( (L_AUTH_BDNET_AMT                                                    - I_PROD_COST_PRICE) / L_AUTH_BDNET_AMT) * 100), 2)) > 100 THEN                                                       -- CR 1262 Nov release (ROUND(((  (L_AUTH_BDNET_AMT - I_PROD_COST_PRICE) / L_AUTH_BDNET_AMT) * 100), 2) >0 AND LENGTH(ROUND(((  (L_AUTH_BDNET_AMT - I_PROD_COST_PRICE) / L_AUTH_BDNET_AMT) * 100), 2))>3 ) THEN --CR4717
              L_RQST_MARGIN_PCT                                                                                                                      :=999.99;                                                         --CR4717
            ELSE                                                                                                                                                                                                       --CR4717
              L_RQST_MARGIN_PCT:=ROUND((( (L_AUTH_BDNET_AMT - I_PROD_COST_PRICE) / L_AUTH_BDNET_AMT) * 100), 2);
            END IF;
          ELSE
            L_RQST_MARGIN_PCT:=0;
          END IF;
        ELSE
          L_RQST_MARGIN_PCT:=0;
        END IF;
        --Modified by Harsh Shah , 23-Jan-2013
        --CR 4786 - [APJ MTP] ???Auth Amt? and ???Auth%?  populated with some data after creating the deal via EIS.
        --updating extended_price column with Null when list price is zero.
        --updating AUTH_DISC_OT_PCT column with Null when list price is zero.
        -- 8-feb-2013 by Harsh Shah
        -- modified the Auth amount for the bundle_line table. If list price is 0 then auth amount should be null
        ----dbms_output.put_line ( ' bundle line test L_AUTH_BDNET_AMT for bundle line ' || L_AUTH_BDNET_AMT || ' prod_gnrc_nr_tx ' ||gprice.prod_nr );
         SELECT COUNT(*) INTO cntr FROM gt_bundle_line;

IF cntr=0 THEN
BEGIN
        INSERT /*+APPEND */
        INTO BUNDLE_LINE
          (
            bd_id,
            line_nr,
            prod_gnrc_nr_tx,
            prod_opt_cd,
            disc_bndry_id,
            scale_id,
            qty,
            prod_type,
            prod_gnrc_desc_tx,
            disc_pc,
            list_price,
            extended_price,
            rqst_bd_net_prc_am,
            auth_bd_net_prc_am,
            rqst_incr_disc_am,
            auth_incr_disc_am,
            version_created,
            assoc_pl,
            item_prog_cd,
            auth_mc_date ,
            auth_mc_hp_emp_nr,
            disc_as_pct,
            disc_type_cd,
            rqst_disc_ot_pc,
            auth_disc_ot_pc,
            prev_auth_cd,
            creation_dts,
            update_dts,
            ref_price_fl,
            price_list_cd,
            currency_cd,
            price_term_cd,
            banded_fl,
            SPCL_CONFIG_FL,
            PROD_COST_AM,
            prod_cost_date,
            rqst_margin_pct,
            auth_margin_pct,
            cost_avail_fl,
            auth_dt_gmt,
            future_prod_fl,
            mult_cntry_vrfy_fl,
            ship_charge_fl,
            bus_group_cd,
            bus_unit_cd,
            item_nr,
            AUTH_BASIS_TEXT,
            NON_DISCOUNT_FL,
            line_auth_type,
            auth_generic_emp_nr,
            EXT_PRE_APPRV_PRC_AM,
            GUIDANCE_AVAILABLE_FL,
            GUIDANCE_DETAILS_ID,
            GUIDANCE_EXPERT_PCT,
            GUIDANCE_FLOOR_PCT,
            GUIDANCE_TYPICAL_PCT,
            GUIDANCE_LAST_REFRESH_DT
            ,INSTANT_PRC_METHOD --Added for UsS7301
            ,INSTANT_PRC_AMT  --Added for UsS7301
          )
          VALUES
          (
            i_bd_id,
            i_line_item_nr_for_bundle,
            TRIM(l_prod_nr),--gprice.prod_nr,--Changes made by Lakshmi to remove extra spaces in SQ deals
            DECODE(i_opt_cd,NULL,' ',i_opt_cd),
            1, --disc boundry
            1, --SCALE ID
            I_PROD_QTY,
            NULL,
            SUBSTRB(l_prod_desc,1,65),
            NULL,                                                                                               --prod_type
            l_PRICE,                                                                                       --list price
            DECODE(l_PRICE,0,NULL,DECODE(L_AUTH_BDNET_AMT,NULL,i_bdnetamt,L_AUTH_BDNET_AMT) * i_prod_qty), --extended price
            DECODE (L_AUTH_BDNET_AMT,NULL,I_BDNETAMT,L_AUTH_BDNET_AMT),                                         --rqst_bd_net_prc_am
            --DECODE(l_PRICE,0,0,DECODE(I_AUTH_STAT_CD,'Y',L_AUTH_BDNET_AMT,NULL))  ,                       --auth amt, Change by harsh 29-nov-2013 --Commented the code to support List price= 0 in Gpsy - Lakshmi 
            DECODE(I_AUTH_STAT_CD,'Y',L_AUTH_BDNET_AMT,NULL),                       --auth amt, Change by harsh 29-nov-2013 
            DECODE(l_PRICE,0,0,NULL),                                                                      --RQST_INCR_DISC_AM
            NULL,
            i_bd_version_nr,
            l_prod_line,
            I_AUTH_STAT_CD, --item_prog_cd
            DECODE (I_AUTH_STAT_CD,'Y',i_auth_mc_date,NULL),
            G_SET_LINE_AUTHORIZER_CODE,
            DECODE(I_STDDISCPCT,NULL,0, I_STDDISCPCT),             --disc_as_pct
            DECODE(i_pricingtypecd,NULL,'B',i_pricingtypecd),      -- disc_type
            DECODE (l_rqst_disc_otc_pc,NULL,0,l_rqst_disc_otc_pc), --rqst_disc_ot_pc
            --DECODE(l_price,0,0,L_AUTH_DISC_OTC_PC),--auth_disc_ot_pc
            DECODE(I_AUTH_STAT_CD,'Y',DECODE(l_price,0,0,L_AUTH_DISC_OTC_PC),NULL),--Added by Lakshmi for CR96402 
            'N',
            sysdate,
            sysdate,
            l_ref_price_fl,
            i_pricelistcd,
            i_currencycd,
            i_pricetermcd,
            i_banded_fl,                                                --BANDED -- modified byHarsh Shah 16-Oct-2013 to cater to the requirement of BMI r7
            'N',                                                -- SPCL CONFIG
            I_PROD_COST_PRICE,                                  --PROD COST
            sysdate,                                            --PROD COST DATE
            L_RQST_MARGIN_PCT,                                  --RQST MARGIN
            DECODE (I_AUTH_STAT_CD,'Y',L_RQST_MARGIN_PCT,NULL), --AUTH MARGIN
            DECODE(I_PROD_COST_PRICE,NULL,'N',0,'N','Y'),       --COST AVAIL FL
            DECODE (I_AUTH_STAT_CD,'Y',I_AUTHDATEGMT,NULL),
            'N',
            'N',
            'N',
            l_line_bus_group_cd,
            L_LINE_BUS_UNIT_CD,
            I_LINE_NR,
            DECODE (I_AUTH_STAT_CD,'Y',I_PROD_AUTH_BASIS_TEXT,NULL),
            l_NON_DISCOUNT_FL,-- Modified by Lakshmi for CR83540- The Non-discountable attribute in Eclipse is displayed incorrect for non-discountable product which set in Optimus
            g_line_auth_type,
            g_set_gnrc_line_authorizer,
            L_EXT_PRE_APPRV_PRC_AM,-- DECODE(L_EXT_PRE_APPRV_PRC_AM ,NULL, 0,L_EXT_PRE_APPRV_PRC_AM)
            i_guidance_available_fl,
            DECODE(i_guidance_available_fl,'Y',i_guidance_details_id,NULL),
            DECODE(i_guidance_available_fl,'Y',i_guidance_expert_pct,NULL),
            DECODE(i_guidance_available_fl,'Y',i_guidance_floor_pct,NULL),
            DECODE(i_guidance_available_fl,'Y',i_guidance_typical_pct,NULL),
             DECODE(i_guidance_available_fl,'Y',TO_TIMESTAMP (SUBSTR(i_guidance_last_refresh_dt,1,19),'YYYY-MM-DD"T"HH24:MI:SS'),NULL)
            ,i_InstantPrcMethod  --Added for UsS7301
           ,i_InstantPrcAmount  --Added for US 7301

          );
      EXCEPTION
      WHEN dup_val_on_index THEN
        l_errors            := 'Duplicate Bundle Line. Bundle Line :'|| i_line_item_nr_for_bundle || ' Prod Nr : ' || l_prod_nr || ' OptCd :' || i_opt_cd;
        l_msg_type          :=c_m_type_warning;
        o_create_new_version:='N';
        --insert into error and output table
        INSERTERROR_OUTPUT_MESSAGES ( i_bd_id, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, l_errors, l_msg_type, g_deal_creation_guid, NULL, NULL,l_errors );
        END;
ELSE
 INSERT /*+APPEND */
        INTO BUNDLE_LINE
          (
            bd_id,
            line_nr,
            prod_gnrc_nr_tx,
            prod_opt_cd,
            disc_bndry_id,
            scale_id,
            qty,
            prod_type,
            prod_gnrc_desc_tx,
            disc_pc,
            list_price,
            extended_price,
            rqst_bd_net_prc_am,
            auth_bd_net_prc_am,
            rqst_incr_disc_am,
            auth_incr_disc_am,
            version_created,
            assoc_pl,
            item_prog_cd,
            auth_mc_date ,
            auth_mc_hp_emp_nr,
            disc_as_pct,
            disc_type_cd,
            rqst_disc_ot_pc,
            auth_disc_ot_pc,
            prev_auth_cd,
            creation_dts,
            update_dts,
            ref_price_fl,
            price_list_cd,
            currency_cd,
            price_term_cd,
            banded_fl,
            SPCL_CONFIG_FL,
            PROD_COST_AM,
            prod_cost_date,
            rqst_margin_pct,
            auth_margin_pct,
            cost_avail_fl,
            auth_dt_gmt,
            future_prod_fl,
            mult_cntry_vrfy_fl,
            ship_charge_fl,
            bus_group_cd,
            bus_unit_cd,
            item_nr,
            AUTH_BASIS_TEXT,
            NON_DISCOUNT_FL,
            line_auth_type,
            auth_generic_emp_nr,
            EXT_PRE_APPRV_PRC_AM,
            GUIDANCE_AVAILABLE_FL,
            GUIDANCE_DETAILS_ID,
            GUIDANCE_EXPERT_PCT,
            GUIDANCE_FLOOR_PCT,
            GUIDANCE_TYPICAL_PCT,
            GUIDANCE_LAST_REFRESH_DT
            ,INSTANT_PRC_METHOD --Added for UsS7301
            ,INSTANT_PRC_AMT  --Added for UsS7301
          )
          VALUES
          (
            i_bd_id,
            i_line_item_nr_for_bundle,
            TRIM(l_prod_nr),--gprice.prod_nr,--Changes made by Lakshmi to remove extra spaces in SQ deals
            DECODE(i_opt_cd,NULL,' ',i_opt_cd),
            1, --disc boundry
            l_scale_id, --SCALE ID
            I_PROD_QTY,
            NULL,
            SUBSTRB(l_prod_desc,1,65),
            NULL,                                                                                               --prod_type
            l_PRICE,                                                                                       --list price
            DECODE(l_PRICE,0,NULL,DECODE(L_AUTH_BDNET_AMT,NULL,i_bdnetamt,L_AUTH_BDNET_AMT) * i_prod_qty), --extended price
            DECODE (L_AUTH_BDNET_AMT,NULL,I_BDNETAMT,L_AUTH_BDNET_AMT),                                         --rqst_bd_net_prc_am
            --DECODE(l_PRICE,0,0,DECODE(I_AUTH_STAT_CD,'Y',L_AUTH_BDNET_AMT,NULL))  ,                       --auth amt, Change by harsh 29-nov-2013 --Commented the code to support List price= 0 in Gpsy - Lakshmi 
            DECODE(I_AUTH_STAT_CD,'Y',L_AUTH_BDNET_AMT,NULL) ,                       --auth amt, Change by harsh 29-nov-2013 
            DECODE(l_PRICE,0,0,NULL),                                                                      --RQST_INCR_DISC_AM
            NULL,
            i_bd_version_nr,
            l_prod_line,
            I_AUTH_STAT_CD, --item_prog_cd
            DECODE (I_AUTH_STAT_CD,'Y',i_auth_mc_date,NULL),
            G_SET_LINE_AUTHORIZER_CODE,
            DECODE(I_STDDISCPCT,NULL,0, I_STDDISCPCT),             --disc_as_pct
            DECODE(i_pricingtypecd,NULL,'B',i_pricingtypecd),      -- disc_type
            DECODE (l_rqst_disc_otc_pc,NULL,0,l_rqst_disc_otc_pc), --rqst_disc_ot_pc
            --DECODE(l_price,0,0,L_AUTH_DISC_OTC_PC),--auth_disc_ot_pc
            DECODE(I_AUTH_STAT_CD,'Y',DECODE(l_price,0,0,L_AUTH_DISC_OTC_PC),NULL),--Added by Lakshmi for CR96402
            'N',
            sysdate,
            sysdate,
            l_ref_price_fl,
            i_pricelistcd,
            i_currencycd,
            i_pricetermcd,
            i_banded_fl,                                                --BANDED -- modified byHarsh Shah 16-Oct-2013 to cater to the requirement of BMI r7
            'N',                                                -- SPCL CONFIG
            I_PROD_COST_PRICE,                                  --PROD COST
            sysdate,                                            --PROD COST DATE
            L_RQST_MARGIN_PCT,                                  --RQST MARGIN
            DECODE (I_AUTH_STAT_CD,'Y',L_RQST_MARGIN_PCT,NULL), --AUTH MARGIN
            DECODE(I_PROD_COST_PRICE,NULL,'N',0,'N','Y'),       --COST AVAIL FL
            DECODE (I_AUTH_STAT_CD,'Y',I_AUTHDATEGMT,NULL),
            'N',
            'N',
            'N',
            l_line_bus_group_cd,
            L_LINE_BUS_UNIT_CD,
            I_LINE_NR,
            DECODE (I_AUTH_STAT_CD,'Y',I_PROD_AUTH_BASIS_TEXT,NULL),
            l_NON_DISCOUNT_FL,-- Modified by Lakshmi for CR83540- The Non-discountable attribute in Eclipse is displayed incorrect for non-discountable product which set in Optimus
            g_line_auth_type,
            g_set_gnrc_line_authorizer,
            L_EXT_PRE_APPRV_PRC_AM,-- DECODE(L_EXT_PRE_APPRV_PRC_AM ,NULL, 0,L_EXT_PRE_APPRV_PRC_AM)
            i_guidance_available_fl,
            DECODE(i_guidance_available_fl,'Y',i_guidance_details_id,NULL),
            DECODE(i_guidance_available_fl,'Y',i_guidance_expert_pct,NULL),
            DECODE(i_guidance_available_fl,'Y',i_guidance_floor_pct,NULL),
            DECODE(i_guidance_available_fl,'Y',i_guidance_typical_pct,NULL),
             DECODE(i_guidance_available_fl,'Y',TO_TIMESTAMP (SUBSTR(i_guidance_last_refresh_dt,1,19),'YYYY-MM-DD"T"HH24:MI:SS'),NULL)
            ,i_InstantPrcMethod  --Added for UsS7301
           ,i_InstantPrcAmount  --Added for US 7301
          );
             end if;
             --Commenting the below block as per comments by Andrew.
             /* insert into bundle_line_contra(bd_id,
                                                     line_nr,
                                                     item_nr,
                                                     disc_bndry_id,
                                                     scale_id,
                                                     contra_type,
                                                     contra_amt)
                                                     Values
                                                     (i_bd_id,
                                                     i_line_item_nr_for_bundle,
                                                     i_line_nr,
                                                     1,
                                                     1,
                                                     'MANUAL',
                                                     i_ContraAmt); */
      END;
    END IF;
    --adding line item details.rollout details, line_disc_scale details

    --********************************************************************************
    -- Adding bundle Header and Bundle line Details
    --********************************************************************************
    IF (I_ADD_BUNDLES='Y' AND I_ADD_BUNDLEHEADER ='Y') THEN
      --dbms_output.PUT_LINE (' Adding bundle header item ');
      /*
      IF (i_dealsourcedealtype<>c_high_touch_dealtype_desc ) THEN
      l_auth_bdnet_amt      :=I_BD_HDR_LINE_AUTH_BD_NET;
      else
      L_AUTH_BDNET_AMT:=null;
      END IF;
      */
      IF ( i_bdnetamt             IS NULL OR l_price IS NULL OR i_auth_mc_hp_emp_nr IS NULL OR i_line_added_by_emp_nr IS NULL OR i_auth_stat_cd IS NULL OR i_auth_emp_nr IS NULL  ) THEN
        G_SET_LINE_AUTHORIZER_CODE:=NULL;
        g_set_gnrc_line_authorizer:= NULL; --added for new auth changes for line_items
        g_line_auth_type          := NULL;
      ELSIF (I_AUTH_STAT_CD        ='Y' ) THEN
        g_set_line_authorizer_code:= i_auth_emp_nr;
        g_set_gnrc_line_authorizer:= i_auth_mc_hp_emp_nr; --added for new auth changes for line_items
        g_line_auth_type          := i_line_auth_type;
      ELSE
        g_set_line_authorizer_code:=NULL;
        g_set_gnrc_line_authorizer:= NULL; --added for new auth changes for line_items
        g_line_auth_type          := NULL;
      END IF;
      --dbms_output.PUT_LINE (' bundle header item g_set_line_authorizer_code ' || G_SET_LINE_AUTHORIZER_CODE);
      --insert into line_item
      ---Added on 23-Jan for CR3236
      IF i_sku_pl <> l_prod_line THEN
        L_MSG_TYPE:='WARNING';
        --l_errors                 :='PL '||i_sku_pl ||'does not tally between SQ and Eclipse' || '(SQ PL :'|| i_sku_pl||' GPSy PL :'||gprice.prod_line||')'||'PL '||i_sku_pl ||'Is Overriden';
        l_errors :='PL for SKU '||i_prod_string ||' does not tally between '||g_err_src||' and Eclipse ' || '( '||g_err_src||' PL :'|| i_sku_pl||' GPSy PL :'||l_prod_line||' )'||' PL for SKU '||i_prod_string ||' is overriden';
        --dbms_output.put_line (l_errors);
        inserterror_output_messages (i_bd_id,i_bd_nr,i_bd_version_nr, i_deal_prog_cd,i_bdme_aprvl_cd,i_quote_dist_cd,i_euv_stat_code, i_high_risk_fl,i_risk_reasion_desc,i_risk_desc,l_errors,l_msg_type, i_deal_creation_guid,NULL,NULL,l_errors);
      END IF;

      ---End of add CR3236
      --dbms_output.PUT_LINE ('Adding Line -' || ' i_line_type_cd :' || i_line_type_cd || ' line_nr ' || i_line_nr  || 'prod_nr : ' || TRIM(gprice.prod_nr));

      --added bmi-doc_no column to the insert statement
      --this was required by BMI -Beejoy - by harsh Shah 17-jan-2014
      INSERT
      INTO line_item
        (
          line_prog_cd,
          support_pack_fl,
          future_prod_fl,
          change_pndg_fl,
          version_created,
          bd_id,
          LINE_NR,
          LINE_TYPE_CD,
          prod_gnrc_desc_tx,
          prod_gnrc_nr_tx,
          line_added_by_emp_nr,
          bus_group_cd,
          bus_unit_cd,
          assoc_pl_cd,
          assoc_pf_cd,
          estmtd_qt,
          estmtd_dlr_am,
          price_list_cd,
          price_term_cd,
          currency_cd,
          auth_mc_hp_emp_nr,
          AUTH_MC_DATE,
          AUTH_DT_GMT,
          prod_opt_cd,
          REMAINING_AMT,
         -- SQ_AUTH_EMP_NR,
          SRC_BUNDLE_DESC_TX,
          AUTH_GENERIC_EMP_NR,
          line_auth_type,
          bmi_doc_no
        )
        VALUES
        (
         DECODE( i_line_prog_cd,NULL,'N',i_line_prog_cd),
          'N',
          'N',
          'N',
          i_bd_version_nr,
          i_bd_id,
          i_line_nr,
          i_line_type_cd,
          SUBSTRB(l_prod_desc,1,65),    -- l_line_prod_gnrc_desc_tx,  CR 4744
          --i_bundle_desc,
          TRIM(l_prod_nr),--gprice.prod_nr Changes made by Lakshmi to remove extra spaces in SQ deals
          i_line_added_by_emp_nr ,
          l_line_bus_group_cd,
          l_line_bus_unit_cd,
          l_prod_line,
          l_prod_family,
          i_prod_qty,
          NULL,
          i_pricelistcd,
          i_pricetermcd,
          I_CURRENCYCD,
          g_set_line_authorizer_code,
          --DECODE (I_LINE_PROG_CD,'Y',I_AUTHDATEGMT,NULL),
          --DECODE (I_LINE_PROG_CD,'Y',I_AUTH_MC_DATE,NULL),
          --DECODE (I_LINE_PROG_CD,'Y',I_AUTH_MC_DATE,NULL), --Commented for CR 236715 ---   RE: BMI Instant deals still have line item authorization stamped as earlier than Deal Creation Date?
          DECODE (I_LINE_PROG_CD,'Y',I_AUTH_MC_DATE,NULL),--NULL, --Added for CR 236715 ---   RE: BMI Instant deals still have line item authorization stamped as earlier than Deal Creation Date?
          DECODE (I_LINE_PROG_CD,'Y',I_AUTHDATEGMT,NULL),
          DECODE(LTRIM(RTRIM(I_OPT_CD)),NULL,' ',I_OPT_CD),
          DECODE (L_AUTH_BDNET_AMT,0,0,NULL,i_bdnetamt * I_PROD_QTY,L_AUTH_BDNET_AMT * I_PROD_QTY),
         -- DECODE (I_AUTH_STAT_CD,'Y',i_auth_emp_nr,NULL),
          i_bundle_desc,
          g_set_gnrc_line_authorizer,
          g_line_auth_type,
          DECODE(i_bmi_doc_no,null,0,i_bmi_doc_no)
        ) ;

      --adding one entry into line_disc_bndry table - per line
      INSERT
      INTO line_disc_bndry
        (
          bd_id,
          line_nr,
          disc_bndry_id,
          disc_bndry_type_cd,
          creation_dts,
          update_dts
        )
        VALUES
        (
          i_bd_id,
          i_line_nr,
          1,
          'D',
          sysdate,
          sysdate
        );
      --get the new scale id for the line
      SELECT NVL(MAX(scale_id),0)+1
      INTO l_scale_id
      FROM line_disc_scale
      WHERE BD_ID =I_BD_ID
      AND line_nr =i_line_nr;
      --dbms_output.put_line (' bundle header sku list price ' || i_prod_list_price || ' and GPSy price ' || gprice.price);
      --IF (i_prod_list_price>0 AND gprice.price>0 AND i_dealsourcedealtype<>c_high_touch_dealtype_desc)THEN


      --dbms_output.PUT_LINE (' GPRICE ' || GPRICE.PRICE || 'PROD : ' || gprice.prod_nr || ' Auth bd net Header bundle sku is ' || i_total_hdr_bdnet_value || ' header list price ' || i_total_hdr_listprice_value) ;

      --Calculate Header Auth/Rqst disc pct.
      --By harsh Shah 10-Mar-2014
       --i_total_hdr_listprice_value NUMBER,
      --i_total_hdr_bdnet_value number
      L_RQST_DISC_OTC_PC:=FCALCRQSTDISCPCT(i_total_hdr_bdnet_value,i_total_hdr_listprice_value,I_STDDISCPCT);
      l_auth_disc_otc_pc:=l_rqst_disc_otc_pc;

      --dbms_output.PUT_LINE ('Calculated Auth / rqst discount pct with new formula ' || l_rqst_disc_otc_pc || ' header auth bdnet' || i_total_hdr_bdnet_value || ' header sku list price ' || i_total_hdr_listprice_value );


--      ' || I_BD_HDR_LINE_AUTH_BD_NET || ' L_BD_HDR_SKU_LIST_PRICE header list price ' || L_BD_HDR_SKU_LIST_PRICE) ;

      /*
      IF gprice.price>0 THEN
        --dbms_output.put_line (' Calculated Auth Disc % for Each Bundle Header is : ' || (ROUND(100                                                                                                                  - (( I_BD_HDR_LINE_AUTH_BD_NET/L_BD_HDR_SKU_LIST_PRICE) *100)- NVL(i_stddiscpct,0),2)) );
        IF ( (ROUND(100                                                                                                                                                                                             - (( I_BD_HDR_LINE_AUTH_BD_NET/L_BD_HDR_SKU_LIST_PRICE) *100)- NVL(i_stddiscpct,0),2))>99.99 OR ROUND(100- (( I_BD_HDR_LINE_AUTH_BD_NET/L_BD_HDR_SKU_LIST_PRICE) *100)- NVL(i_stddiscpct,0),2) <-99.99 ) THEN
          --dbms_output.put_line (' Invalid Auth Disc % for Bundle Header SKU :' || gprice.prod_nr || ' Auth bd net is ' || i_bdnetamt || ' list price is  : ' || gprice.price || ' Auth Disc Amt is : ' || (ROUND(100- (( i_bdnetamt/gprice.price) *100)- NVL(i_stddiscpct,0),2)) );
          l_auth_disc_otc_pc:=NULL;
          l_rqst_disc_otc_pc:=0;
        ELSE
          --    L_AUTH_DISC_OTC_PC:=ROUND(100- (( I_BDNETAMT/GPRICE.PRICE) *100)- NVL(I_STDDISCPCT,0),2);
          L_AUTH_DISC_OTC_PC:=ROUND(100- (( I_BD_HDR_LINE_AUTH_BD_NET/L_BD_HDR_SKU_LIST_PRICE) *100)- NVL(I_STDDISCPCT,0),2);
          l_rqst_disc_otc_pc:=L_AUTH_DISC_OTC_PC;
        END IF;
        --l_auth_disc_otc_pc:=ROUND(((gprice.price-i_bdnetamt)/gprice.price) *100 ,2);
        --L_AUTH_DISC_OTC_PC:=ROUND(100- (( I_BDNETAMT/GPRICE.PRICE) *100)- NVL(I_STDDISCPCT,0),2);
      ELSE
        L_AUTH_DISC_OTC_PC  :=NULL;
        IF GPRICE.PRICE      =0 THEN
          L_AUTH_DISC_OTC_PC:=0;
          l_rqst_disc_otc_pc:=0;
        END IF;
      END IF;
      */


      --dbms_output.put_line ('Header L_AUTH_DISC_OTC_PC ' || i_bundle_desc  || ' header auth bdnet ' || I_BD_HDR_LINE_AUTH_BD_NET || ' list price ' || gprice.price);

      --set auth Disc % to Null in case of High Touch Deal
      IF i_dealsourcedealtype=c_high_touch_dealtype_desc AND i_line_prog_cd <> 'Y' THEN ---i_line_prog_cd condition is added for ePrime as ePrime can approve the products in HIGH_touch deals
        L_AUTH_DISC_OTC_PC  :=NULL;
      END IF;
      --dbms_output.PUT_LINE (' calculated auth disc pct for bundle header SKU ' || GPRICE.PROD_NR || ' Auth disc % is ' || L_AUTH_DISC_OTC_PC);
      ----Insert data into LINE_DISC_SCALE table.
      --done
      --MARGIN
      L_RQST_MARGIN_PCT:=0;
      /*
      if I_PROD_COST_PRICE_HDR_PROD>0 then
      if ( (L_AUTH_BDNET_AMT is null or L_AUTH_BDNET_AMT=0) and gprice.price >0 ) then
      if I_BDNETAMT>0 then
      L_RQST_MARGIN_PCT:=ROUND(((  (I_BDNETAMT - I_PROD_COST_PRICE_HDR_PROD) / I_BDNETAMT) * 100), 2);
      end if;
      elsif (L_AUTH_BDNET_AMT is not null and L_AUTH_BDNET_AMT > 0)  then
      L_RQST_MARGIN_PCT:=ROUND(((  (L_AUTH_BDNET_AMT - I_PROD_COST_PRICE_HDR_PROD) / L_AUTH_BDNET_AMT) * 100), 2);
      else
      L_RQST_MARGIN_PCT:=0;
      end if;
      else
      L_RQST_MARGIN_PCT:=0;
      end if;
      */
      --calculating Margin Pct
      IF i_prod_cost_price_hdr_prod                                                                                     >0 THEN
        IF ( I_BD_HDR_LINE_AUTH_BD_NET                                                                                  >0 AND l_price >0 ) THEN
          IF( ROUND((( (I_BD_HDR_LINE_AUTH_BD_NET - I_PROD_COST_PRICE_HDR_PROD) / I_BD_HDR_LINE_AUTH_BD_NET) * 100), 2) < -99.99 ) THEN --- CR 1262 Nov release
            --ROUND(((  (I_BD_HDR_LINE_AUTH_BD_NET - I_PROD_COST_PRICE_HDR_PROD) / I_BD_HDR_LINE_AUTH_BD_NET) * 100), 2) <0 AND
            --           LENGTH(ROUND(((  (I_BD_HDR_LINE_AUTH_BD_NET - I_PROD_COST_PRICE_HDR_PROD) / I_BD_HDR_LINE_AUTH_BD_NET) * 100), 2)) >3) THEN --CR4717
            L_RQST_MARGIN_PCT                                                                                             :=                     -99.99; --CR4717
          ELSIF (ROUND((( (I_BD_HDR_LINE_AUTH_BD_NET - I_PROD_COST_PRICE_HDR_PROD) / I_BD_HDR_LINE_AUTH_BD_NET) * 100), 2) >100 ) THEN                  --- CR 1262 Nov release
            ---- ROUND(((  (I_BD_HDR_LINE_AUTH_BD_NET - I_PROD_COST_PRICE_HDR_PROD) / I_BD_HDR_LINE_AUTH_BD_NET) * 100), 2) >0 AND
            --      LENGTH(ROUND(((  (I_BD_HDR_LINE_AUTH_BD_NET - I_PROD_COST_PRICE_HDR_PROD) / I_BD_HDR_LINE_AUTH_BD_NET) * 100), 2)) >3) THEN      --CR4717
            L_RQST_MARGIN_PCT :=999.99; --CR4717
          ELSE
            L_RQST_MARGIN_PCT:=ROUND((( (I_BD_HDR_LINE_AUTH_BD_NET - I_PROD_COST_PRICE_HDR_PROD) / I_BD_HDR_LINE_AUTH_BD_NET) * 100), 2);
          END IF;
        elsif (L_AUTH_BDNET_AMT                                                                       IS NOT NULL AND L_AUTH_BDNET_AMT > 0) THEN
          IF ( ROUND((( (L_AUTH_BDNET_AMT - I_PROD_COST_PRICE_HDR_PROD) / L_AUTH_BDNET_AMT) * 100), 2) < -99.99 ) THEN
            --ROUND(((  (L_AUTH_BDNET_AMT - I_PROD_COST_PRICE_HDR_PROD) / L_AUTH_BDNET_AMT) * 100), 2) <0 AND
            --     LENGTH(ROUND(((  (L_AUTH_BDNET_AMT - I_PROD_COST_PRICE_HDR_PROD) / L_AUTH_BDNET_AMT) * 100), 2))>3 ) THEN --CR4717
            L_RQST_MARGIN_PCT                                                                           :=            -99.99; --CR4717
          ELSIF (ROUND((( (L_AUTH_BDNET_AMT - I_PROD_COST_PRICE_HDR_PROD) / L_AUTH_BDNET_AMT) * 100), 2) > 100) THEN
            --ROUND(((  (L_AUTH_BDNET_AMT - I_PROD_COST_PRICE_HDR_PROD) / L_AUTH_BDNET_AMT) * 100), 2) >0 AND
            --LENGTH(ROUND(((  (L_AUTH_BDNET_AMT - I_PROD_COST_PRICE_HDR_PROD) / L_AUTH_BDNET_AMT) * 100), 2))>3 ) THEN --CR4717
            L_RQST_MARGIN_PCT:=999.99; --CR4717
          ELSE
            L_RQST_MARGIN_PCT:=ROUND((( (L_AUTH_BDNET_AMT - I_PROD_COST_PRICE_HDR_PROD) / L_AUTH_BDNET_AMT) * 100), 2);
          END IF;
        ELSE
          L_RQST_MARGIN_PCT:=0;
        END IF;
      ELSE
        L_RQST_MARGIN_PCT:=0;
      END IF;
      --Modified by Harsh Shah , 23-Jan-2013
       --CR 4786 - [APJ MTP] ???Auth Amt? and ???Auth%?  populated with some data after creating the deal via EIS.
      --updating AUTH_DISC_OT_PC column with Null when list price is zero.

      --dbms_output.PUT_LINE ('L_AUTH_DISC_OTC_PC for header bundle '|| L_AUTH_DISC_OTC_PC );
      --dbms_output.put_line ('Header L_AUTH_DISC_OTC_PC ' || i_bundle_desc  || ' header auth bdnet ' || I_BD_HDR_LINE_AUTH_BD_NET || '  list price  ' || gprice.price );
    BEGIN
      INSERT
      into LINE_DISC_SCALE
        (
          bd_id,
          line_nr,
          disc_bndry_id,
          scale_id,
          disc_type_cd,
          upper_bndry_dt,
          lower_bndry_dt,
          auth_fl,
          rqst_disc_ot_pc,
          auth_disc_ot_pc,
          disc_as_pc_rqst,
          version_created,
          auth_bd_net_prc_am,
          prod_lst_prc_am,
          rqst_bd_net_prc_am,
          cost_avail_fl,
          updated_by_emp_nr,
          auth_basis_text,
          non_discount_fl,
          disc_as_pc,
          high_rslr_a_sd_pc,
          RQST_INCR_DISC_AM,
          RQST_MARGIN_PCT,
          AUTH_MARGIN_PCT,
          PROD_COST_AM,
          PROD_COST_DATE,
          EXT_PRE_APPRV_PRC_AM,
          GUIDANCE_AVAILABLE_FL,
          GUIDANCE_DETAILS_ID,
          GUIDANCE_EXPERT_PCT,
          GUIDANCE_FLOOR_PCT,
          GUIDANCE_TYPICAL_PCT,
          GUIDANCE_LAST_REFRESH_DT
          ,INSTANT_PRC_METHOD --Added for UsS7301
          ,INSTANT_PRC_AMT  --Added for UsS7301
        )
        VALUES
        (
          i_bd_id,
          i_line_nr,
          1,
          l_scale_id,
          DECODE(i_pricingtypecd,NULL,'B',i_pricingtypecd),
          i_enddate,
          i_begindate,
          I_AUTH_STAT_CD,                                          --auth_fl
          DECODE (L_RQST_DISC_OTC_PC,NULL,0, L_RQST_DISC_OTC_PC) , --rqst_disc_ot_pc
          DECODE(l_PRICE,0,0,DECODE(I_AUTH_STAT_CD,'Y',L_AUTH_DISC_OTC_PC,NULL)),          --auth_disc_ot_pc
          0,
          i_bd_version_nr,
          DECODE(I_AUTH_STAT_CD,'Y',L_AUTH_BDNET_AMT,NULL),                                          --auth bd net
          l_PRICE,                                              -- list price
          DECODE(L_AUTH_BDNET_AMT,NULL,i_bdnetamt,L_AUTH_BDNET_AMT), --rqst bd net amout
          DECODE(I_PROD_COST_PRICE_HDR_PROD,NULL,'N',0,'N','Y'),     --COST AVAIL FL
          DECODE (I_AUTH_STAT_CD,'Y',I_AUTH_EMP_NR,NULL),
          DECODE(i_auth_stat_cd,'Y',i_prod_auth_basis_text,NULL),
          l_NON_DISCOUNT_FL, -- Modified by Lakshmi for CR83540 The Non-discountable attribute in Eclipse is displayed incorrect for non-discountable product which set in Optimus
          0,                                        -- disc_as_pc
          DECODE(I_STDDISCPCT,NULL,0,I_STDDISCPCT), --HIGH_RSLR_A_SD_PC
          DECODE(l_PRICE,0,0,NULL),            --RQST_INCR_DISC_AM
          L_RQST_MARGIN_PCT,
          DECODE(I_AUTH_STAT_CD,'Y',L_RQST_MARGIN_PCT,NULL) , --auth margin
          I_PROD_COST_PRICE_HDR_PROD,                         --PROD COST AM,
          SYSDATE  ,                                           --PROD COST DATE,
          L_EXT_PRE_APPRV_PRC_AM,
          i_guidance_available_fl,
          DECODE(i_guidance_available_fl,'Y',i_guidance_details_id,NULL),
          DECODE(i_guidance_available_fl,'Y',i_guidance_expert_pct,NULL),
          DECODE(i_guidance_available_fl,'Y',i_guidance_floor_pct,NULL),
          DECODE(i_guidance_available_fl,'Y',i_guidance_typical_pct,NULL),
          DECODE(i_guidance_available_fl,'Y',TO_TIMESTAMP (SUBSTR(i_guidance_last_refresh_dt,1,19),'YYYY-MM-DD"T"HH24:MI:SS'),NULL)
          ,i_InstantPrcMethod  --Added for UsS7301
          ,i_InstantPrcAmount  --Added for US 7301
        );
        EXCEPTION
        WHEN dup_val_on_index THEN
         INSERT
      into LINE_DISC_SCALE
        (
          bd_id,
          line_nr,
          disc_bndry_id,
          scale_id,
          disc_type_cd,
          upper_bndry_dt,
          lower_bndry_dt,
          auth_fl,
          rqst_disc_ot_pc,
          auth_disc_ot_pc,
          disc_as_pc_rqst,
          version_created,
          auth_bd_net_prc_am,
          prod_lst_prc_am,
          rqst_bd_net_prc_am,
          cost_avail_fl,
          updated_by_emp_nr,
          auth_basis_text,
          non_discount_fl,
          disc_as_pc,
          high_rslr_a_sd_pc,
          RQST_INCR_DISC_AM,
          RQST_MARGIN_PCT,
          AUTH_MARGIN_PCT,
          PROD_COST_AM,
          PROD_COST_DATE,
          EXT_PRE_APPRV_PRC_AM,
          GUIDANCE_AVAILABLE_FL,
          GUIDANCE_DETAILS_ID,
          GUIDANCE_EXPERT_PCT,
          GUIDANCE_FLOOR_PCT,
          GUIDANCE_TYPICAL_PCT,
          GUIDANCE_LAST_REFRESH_DT
         ,INSTANT_PRC_METHOD --Added for UsS7301
         ,INSTANT_PRC_AMT  --Added for UsS7301
        )
        VALUES
        (
          i_bd_id,
          i_line_nr,
          1,
          l_scale_id+1,
          DECODE(i_pricingtypecd,NULL,'B',i_pricingtypecd),
          i_enddate,
          i_begindate,
          I_AUTH_STAT_CD,                                          --auth_fl
          DECODE (L_RQST_DISC_OTC_PC,NULL,0, L_RQST_DISC_OTC_PC) , --rqst_disc_ot_pc
          DECODE(l_PRICE,0,0,DECODE(I_AUTH_STAT_CD,'Y',L_AUTH_DISC_OTC_PC,NULL)),          --auth_disc_ot_pc
          0,
          i_bd_version_nr,
          DECODE(I_AUTH_STAT_CD,'Y',L_AUTH_BDNET_AMT,NULL),                                          --auth bd net
          l_PRICE,                                              -- list price
          DECODE(L_AUTH_BDNET_AMT,NULL,i_bdnetamt,L_AUTH_BDNET_AMT), --rqst bd net amout
          DECODE(I_PROD_COST_PRICE_HDR_PROD,NULL,'N',0,'N','Y'),     --COST AVAIL FL
          DECODE (I_AUTH_STAT_CD,'Y',I_AUTH_EMP_NR,NULL),
          DECODE(i_auth_stat_cd,'Y',i_prod_auth_basis_text,NULL),
          l_NON_DISCOUNT_FL, -- Modified by Lakshmi for CR83540 The Non-discountable attribute in Eclipse is displayed incorrect for non-discountable product which set in Optimus
          0,                                        -- disc_as_pc
          DECODE(I_STDDISCPCT,NULL,0,I_STDDISCPCT), --HIGH_RSLR_A_SD_PC
          DECODE(l_PRICE,0,0,NULL),            --RQST_INCR_DISC_AM
          L_RQST_MARGIN_PCT,
          DECODE(I_AUTH_STAT_CD,'Y',L_RQST_MARGIN_PCT,NULL) , --auth margin
          I_PROD_COST_PRICE_HDR_PROD,                         --PROD COST AM,
          SYSDATE  ,                                           --PROD COST DATE,
          L_EXT_PRE_APPRV_PRC_AM,
          i_guidance_available_fl,
          DECODE(i_guidance_available_fl,'Y',i_guidance_details_id,NULL),
          DECODE(i_guidance_available_fl,'Y',i_guidance_expert_pct,NULL),
          DECODE(i_guidance_available_fl,'Y',i_guidance_floor_pct,NULL),
          DECODE(i_guidance_available_fl,'Y',i_guidance_typical_pct,NULL),
          DECODE(i_guidance_available_fl,'Y',TO_TIMESTAMP (SUBSTR(i_guidance_last_refresh_dt,1,19),'YYYY-MM-DD"T"HH24:MI:SS'),NULL)
          ,i_InstantPrcMethod  --Added for UsS7301
          ,i_InstantPrcAmount  --Added for US 7301
        );
        END;

      --******************************************************
      -- Insert into Rollout Schedule for bundle Header
      --******************************************************
      --dbms_output.PUT_LINE (' bundle Header Rollout  1 ' );
      l_rollout_mnths :=t_rollout_mnths();
      ----dbms_output.put_line('Rollout month qtys   :'||i_rolloutmonthqtys);
      get_rollout_months(i_rolloutmonthqtys,l_rollout_mnths );
      --dbms_output.PUT_LINE (' bundle Header Rollout  2 ' );
      l_rollout_ins_qry        := 'insert into rollout_schedule (bd_id,
line_nr,
prod_base_nr,
ro_bgn_dt,
ro_end_dt,
load_type,
est_qty,
pct_prob,
mth1_qty,
mth2_qty,
mth3_qty,
mth4_qty,
mth5_qty,
mth6_qty,
mth7_qty,
mth8_qty,
mth9_qty,
mth10_qty,
mth11_qty,
mth12_qty,
mth13_qty,
mth14_qty,
mth15_qty,
schedule_change_fl,
ordr_min_qty,
line_max_qty,
creation_dts,
update_dts,
remaining_qty,
rtqty,
prod_opt_cd )
values ( ' ||i_bd_id||',' ||i_line_nr||',' ||'''' || TRIM(l_prod_nr) ||'''' ||',' || 'to_date('||''''||i_begindate||''''||','||'''DD-MON-YY'''||')'||',' || 'to_date('||''''||i_enddate||''''||','||'''DD-MON-YY'''||')'||',' || '''Even'''||',' || i_prod_qty||',' ||100||',';
      l_no_of_months           :=1;
      IF l_rollout_mnths.first IS NOT NULL THEN
        FOR months_rec IN l_rollout_mnths.first..l_rollout_mnths.last
        LOOP
          IF LENGTH
            (
              l_rollout_mnths(months_rec)
            )
                              =0 THEN
            l_rollout_ins_qry:=l_rollout_ins_qry||'NULL'||',';
          ELSE
            l_rollout_ins_qry:=l_rollout_ins_qry||l_rollout_mnths(months_rec) ||',';
          END IF;
          l_no_of_months:=l_no_of_months+1;
        END LOOP;
      END IF;
      FOR i IN l_no_of_months-1 ..14
      LOOP
        l_rollout_ins_qry:=l_rollout_ins_qry||'NULL'||',';
      END LOOP;
      l_rollout_ins_qry:=l_rollout_ins_qry|| '''N'''||','||NVL(i_minorder_qty,'NULL')||',' || i_prod_qty ||',' || 'SYSDATE'||',' ||' SYSDATE'||',' ||i_prod_qty||',' ||i_prod_qty ||',' || '''' ||NVL(ltrim(rtrim(I_OPT_CD)),' ') || '''' || ')';
      ----dbms_output.put_line(' Rollout query length ' || LENGTH(l_rollout_ins_qry));
      --dbms_output.put_line( 'Bundle rollout query   '||l_rollout_ins_qry);
      EXECUTE immediate (l_rollout_ins_qry);

      --select nvl(tenantid,'HPE') INTO l_tenantid from deal where bd_id = i_bd_id;---Added for SMO Changes
      select nvl(tenantid_data_cd,'HPE') INTO l_tenantid from deal where bd_id = i_bd_id;---Added for SMO Changes tenantid column is replaced wirh tenantid_data_cd for Federal project)
      --************************************************
      --Adding Bundle Header Details
      --insert into Bundle Table - Inserting Bundle Header
      --************************************************
      --dbms_output.put_line ('adding bundle header');
      ----Added with CR 4774
      SELECT b.disp_comp_prc_fl
      INTO l_disp_comp_prc_fl_BM
      FROM bus_model b
      WHERE b.bus_model_cd = i_busmodelcd
      AND b.country_cd     = i_countrycd
      AND tenantid =l_tenantid;

         --Added by Lakshmi to implement US6037 --> Show Component Level Pricing

     IF (I_DisplayCompPrcFl IN ('Y','N') AND l_disp_comp_prc_fl_BM='N') THEN
    l_disp_comp_prc_fl := 'N';
    ELSIF (I_DisplayCompPrcFl='N' AND l_disp_comp_prc_fl_BM='Y') THEN
    l_disp_comp_prc_fl :='N';
    ELSE
    l_disp_comp_prc_fl :='Y';
    END IF;

     --End of changes for US6037


      l_config_src        :=i_config_src;
      IF i_config_src      = c_bundle_source_ezconfig THEN --Added as part of ePrime as ePrime sends EZconfigs.
        l_config_src      :='EC-BAND';
      END IF;
      INSERT
      INTO bundle
        (
          bd_id,
          line_nr,
          prod_base_nr,
          prod_base_desc,
          config_src,
          config_id,
          source_config_id,
          supply_chain,
          disp_comp_prc_fl,
          creation_dts,
          update_dts,
          add_to_deal_dt,
          component_change_dt
        )
        VALUES
        (
          i_bd_id,
          i_line_nr,
          TRIM(l_prod_nr),--l_prod_nr--Changes made by Lakshmi to remove extra spaces in SQ deals
          SUBSTRB(l_prod_desc,1,65),
          --i_bundle_desc,
          l_config_src,--i_config_src,
          i_config_id,
          i_source_config_id,
          NULL,
          l_disp_comp_prc_fl,--'Y',  ----Added with CR 4774.
          sysdate,
          sysdate,
          sysdate,
          sysdate
        );
      --dbms_output.put_line (' Inserting into bundle line with Header details ' || i_line_nr);
      /* primary key bundle lines
      bd_id, line_nr
      disc_bndry_id, scale_id, item_nr
      */
      --dbms_output.put_line (' Bundle header - Bundle LIne - auth bd ' || i_bdnetamt);
      --dbms_output.put_line (' Bundle Headers - Bundle Line Qty ' || i_bd_line_qty_for_hdr_sku );
      --dbms_output.PUT_LINE (' Bundle Header  -- insert bundle line rqst bdnet value  ' || ' SKU ' || gprice.prod_nr || '  '|| i_bdnetamt || ' and auth bd net value ' || l_auth_bdnet_amt);
      /*
      i_bdnetamt * i_bd_line_qty_for_hdr_sku, --extended price
      decode (l_auth_bdnet_amt,null,i_bdnetamt,l_auth_bdnet_amt), --rqst_bd_net_prc_am
      l_auth_bdnet_amt, --auth bd net amout
      */
      -------------------------------------------
      -- Insert data into Bundle Line table
      -----------------------------------------
      --dbms_output.put_line (' I_BD_HDR_LINE_AUTH_BD_NET : ' || i_bd_hdr_line_auth_bd_net || ' I_BD_LINE_QTY_FOR_HDR_SKU ' || i_bd_line_qty_for_hdr_sku);
      --dbms_output.PUT_LINE ('AUTH DISC % FOR BUNDLE HEADERS LINE  ' || l_auth_disc_otc_pc);
    END IF;
 -- END LOOP;
END BMI_insert_prod_line;

PROCEDURE add_date_range( in_line_nr IN NUMBER,
                          in_bd_id IN NUMBER,
                          out_status OUT VARCHAR2)
IS
l_version_created NUMBER;
l_upper_bndry_dt DATE;
l_scale_id line_disc_scale.scale_id%TYPE;
new_upper_bndry_date LINE_DISC_SCALE.upper_bndry_dt%TYPE;
new_lower_bndry_date LINE_DISC_SCALE.lower_bndry_dt%TYPE;
old_upper_bndry_date LINE_DISC_SCALE.upper_bndry_dt%TYPE;
old_lower_bndry_date LINE_DISC_SCALE.lower_bndry_dt%TYPE;
upper_bndry_eq_lower_bndry VARCHAR2(1):='N';
deal_end_date deal.end_dt%TYPE;
l_new_price line_disc_scale.prod_lst_prc_am%TYPE;
l_old_price line_disc_scale.prod_lst_prc_am%TYPE;
l_msg_type      VARCHAR2(15);
l_errors        VARCHAR2(3000);
l_deal_source_cd deal.deal_source_cd%TYPE; --New variable added for CR: 3147
l_gt_product_cnt NUMBER(10); --New variable added for CR: 3147

l_line_type_cd line_item.line_type_cd%TYPE; --Added fro CR: 3147
BEGIN

--Get the version_created and upper boundary date from DEAL table.
    SELECT bd_version_nr, end_dt, deal_source_cd --New variable added for CR: 3147
    INTO l_version_created, deal_end_date, l_deal_source_cd
    FROM deal
    WHERE bd_id=in_bd_id;
/*
 SELECT MAX(scale_id) INTO l_scale_id
  FROM line_disc_scale
   WHERE bd_id=in_bd_id
    AND line_nr=in_line_nr;

  */
 -----------------------------------------------------------------------------------------------
  --Deleting Extra Date Ranges
 -----------------------------------------------------------------------------------------------

            /*
                by Harsh Shah 11/20/2014
                CR 177677 -[Channel][Regression] Rqst/auth% can't be editable in HT dealV2 after dealV1 is rejected
            */
--            DBMS_OUTPUT.PUT_LINE (' Max  scale id : ' || l_scale_id );
                        /*
            DELETE  from line_disc_scale
                where bd_id=in_bd_id
                and scale_id=l_scale_id
                AND auth_disc_ot_pc IS NULL
                AND TRUNC( LOWER_BNDRY_DT) =TRUNC(UPPER_BNDRY_DT)
                AND SCALE_ID>1
                and version_created=l_version_created;
                */
                /*
                DELETE   from line_disc_scale
                where bd_id=in_bd_id
                AND scale_id=l_scale_id
                 AND TRUNC( LOWER_BNDRY_DT) =TRUNC(UPPER_BNDRY_DT)
                --AND SCALE_ID>1
                and line_nr=in_line_nr
                AND version_created=l_version_created
                and 1>=(select count(*) from deal where bd_nr = (select bd_nr from deal where bd_id= in_bd_id and rownum=1)  and BDME_aprvl_cd='D' );
                */

                /*
                IF l_scale_id>1 THEN
                        DBMS_OUTPUT.PUT_LINE ('Deleting Extra date range.... for bd id ' || in_bd_id  || ' deleting data for scale id :  Max  scale id : ' || l_scale_id  || ' vERSION CREATED :' || l_version_created);
                        DELETE FROM LINE_DISC_SCALE WHERE BD_ID=in_bd_id
                            AND SCALE_ID=l_scale_id
                            AND LINE_NR=in_line_nr
                            AND version_created=l_version_created
                            and 1>=(select count(*) from deal where bd_nr = (select bd_nr from deal where bd_id= in_bd_id and rownum=1)  and BDME_aprvl_cd='D' );
            IF sql%rowcount>0 then
                --inserterror_output_messages (in_bd_id,bd_version_nr,0, NULL ,NULL,NULL,NULL, NULL, NULL,NULL,'Extra Date Range deleted','INFO', I_deal_creation_guid, NULL,NULL,NULL);
                DBMS_OUTPUT.PUT_LINE ('Extra date range deleted ');
            else
                DBMS_OUTPUT.PUT_LINE ('No valid rows found for extra date range');
            END IF;

        END IF;
        */
SELECT MAX(scale_id) INTO l_scale_id
   FROM line_disc_scale
 WHERE bd_id=in_bd_id
AND line_nr=in_line_nr;
    -----------------------------------------------------------------------------------------------
  --Deleting Extra Date Ranges
 -----------------------------------------------------------------------------------------------
            /*
                by Harsh Shah 11/20/2014
                CR 177677 -[Channel][Regression] Rqst/auth% can't be editable in HT dealV2 after dealV1 is rejected
            */
            --DBMS_OUTPUT.PUT_LINE ('Deleting Extra date range.... for bd id ' || in_bd_id  || ' deleting data for scale id : '|| (l_scale_id  ) ||' Max  scale id : ' || l_scale_id );
                        /*
            DELETE  from line_disc_scale
                where bd_id=in_bd_id
                and scale_id=l_scale_id
                AND auth_disc_ot_pc IS NULL
                AND TRUNC( LOWER_BNDRY_DT) =TRUNC(UPPER_BNDRY_DT)
                AND SCALE_ID>1
                and version_created=l_version_created;
                */

            /*    DELETE   from line_disc_scale
                where bd_id=in_bd_id
                AND scale_id=l_scale_id
                 AND TRUNC( LOWER_BNDRY_DT) =TRUNC(UPPER_BNDRY_DT)
                AND SCALE_ID>1
                and line_nr=in_line_nr
                AND version_created=l_version_created
                and 1>=(select count(*) from deal where bd_nr = (select bd_nr from deal where bd_id= in_bd_id and rownum=1)  and BDME_aprvl_cd='D' );

            IF sql%rowcount>0 then
                --inserterror_output_messages (in_bd_id,bd_version_nr,0, NULL ,NULL,NULL,NULL, NULL, NULL,NULL,'Extra Date Range deleted','INFO', I_deal_creation_guid, NULL,NULL,NULL);
                DBMS_OUTPUT.PUT_LINE ('Extra date range deleted ');
            else
                DBMS_OUTPUT.PUT_LINE ('No valid rows found for extra date range');
            END IF;
 */
    new_lower_bndry_date := SYSDATE;

SELECT upper_bndry_dt,lower_bndry_dt
        INTO old_upper_bndry_date , old_lower_bndry_date
        FROM line_disc_scale
        WHERE bd_id = in_bd_id
        AND line_nr = in_line_nr
        AND scale_id = l_scale_id;

        --DBMS_OUTPUT.PUT_LINE('Deal End date: '||deal_end_date);
        --DBMS_OUTPUT.PUT_LINE('Current date range: '||old_lower_bndry_date||' - '||old_upper_bndry_date);

/* --IF old_upper_bndry_date<deal_end_date-2 THEN --Commmented by Lakshmi for CR:160708 - Date Range Issue- Incorrect future date range added

/* IF old_upper_bndry_date > deal_end_date-2 THEN --Changes made by Lakshmi ON 10/17/2014 for CR: 160708 - Date Range Issue- Incorrect future date range added
        new_lower_bndry_date := old_upper_bndry_date+1;
END IF; */

--new_lower_bndry_date := SYSDATE - 2;

/* IF new_lower_bndry_date<=old_lower_bndry_date THEN
        new_lower_bndry_date := old_lower_bndry_date+1;
END IF;

old_upper_bndry_date := new_lower_bndry_date-1;

IF new_lower_bndry_date-1 < old_lower_bndry_date
    THEN old_upper_bndry_date := old_lower_bndry_date;
    ELSE
    old_upper_bndry_date := new_lower_bndry_date-1;
END IF;

new_upper_bndry_date := deal_end_date;

IF TRUNC(old_upper_bndry_date)=TRUNC(old_lower_bndry_date) THEN
    new_lower_bndry_date := old_lower_bndry_date + 1;
END IF;

IF (TRUNC(new_lower_bndry_date) > TRUNC(new_upper_bndry_date) ) THEN
    new_lower_bndry_date := new_upper_bndry_date;
END IF;

old_upper_bndry_date := new_lower_bndry_date-1; */

new_lower_bndry_date := SYSDATE;
new_upper_bndry_date := deal_end_date;

old_upper_bndry_date := SYSDATE-1;

IF (old_upper_bndry_date < old_lower_bndry_date) THEN
    old_upper_bndry_date := old_lower_bndry_date;
    new_lower_bndry_date := old_upper_bndry_date+1;
END IF;

IF new_upper_bndry_date < SYSDATE THEN
    new_lower_bndry_date := SYSDATE;
END IF;

IF old_upper_bndry_date = old_lower_bndry_date THEN
    new_lower_bndry_date := old_upper_bndry_date + 1;
END IF;


--DBMS_OUTPUT.PUT_LINE('New Upper boundary date: '||  new_upper_bndry_date);
--DBMS_OUTPUT.PUT_LINE('New Lower boundary date: '||  new_lower_bndry_date);
--DBMS_OUTPUT.PUT_LINE('Previous Upper boundary date: '||  old_upper_bndry_date);
--DBMS_OUTPUT.PUT_LINE('Previous Lower boundary date: '||old_lower_bndry_date);

UPDATE line_disc_scale SET upper_bndry_dt=old_upper_bndry_date WHERE bd_id = in_bd_id AND line_nr = in_line_nr AND scale_id = l_scale_id;

 INSERT INTO line_disc_scale (bd_id,
                             line_nr,
                             disc_bndry_id,
                             scale_id,
                             disc_type_cd,
                             prod_lst_prc_am,
                             rqst_bd_net_prc_am,
                             auth_bd_net_prc_am,
                             rqst_incr_disc_am,
                             auth_incr_disc_am,
                             rqst_disc_ot_pc,
                             auth_disc_ot_pc,
                             high_rslr_a_sd_pc,
                             disc_as_pc,
                             upper_bndry_am,
                             lower_bndry_am,
                             upper_bndry_dt,
                             lower_bndry_dt,
                             upper_bndry_qt,
                             lower_bndry_qt,
                             auth_fl,
                             version_created,
                             bundle_prc_fl,
                             disc_as_pc_rqst,
                             creation_dts,
                             update_dts,
                             prev_auth_cd,
                             component_change_dt,
                             prod_cost_am,
                             prod_cost_date,
                             rqst_margin_pct,
                             auth_margin_pct,
                             cost_avail_fl,
                             rqst_gm_pct,
                             auth_gm_pct,
                             non_discount_fl,
                             cost_status,
                             prev_auth_qty,
                             updated_by_emp_nr,
                             auth_basis_text,
                             rqst_fix_disc_am,
                             auth_fix_disc_am,
                             target_addl_disc_pct,
                             min_margin_pct,
                             target_margin_pct,
                             guidance_last_refresh_dt,
                             guidance_expert_pct,
                             guidance_typical_pct,
                             guidance_floor_pct,
                             guidance_prev_rqst_pct,
                             guidance_available_fl,
                             prev_auth_basis_text
                             ,INSTANT_PRC_METHOD--CR ID 255169 "[US7301] [Eclipse] [HPI] Instant Prc Method and Instant Prc Amount is missing in V2 deal when Orderable. "
                             ,INSTANT_PRC_AMT)     --CR ID 255169 "[US7301] [Eclipse] [HPI] Instant Prc Method and Instant Prc Amount is missing in V2 deal when Orderable. "
   SELECT bd_id,
          line_nr,
          disc_bndry_id,
          scale_id+1,
          disc_type_cd,
          prod_lst_prc_am,
          rqst_bd_net_prc_am,
          auth_bd_net_prc_am,
          rqst_incr_disc_am,
          auth_incr_disc_am,
          rqst_disc_ot_pc,
          auth_disc_ot_pc,
          high_rslr_a_sd_pc,
          disc_as_pc,
          upper_bndry_am,
          lower_bndry_am,
          new_upper_bndry_date,
          new_lower_bndry_date,
          upper_bndry_qt,
          lower_bndry_qt,
          'N',
          l_version_created,
          bundle_prc_fl,
          disc_as_pc_rqst,
          TO_CHAR(SYSDATE,'DD/MON/YYYY'),
          TO_CHAR(SYSDATE,'DD/MON/YYYY'),
          prev_auth_cd,
          component_change_dt,
          prod_cost_am,
          prod_cost_date,
          rqst_margin_pct,
          auth_margin_pct,
          cost_avail_fl,
          rqst_gm_pct,
          auth_gm_pct,
          non_discount_fl,
          cost_status,
          prev_auth_qty,
          updated_by_emp_nr,
          auth_basis_text,
          rqst_fix_disc_am,
          auth_fix_disc_am,
          target_addl_disc_pct,
          min_margin_pct,
          target_margin_pct,
          guidance_last_refresh_dt,
          guidance_expert_pct,
          guidance_typical_pct,
          guidance_floor_pct,
          guidance_prev_rqst_pct,
          guidance_available_fl,
          prev_auth_basis_text,
          INSTANT_PRC_METHOD,  --Added for CR ID 255169 "[US7301] [Eclipse] [HPI] Instant Prc Method and Instant Prc Amount is missing in V2 deal when Orderable."
          INSTANT_PRC_AMT ---Added for CR ID 255169 "[US7301] [Eclipse] [HPI] Instant Prc Method and Instant Prc Amount is missing in V2 deal when Orderable. "
     FROM line_disc_scale
    WHERE line_nr = in_line_nr
    AND bd_id = in_bd_id
    AND scale_id =l_scale_id;
--DBMS_OUTPUT.PUT_LINE('add_date_range 3');

  INSERT
INTO BUNDLE_LINE
  (
    BD_ID,
    LINE_NR,
    PROD_GNRC_NR_TX,
    PROD_OPT_CD,
    DISC_BNDRY_ID,
    SCALE_ID,
    QTY,
    PROD_TYPE,
    PROD_GNRC_DESC_TX,
    DISC_PC,
    LIST_PRICE,
    EXTENDED_PRICE,
    SUBST_PROD,
    BUNDLE_NR,
    ITEM_NR,
    INTEGRATED_GRP_CD,
    RQST_BD_NET_PRC_AM,
    AUTH_BD_NET_PRC_AM,
    RQST_INCR_DISC_AM,
    AUTH_INCR_DISC_AM,
    VERSION_CREATED,
    ASSOC_PL,
    ITEM_PROG_CD,
    AUTH_MC_DATE,
    AUTH_MC_HP_EMP_NR,
    DISC_AS_PCT,
    DISC_TYPE_CD,
    RQST_DISC_OT_PC,
    AUTH_DISC_OT_PC,
    PROD_GM,
    PROD_GM_PCT,
    PROD_VCM,
    PROD_VCM_PCT,
    PROD_OP_PROFIT,
    PROD_OP_PROFIT_PCT,
    COMPONENT_LEVEL_CD,
    PREV_AUTH_CD,
    CREATION_DTS,
    UPDATE_DTS,
    REF_PRICE_FL,
    PRICE_LIST_CD,
    CURRENCY_CD,
    PRICE_TERM_CD,
    BANDED_FL,
    SPCL_CONFIG_FL,
    PROD_COST_AM,
    PROD_COST_DATE,
    RQST_MARGIN_PCT,
    AUTH_MARGIN_PCT,
    COST_AVAIL_FL,
    AUTH_DT_GMT,
    FUTURE_PROD_FL,
    NON_DISCOUNT_FL,
    SHOW_QUOTE_LONG_DESC_FL,
    AUTH_TYPE_CD,
    PREV_AUTH_MC_HP_EMP_NR,
    STD_DISC_CHANGE_USER_ID,
    COST_STATUS,
    MULT_CNTRY_VRFY_FL,
    SHIP_CHARGE_FL,
    SP_STATUS,
    PRODUCT_CATEGORY,
    OFFLINE_APPRVL_FL,
    BUS_GROUP_CD,
    BUS_UNIT_CD,
    AUTH_BASIS_TEXT,
    GUIDANCE_LAST_REFRESH_DT,
    GUIDANCE_EXPERT_PCT,
    GUIDANCE_TYPICAL_PCT,
    GUIDANCE_FLOOR_PCT,
    GUIDANCE_PREV_RQST_PCT,
    GUIDANCE_AVAILABLE_FL,
    LINE_AUTH_TYPE,
    AUTH_GENERIC_EMP_NR,
    REF_DISC_PCT,
    PREV_AUTH_BASIS_TEXT,
    PREV_LINE_AUTH_TYPE,
    PREV_GENERIC_EMP_NR,
    REF_SRC_CD,
    REF_SRC_ID,
    EXT_PRE_APPRV_PRC_AM,
    GUIDANCE_DETAILS_ID,
    INSTANT_PRC_METHOD,  --Added for CR ID:255803 [HPE][Channel][US-7301] The deal reg info in eclipse deal is incorrect after BMI quote revised.
    INSTANT_PRC_AMT ---Added for CR ID:255803 [HPE][Channel][US-7301] The deal reg info in eclipse deal is incorrect after BMI quote revised.
  )
    SELECT
    BD_ID,
    LINE_NR,
    PROD_GNRC_NR_TX,
    PROD_OPT_CD,
    DISC_BNDRY_ID,
    scale_id+1,
    QTY,
    PROD_TYPE,
    PROD_GNRC_DESC_TX,
    DISC_PC,
    LIST_PRICE,
    EXTENDED_PRICE,
    SUBST_PROD,
    BUNDLE_NR,
    ITEM_NR,
    INTEGRATED_GRP_CD,
    RQST_BD_NET_PRC_AM,
    AUTH_BD_NET_PRC_AM,
    RQST_INCR_DISC_AM,
    AUTH_INCR_DISC_AM,
    l_version_created,
    ASSOC_PL,
    'N',
    AUTH_MC_DATE,
    AUTH_MC_HP_EMP_NR,
    DISC_AS_PCT,
    DISC_TYPE_CD,
    RQST_DISC_OT_PC,
    AUTH_DISC_OT_PC,
    PROD_GM,
    PROD_GM_PCT,
    PROD_VCM,
    PROD_VCM_PCT,
    PROD_OP_PROFIT,
    PROD_OP_PROFIT_PCT,
    COMPONENT_LEVEL_CD,
    PREV_AUTH_CD,
    TO_CHAR(SYSDATE,'DD/MON/YYYY'),
    TO_CHAR(SYSDATE,'DD/MON/YYYY'),
    REF_PRICE_FL,
    PRICE_LIST_CD,
    CURRENCY_CD,
    PRICE_TERM_CD,
    BANDED_FL,
    SPCL_CONFIG_FL,
    PROD_COST_AM,
    PROD_COST_DATE,
    RQST_MARGIN_PCT,
    AUTH_MARGIN_PCT,
    COST_AVAIL_FL,
    AUTH_DT_GMT,
    FUTURE_PROD_FL,
    NON_DISCOUNT_FL,
    SHOW_QUOTE_LONG_DESC_FL,
    AUTH_TYPE_CD,
    PREV_AUTH_MC_HP_EMP_NR,
    STD_DISC_CHANGE_USER_ID,
    COST_STATUS,
    MULT_CNTRY_VRFY_FL,
    SHIP_CHARGE_FL,
    SP_STATUS,
    PRODUCT_CATEGORY,
    OFFLINE_APPRVL_FL,
    BUS_GROUP_CD,
    BUS_UNIT_CD,
    AUTH_BASIS_TEXT,
    GUIDANCE_LAST_REFRESH_DT,
    GUIDANCE_EXPERT_PCT,
    GUIDANCE_TYPICAL_PCT,
    GUIDANCE_FLOOR_PCT,
    GUIDANCE_PREV_RQST_PCT,
    GUIDANCE_AVAILABLE_FL,
    LINE_AUTH_TYPE,
    AUTH_GENERIC_EMP_NR,
    REF_DISC_PCT,
    PREV_AUTH_BASIS_TEXT,
    PREV_LINE_AUTH_TYPE,
    PREV_GENERIC_EMP_NR,
    REF_SRC_CD,
    REF_SRC_ID,
    EXT_PRE_APPRV_PRC_AM,
    GUIDANCE_DETAILS_ID,
    INSTANT_PRC_METHOD,  --Added for CR ID 255803[HPE][Channel][US-7301] The deal reg info in eclipse deal is incorrect after BMI quote revised.
    INSTANT_PRC_AMT ---Added for CR ID 255803 [HPE][Channel][US-7301] The deal reg info in eclipse deal is incorrect after BMI quote revised.
   FROM bundle_line
    WHERE line_nr = in_line_nr
    AND bd_id = in_bd_id
    AND scale_id =l_scale_id;

--Below count is checked for CR: 3147
SELECT COUNT(*) INTO l_gt_product_cnt FROM gt_product_bundles_prices; --Check if there are any records in GT table.


--New code by Lakshmi on 2/8/2016, added to get the latest list price from Gpsy: CR:3172-->Issue with Guidance on German deal ref 93148560

SELECT line_type_cd INTO l_line_type_cd FROM line_item WHERE bd_id=in_bd_id AND LINE_NR=in_line_nr;

--The below update statement updates the List price for only PN.
IF (l_deal_source_cd IN ('BMI','NGQ','STS') AND l_gt_product_cnt>0) THEN --New condition added for CR: 3147, as we dont have to check in gt_product_bundles_prices table for deals created manually

IF l_line_type_cd='PN' THEN
BEGIN
SELECT lds.prod_lst_prc_am , gpd.price
    INTO l_old_price , l_new_price
    FROM line_disc_scale lds, gt_product_bundles_prices gpd,  line_item li
    WHERE lds.line_nr = in_line_nr
    AND lds.bd_id = in_bd_id
    AND scale_id =l_scale_id+1
    AND lds.line_nr=li.line_nr AND lds.bd_id=li.bd_id AND li.line_type_cd='PN'
    AND LTRIM(RTRIM(prod_nr))=li.prod_gnrc_nr_tx
    AND gpd.prod_opt_cd=DECODE(li.prod_opt_cd,' ','1',li.prod_opt_cd)
    AND rownum<=1;

    IF l_old_price<>l_new_price THEN
        UPDATE line_disc_scale SET prod_lst_prc_am=l_new_price
    WHERE line_nr = in_line_nr
    AND bd_id = in_bd_id
    AND scale_id =l_scale_id+1;
    l_msg_type              :='INFO';
    l_errors                := 'Updated List price with latest price for the Line#: '||in_line_nr||' Scale id: '||l_scale_id+1||' bd_id : '||in_bd_id||SQLERRM;
    INSERTERROR_OUTPUT_MESSAGES ( in_bd_id, NULL,NULL,null, NULL,NULL,NULL,NULL,NULL,NULL, l_errors, l_msg_type, NULL, NULL, NULL,l_errors);
    END IF;
EXCEPTION
WHEN OTHERS THEN
l_msg_type              :='WARNING';
l_errors                := 'Could not update the latest price for the Line#: '||in_line_nr||' Scale id: '||l_scale_id+1||' bd_id : '||in_bd_id||SQLERRM;
     INSERTERROR_OUTPUT_MESSAGES ( in_bd_id, NULL,NULL,null, NULL,NULL,NULL,NULL,NULL,NULL, l_errors, l_msg_type, NULL, NULL, NULL,l_errors);
END;
END IF;

END IF;

--The below code updates list prices of bundles:
/* UPDATE bundle_line bl SET list_price=(SELECT price FROM gt_product_bundles_prices WHERE prod_nr=bl.prod_gnrc_nr_tx
                                      AND DECODE(prod_opt_cd,'1',' ',prod_opt_cd)=bl.prod_opt_cd)
WHERE bd_id=in_bd_id
AND line_nr=in_line_nr
AND scale_id=l_scale_id+1;
 */--End of new code added for CR:3172


--Added for CR ID 255169 "[US7301] [Eclipse] [HPI] Instant Prc Method and Instant Prc Amount is missing in V2 deal when Orderable. "
    INSERT INTO bundle_line_contra(bd_id,
                                                     line_nr,
                                                     item_nr,
                                                     disc_bndry_id,
                                                     scale_id,
                                                     contra_type,
                                                     contra_amt)
    SELECT bd_id,
                 line_nr,
                 item_nr,
                 disc_bndry_id,
                 scale_id+1,
                 contra_type,
                 contra_amt
    FROM bundle_line_contra
    WHERE line_nr = in_line_nr
    AND bd_id = in_bd_id
    AND scale_id =l_scale_id;


    --DBMS_OUTPUT.PUT_LINE('add_date_range 4');

    out_status :='SUCCESS';
    EXCEPTION
    WHEN OTHERS THEN
    out_status := 'An error was encountered while updating Date range - for line_nr: '|| in_line_nr ||', '||
    SQLCODE || ' -ERROR- ' || SQLERRM || '. Error at Line : ' || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE();
    --dbms_output.PUT_LINE (OUT_STATUS);
    --RAISE;

END add_date_range;

PROCEDURE update_rollout(IN_sku IN VARCHAR2,
                         l_begindate IN DATE,
                         l_enddate IN DATE,
                         IN_QTY IN NUMBER,
                         IN_ROLLOUTMONTHQTYS IN VARCHAR2,
                         IN_orderminqty IN NUMBER,
                         IN_OPTCD in VARCHAR2,
                         in_bd_id IN NUMBER,
                         in_line_nr IN NUMBER,
                         out_status OUT VARCHAR2)
IS
l_rollout_mnths t_rollout_mnths:=t_rollout_mnths();
l_rollout_ins_qry VARCHAR2(4000);
l_no_of_months    NUMBER;
l_inorderminqty ROLLOUT_SCHEDULE.ORDR_MIN_QTY%TYPE;
BEGIN
--DBMS_OUTPUT.PUT_LINE('Start of update_rollout procedure');
   IF IN_orderminqty IS NULL THEN
        l_inorderminqty  :=1 ;
    ELSE
    l_inorderminqty := IN_orderminqty;
   END IF;

UPDATE line_item SET estmtd_qt=IN_QTY WHERE bd_id=in_Bd_id AND line_nr=in_line_nr;
--DBMS_OUTPUT.PUT_LINE('Deleting from rollout_schedule WHERE bd_id= '||in_bd_id|| ' and line nr: '||in_line_nr);
DELETE FROM rollout_schedule WHERE bd_id=in_bd_id AND line_nr=in_line_nr;
--DBMS_OUTPUT.PUT_LINE('Rows deleted: '||sql%rowcount);
GET_ROLLOUT_MONTHS(IN_ROLLOUTMONTHQTYS,L_ROLLOUT_MNTHS );
        l_rollout_ins_qry        := 'insert into rollout_schedule (bd_id,
                                        line_nr,
                                        prod_base_nr,
                                        ro_bgn_dt,
                                        ro_end_dt,
                                        load_type,
                                        est_qty,
                                        pct_prob,
                                        mth1_qty,
                                        mth2_qty,
                                        mth3_qty,
                                        mth4_qty,
                                        mth5_qty,
                                        mth6_qty,
                                        mth7_qty,
                                        mth8_qty,
                                        mth9_qty,
                                        mth10_qty,
                                        mth11_qty,
                                        mth12_qty,
                                        mth13_qty,
                                        mth14_qty,
                                        mth15_qty,
                                        schedule_change_fl,
                                        ordr_min_qty,
                                        line_max_qty,
                                        creation_dts,
                                        update_dts,
                                        remaining_qty,
                                        rtqty,
                                        PROD_OPT_CD )
                                        values (
' ||in_bd_id||',' ||in_line_nr||',' ||'''' || IN_sku||'''' ||',' || 'to_date('||''''||l_begindate||''''||','||'''DD-MON-YY'''||')'||',' || 'to_date('||''''||l_enddate||''''||','||'''DD-MON-YY'''||')'||',' || '''Even'''||',' ||IN_qty||',' ||100||',';
        l_no_of_months           :=1;
        IF l_rollout_mnths.first IS NOT NULL THEN
          FOR months_rec IN l_rollout_mnths.first..l_rollout_mnths.last
          LOOP
            IF LENGTH
              (
                l_rollout_mnths(months_rec)
              )
                                =0 THEN
              l_rollout_ins_qry:=l_rollout_ins_qry||'NULL'||',';
            ELSE
              l_rollout_ins_qry:=l_rollout_ins_qry||l_rollout_mnths(months_rec) ||',';
            END IF;
            l_no_of_months:=l_no_of_months+1;
            ----dbms_output.put_line('Inside MOnth loop');
          END LOOP;
        END IF;
        FOR i IN l_no_of_months-1 ..14
        LOOP
          l_rollout_ins_qry:=l_rollout_ins_qry||'NULL'||',';
        END LOOP;
        L_ROLLOUT_INS_QRY:=L_ROLLOUT_INS_QRY || '''N'''||',' ||l_inorderminqty||','||IN_qty||',' || 'SYSDATE'||',' ||' SYSDATE'||',' ||IN_qty||',' ||IN_qty || ',' || '''' ||NVL(ltrim(rtrim(IN_OPTCD)),' ')|| '''' || ')';
        --dbms_output.put_line(' Rollout query ' || l_rollout_ins_qry);
        --dbms_output.put_line ('rollout for line');
        --DBMS_OUTPUT.PUT_LINE('The below query will be executed>>>>>>>>>>>>>>>>>>');
        --DBMS_OUTPUT.PUT_LINE(l_rollout_ins_qry);
        EXECUTE immediate (l_rollout_ins_qry);
        --commit;--Temporarily added.
EXCEPTION
WHEN OTHERS THEN
 out_status := 'An error was encountered while updating rollout_Schedule table - for line_nr: '|| in_line_nr ||', '||
    SQLCODE || ' -ERROR- ' || SQLERRM || '. Error at Line : ' || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE();
END update_rollout;

PROCEDURE update_date_range (l_deal_creation_guid IN VARCHAR2,
                            l_line_nr in NUMBER,
                             in_bd_id     IN NUMBER)
IS
l_enddate deal.end_dt%type;
l_xmlnamespace VARCHAR2 (250);
l_rollout_mnths t_rollout_mnths:=t_rollout_mnths();
l_rollout_ins_qry VARCHAR2(4000);
l_no_of_months    NUMBER;
l_begindate deal.beg_dt%type;
BEGIN
L_XMLNAMESPACE := 'xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://schemas.datacontract.org/2004/07/HP.Eclipse.Data.EDMS"' ;
l_enddate := TO_TIMESTAMP ( SUBSTR(getsqtxmlvalue ( '/DealCreationRequest/DealHeader/EndDate/', l_deal_creation_guid),1,19) ,'YYYY-MM-DD"T"HH24:MI:SS');
l_begindate := TO_TIMESTAMP ( SUBSTR(getsqtxmlvalue ( '/DealCreationRequest/DealHeader/BeginDate/', l_deal_creation_guid),1,19), 'YYYY-MM-DD"T"HH24:MI:SS');
--Update end date in deal table.
   UPDATE deal
      SET end_dt = l_enddate, update_dts = TRUNC (SYSDATE)
    WHERE bd_id = in_bd_id;

--Update Upper boundry date in line_disc_scale table.
   UPDATE line_disc_scale
      SET upper_bndry_dt = TRUNC (l_enddate)
    WHERE (scale_id, line_nr) IN (  SELECT MAX (scale_id), line_nr
                                      FROM line_disc_scale
                                     WHERE bd_id = in_bd_id
                                  GROUP BY line_nr)
          AND bd_id = in_bd_id;

--Update end date in rollout_schedule table.
   UPDATE rollout_schedule
      SET ro_end_dt = TRUNC (l_enddate)
    WHERE bd_id = in_bd_id;

 FOR rec IN
    (SELECT extract ( value (d), '//Qty/text()', l_xmlnamespace). getstringval ()                                AS qty,
      extract ( value (d), '//RolloutMonthQtys/text()', l_xmlnamespace). getstringval ()                   AS rolloutmonthqtys,
      extract ( value (d), '//ProdBaseNr/text()', l_xmlnamespace). getstringval ()                         AS sku,
      extract ( value (d), '//OptCD/text()', l_xmlnamespace). getstringval ()                              AS optcd,
      extract ( value (d), '//OrderMinQty/text()', l_xmlnamespace). getstringval ()                        AS orderminqty -----CR 4735
    FROM edms_deal_queue x,
      TABLE ( xmlsequence ( extract ( x.xml_data_xml, 'DealCreationRequest/LineItems/LineItemPN', l_xmlnamespace))) d
    WHERE x.deal_creation_guid = l_deal_creation_guid
    )
    LOOP
GET_ROLLOUT_MONTHS(REC.ROLLOUTMONTHQTYS,L_ROLLOUT_MNTHS );
 l_rollout_ins_qry        := 'insert into gt_rollout_schedule (bd_id,
line_nr,
prod_base_nr,
ro_bgn_dt,
ro_end_dt,
load_type,
est_qty,
pct_prob,
mth1_qty,
mth2_qty,
mth3_qty,
mth4_qty,
mth5_qty,
mth6_qty,
mth7_qty,
mth8_qty,
mth9_qty,
mth10_qty,
mth11_qty,
mth12_qty,
mth13_qty,
mth14_qty,
mth15_qty,
schedule_change_fl,
ordr_min_qty,
line_max_qty,
creation_dts,
update_dts,
remaining_qty,
rtqty,
PROD_OPT_CD )
values ( ' ||in_bd_id||',' ||l_line_nr||',' ||'''' || rec.sku||'''' ||',' || 'to_date('||''''||l_begindate||''''||','||'''DD-MON-YY'''||')'||',' || 'to_date('||''''||l_enddate||''''||','||'''DD-MON-YY'''||')'||',' || '''Even'''||',' ||rec.qty||',' ||100||',';
        l_no_of_months           :=1;
        IF l_rollout_mnths.first IS NOT NULL THEN
          FOR months_rec IN l_rollout_mnths.first..l_rollout_mnths.last
          LOOP
            IF LENGTH
              (
                l_rollout_mnths(months_rec)
              )
                                =0 THEN
              l_rollout_ins_qry:=l_rollout_ins_qry||'NULL'||',';
            ELSE
              l_rollout_ins_qry:=l_rollout_ins_qry||l_rollout_mnths(months_rec) ||',';
            END IF;
            l_no_of_months:=l_no_of_months+1;
            ----dbms_output.put_line('Inside MOnth loop');
          END LOOP;
        END IF;
        FOR i IN l_no_of_months-1 ..14
        LOOP
          l_rollout_ins_qry:=l_rollout_ins_qry||'NULL'||',';
        END LOOP;
        L_ROLLOUT_INS_QRY:=L_ROLLOUT_INS_QRY || '''N'''||',' ||rec.orderminqty||','||REC.QTY||',' || 'SYSDATE'||',' ||' SYSDATE'||',' ||REC.QTY||',' ||REC.QTY || ',' || '''' ||NVL(ltrim(rtrim(REC.OPTCD)),' ')|| '''' || ')';
        --dbms_output.put_line(' GT Rollout query ' || l_rollout_ins_qry);
        --dbms_output.put_line ('rollout for line');
        EXECUTE immediate (l_rollout_ins_qry);
END LOOP;
        MERGE INTO (SELECT * FROM rollout_schedule WHERE bd_id=in_bd_id) ro
        USING (SELECT * FROM gt_rollout_schedule) gtro
        ON (ro.bd_id=gtro.bd_id AND ro.line_nr=gtro.line_nr)
        WHEN MATCHED THEN
        UPDATE  SET ro.MTH1_QTY    = gtro.MTH1_QTY,
                    ro.MTH2_QTY    = gtro.MTH2_QTY,
                    ro.MTH3_QTY    = gtro.MTH3_QTY,
                    ro.MTH4_QTY    = gtro.MTH4_QTY,
                    ro.MTH5_QTY    = gtro.MTH5_QTY,
                    ro.MTH6_QTY    = gtro.MTH6_QTY,
                    ro.MTH7_QTY    = gtro.MTH7_QTY,
                    ro.MTH8_QTY    = gtro.MTH8_QTY,
                    ro.MTH9_QTY    = gtro.MTH9_QTY,
                    ro.MTH10_QTY    = gtro.MTH10_QTY,
                    ro.MTH11_QTY    = gtro.MTH11_QTY,
                    ro.MTH12_QTY    = gtro.MTH12_QTY,
                    ro.MTH13_QTY    = gtro.MTH13_QTY,
                    ro.MTH14_QTY    = gtro.MTH14_QTY,
                    ro.MTH15_QTY    = gtro.MTH15_QTY ;
    END update_date_range;

Procedure GenerateOPG (I_BD_ID NUMBER ,  o_next_opg_num out VARCHAR2,
      O_ERRORS out varchar2
)
IS
/*
Created by Harsh Shah 21-Nov-2013
Purpose: Generates the OPG Reference No for the specified deal.
*/
  --/*+ INDEX(D PK_DEAL) INDEX(B PK_BUS_MODEL) USE_NL(D B) */
  --        D.BD_ID, D.BD_NR, D.BD_VERSION_NR, D.CONTROL_CNTRY_CD, D.BUS_MODEL_CD,
  --      GEN_OPG_AT_QUOTE_FL, D.REGION, D.W_L_STAT_CD, D.OPG_NUM, D.QUOTE_DIST_CD, D.REBATABLE_FL,
  --    B.GEN_OPG_FL, B.OPG_NUM_REF, B.DIRECT_FL, B.QUOTE_OPG_WON_FL, B.QUOTE_SEND_PDF_FL, B.QUOTE_SEND_TXT_FL

--Variables declaration
  l_opg_num_ref bus_model.opg_num_ref%type;
  l_vstatus VARCHAR2(10);
  l_next_opg_num deal.opg_num%type;
  l_bm_gen_opg_fl varchar2(1):='N';
 --Variables Declaration Ends
  BEGIN

      --dbms_output.put_line(' generating OPG ');
    SELECT
        B.OPG_NUM_REF,
        b.gen_opg_fl
        INTO
        l_OPG_NUM_REF,
        l_bm_gen_opg_fl
    FROM DEAL D,
      BUS_MODEL B
    WHERE D.BD_ID               = i_bd_id
    AND b.bus_model_cd          = d.bus_model_cd
    AND b.country_cd            = d.control_cntry_cd
    AND b.Tenantid =nvl(d.tenantid_data_cd,'HPE')--nvl(d.tenantid,'HPE')---Added for SMO Changes (tenantid column is replaced with tenantid_data_cd for Federal project changes)
    AND gen_opg_fl              ='Y'
    AND gen_opg_at_quote_fl     ='Y'
    AND quote_dist_cd          <>'Q'
    AND LENGTH(NVL(d.opg_num,0))<2;

    /*
    iOpgNumRef   IN   opg_reference.opg_num_ref%TYPE
    , vStatus      OUT  VARCHAR2
    */

    --dbms_output.put_line (' l_bm_gen_opg_fl ' || l_bm_gen_opg_fl);

    IF l_bm_gen_opg_fl='Y' THEN
                IF l_opg_num_ref IS NOT NULL THEN   -- OPG Ref No
                       l_next_opg_num :=eclipse.getopgnumfromopgreference(l_opg_num_ref, l_vstatus) ;
                        --dbms_output.put_line (' l_vstatus  ' || l_vstatus || l_next_opg_num);
                        IF upper(l_vstatus)='OK' THEN   -- if OPG RefNo is valid
                                o_next_opg_num  :=l_next_opg_num;
                                --dbms_output.put_line ('OPG Generated  ' || o_next_opg_num );
                        ELSE   --if OPG Ref No is not valid
                            O_ERRORS      := 'Unable to Generate OPG :' || SUBSTR(l_VSTATUS,1,3000);
                        END IF;
                END IF; -- END OF l_opg_num_ref check
    ELSE  -- IF GEN OPG FLAG from bus model is false
        O_ERRORS      := 'Unable to Generate OPG. Business Model setting does not allow OPG Generation for this deal';
        RETURN;
        --dbms_output.PUT_LINE (O_ERRORS);
    END IF; -- end of check for l_bm_gen_opg_fl
  EXCEPTION
  WHEN no_data_found THEN
    O_ERRORS:='OPG Ref No. cannot be generated. Check if  OPG Gen Flag is not set to True for the Deals Business Model ';
    l_opg_num_ref :=NULL;
    o_next_opg_num:=NULL;
    --dbms_output.put_line ('opg not generated..no data found');
    --dbms_output.put_line (O_ERRORS);
  WHEN OTHERS THEN
      l_opg_num_ref :=NULL;
      o_next_opg_num:=NULL;
      O_ERRORS:='An error was encountered while generating OPG Ref. No  ' || SQLCODE || ' -ERROR- ' || sqlerrm || '. Error at Line : ' || dbms_utility.format_error_backtrace() ;
      --dbms_output.put_line (O_ERRORS);
  END GenerateOPG;

  procedure UpdateDealDettailsForNewVersio(
  i_deal_creation_guid IN VARCHAR2,
  i_xmlnamespace      VARCHAR2,
  i_bd_id IN NUMBER,
  o_success_fl OUT varchar2
  )
IS
l_errors varchar2(2000);
l_mcchargecd deal.mc_charge%type;
l_singlecompanydeal deal.single_cmpny_deal_fl%type;
l_routingindicator deal.routing_indicator_cd%type;
l_custindustry industry.industry_nm%type;
l_asapindicator deal.asap_indicator_cd%type;
l_msg_type VARCHAR2(50);
l_CorpRslrAsDistFl deal.CORPORATE_RESELLER_FL%TYPE;--New tag added by Lakshmi as part of US6339 -APJ Corporate Resellers


l_update_deal_disc_sources APP_CONFIG_KEYS.APP_VALUE%TYPE; --New variable added by Lakshmi to update Deal Disc Type codes
l_dealsourcecd deal.deal_source_cd%TYPE; --New variable added by Lakshmi to update Deal Disc Type codes
BEGIN

SELECT deal_source_cd 
    INTO l_dealsourcecd
    FROM deal
    WHERE bd_id=i_bd_id;

 --Update mc charge in deal table.
 --Enabled the below update as discussed with Harsh, Andrew and Greg on 27th May 2014
  BEGIN
SELECT extract (xml_data_xml, '/DealCreationRequest/DealHeader/McChargeCD/text()', i_xmlnamespace). getclobval ()
  INTO l_mcchargecd
  FROM edms_deal_queue
  WHERE deal_creation_guid = i_deal_creation_guid;
  IF l_mcchargecd IS NOT NULL THEN
  UPDATE deal
  SET mc_charge=l_mcchargecd
  WHERE bd_id= i_bd_id;
  
  --New code added by Lakshmi to update deal disc type code in Deal table.
  BEGIN
SELECT app_value 
  INTO l_update_deal_disc_sources
    FROM APP_CONFIG_KEYS 
WHERE app_key='UPDATE_DEAL_DISC_TYPE_CD';
EXCEPTION
WHEN OTHERS THEN
    l_update_deal_disc_sources :=NULL;
END;

FOR deal_sources IN (SELECT REGEXP_SUBSTR(l_update_deal_disc_sources,'[^,]+',1, level) 
sources_to_update FROM DUAL CONNECT BY level<=LENGTH(l_update_deal_disc_sources)- LENGTH(REPLACE(l_update_deal_disc_sources,','))+1)
LOOP
    BEGIN
    IF l_dealsourcecd = deal_sources.sources_to_update THEN
    UPDATE deal
       SET mc_disc_type =(SELECT  mcdt.mc_deal_disc_type_desc 
                                FROM mc_charge mch , mc_charge_deal_types mcdt 
                                    WHERE mch.MC_DEAL_DISC_TYPE_CD = mcdt.MC_DEAL_DISC_TYPE_CD
                                    AND     mch.mc_chrg = l_mcchargecd
                                    AND mch.country_cd = (SELECT control_cntry_cd FROM deal WHERE bd_id= i_bd_id)
                                    AND mch.bus_model_cd = (SELECT bus_model_cd FROM deal WHERE bd_id= i_bd_id)
                                 )
     WHERE bd_id= i_bd_id;
     END IF;
    EXCEPTION
    WHEN OTHERS THEN
    UPDATE deal SET mc_disc_type = null
    WHERE bd_id=i_bd_id;
    END;
END LOOP;

  END IF;
  o_success_fl :='Y';
EXCEPTION
WHEN OTHERS THEN
o_success_fl:='N';
l_errors := 'Error occured while updating mc_charge in deal table';
l_msg_type :='WARNING';
INSERTERROR_OUTPUT_MESSAGES ( i_bd_id, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, l_errors, l_msg_type, i_deal_creation_guid, NULL, NULL,l_errors);
--dbms_output.PUT_LINE ('An error was encountered updating mc_charge in deal table- ' || SQLCODE || ' -ERROR- ' || sqlerrm || '. Error at Line : ' || dbms_utility.format_error_backtrace() );
END;
  --Update single_cmpny_deal_fl in deal table.
  BEGIN
SELECT extract (xml_data_xml, '/DealCreationRequest/DealHeader/SingleCompanyDeal/text()', i_xmlnamespace). getclobval ()
    INTO l_singlecompanydeal
    FROM edms_deal_queue
    WHERE deal_creation_guid = i_deal_creation_guid;
    IF l_singlecompanydeal IS NOT NULL THEN
    UPDATE deal
    SET single_cmpny_deal_fl = l_singlecompanydeal
    WHERE bd_id= i_bd_id;
    END IF;
o_success_fl :='Y';
EXCEPTION
WHEN OTHERS THEN
o_success_fl:='N';
l_errors := 'Error occured while updating single_cmpny_deal_fl in deal table';
l_msg_type :='WARNING';
INSERTERROR_OUTPUT_MESSAGES ( i_bd_id, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, l_errors, l_msg_type, i_deal_creation_guid, NULL, NULL,l_errors);
--dbms_output.PUT_LINE ('An error was encountered updating single_cmpny_deal_fl in deal table- ' || SQLCODE || ' -ERROR- ' || sqlerrm || '. Error at Line : ' || dbms_utility.format_error_backtrace() );
END;

  --Update routing_indicator_cd in deal table.
  BEGIN
SELECT extract (xml_data_xml, '/DealCreationRequest/DealHeader/RoutingIndicator/text()', i_xmlnamespace). getclobval ()
    INTO l_routingindicator
    FROM edms_deal_queue
    WHERE deal_creation_guid = i_deal_creation_guid;
    IF l_routingindicator IS NOT NULL THEN
    UPDATE deal
    SET routing_indicator_cd = l_routingindicator
    WHERE bd_id= i_bd_id;
    END IF;
o_success_fl :='Y';
EXCEPTION
WHEN OTHERS THEN
o_success_fl:='N';
l_errors := 'Error occured while updating routing_indicator_cd in deal table';
l_msg_type :='WARNING';
INSERTERROR_OUTPUT_MESSAGES ( i_bd_id, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, l_errors, l_msg_type, i_deal_creation_guid, NULL, NULL,l_errors);
--dbms_output.PUT_LINE ('An error was encountered updating routing_indicator_cd in deal table- ' || SQLCODE || ' -ERROR- ' || sqlerrm || '. Error at Line : ' || dbms_utility.format_error_backtrace() );
END;

   --Update customer industry in deal table.
BEGIN
SELECT extract (xml_data_xml,'/DealCreationRequest/DealCustomer/CustIndustry/text()', i_xmlnamespace). getclobval ()
    INTO l_custindustry
    FROM edms_deal_queue
    WHERE deal_creation_guid = i_deal_creation_guid;
    IF l_custindustry IS NOT NULL THEN
    UPDATE deal
    SET euc_industry_nr = l_custindustry
    WHERE bd_id= i_bd_id;
    END IF;
o_success_fl :='Y';
EXCEPTION
WHEN OTHERS THEN
o_success_fl:='N';
l_errors := 'Error occured while updating euc_industry_nr in deal table';
l_msg_type :='WARNING';
INSERTERROR_OUTPUT_MESSAGES ( i_bd_id, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, l_errors, l_msg_type, i_deal_creation_guid, NULL, NULL,l_errors);
--dbms_output.PUT_LINE ('An error was encountered updating euc_industry_nr in deal table- ' || SQLCODE || ' -ERROR- ' || sqlerrm || '. Error at Line : ' || dbms_utility.format_error_backtrace());
END;

   --Update ASAP indicator in deal table.
BEGIN
SELECT extract (xml_data_xml,'/DealCreationRequest/DealHeader/ASAPIndicator/text()', i_xmlnamespace). getclobval ()
    INTO l_asapindicator
    FROM edms_deal_queue
    WHERE deal_creation_guid = i_deal_creation_guid;
    IF l_asapindicator IS NOT NULL THEN
    UPDATE deal
    SET asap_indicator_cd = l_asapindicator
    WHERE bd_id= i_bd_id;
    END IF;
o_success_fl :='Y';
EXCEPTION
WHEN OTHERS THEN
o_success_fl:='N';
l_errors := 'Error occured while updating asap_indicator_cd in deal table';
l_msg_type :='WARNING';
INSERTERROR_OUTPUT_MESSAGES ( i_bd_id, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, l_errors, l_msg_type, i_deal_creation_guid, NULL, NULL,l_errors);
--dbms_output.PUT_LINE ('An error was encountered updating asap_indicator_cd in deal table- ' || SQLCODE || ' -ERROR- ' || sqlerrm || '. Error at Line : ' || dbms_utility.format_error_backtrace() );
END;


 --Update Corporate Reseller flag in deal table.
BEGIN
SELECT extract (xml_data_xml,'/DealCreationRequest/DealHeader/CorpRslrAsDistFl/text()', i_xmlnamespace). getclobval ()
    INTO l_CorpRslrAsDistFl
    FROM edms_deal_queue
    WHERE deal_creation_guid = i_deal_creation_guid;
    IF l_CorpRslrAsDistFl IS NOT NULL THEN
    UPDATE deal
    SET CORPORATE_RESELLER_FL = l_CorpRslrAsDistFl
    WHERE bd_id= i_bd_id;
    END IF;
o_success_fl :='Y';
EXCEPTION
WHEN OTHERS THEN
o_success_fl:='N';
l_errors := 'Error occured while updating l_CorpRslrAsDistFl in deal table';
l_msg_type :='WARNING';
INSERTERROR_OUTPUT_MESSAGES ( i_bd_id, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, l_errors, l_msg_type, i_deal_creation_guid, NULL, NULL,l_errors);
--dbms_output.PUT_LINE ('An error was encountered updating asap_indicator_cd in deal table- ' || SQLCODE || ' -ERROR- ' || sqlerrm || '. Error at Line : ' || dbms_utility.format_error_backtrace() );
END;


o_success_fl :='Y';
EXCEPTION
WHEN OTHERS THEN
o_success_fl:='N';
END UpdateDealDettailsForNewVersio;

PROCEDURE split_value_volume_products (IN_deal_creation_guid IN VARCHAR2)
                                       --out_value_products OUT SYS_REFCURSOR,
                                       --out_volume_products OUT SYS_REFCURSOR)
IS
l_xmlnamespace VARCHAR2 (250);
temp_Var gt_max_pl.assoc_pl_cd%TYPE; --VARCHAR2(200); Commented VARCHAR2 as part of EDMS Hardening
--l_bundle_line_nr     NUMBER(10) :=0;
BEGIN
l_xmlnamespace := 'xmlns:i="http://www.w3.org/2001/XMLSchema-instance"
xmlns="http://schemas.datacontract.org/2004/07/HP.Eclipse.Data.EDMS"' ;

DELETE FROM gt_max_pl;

    FOR recbd IN
    (SELECT    *
    FROM
      (SELECT extract (value (d), '//LineItemPN/ProdBaseNr/text()', l_xmlnamespace). getstringval ()                          AS sku,
        extract (value (d), '//LineItemPN/PL/text()', l_xmlnamespace). getstringval ()                                  AS pl
      FROM edms_deal_queue x,
        TABLE ( xmlsequence ( extract ( x.xml_data_xml, 'DealCreationRequest/LineItems/LineItemPN', l_xmlnamespace))) d
      WHERE x.deal_creation_guid =IN_deal_creation_guid
      )
    )
    LOOP
    ----dbms_output.PUT_LINE('The bdnetamt is: '||recbd.bdnetamt);
    INSERT INTO gt_max_pl(
                assoc_pl_cd,
                prod_gnrc_nr_tx)
    VALUES (recbd.pl,
            recbd.sku);
    END LOOP;


    --Commented by Harsh Shah 27-Jan-2015
    --for US7832, performance improvement
    /*
    FOR recbd IN
    (SELECT    *
    FROM
      (SELECT extract (value (d), '//LineItemBD/BundleSource /text()', l_xmlnamespace). getstringval ()                       AS bundlesource ,
        extract (value (d), '//LineItemBD/BundleIndex /text()', l_xmlnamespace). getstringval ()                        AS bundleindex,
        extract (value (d), '//LineItemBD/PL/text()', l_xmlnamespace). getstringval ()                                  AS pl,
        extract (value (d), '//LineItemBD/ProdBaseNr/text()', l_xmlnamespace). getstringval ()                          AS sku
      FROM edms_deal_queue x,
        TABLE ( xmlsequence ( extract ( x.xml_data_xml, 'DealCreationRequest/Bundles/LineItemBD', l_xmlnamespace))) d
      WHERE x.deal_creation_guid =IN_deal_creation_Guid
      )
    )
    LOOP
       INSERT INTO gt_max_pl(
                assoc_pl_cd,
               prod_gnrc_nr_tx)
        VALUES (recbd.pl,
          recbd.sku);
    END LOOP;
    */


    --added by Harsh Shah 27-Jan-2015
    --for US7832, performance improvement

    INSERT INTO gt_max_pl(
                assoc_pl_cd,
               prod_gnrc_nr_tx)
    SELECT
        extract (value (d), '//LineItemBD/PL/text()', l_xmlnamespace). getstringval ()                                  AS pl,
        extract (value (d), '//LineItemBD/ProdBaseNr/text()', l_xmlnamespace). getstringval ()                          AS sku
      FROM edms_deal_queue x,
        TABLE ( xmlsequence ( extract ( x.xml_data_xml, 'DealCreationRequest/Bundles/LineItemBD', l_xmlnamespace))) d
      WHERE x.deal_creation_guid =IN_deal_creation_Guid;




    --UPDATE gt_max_pl gt SET volume_only_fl=(SELECT volume_only_fl FROM prod_line pl WHERE gt.assoc_pl_cd =pl.prod_line_cd),
                            --value_only_fl=(SELECT value_only_fl FROM prod_line PL WHERE gt.assoc_pl_cd=pl.prod_line_cd);

BEGIN
FOR rec IN (SELECT * FROM gt_max_pl WHERE assoc_pl_cd IS NULL)
LOOP
--DBMS_OUTPUT.PUT_LINE('Prod base nr checked: '||rec.prod_gnrc_nr_tx);
UPDATE gt_max_pl gt SET assoc_pl_cd=(SELECT prod_line_cd FROM ww_product WHERE prod_base_nr=rec.prod_gnrc_nr_tx AND rownum<=1)
where prod_gnrc_nr_tx=rec.prod_gnrc_nr_tx;--Changes made by Lakshmi as part of CR96944
--DBMS_OUTPUT.PUT_LINE('Rows udpated: '||sql%rowcount);
SELECT assoc_pl_cd INTO temp_var FROM gt_max_pl WHERE prod_gnrc_nr_tx=rec.prod_gnrc_nr_tx;
--DBMS_OUTPUT.PUT_LINE('PL CODE UDPATED: '||temp_var);
COMMIT;
--Changed gt.prod_gnrc_nr_tx to rec.prod_gnrc_nr_tx
--DBMS_OUTPUT.PUT_LINE('No of rows updated for NULL Prod Line Code: '||sql%rowcount);
END LOOP;
EXCEPTION
WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('ERROR: '||sqlerrm);
--l_errors := 'Could not update prod lines of GT table . Error at: '||DBMS_UTILITY.FORMAT_ERROR_BACKTRACE()||' Error: '||SQLERRM;
--log_default_value_errors(i_deal_creation_guid, l_errors);
END;


        Update Gt_Max_Pl Gt Set Volume_Only_Fl=(Select Decode(Val_Vol,'VOL','Y','N') From Ba_Pl_Hi Ba Where Prod_Line_Cd=Gt.Assoc_Pl_Cd),
                                 value_only_fl=(SELECT DECODE(val_vol,'VAL','Y','N') From Ba_Pl_Hi Ba Where Prod_Line_Cd=Gt.Assoc_Pl_Cd);

    EXCEPTION
    WHEN OTHERS THEN
    NULL;
    --OPEN out_value_products FOR SELECT NULL FROM DUAL;
    --OPEN out_volume_products FOR SELECT NULL FROM DUAL;
END split_value_volume_products;
PROCEDURE delete_resellers(
    i_deal_creation_guid IN VARCHAR2,
    i_bd_id IN NUMBER,
    i_xmlnamespace      VARCHAR2,
    o_error_message OUT VARCHAR2)
  IS
  l_countrycd deal.control_cntry_cd%type;
  l_busmodelcd deal.bus_model_cd%type;
  l_errors VARCHAR2(2000);
  l_msg_type VARCHAR2(200);
  l_tenantid deal.tenantid_data_cd%type;-- l_tenantid deal.tenantid%type;--Added for SMO Changes(tenantid is replaced with tenantid_data_cd for Federarl project)
BEGIN
--Delete reseller As
BEGIN
  l_countrycd             := getsqtxmlvalue ('/DealCreationRequest/DealHeader/CountryCD/', i_deal_creation_guid);
  l_busmodelcd            := getsqtxmlvalue ('/DealCreationRequest/DealHeader/BusModelCD/', i_deal_creation_guid);
  --select nvl(tenantid,'HPE') into l_tenantid from deal where bd_id = i_bd_id;---Added for SMO Changes
  select nvl(tenantid_data_cd,'HPE') into l_tenantid from deal where bd_id = i_bd_id;---Added for SMO Changes (tenantid id replaced with tenantid_data_cd for Federal project changes)
      FOR rec IN
      (SELECT extract ( value (d), '//ResellerID/text()', i_xmlnamespace). getstringval () AS ResellerID,
        extract ( value (D), '//PartnerProID/text()', I_XMLNAMESPACE). GETSTRINGVAL ()         AS PARTNERPROID,
        extract ( value (d), '//RequestType/text()', i_xmlnamespace). getstringval ()                        AS requesttype
        FROM edms_deal_queue x,
        TABLE ( xmlsequence ( extract ( x.xml_data_xml, 'DealCreationRequest/ResellerAs/ResellerA', i_xmlnamespace))) d
      WHERE x.deal_creation_guid =i_deal_creation_guid
      )
      LOOP
        --dbms_output.put_line ('ResellerID A  to ' || rec.ResellerID  || ' Request type '|| REC.requesttype) ;

              --IF REC.requesttype='DELETE' THEN
              IF REC.requesttype='REMOVE' THEN
                    --dbms_output.put_line ('ResellerID A to delete' || rec.ResellerID ) ;
                    DELETE FROM rslr_a WHERE rslr_id=rec.resellerid AND rslr_id NOT IN (SELECT dflt_rslr_a_id FROM bus_model
                                                                        WHERE bus_model_cd=l_busmodelcd
                                                                        AND country_cd    =l_countrycd
                                                                        And tenantid =l_tenantid)--Added  for SMO Changes
                                                                        AND bd_id=i_bd_id;
              END IF;

      END LOOP;
    o_error_message := NULL;
  EXCEPTION
  WHEN OTHERS THEN
  L_MSG_TYPE        :='ERROR';
  L_ERRORS          := 'An error was encountered while deleting Reseller A - ' || SQLCODE || ' -ERROR- ' || SQLERRM;
  o_error_message := l_errors;
  g_user_message    :='An error was encountered while deleting a Reseller A';
  INSERTERROR_OUTPUT_MESSAGES ( NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, L_ERRORS, L_MSG_TYPE, I_DEAL_CREATION_GUID, NULL, NULL,g_user_message );
END;
--Delete reseller Bs
BEGIN
  l_countrycd             := getsqtxmlvalue ('/DealCreationRequest/DealHeader/CountryCD/', i_deal_creation_guid);
  l_busmodelcd            := getsqtxmlvalue ('/DealCreationRequest/DealHeader/BusModelCD/', i_deal_creation_guid);
      FOR rec IN
      (SELECT extract ( value (d), '//ResellerID/text()', i_xmlnamespace). getstringval () AS ResellerID,
        extract ( value (D), '//PartnerProID/text()', I_XMLNAMESPACE). GETSTRINGVAL ()         AS PARTNERPROID,
        extract ( value (d), '//RequestType/text()', i_xmlnamespace). getstringval ()                        AS requesttype
        FROM edms_deal_queue x,
        TABLE ( xmlsequence ( extract ( x.xml_data_xml, 'DealCreationRequest/ResellerBs/ResellerB', i_xmlnamespace))) d
      WHERE x.deal_creation_guid =i_deal_creation_guid
      )
      LOOP
       --dbms_output.put_line ('ResellerID B to ' || rec.ResellerID  || ' Request type '|| REC.requesttype) ;

            --IF REC.requesttype='DELETE' THEN
            IF REC.requesttype='REMOVE' THEN
            --dbms_output.put_line ('ResellerID B to DELETE ' || rec.ResellerID  || ' Request type '|| REC.requesttype) ;
                    DELETE FROM rslr_b WHERE rslr_id=rec.resellerid AND rslr_id NOT IN (SELECT dflt_rslr_b_id FROM bus_model
                                                                        WHERE bus_model_cd=l_busmodelcd
                                                                        AND country_cd    =l_countrycd
                                                                        AND tenantid =l_tenantid)---Added for SMO Changes
                                                                        AND bd_id=i_bd_id;
            END IF;

    END LOOP;
    o_error_message := NULL;
  EXCEPTION
  WHEN OTHERS THEN
  L_MSG_TYPE        :='ERROR';
  L_ERRORS          := 'An error was encountered while deleting Reseller A - ' || SQLCODE || ' -ERROR- ' || SQLERRM;
  o_error_message := l_errors;
  g_user_message    :='An error was encountered while deleting a Reseller A';
  INSERTERROR_OUTPUT_MESSAGES ( NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, L_ERRORS, L_MSG_TYPE, I_DEAL_CREATION_GUID, NULL, NULL,g_user_message );
END;
END delete_resellers;
--Commented by Lakshmi on 8/26/2014 to implement new logic to consider Bundle components also (As per Ana).
/* FUNCTION get_max_pl_bmi (IN_deal_creation_Guid IN VARCHAR2)
                RETURN VARCHAR2
IS
l_xmlnamespace VARCHAR2 (250);
max_pl LINE_ITEM.ASSOC_PL_CD%TYPE;--VARCHAR2(20);
BEGIN
l_xmlnamespace := 'xmlns:i="http://www.w3.org/2001/XMLSchema-instance"
xmlns="http://schemas.datacontract.org/2004/07/HP.Eclipse.Data.EDMS"' ;
DELETE FROM gt_max_pl;
    FOR recbd IN
    (SELECT    *
    FROM
      (SELECT extract ( value (d), '//LineItemPN/BDNetAmt/text()', l_xmlnamespace ). getstringval ()             AS bdnetamt,
        extract (value (d), '//LineItemPN/ProdBaseNr/text()', l_xmlnamespace). getstringval ()                   AS sku,
        extract (value (d), '//LineItemPN/PL/text()', l_xmlnamespace). getstringval ()                           AS pl,
        extract ( value (d), '//LineItemPN/Qty/text()', l_xmlnamespace). getstringval ()                           AS Qty,--Added by Lakshmi as per CR2558- Changes for Default BU derivation.
        extract ( value (d), '//LineItemPN/ListPrice/text()', l_xmlnamespace). getstringval ()                   AS ListPrice --Added by Lakshmi as per CR2558- Changes for Default BU derivation.
      FROM edms_deal_queue x,
        TABLE ( xmlsequence ( extract ( x.xml_data_xml, 'DealCreationRequest/LineItems/LineItemPN', l_xmlnamespace))) d
      WHERE x.deal_creation_guid =IN_deal_creation_guid
      )
    )
    LOOP
    ----dbms_output.PUT_LINE('The bdnetamt is: '||recbd.bdnetamt);
    INSERT INTO gt_max_pl(
                assoc_pl_cd,
                bdnetamt,
                prod_gnrc_nr_tx,
                list_price,--Added by Lakshmi as per CR2558- Changes for Default BU derivation.
                Qty--Added by Lakshmi as per CR2558- Changes for Default BU derivation.
                )
        VALUES (
            recbd.pl,
            recbd.bdnetamt,
            recbd.sku,
            recbd.ListPrice,--Added by Lakshmi as per CR2558- Changes for Default BU derivation.
            recbd.Qty--Added by Lakshmi as per CR2558- Changes for Default BU derivation.
            );
    END LOOP;

    FOR recbd IN
    (SELECT    *
    FROM
      (SELECT extract ( value (d), '//LineItemBD/BDNetAmt/text()', l_xmlnamespace). getstringval ()              AS bdnetamt,
        extract ( value (d), '//LineItemBD/PL/text()', l_xmlnamespace). getstringval ()                          AS pl,
        extract ( value (d), '//LineItemBD/ProdBaseNr/text()', l_xmlnamespace). getstringval ()                  AS sku,
        extract ( value (d), '//LineItemBD/Qty/text()', l_xmlnamespace). getstringval ()                           AS Qty,
        extract ( value (d), '//LineItemBD/ListPrice/text()', l_xmlnamespace). getstringval ()                   AS ListPrice
        FROM edms_deal_queue x,
        TABLE ( xmlsequence ( extract ( x.xml_data_xml, 'DealCreationRequest/Bundles/LineItemBD', l_xmlnamespace))) d
      WHERE x.deal_creation_guid =IN_deal_creation_Guid
      )
    )
    LOOP
    --dbms_output.PUT_LINE('Recbd.assoc_pl_cd :' ||recbd.pl);
    --dbms_output.PUT_LINE('Recbd.bdnetamt :' ||recbd.bdnetamt);
    --dbms_output.PUT_LINE('Recbd.sku :' ||recbd.sku);

        INSERT INTO gt_max_pl(
                assoc_pl_cd,
                bdnetamt,
                prod_gnrc_nr_tx,
                list_price, --Added by Lakshmi as per CR2558- Changes for Default BU derivation.
                Qty --Added by Lakshmi as per CR2558- Changes for Default BU derivation.
                )
        VALUES (
            recbd.pl,
            recbd.bdnetamt,
            recbd.sku,
            recbd.ListPrice, --Added by Lakshmi as per CR2558- Changes for Default BU derivation.
            recbd.Qty --Added by Lakshmi as per CR2558- Changes for Default BU derivation.
            );

        END LOOP;

            FOR null_prod_lines IN (SELECT * FROM gt_max_pl WHERE assoc_pl_cd IS NULL)
            LOOP
            --dbms_OUTPUT.PUT_LINE('Null prod line for product: '||null_prod_lines.PROD_GNRC_NR_TX);
            UPDATE gt_max_pl SET assoc_pl_cd=(SELECT prod_line_cd FROM ww_product WHERE prod_base_nr=null_prod_lines.PROD_GNRC_NR_TX AND rownum<=1)
            WHERE assoc_pl_cd IS NULL AND prod_gnrc_nr_tx=null_prod_lines.prod_gnrc_nr_tx;
            END LOOP;

        UPDATE gt_max_pl SET extended_list_price=list_price*qty;--Added by Lakshmi as per CR2558- Changes for Default BU derivation.

    --dbms_OUTPUT.PUT_LINE('No of rows Updated in gt_max_pl table: '||sql%ROWCOUNT);

        --UPDATE gt_max_pl bu SET bus_unit_cd =(SELECT bus_unit_cd FROM prod_line pl WHERE pl.prod_line_cd=bu.assoc_pl_cd);--Added by Lakshmi as per CR2558- Changes for Default BU derivation.
        BEGIN
        FOR prod_lines IN (SELECT assoc_pl_cd FROM gt_max_pl)
        LOOP
        --dbms_OUTPUT.PUT_LINE('prod_lines.assoc_pl_cd: '||prod_lines.assoc_pl_cd);
       UPDATE gt_max_pl SET bus_unit_cd=(SELECT bus_unit_cd  FROM prod_line pl WHERE pl.prod_line_cd=prod_lines.assoc_pl_cd) WHERE assoc_pl_cd=prod_lines.assoc_pl_cd;
        --dbms_OUTPUT.PUT_LINE('Bus unit: '||temp_bus_unit_cd||' updated for prod line code: '||prod_lines.assoc_pl_cd);
        END LOOP;
        END;

--        --dbms_OUTPUT.PUT_LINE('No of rows Updated for Bus Unit Code: '||sql%ROWCOUNT);

       SELECT assoc_pl_cd  INTO max_pl FROM gt_max_pl WHERE extended_list_price=(
    (SELECT MAX(extended_list_price) FROM (SELECT MAX(extended_list_price) extended_list_price FROM gt_max_pl GROUP BY assoc_pl_cd)
     )) AND rownum<=1; --Changed by Lakshmi as per CR2558- Changes for Default BU derivation. Earlier we used BDNETMAT, now we use extended_list_price.

    RETURN max_pl;

    EXCEPTION
    WHEN OTHERS THEN
    --dbms_output.PUT_LINE('Error occured while getting max pl - ' || SQLCODE || ' -ERROR- ' || sqlerrm || '. Error at Line : ' || dbms_utility.format_error_backtrace()) ;
       RETURN null;
   -- out_status_message := 'Error occured while getting max pl - ' || SQLCODE || ' -ERROR- ' || sqlerrm || '. Error at Line : ' || dbms_utility.format_error_backtrace() ;

END get_max_pl_bmi;
*/
/*
This Function Gets Max PL based on Extended List price and returns to the calling procedure (GET_DEFAULT_VALUES_NEW/OLD)
Changes are made to this function on 8/26/2014 as per instructions from Ana to consider Bundle Components also.
*/
FUNCTION get_max_pl_bmi (IN_deal_creation_Guid IN VARCHAR2)
                RETURN VARCHAR2
IS
i_xmlnamespace VARCHAR2 (250);
max_pl LINE_ITEM.ASSOC_PL_CD%TYPE;--VARCHAR2(20);
l_errors        EDMS_DEAL_ERROR_REPORT.ERROR_MSG%TYPE;
BEGIN
i_xmlnamespace := 'xmlns:i="http://www.w3.org/2001/XMLSchema-instance"
xmlns="http://schemas.datacontract.org/2004/07/HP.Eclipse.Data.EDMS"' ;
DELETE FROM gt_max_pl;


--commented by Harsh Shah 27-Jan-2015
--for US 7832, Performance Improvement
--Read the Bundle header
/*

FOR recbd IN
    (
    SELECT    *
    FROM
      (    SELECT extract (value (d), '//LineItemBD/BundleIndex /text()', i_xmlnamespace). getstringval ()                        AS bundleindex,
        extract (value (d), '//LineItemBD/BundleSource /text()', i_xmlnamespace). getstringval ()                       AS bundlesource ,
        extract (value (D), '//LineItemBD/Qty/text()', I_XMLNAMESPACE). GETSTRINGVAL ()                                 as HEADER_QTY,
        extract (value (d), '//LineItemBD/RequestType/text()', i_xmlnamespace). getstringval ()                         AS requesttype
        FROM edms_deal_queue x,
        TABLE ( xmlsequence ( extract ( x.xml_data_xml, 'DealCreationRequest/Bundles/LineItemBD', i_xmlnamespace))) d
        WHERE x.deal_creation_guid =IN_deal_creation_Guid
      )
      )
    LOOP
      --*************************************
      --Looping through Bundle Line
      --*************************************
      IF UPPER(recbd.requesttype) NOT IN ('HOLD', 'DENY') THEN
      FOR recbdline IN
      (
      SELECT        *
      FROM
        (SELECT extract ( value (d), '//BDNetAmt/text()', i_xmlnamespace). getstringval ()                    AS bdnetamt,
          extract ( value (D), '//ListPrice/text()', i_xmlnamespace). GETSTRINGVAL ()                   AS LISTPRICE,
          extract ( value (d), '//PL/text()', i_xmlnamespace). getstringval ()                          AS pl,
          extract ( value (d), '//Qty/text()', i_xmlnamespace). getstringval ()                         AS qty,
          extract ( value (d), '//ProdBaseNr/text()', i_xmlnamespace). getstringval ()                  AS sku,
          extract ( value (d), '//ParentIndex/text()', i_xmlnamespace). getstringval ()                 AS parentindex,
          extract ( value (d), '//BundleSource/text()', i_xmlnamespace). getstringval ()                AS bundleline_source,
          extract (value (D), '//OptCD/text()', i_xmlnamespace). GETSTRINGVAL ()                        AS OPTCD
            FROM edms_deal_queue x,
          TABLE ( xmlsequence ( extract ( x.xml_data_xml, 'DealCreationRequest/Bundles/LineItemBD/BundleLines/BundleLine', i_xmlnamespace))) d
        WHERE x.deal_creation_guid =IN_deal_creation_Guid
        )
      WHERE parentindex                                         =recbd.bundleindex
      AND BUNDLELINE_SOURCE                                     =RECBD.BUNDLESOURCE
      )
      LOOP
      --DBMS_OUTPUT.PUT_LINE('Inserting Bundle Componenets into gt_max_pl table');
      INSERT INTO gt_max_pl(
                assoc_pl_cd,
                bdnetamt,
                prod_gnrc_nr_tx,
                list_price,--Added by Lakshmi as per CR2558- Changes for Default BU derivation.
                Qty--Added by Lakshmi as per CR2558- Changes for Default BU derivation.
                )
        VALUES (
            recbdline.pl,
            recbdline.bdnetamt,
            recbdline.sku,
            recbdline.ListPrice,--Added by Lakshmi as per CR2558- Changes for Default BU derivation.
            recbdline.Qty*RECBD.HEADER_QTY--Added by Lakshmi as per CR2558- Changes for Default BU derivation.
            );
    END LOOP;
    END IF;
END LOOP;

*/

--------------------------------------------------------------------------------------------------------------
---added by Harsh Shah 27-Jan-2015
--for US7832, performance improvement
--------------------------------------------------------------------------------------------------------------

INSERT INTO gt_max_pl(
                assoc_pl_cd,
                bdnetamt,
                prod_gnrc_nr_tx,
                list_price,--Added by Lakshmi as per CR2558- Changes for Default BU derivation.
                Qty--Added by Lakshmi as per CR2558- Changes for Default BU derivation.
                )
SELECT bl.PROD_LINE_CD,
       bl.bd_net_amt,
       bl.sku,
       bl.LIST_PRICE,
       bl.Qty * BH.HEADER_QTY
       from eclipse.GT_XML_BUNDLE bh,
ECLIPSE.GT_XML_BUNDLE_Line bl
WHERE bh.request_type NOT IN ('HOLD','DENY')
AND bl.parent_index=bh.bundle_index
AND bh.bundle_source=bl.bundle_line_source
and bl.guid=IN_deal_creation_Guid
AND bh.guid=bl.guid;



--Read Line Item PNS from XML:
FOR recbd IN
    (SELECT    *
    FROM
      (SELECT extract ( value (d), '//LineItemPN/BDNetAmt/text()', i_xmlnamespace ). getstringval ()             AS bdnetamt,
        extract (value (d), '//LineItemPN/ProdBaseNr/text()', i_xmlnamespace). getstringval ()                   AS sku,
        extract (value (d), '//LineItemPN/PL/text()', i_xmlnamespace). getstringval ()                           AS pl,
        extract ( value (d), '//LineItemPN/Qty/text()', i_xmlnamespace). getstringval ()                           AS Qty,--Added by Lakshmi as per CR2558- Changes for Default BU derivation.
        extract ( value (d), '//LineItemPN/ListPrice/text()', i_xmlnamespace). getstringval ()                   AS ListPrice, --Added by Lakshmi as per CR2558- Changes for Default BU derivation.
        extract ( value (d), '//RequestType/text()', i_xmlnamespace). getstringval ()                        AS requesttype
      FROM edms_deal_queue x,
        TABLE ( xmlsequence ( extract ( x.xml_data_xml, 'DealCreationRequest/LineItems/LineItemPN', i_xmlnamespace))) d
      WHERE x.deal_creation_guid =IN_deal_creation_guid
      )
    )
    LOOP
    --dbms_output.PUT_LINE('The bdnetamt is: '||recbd.bdnetamt);
    IF UPPER(recbd.requesttype) NOT IN ('HOLD', 'DENY') THEN
    INSERT INTO gt_max_pl(
                assoc_pl_cd,
                bdnetamt,
                prod_gnrc_nr_tx,
                list_price,--Added by Lakshmi as per CR2558- Changes for Default BU derivation.
                Qty--Added by Lakshmi as per CR2558- Changes for Default BU derivation.
                )
        VALUES (
            recbd.pl,
            recbd.bdnetamt,
            recbd.sku,
            recbd.ListPrice,--Added by Lakshmi as per CR2558- Changes for Default BU derivation.
            recbd.Qty--Added by Lakshmi as per CR2558- Changes for Default BU derivation.
            );
    END IF;
    END LOOP;

            FOR null_prod_lines IN (SELECT * FROM gt_max_pl WHERE assoc_pl_cd IS NULL)
            LOOP
            --dbms_OUTPUT.PUT_LINE('Null prod line for product: '||null_prod_lines.PROD_GNRC_NR_TX);
            UPDATE gt_max_pl SET assoc_pl_cd=(SELECT prod_line_cd FROM ww_product WHERE prod_base_nr=null_prod_lines.PROD_GNRC_NR_TX AND rownum<=1)
            WHERE assoc_pl_cd IS NULL AND prod_gnrc_nr_tx=null_prod_lines.prod_gnrc_nr_tx;
            END LOOP;

      UPDATE gt_max_pl SET extended_list_price=list_price*qty ;--Added by Lakshmi as per CR2558- Changes for Default BU derivation.

   --UPDATE gt_max_pl bu SET bus_unit_cd =(SELECT bus_unit_cd FROM prod_line pl WHERE pl.prod_line_cd=bu.assoc_pl_cd);--Added by Lakshmi as per CR2558- Changes for Default BU derivation.
        BEGIN
        FOR prod_lines IN (SELECT assoc_pl_cd FROM gt_max_pl)
        LOOP
        --dbms_OUTPUT.PUT_LINE('prod_lines.assoc_pl_cd: '||prod_lines.assoc_pl_cd);
        UPDATE gt_max_pl SET bus_unit_cd=(SELECT bus_unit_cd  FROM prod_line pl WHERE pl.prod_line_cd=prod_lines.assoc_pl_cd) WHERE assoc_pl_cd=prod_lines.assoc_pl_cd;
--        dbms_OUTPUT.PUT_LINE('Bus unit: '||temp_bus_unit_cd||' updated for prod line code: '||prod_lines.assoc_pl_cd);
        END LOOP;
        END;

       SELECT assoc_pl_cd  INTO max_pl FROM gt_max_pl WHERE extended_list_price=(
        (SELECT MAX(extended_list_price) FROM (SELECT MAX(extended_list_price) extended_list_price FROM gt_max_pl GROUP BY assoc_pl_cd)
        ))
        AND rownum<=1; --Changed by Lakshmi as per CR2558- Changes for Default BU derivation. Earlier we used BDNETMAT, now we use extended_list_price.

    RETURN max_pl;

    EXCEPTION
    WHEN OTHERS THEN
--    dbms_output.PUT_LINE('Error occured while getting max pl - ' || SQLCODE || ' -ERROR- ' || sqlerrm || '. Error at Line : ' || dbms_utility.format_error_backtrace()) ;
    l_errors := SUBSTR('Error occured while getting max pl - ' || SQLCODE || ' -ERROR- ' || sqlerrm || '. Error at Line : ' || dbms_utility.format_error_backtrace(),1,1000) ;
    INSERTERROR_OUTPUT_MESSAGES ( NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, l_errors,'INFO',IN_deal_creation_guid, NULL, NULL,NULL);
RETURN null;
END get_max_pl_bmi;


--Commented the below code to implement the new code for performance.
/* FUNCTION total_value_of_deal (IN_deal_creation_Guid IN VARCHAR2)
                RETURN NUMBER
IS
l_xmlnamespace VARCHAR2 (250);
total_value NUMBER :=0;
--l_bundle_line_nr     NUMBER(10) :=0;
BEGIN
l_xmlnamespace := 'xmlns:i="http://www.w3.org/2001/XMLSchema-instance"
xmlns="http://schemas.datacontract.org/2004/07/HP.Eclipse.Data.EDMS"' ;
    FOR recbd IN
    (SELECT    *
    FROM
      (SELECT extract ( value (d), '//LineItemPN/BDNetAmt/text()', l_xmlnamespace ). getstringval () AS bdnetamt
      FROM edms_deal_queue x,
        TABLE ( xmlsequence ( extract ( x.xml_data_xml, 'DealCreationRequest/LineItems/LineItemPN', l_xmlnamespace))) d
      WHERE x.deal_creation_guid =IN_deal_creation_guid
      )
    )
    LOOP
    ----dbms_output.PUT_LINE('The bdnetamt is: '||recbd.bdnetamt);
    total_value := total_value + recbd.bdnetamt;
    END LOOP;

    FOR recbd IN
    (SELECT    *
    FROM
      (SELECT extract (value (d), '//LineItemBD/BundleSource /text()', l_xmlnamespace). getstringval ()                       AS bundlesource ,
        extract (value (d), '//LineItemBD/BundleIndex /text()', l_xmlnamespace). getstringval ()                        AS bundleindex
      FROM edms_deal_queue x,
        TABLE ( xmlsequence ( extract ( x.xml_data_xml, 'DealCreationRequest/Bundles/LineItemBD', l_xmlnamespace))) d
      WHERE x.deal_creation_guid =IN_deal_creation_Guid
      )
    )
    LOOP
    --l_bundle_line_nr:=l_bundle_line_nr+1;
    FOR recbdline IN
      (SELECT        *
      FROM
        (SELECT extract ( value (d), '//BDNetAmt/text()', l_xmlnamespace). getstringval ()                    AS bdnetamt,
        extract ( value (d), '//ParentIndex/text()', l_xmlnamespace). getstringval ()                 AS parentindex,
                  extract ( value (d), '//BundleSource/text()', l_xmlnamespace). getstringval ()                AS bundleline_source
          FROM edms_deal_queue x,
          TABLE ( xmlsequence ( extract ( x.xml_data_xml, 'DealCreationRequest/Bundles/LineItemBD/BundleLines/BundleLine', l_xmlnamespace))) d
        WHERE x.deal_creation_guid =IN_deal_creation_Guid
        )
      WHERE parentindex                                         =recbd.bundleindex
      AND BUNDLELINE_SOURCE                                     =RECBD.BUNDLESOURCE
--      AND (LTRIM(RTRIM(SKU)),DECODE(OPTCD,NULL,' ',OPTCD)) NOT IN
--        (SELECT LTRIM(RTRIM(PROD_GNRC_NR_TX)),
--          DECODE(PROD_OPT_CD,NULL,' ',PROD_OPT_CD)
--        FROM BUNDLE_LINE BL
--        WHERE BL.BD_ID=L_BD_ID
--        AND LINE_NR   =L_BUNDLE_LINE_NR
--        )
      )
      LOOP
      ----dbms_output.PUT_LINE('Bundle bdnetamt is: '||recbdline.BDNetAmt);
       total_value := total_value + recbdline.bdnetamt;

    END LOOP;
    END LOOP;

     RETURN total_value;
        EXCEPTION
    WHEN OTHERS THEN
    --dbms_output.PUT_LINE('Error occured while getting max pl - ' || SQLCODE || ' -ERROR- ' || sqlerrm || '. Error at Line : ' || dbms_utility.format_error_backtrace()) ;
       RETURN null;
   -- out_status_message := 'Error occured while getting max pl - ' || SQLCODE || ' -ERROR- ' || sqlerrm || '. Error at Line : ' || dbms_utility.format_error_backtrace() ;

END total_value_of_deal;
 */

 FUNCTION total_value_of_deal (IN_deal_creation_Guid IN VARCHAR2)
                RETURN NUMBER
IS
l_xmlnamespace VARCHAR2 (250);
total_value NUMBER :=0;
pn_total_value NUMBER :=0;--Changes made by Lakshmi on 10/17/2014 for CR2706- Incorrect MC Charge due to wrong Total_Value_of_deal
bd_total_value NUMBER :=0;--Changes made by Lakshmi on 10/17/2014 for CR2706- Incorrect MC Charge due to wrong Total_Value_of_deal
--l_bundle_line_nr     NUMBER(10) :=0;
BEGIN
l_xmlnamespace := 'xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://schemas.datacontract.org/2004/07/HP.Eclipse.Data.EDMS"' ;

    SELECT    sum(BDNETAMT) INTO pn_total_value
    FROM
      (SELECT extract ( value (d), '//LineItemPN/BDNetAmt/text()', l_xmlnamespace ). getstringval () AS bdnetamt
      FROM edms_deal_queue x,
        TABLE ( xmlsequence ( extract ( x.xml_data_xml, 'DealCreationRequest/LineItems/LineItemPN', l_xmlnamespace))) d
      WHERE x.deal_creation_guid =IN_deal_creation_guid
      );



    --commented by Harsh shah 27-Jan-2015
    --for US7832 Performance Improvement
    /*
    SELECT        SUM(bdnetamt) INTO bd_total_value
      FROM
        (SELECT extract ( value (d), '//BDNetAmt/text()', l_xmlnamespace). getstringval ()                    AS bdnetamt--,
                 FROM edms_deal_queue x,
          TABLE ( xmlsequence ( extract ( x.xml_data_xml, 'DealCreationRequest/Bundles/LineItemBD/BundleLines/BundleLine', l_xmlnamespace))) d
        WHERE x.deal_creation_guid =IN_deal_creation_Guid
        );

        */
    -- by Harsh shah 27-Jan-2015
    --for US7832 Performance Improvement
    SELECT NVL(sum(bd_net_amt),0) INTO bd_total_value FROM eclipse.GT_XML_BUNDLE_Line WHERE GUID=IN_deal_creation_Guid;

      ----dbms_output.PUT_LINE('Bundle bdnetamt is: '||recbdline.BDNetAmt);
       total_value := NVL(bd_total_value,0) + NVL(pn_total_value,0); --Lakshmi - Added NLV function on 10/17/2014 for CR2706- Incorrect MC Charge due to wrong Total_Value_of_deal


 RETURN total_value;
        EXCEPTION
    WHEN OTHERS THEN
    --dbms_output.PUT_LINE('Error occured while getting max pl - ' || SQLCODE || ' -ERROR- ' || sqlerrm || '. Error at Line : ' || dbms_utility.format_error_backtrace()) ;
       RETURN null;
   -- out_status_message := 'Error occured while getting max pl - ' || SQLCODE || ' -ERROR- ' || sqlerrm || '. Error at Line : ' || dbms_utility.format_error_backtrace() ;
END total_value_of_deal;



FUNCTION check_ismultibg_deal (in_Bd_id IN NUMBER)
   RETURN VARCHAR2
IS
   v_bus_group_cd      bus_unit.bus_group_cd%TYPE;
   ismultibg_deal_fl   VARCHAR2 (1);
BEGIN
   SELECT bg_cd
     INTO v_bus_group_cd
     FROM (SELECT DISTINCT bu.bus_group_cd bg_cd
             FROM bus_unit bu, prod_line pl, line_item li
            WHERE     li.bd_id = IN_bd_id
                  AND li.assoc_pl_cd = pl.prod_line_cd
                  AND bu.bus_unit_cd = pl.bus_unit_cd
           UNION
           SELECT DISTINCT bu.bus_group_cd
             FROM bus_unit bu, prod_line pl, bundle_line bl
            WHERE     bl.bd_id = IN_bd_id
                  AND bl.assoc_pl = pl.prod_line_cd
                  AND bu.bus_unit_cd = pl.bus_unit_cd);

   ismultibg_deal_fl := 'N';
   RETURN ismultibg_deal_fl;
EXCEPTION
   WHEN TOO_MANY_ROWS
   THEN
      ismultibg_deal_fl := 'Y';
      RETURN ismultibg_deal_fl;
   WHEN NO_DATA_FOUND
   THEN
      ismultibg_deal_fl := 'N';
      RETURN ismultibg_deal_fl;
   WHEN OTHERS
   THEN
      ismultibg_deal_fl := 'Y';
      RETURN ismultibg_deal_fl;
END check_ismultibg_deal;

PROCEDURE update_deal_enddate  ( in_bd_id IN NUMBER,
                                l_deal_creation_guid IN VARCHAR2,
                                o_error_message OUT VARCHAR2)
IS
l_enddate deal.end_dt%type;
l_begindate deal.beg_dt%TYPE;
l_rollout_mnths t_rollout_mnths:=t_rollout_mnths();
l_rollout_ins_qry VARCHAR2(3000);
l_no_of_months NUMBER;
BEGIN
--Update end date in deal table.
l_enddate:= to_timestamp ( SUBSTR(getsqtxmlvalue ( '/DealCreationRequest/DealHeader/EndDate/', l_deal_creation_guid),1,19) ,'YYYY-MM-DD"T"HH24:MI:SS');
BEGIN
UPDATE deal SET end_dt=l_enddate,
                ORDER_END_DT=l_enddate ,--Added by Lakshmi to update Order End date when deal's end date changes.
                update_dts=TO_CHAR (SYSDATE, 'DD/MON/YYYY')
                WHERE bd_id=in_bd_id;
EXCEPTION
WHEN OTHERS THEN
o_error_message := 'Error updating deal end date: '||SQLCODE || ' -ERROR- ' || sqlerrm || '. Error at Line : ' || dbms_utility.format_error_backtrace();
END;

--New code added by Lakshmi to update upper boundary date in LDS table when deal end date changes.
BEGIN
FOR update_query IN (SELECT line_nr FROM line_item WHERE bd_id=in_bd_id)
LOOP
    UPDATE line_disc_scale SET UPPER_BNDRY_DT=l_enddate,
                update_dts=TO_CHAR (SYSDATE, 'DD/MON/YYYY')
                WHERE bd_id=in_bd_id
                AND scale_id=(SELECT max(scale_id) FROM line_disc_scale WHERE bd_id=in_bd_id AND line_nr=update_query.line_nr)
                AND line_nr=update_query.line_nr;
END LOOP;
EXCEPTION
WHEN OTHERS THEN
o_error_message := 'Error updating deal end date in Line Disc Scale: '||SQLCODE || ' -ERROR- ' || sqlerrm || '. Error at Line : ' || dbms_utility.format_error_backtrace();
--DBMS_OUTPUT.PUT_LINE('Error while updating end date: '||o_error_message);
END;


--Update rollout months quantity in rollout_schedule table.
--***************************************************
--adding rollout schedule data
--***************************************************
DELETE FROM gt_rollout_schedule;
FOR rec IN (SELECT * FROM rollout_schedule WHERE bd_id=in_bd_id)
LOOP
l_rollout_mnths :=t_rollout_mnths();
----dbms_output.put_line('Rollout month qtys   :'||rec.rolloutmonthqtys);
GET_ROLLOUT_MONTHS(REC.est_qty,L_ROLLOUT_MNTHS );
l_rollout_ins_qry:=
'insert into gt_rollout_schedule (bd_id,
line_nr,
prod_base_nr,
ro_bgn_dt,
ro_end_dt,
load_type,
est_qty,
pct_prob,
mth1_qty,
mth2_qty,
mth3_qty,
mth4_qty,
mth5_qty,
mth6_qty,
mth7_qty,
mth8_qty,
mth9_qty,
mth10_qty,
mth11_qty,
mth12_qty,
mth13_qty,
mth14_qty,
mth15_qty,
schedule_change_fl,
ordr_min_qty,
line_max_qty,
creation_dts,
update_dts,
remaining_qty,
rtqty,
PROD_OPT_CD )
values ( '
        ||in_bd_id||',' ||rec.line_nr||',' ||'''' || rec.prod_base_nr||'''' ||',' || 'to_date('||''''||rec.ro_bgn_dt||''''||','||'''DD-MON-YY'''||')'||',' || 'to_date('||''''||l_enddate||''''||','||'''DD-MON-YY'''||')'||',' || '''Even'''||',' ||rec.est_qty||',' ||100||',';
        l_no_of_months           :=1;
        IF l_rollout_mnths.first IS NOT NULL THEN
          FOR months_rec         IN l_rollout_mnths.first..l_rollout_mnths.last
          LOOP
            IF LENGTH
              (
                l_rollout_mnths(months_rec)
              )
                                =0 THEN
              l_rollout_ins_qry:=l_rollout_ins_qry||'NULL'||',';
            ELSE
              l_rollout_ins_qry:=l_rollout_ins_qry||l_rollout_mnths(months_rec) ||',';
            END IF;
            l_no_of_months:=l_no_of_months+1;
            ----dbms_output.put_line('Inside MOnth loop');
          END LOOP;
        END IF;
        FOR i IN l_no_of_months-1 ..14
        LOOP
          l_rollout_ins_qry:=l_rollout_ins_qry||'NULL'||',';
        END LOOP;
        L_ROLLOUT_INS_QRY:=L_ROLLOUT_INS_QRY || '''N'''||',' ||1||','||REC.est_QTY||',' || 'SYSDATE'||',' ||' SYSDATE'||',' ||REC.est_QTY||',' ||REC.est_QTY || ',' || '''' ||NVL(ltrim(rtrim(REC.PROD_OPT_CD)),' ')|| '''' || ')';
        --dbms_output.put_line(' Rollout query ' || l_rollout_ins_qry);
        --dbms_output.put_line ('rollout for line');
        EXECUTE immediate (l_rollout_ins_qry);
          END LOOP;
--Update ro_end_dt in rollout_schedule table.
UPDATE eclipse.rollout_schedule ro
        SET update_dts=TO_CHAR (SYSDATE, 'DD/MON/YYYY'),
            ro.RO_END_DT=l_enddate,
            ro.est_Qty=(SELECT gt.est_qty FROM eclipse.gt_rollout_schedule gt WHERE gt.line_nr=ro.line_nr),
            ro.mth1_qty=(SELECT gt.mth1_qty FROM eclipse.gt_rollout_schedule gt WHERE  gt.line_nr=ro.line_nr),
            ro.mth2_qty=(SELECT gt.mth2_qty FROM eclipse.gt_rollout_schedule gt WHERE  gt.line_nr=ro.line_nr),
            ro.mth3_qty=(SELECT gt.mth3_qty FROM eclipse.gt_rollout_schedule gt WHERE  gt.line_nr=ro.line_nr),
            ro.mth4_qty=(SELECT gt.mth4_qty FROM eclipse.gt_rollout_schedule gt WHERE  gt.line_nr=ro.line_nr),
            ro.mth5_qty=(SELECT gt.mth5_qty FROM eclipse.gt_rollout_schedule gt WHERE  gt.line_nr=ro.line_nr),
            ro.mth6_qty=(SELECT gt.mth6_qty FROM eclipse.gt_rollout_schedule gt WHERE  gt.line_nr=ro.line_nr),
            ro.mth7_qty=(SELECT gt.mth7_qty FROM eclipse.gt_rollout_schedule gt WHERE  gt.line_nr=ro.line_nr),
            ro.mth8_qty=(SELECT gt.mth8_qty FROM eclipse.gt_rollout_schedule gt WHERE  gt.line_nr=ro.line_nr),
            ro.mth9_qty=(SELECT gt.mth9_qty FROM eclipse.gt_rollout_schedule gt WHERE  gt.line_nr=ro.line_nr),
            ro.mth10_qty=(SELECT gt.mth10_qty FROM eclipse.gt_rollout_schedule gt WHERE  gt.line_nr=ro.line_nr),
            ro.mth11_qty=(SELECT gt.mth11_qty FROM eclipse.gt_rollout_schedule gt WHERE  gt.line_nr=ro.line_nr),
            ro.mth12_qty=(SELECT gt.mth12_qty FROM eclipse.gt_rollout_schedule gt WHERE  gt.line_nr=ro.line_nr),
            ro.mth13_qty=(SELECT gt.mth13_qty FROM eclipse.gt_rollout_schedule gt WHERE  gt.line_nr=ro.line_nr),
            ro.mth14_qty=(SELECT gt.mth14_qty FROM eclipse.gt_rollout_schedule gt WHERE  gt.line_nr=ro.line_nr),
            ro.mth15_qty=(SELECT gt.mth15_qty FROM eclipse.gt_rollout_schedule gt WHERE  gt.line_nr=ro.line_nr)
            WHERE bd_id=in_bd_id;
o_error_message :='SUCCESS';
EXCEPTION
WHEN OTHERS THEN
o_error_message := 'Error updating deal end date in '||SQLCODE || ' -ERROR- ' || sqlerrm || '. Error at Line : ' || dbms_utility.format_error_backtrace();
END update_deal_enddate;

PROCEDURE get_default_values  (i_deal_creation_guid IN VARCHAR2,
                                   out_default_bus_model_cd OUT VARCHAR2,
                                   out_split_deal_fl OUT VARCHAR2,
                                   out_value_default_bm OUT VARCHAR2,
                                   out_volume_default_bm OUT VARCHAR2,
                                   out_mc_charge OUT VARCHAR2,
                                   out_value_mc_charge OUT VARCHAR2,
                                   out_volume_mc_charge OUT VARCHAR2,
                                   out_bus_group OUT VARCHAR2,
                                   out_bus_unit OUT VARCHAR2,
                                   out_cust_industry OUT VARCHAR2,
                                   out_cust_segment OUT VARCHAR2,
                                   out_routing_ind OUT VARCHAR2,
                                   out_value_routing_Ind OUT VARCHAR2,
                                   out_volume_routing_ind OUT VARCHAR2,
                                   out_asap_indicator OUT VARCHAR2,
                                   out_max_pl OUT VARCHAR2,
                                   out_deal_default_duration_days OUT NUMBER,
                                   out_value_refcursor OUT SYS_REFCURSOR,
                                   out_volume_refcursor OUT SYS_REFCURSOR,
                                   out_error_messages OUT SYS_REFCURSOR
                                 , out_deal_tenantid OUT VARCHAR2 ---Added for SMO
                                   )
IS

l_app_value  app_config_keys.APP_KEY%TYPE;

BEGIN

     BEGIN
         SELECT APP_VALUE into l_app_value
            FROM APP_CONFIG_KEYS
            WHERE APP_KEY =  'BM_USE_GETDEFAULTVALUE' ;
         EXCEPTION
         WHEN NO_DATA_FOUND THEN
            l_app_value := '0';
         WHEN OTHERS then
            l_app_value := '0'  ;
      END;

      --IF l_app_value = '1'
      --THEN
          get_default_values_new (i_deal_creation_guid,
                                         out_default_bus_model_cd ,
                                         out_split_deal_fl,
                                         out_value_default_bm ,
                                         out_volume_default_bm,
                                         out_mc_charge ,
                                         out_value_mc_charge ,
                                         out_volume_mc_charge ,
                                         out_bus_group ,
                                         out_bus_unit ,
                                         out_cust_industry,
                                         out_cust_segment,
                                         out_routing_ind ,
                                         out_value_routing_Ind ,
                                         out_volume_routing_ind ,
                                         out_asap_indicator ,
                                         out_max_pl ,
                                         out_deal_default_duration_days,
                                         out_value_refcursor ,
                                         out_volume_refcursor ,
                                         out_error_messages
                                       , out_deal_tenantid---Added for SMO Changes
                                          );
--      ELSE
--          get_default_values_org   (i_deal_creation_guid ,
--                                         out_default_bus_model_cd ,
--                                         out_split_deal_fl ,
--                                         out_value_default_bm ,
--                                         out_volume_default_bm,
--                                         out_mc_charge ,
--                                         out_value_mc_charge ,
--                                         out_volume_mc_charge,
--                                         out_bus_group ,
--                                         out_bus_unit ,
--                                         out_cust_industry ,
--                                         out_cust_segment ,
--                                         out_routing_ind,
--                                         out_value_routing_Ind ,
--                                         out_volume_routing_ind ,
--                                         out_asap_indicator ,
--                                         out_max_pl ,
--                                         out_deal_default_duration_days,
--                                         out_value_refcursor ,
--                                         out_volume_refcursor ,
--                                        out_error_messages);
--       END IF;

    --delete temp table data      by Harsh Shah 30-JAN-2015
    delete from eclipse.GT_XML_BUNDLE ;
    delete from eclipse.GT_XML_BUNDLE_Line;
    delete from eclipse.GT_XML_line_item;

commit;

END get_default_values ;

PROCEDURE log_default_value_errors ( in_deal_creation_guid IN VARCHAR2,
                                     in_error_message IN VARCHAR2)
IS

BEGIN
NULL;
END;
FUNCTION  is_emp_bmi_default (i_emp_nr  IN NUMBER
, i_source_asset_id IN deal.deal_source_cd%TYPE --Added for US-9408 --> Encore Retirement  
)
RETURN VARCHAR2
   IS
   /*
by harsh Shah 22 feb 2014
*/
l_rec_exists number(3):=0;

   BEGIN
   --DBMS_OUTPUT.PUT_LINE('L_RTM IN is_emp_bmi_default IS: '||l_rtm);
   --modified by HarshShah 22-Feb-2014 -- Pending
select COUNT(*) INTO L_REC_EXISTS  from default_bmi_employee
WHERE source_asset_ID = NVL(i_source_asset_id, source_asset_id)  --Added for US-9408 --> Encore Retirement  
AND
(DRIVING_HP_EMP_NR =i_emp_nr OR
INIT_HP_EMP_NR =i_emp_nr OR
DEAL_LEAD_EMP_NR =i_emp_nr OR
DSM_HP_EMP_NR=i_emp_nr)
AND UPPER(route_to_market) = UPPER(l_rtm) ;

--dbms_output.put_line (' employee No to check whether it is bmi default emp: '|| i_emp_nr);
IF  l_rec_exists >0 THEN
--dbms_output.PUT_LINE (' bmi default emp no is :' || i_emp_nr);
    RETURN ('Y');
ELSE
--dbms_output.PUT_LINE (' not a bmi default emp  :' || i_emp_nr);
      RETURN ('N');
END IF;
EXCEPTION

WHEN OTHERS THEN

    --dbms_output.PUT_LINE ('An error was encountered while checking bmi default employee  ' || SQLCODE || ' -ERROR- ' || sqlerrm || '. Error at Line : ' || dbms_utility.format_error_backtrace() );
    RETURN ('N');
   END is_emp_bmi_default;

   PROCEDURE get_contracts_for_pl(l_ppro_id IN VARCHAR2,
                                  l_countrycd IN VARCHAR2,
                                  l_busmodelcd IN VARCHAR2,
                                  l_engagement_model IN NUMBER,
                                  in_max_pl IN VARCHAR2,
                                  in_region_cd IN VARCHAR2,
                                  in_supplies_only_fl IN VARCHAR2,
                                  out_contract OUT VARCHAR2,
                                  status_message OUT VARCHAR2)
   IS
    out_pl_array ECLIPSE.array_pl;
    in_pl_array ECLIPSE.array_pl ;
   max_prod_line_cd VARCHAR2(200);
   engagement_model_code NUMBER;
   out_contract_actual VARCHAR2(50);
   in_busmodelcd VARCHAR2(2);
   BEGIN
   --dbms_output.PUT_LINE('Country code: '||l_countrycd);
   --dbms_output.PUT_LINE('Bus Model code: '||l_busmodelcd);
   --dbms_output.PUT_LINE('Engagement Model: '||l_engagement_model);
   --dbms_output.PUT_LINE('Max PL : '||in_max_pl);
   IF (UPPER(l_busmodelcd)='NULL') THEN
        in_busmodelcd := NULL;
        ELSE
        in_busmodelcd := l_busmodelcd;
   END IF;
   IF in_region_cd<>'NA' THEN
   in_pl_array := ECLIPSE.array_pl('AZ');
   --dbms_output.PUT_LINE('Region code is not NA');
   ELSE
   in_pl_array := ECLIPSE.array_pl(in_max_pl);
   --dbms_output.PUT_LINE('Region code is NA');
   END IF;
   --in_pl_arrray(1) := in_max_pl;
    pkg_bmi_pricing.get_contracts(l_ppro_id, l_countrycd,in_busmodelcd,l_engagement_model,in_pl_array,NULL,NULL,'D','ECLIPSE','D',in_supplies_only_fl
    ,out_pl_array);
    --pkg_bmi_pricing.get_contracts(l_ppro_id, l_countrycd,in_busmodelcd,l_engagement_model,in_pl_array,NULL,NULL,'D',out_pl_array);
    --dbms_output.PUT_LINE('PKG_BMI_PRICING COMPLETED');
    FOR j IN 1..out_pl_array.count LOOP
    out_contract_actual := out_pl_array(1);
    dbms_output.put_line('Contract from package is: '||out_contract);
    END LOOP;
    out_contract := out_contract_actual;
    --dbms_output.PUT_LINE('Contract in the procedure is: '||out_contract);
--status_message :='SUCCESS';
status_message := 'Contract ID: '||out_contract ||' derived for the Ppro id: '||l_ppro_id|| '-Success.';
EXCEPTION
WHEN OTHERS THEN
--RAISE;
--status_message :=SQLERRM;
status_message := 'Contract ID: '||out_contract ||' derived for the Ppro id: '||l_ppro_id|| '-Failure.'||SQLERRM;
--RAISE;
--dbms_output.PUT_LINE('Could not find contract for Region: '||in_region_cd ||' PPRO_ID');
END get_contracts_for_pl;

PROCEDURE insert_BMI_Default_VOL_RSLR(l_bd_id IN NUMBER,
                                      l_rslr_added_emp_nr IN NUMBER,
                                      status_message OUT VARCHAR2
                                      )
IS
BEGIN
  INSERT
      INTO rslr_a
        (
          bd_id,
          rslr_id,
          quote_distrib_fl,
          quote_apprvl_fl,
          SR_EDIT_AUTH_FL,
          can_recv_quote_fl,
          date_rslr_added,
          creation_dts,
          update_dts,
          contract_id,
          cac_cd,
          selected_contract_fl,
          iso_cntry_cd,
          rslr_add_hp_emp_nr
        )
      SELECT l_bd_id,
        r.rslr_id,
        'N' QUOTE_DISTRIB_FL,
        'N' QUOTE_APPRVL_FL,
        'N' SR_EDIT_AUTH_FL,
        'N' can_recv_quote_fl,
        sysdate date_rslr_added,
        sysdate creation_dts,
        sysdate update_dts,
        rc.contract_id,
        rc.cac_cd,
        'N' selected_contract_fl,
        r.rslr_cntry_cd,
        l_rslr_added_emp_nr
      FROM reseller r,
        RSLR_CONTRACT_XREF RC
      WHERE r.rslr_id = (select app_Value from app_config_keys where app_key = 'BMI_Default_VOL_RSLR')
      AND r.rslr_id  =rc.rslr_id(+)
      AND rownum     <2
      ORDER BY rc.update_dts DESC;
      status_message :='SUCCESS';
      EXCEPTION
      WHEN NO_DATA_FOUND THEN
      NULL;
      WHEN OTHERS THEN
      status_message := 'Failed to add default BMI volume reseller to the deal.'||SQLERRM;
END insert_BMI_Default_VOL_RSLR;
FUNCTION  fcalcRqstDiscPCT(
i_bd_net  NUMERIC,
I_LIST_PRICE NUMERIC,
I_STD_DISC_PCT numeric)
RETURN PKGEDMSDEALCREATIONV2_R14.decimal_type
is
--Unit testing is pending
l_rqst_bd_net_pct numeric(16,2):=0;
BEGIN
if I_LIST_PRICE>0 then
          l_rqst_bd_net_pct:=ROUND(100 - (( i_bd_net/I_LIST_PRICE) *100)- NVL(I_STD_DISC_PCT,0),2);

          IF l_rqst_bd_net_pct>=99 THEN
                    l_rqst_bd_net_pct:=99;
          elsif l_rqst_bd_net_pct<=-99 THEN
                      l_rqst_bd_net_pct:=-99;
          end if;
end if;
          --dbms_output.put_line (' rqst or BDNet value is '|| l_rqst_bd_net_pct);
          RETURN          l_rqst_bd_net_pct;
exception
WHEN OTHERS THEN
      --dbms_output.PUT_LINE (' Error while calculating rqst disc pct: ' || SQLERRM  ||'. Error at Line : ' || dbms_utility.format_error_backtrace());
      RETURN 0;
RETURN NULL;
END fcalcRqstDiscPCT;

FUNCTION  fcalcRqstMarginPCT(
i_bd_net  NUMERIC,
i_cost_price  NUMERIC
)
RETURN PKGEDMSDEALCREATIONV2_R14.decimal_type
IS
/*
Returns the Margin PCT value
by Harsh Shah
*/
l_rqst_margin_pct numeric(16,2):=0;
BEGIN
if i_bd_net>0 then
          l_rqst_margin_pct:=ROUND((((i_bd_net   - i_cost_price) / i_bd_net) * 100), 2);

          IF l_rqst_margin_pct>=99 THEN
                    l_rqst_margin_pct:=99;
          elsif l_rqst_margin_pct<=-99 THEN
                      l_rqst_margin_pct:=-99;
          END IF;
end if;
          --dbms_output.put_line (' rqst margin PCT value is '|| l_rqst_margin_pct);
          RETURN          l_rqst_margin_pct;
exception
WHEN OTHERS THEN
      --dbms_output.put_line ('Error while calculating requested margin pct : ' || sqlerrm  ||'. Error at Line : ' || dbms_utility.format_error_backtrace());
      RETURN 0;
RETURN NULL;
END fcalcRqstMarginPCT;

Function UpdateHDRPricingValues
(i_bd_id deal.bd_id%type )
return varchar2
is
/*
by Harsh Shah 14 mar 2014
This function updates the header pricing values (total list price, auth dis %)

*/
BEGIN
/*
--Update header level pricing for Bundle
--dbms_output.PUT_LINE ('Updating header level pricing for bundle');
--Update query to update bundle header level discounts
--By Harsh Shah 11/14/2014
--CR 174815 [Channel][Regression] New created configs with auth% in HT deal
-- commented this line : == ROUND( 100 - ( ( TOTAL_AUTH_BD_NET / total_list_price ) * 100 ) - NVL(stddiscpct, 0), 2) ) AUTH_DISC_PCT,
--Auth Discount PCT should be updated only in case of if lines are authorized.
*/

  for ltm in
  ( SELECT line_nr,bd_id ,LINE_PROG_CD FROM line_item WHERE line_type_cd='BD' AND bd_id=i_bd_id
  )
  LOOP
    UPDATE LINE_DISC_SCALE LDS3
    SET
      (
        PROD_LST_PRC_AM,
        RQST_BD_NET_PRC_AM,
        RQST_DISC_OT_PC,
        AUTH_DISC_OT_PC
      )
      =
      (
            SELECT
            total_list_price,
            TOTAL_RQST_BD_NET,
        ( ROUND( 100 - ( ( TOTAL_RQST_BD_NET / total_list_price ) * 100 ) - NVL(stddiscpct, 0), 2) ) RQST_DISC_PCT,
        DECODE ( auth_fl,'Y',ROUND( 100 - ( ( TOTAL_AUTH_BD_NET / total_list_price ) * 100 ) - NVL(stddiscpct, 0), 2),'N' , NULL,NULL ) AUTH_DISC_PCT
      FROM
        (
        SELECT SUM( BL.qty * BL.list_price) TOTAL_LIST_PRICE,
          ( ( SUM( BL.qty   * BL.list_price) * MAX(LDS.rqst_disc_ot_pc) ) / 100 ) RQSTBDNET,
          SUM (NVL(BL.QTY * BL.RQST_BD_NET_PRC_AM, 0)) TOTAL_RQST_BD_NET,
          SUM (NVL(BL.extended_price, 0)) TOTAL_AUTH_BD_NET,
          MAX(LDS.high_rslr_a_sd_pc) STDDISCPCT,
          MAX(lds.line_nr) line_nr,
          max(lds.auth_fl) auth_fl
        FROM bundle_line BL,
          line_disc_scale LDS,
          line_item li
        WHERE LDS.bd_id     = ltm.bd_id
        AND LI.bd_id        = LDS.bd_id
        AND LI.line_nr      = LDS.line_nr
        AND LI.bd_id        = BL.bd_id
        AND LI.line_nr      = BL.line_nr
        AND li.line_type_cd = 'BD'
        AND lds.line_nr     =ltm.line_nr
        AND bl.scale_id    IN
          (SELECT NVL(MAX( scale_id), 0)
          FROM bundle_line
          WHERE bd_id = bl.bd_id
          AND line_nr =ltm.line_nr
          )
        AND LDS.bd_id    = BL.bd_id
        AND lds.scale_id = bl.scale_id
        AND lds.line_nr  =ltm.line_nr
        AND LDS.scale_id =
          (SELECT MAX(lds2.scale_id)
          FROM line_disc_scale LDS2
          where lds2.bd_id = lds.bd_id
          AND lds2.line_nr =lds.line_nr
          )
        GROUP BY lds.line_nr
        )
      )
    WHERE LDS3.scale_id =
      (SELECT NVL(MAX(scale_id), 0)
      FROM line_disc_scale LDS4
      WHERE LDS4.BD_ID = LDS3.BD_ID
      AND lds4.line_nr = lds3.line_nr
      )
    and lds3.bd_id=ltm.bd_id
    and lds3.line_nr=ltm.line_nr;



    --dbms_output.put_line ( ' Data updated for Line ' || ltm.line_nr  || ' , Rows updated ' || sql%rowcount );
  end loop;

RETURN 'Y';
EXCEPTION
WHEN TOO_MANY_ROWS THEN
--dbms_output.PUT_LINE ('Too Many Rows identified');
return 'N';
WHEN OTHERS THEN
--dbms_output.put_line ('Exception in update HDR pricing ');
return 'N';
END UpdateHDRPricingValues;

PROCEDURE update_bundle_line_prices(
i_bundle_index IN VARCHAR2,
i_bundle_source IN VARCHAR2,
i_bd_id IN NUMBER,
i_bundle_line_nr IN NUMBER,
i_deal_creation_guid IN VARCHAR2,
i_std_disc_pct line_disc_scale.high_rslr_a_sd_pc%type,
I_auth_dt_gmt IN VARCHAR2,
i_auth_mc_hp_emp_nr IN NUMBER,
i_bmi_generic_emp_nr IN NUMBER
)
IS
/*
--updates bundle line prices
--Last modified by Harsh Shah 26-Mar-2014 to resolve the issue 75176
*/
more_than_one_row EXCEPTION;
l_item_prog_cd bundle_line.item_prog_cd%type:='N';
PRAGMA EXCEPTION_INIT(more_than_one_row, -01427);
i_max_scale_id NUMBER;
g_xmlnamespace VARCHAR2(32767) := 'xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://schemas.datacontract.org/2004/07/HP.Eclipse.Data.EDMS"' ;
l_msg_type VARCHAR2(50);
l_errors VARCHAR2(2000);
l_new_price bundle_line.list_price%TYPE;

l_dealsourcecd deal.deal_source_cd%TYPE; --Added by Lakshmi for CR: 3259;
BEGIN

SELECT deal_source_cd INTO l_dealsourcecd FROM deal WHERE bd_id=i_bd_id; --Added by Lakshmi for CR: 3259;

FOR recbdline IN
      (
      SELECT        *
      FROM
        (SELECT EXTRACT ( VALUE (D), '//AuthBasisDesc/text()', g_xmlnamespace). GETSTRINGVAL ()         AS AUTHBASISDESC,
          extract ( value (d), '//AuthDate/text()', g_xmlnamespace). getstringval ()                    AS authdate,
          extract ( value (d), '//AuthDateGMT/text()', g_xmlnamespace). getstringval ()                 AS authdategmt,
          extract ( value (d), '//AuthHPEmployee/EmployeeNr/text()', g_xmlnamespace). getstringval ()   AS authempnr,    ---emp nr change as per new xml
          extract ( value (d), '//AuthHPEmployee/EmailAddress/text()', g_xmlnamespace). getstringval () AS authempemail, ---emp nr change as per new xml
          extract ( value (d), '//AuthStatCD/text()', g_xmlnamespace). getstringval ()                  AS authstatcd,
          extract ( value (d), '//BDNetAmt/text()', g_xmlnamespace). getstringval ()                    AS bdnetamt,
          extract ( value (D), '//ListPrice/text()', g_xmlnamespace). GETSTRINGVAL ()                   AS LISTPRICE,
          extract ( value (d), '//PL/text()', g_xmlnamespace). getstringval ()                          AS pl,
          extract ( value (d), '//ProdDesc/text()', g_xmlnamespace). getstringval ()                    AS proddesc,
          extract ( value (d), '//Qty/text()', g_xmlnamespace). getstringval ()                         AS qty,
          extract ( value (d), '//ProdBaseNr/text()', g_xmlnamespace). getstringval ()                  AS sku,
          extract ( value (d), '//StdDiscPct/text()', g_xmlnamespace). getstringval ()                  AS stddiscpct,
          extract ( value (d), '//ParentIndex/text()', g_xmlnamespace). getstringval ()                 AS parentindex,
          extract ( value (d), '//BundleSource/text()', g_xmlnamespace). getstringval ()                AS bundleline_source,
          extract (value (D), '//OptCD/text()', g_xmlnamespace). GETSTRINGVAL ()                        AS OPTCD,
          extract (value (d), '//CostPrice/text()', g_xmlnamespace). getstringval ()                    AS CostPrice,
          extract (value (d), '//BandedFl/text()', g_xmlnamespace). getstringval ()                     AS BandedFl ,
        extract (value (d), '//ExtLineItemNr/text()', g_xmlnamespace).getstringval()                   AS ExtLineItemNr ,
        extract (value (d), '//ExtPreApprvPrice/text()',g_xmlnamespace).getstringval()              AS ExtPreApprvPrice,
        extract ( value (d), '//GuidanceAvailFl/text()', g_xmlnamespace). getstringval ()             AS GuidanceAvailFl,--Added by Lakshmi for CR162102
        extract ( value (d), '//GuidanceDetailsID/text()', g_xmlnamespace). getstringval ()           AS GuidanceDetailsID,--Added by Lakshmi for CR162102
        extract ( value (d), '//GuidanceDiscExpertPct/text()', g_xmlnamespace). getstringval ()       AS GuidanceDiscExpertPct,--Added by Lakshmi for CR162102
        extract ( value (d), '//GuidanceDiscFloorPct/text()', g_xmlnamespace). getstringval ()        AS GuidanceDiscFloorPct,--Added by Lakshmi for CR162102
        extract ( value (d), '//GuidanceDiscTypicalPct/text()', g_xmlnamespace). getstringval ()      AS GuidanceDiscTypicalPct,--Added by Lakshmi for CR162102
        extract ( value (d), '//GuidanceRefreshDateGMT/text()', g_xmlnamespace). getstringval ()      AS GuidanceRefreshDateGMT, --Added by Lakshmi for CR162102
        extract ( value (d), '//NonDiscFl/text()', g_xmlnamespace). getstringval ()                        AS NonDiscFl,
        extract ( value (d), '//InstantPrcMethod/text()', g_xmlnamespace). getstringval ()                        AS InstantPrcMethod, ---Added for CR: 255803-[HPE][Channel][US-7301] The deal reg info in eclipse deal is incorrect after BMI quote revised.
        extract ( value (d), '//InstantPrcAmt/text()', g_xmlnamespace). getstringval ()                        AS InstantPrcAmt ---Added for CR: 255803-[HPE][Channel][US-7301] The deal reg info in eclipse deal is incorrect after BMI quote revised.
        FROM edms_deal_queue x,
          TABLE ( xmlsequence ( extract ( x.xml_data_xml, 'DealCreationRequest/Bundles/LineItemBD/BundleLines/BundleLine', g_xmlnamespace))) d
        WHERE x.deal_creation_guid =i_deal_creation_guid
        )
      WHERE parentindex                                         =i_bundle_index
      AND BUNDLELINE_SOURCE                                     =i_bundle_source
          )
      loop

--                    dbms_output.put_line ('Bundle Line Prices update start... ==>');
--                    dbms_output.put_line ('List Price  '|| recbdline.listprice);
--                    dbms_output.put_line ('Sku '|| recbdline.sku);
--                    dbms_output.put_line ('Qty  '|| recbdline.qty);
--                    dbms_output.put_line ('BDNET  ' || recbdline.bdnetamt);
--                    dbms_output.put_line ('OPT CODE  ' || recbdline.optcd || 'Length of optcode : ' || length(recbdline.optcd) );
--
--                    dbms_output.put_line ('Updates for Bundle Line:' || i_bundle_line_nr ||',bundle index :' || i_bundle_index ||',bundle source :' || i_bundle_source);

                    --dbms_output.put_line ('Bundle line i_auth_mc_hp_emp_nr:' || i_auth_mc_hp_emp_nr );

               /*
             Updated by Harsh Shah 27 Mar 2014    to resolve the issue of 76115 - Discount is not correct in Eclipse
             Updated by Harsh Shah 11/17/2014     For CR 170133 -[Channel][Regression] Bundle's rqst% is modified in dealV2 after accept quote for a HT deal
            */

         BEGIN
                    --Changes made for CR: 3172
                         BEGIN
                         SELECT MAX(price) INTO l_new_price
                         FROM  gt_product_bundles_prices WHERE
                         LTRIM(RTRIM(prod_nr)) =recbdline.sku
                         AND prod_opt_cd =decode(recbdline.OPTCD,null,'1',recbdline.OPTCD);
                         EXCEPTION
                         WHEN OTHERS THEN
                         l_new_price := recbdline.listprice;
                         l_msg_type              :='WARNING';
                         l_errors                := 'Could not update bundle line price with latest price from Gpsy, for the bundle_index: '||i_bundle_index ||' bundle source: '||i_bundle_source||' bd_id : '||i_bd_id||SQLERRM;
                         INSERTERROR_OUTPUT_MESSAGES ( i_bd_id, NULL,NULL,null, NULL,NULL,NULL,NULL,NULL,NULL, l_errors, l_msg_type, i_deal_creation_guid, NULL, NULL,l_errors);
       END;
        UPDATE bundle_line bl
            SET  bl.qty =recbdline.qty,
                bl.list_price = l_new_price, --Added this as part of CR:3172
            --bl.rqst_bd_net_prc_am= decode (RECBDLINE.authstatcd,'Y',bl.rqst_bd_net_prc_am,'N',recbdline.bdnetamt,recbdline.bdnetamt),--- by Harsh Shah 11/11/2014--Commented for CR:255890
            bl.rqst_bd_net_prc_am= decode (RECBDLINE.authstatcd,'Y',recbdline.bdnetamt,'N',recbdline.bdnetamt,recbdline.bdnetamt),--- by Harsh Shah 11/11/2014--Added for CR:255890
            bl.auth_bd_net_prc_am=DECODE (RECBDLINE.authstatcd,'Y',recbdline.bdnetamt,NULL),
           --version_created=i_bd_version_nr,
            bl.item_prog_cd=decode(recbdline.authstatcd,null,'N',recbdline.authstatcd),
            bl.auth_mc_hp_emp_nr=DECODE (RECBDLINE.authstatcd,'Y',i_auth_mc_hp_emp_nr,NULL),
            /* bl.rqst_disc_ot_pc=fcalcRqstDiscPCT(
                    DECODE (RECBDLINE.authstatcd,'Y',bl.rqst_bd_net_prc_am,
                        'N',NVL(recbdline.bdnetamt,0),NVL(recbdline.bdnetamt,0) ) ,recbdline.listprice,NVL(recbdline.stddiscpct,0)), */ --Commented for CR:255890
                          bl.rqst_disc_ot_pc=fcalcRqstDiscPCT(
                    DECODE (RECBDLINE.authstatcd,'Y',recbdline.bdnetamt,
                        'N',NVL(recbdline.bdnetamt,0),NVL(recbdline.bdnetamt,0) ) ,l_new_price--recbdline.listprice  --Commented as part of CR:3172, to use the latest price
                        ,NVL(recbdline.stddiscpct,0)),
            bl.auth_disc_ot_pc=decode (recbdline.authstatcd,'Y',fcalcRqstDiscPCT(recbdline.bdnetamt,l_new_price,--recbdline.listprice  --Commented as part of CR:3172, to use the latest price
            NVL(recbdline.stddiscpct,0)),NULL),
            bl.update_dts=sysdate,
            --bl.rqst_margin_pct=fcalcRqstMarginPCT( DECODE (recbdline.authstatcd,'Y', bl.rqst_bd_net_prc_am,'N', recbdline.bdnetamt,recbdline.bdnetamt ),recbdline.CostPrice), --Commented for CR:255890
            bl.rqst_margin_pct=fcalcRqstMarginPCT(DECODE (recbdline.authstatcd,'Y', recbdline.bdnetamt,'N', recbdline.bdnetamt,recbdline.bdnetamt ),recbdline.CostPrice),
            bl.auth_margin_pct=DECODE(RECBDLINE.AUTHSTATCD,'Y',rqst_margin_pct,NULL),
            bl.auth_dt_gmt=  DECODE (RECBDLINE.authstatcd,'Y',TO_TIMESTAMP (SUBSTR(I_auth_dt_gmt,1,19),'YYYY-MM-DD"T"HH24:MI:SS'), NULL),
            bl.auth_generic_emp_nr=DECODE (RECBDLINE.authstatcd,'Y',i_bmi_generic_emp_nr,NULL),
            bl.line_auth_type=DECODE (RECBDLINE.authstatcd,'Y',DECODE(lower(l_dealsourcecd),'bmi','EAB','ngq','EAN'), NULL), --Added this condition for CR:3259
            bl.auth_mc_date=DECODE (RECBDLINE.authstatcd,'Y',TO_TIMESTAMP (SUBSTR(I_auth_dt_gmt,1,19),'YYYY-MM-DD"T"HH24:MI:SS'), NULL),
            bl.auth_basis_text=DECODE (RECBDLINE.authstatcd,'Y',recbdline.AUTHBASISDESC,NULL),
            bl.extended_price=NVL(recbdline.qty * recbdline.bdnetamt,0),
            bl.GUIDANCE_AVAILABLE_FL=RECBDLINE.GuidanceAvailFl, --Added by Lakshmi for CR162102
            bl.GUIDANCE_DETAILS_ID=DECODE(RECBDLINE.GuidanceAvailFl,'Y',RECBDLINE.GuidanceDetailsID,NULL),--Added by Lakshmi for CR162102
            bl.GUIDANCE_EXPERT_PCT=DECODE(RECBDLINE.GuidanceAvailFl,'Y',RECBDLINE.GuidanceDiscExpertPct,NULL),--Added by Lakshmi for CR162102
            bl.GUIDANCE_FLOOR_PCT=DECODE(RECBDLINE.GuidanceAvailFl,'Y',RECBDLINE.GuidanceDiscFloorPct,NULL),--Added by Lakshmi for CR162102
            bl.GUIDANCE_TYPICAL_PCT=DECODE(RECBDLINE.GuidanceAvailFl,'Y',RECBDLINE.GuidanceDiscTypicalPct,NULL),--Added by Lakshmi for CR162102
            bl.GUIDANCE_LAST_REFRESH_DT=DECODE(RECBDLINE.GuidanceAvailFl,'Y',TO_TIMESTAMP (SUBSTR(RECBDLINE.GuidanceRefreshDateGMT,1,19),'YYYY-MM-DD"T"HH24:MI:SS'),NULL),--Added by Lakshmi for CR162102
            bl.INSTANT_PRC_METHOD = recbdline.InstantPrcMethod, --Added for CR: 255803-[HPE][Channel][US-7301] The deal reg info in eclipse deal is incorrect after BMI quote revised.
            bl.INSTANT_PRC_AMT = recbdline.InstantPrcAmt --Added for CR: 255803-[HPE][Channel][US-7301] The deal reg info in eclipse deal is incorrect after BMI quote revised.
            where bl.bd_id=i_bd_id
            and bl.prod_gnrc_nr_tx=recbdline.sku
            and bl.prod_opt_cd=decode(recbdline.OPTCD,null,' ',recbdline.OPTCD)
            and bl.scale_id = (select nvl(max(scale_id),0) from bundle_line where bd_id=i_bd_id and line_nr=i_bundle_line_nr)
            AND bl.line_nr=i_bundle_line_nr
            AND item_nr=(SELECT item_nr FROM bundle_line WHERE bd_id=i_bd_id AND
                        prod_gnrc_nr_tx=recbdline.sku AND
                        prod_opt_cd=decode(recbdline.OPTCD,null,' ',recbdline.OPTCD) AND
                        scale_id = (select nvl(max(scale_id),0) from bundle_line where bd_id=i_bd_id and line_nr=i_bundle_line_nr) AND
                        line_nr=i_bundle_line_nr);--Added Item_nr changes as part of IM18242135 -Two versions of a deal have been created based on one BMI quote
                        --The above issue was raised in production environment.  We found the root cause and fixed the issue for the 13th Jun release.

--            dbms_output.put_line ('Bundle Line Prices updated , rows updated ' || sql%rowcount);
--            dbms_output.put_line ('Bundle Line Prices update Ends...........');

         --dbms_output.put_line ('Bundle line prices updated :' ||i_bundle_line_nr ||',rows updated:'|| sql%rowcount ||',for SKU:' || recbdline.sku || ',OPTION CODE:' ||recbdline.OPTCD );


  EXCEPTION
  WHEN more_than_one_row THEN

    -- update by Harsh Shah 11/17/2014
    -- For CR 170133 -[Channel][Regression] Bundle's rqst% is modified in dealV2 after accept quote for a HT deal

        update bundle_line bl
            set
            bl.qty =recbdline.qty,
            bl.list_price=l_new_price, --Added this as part of CR: 3172
            --bl.rqst_bd_net_prc_am= decode (RECBDLINE.authstatcd,'Y',bl.rqst_bd_net_prc_am,'N',recbdline.bdnetamt,recbdline.bdnetamt), --- by Harsh Shah 11/11/2014 --Commented for CR:255890
            bl.rqst_bd_net_prc_am= decode (RECBDLINE.authstatcd,'Y',recbdline.bdnetamt,'N',recbdline.bdnetamt,recbdline.bdnetamt), --- by Harsh Shah 11/11/2014 --Added for CR:255890
            bl.auth_bd_net_prc_am=DECODE (RECBDLINE.authstatcd,'Y',recbdline.bdnetamt,NULL),
            bl.item_prog_cd=decode(recbdline.authstatcd,null,'N',recbdline.authstatcd),
            bl.auth_mc_hp_emp_nr=DECODE (RECBDLINE.authstatcd,'Y',i_auth_mc_hp_emp_nr,NULL),
            bl.rqst_disc_ot_pc=fcalcRqstDiscPCT(decode (RECBDLINE.authstatcd,'Y',bl.rqst_bd_net_prc_am,'N',recbdline.bdnetamt,recbdline.bdnetamt),l_new_price--recbdline.listprice  --Commented as part of CR:3172, to use the latest price
            ,NVL(recbdline.stddiscpct,0)),
            bl.auth_disc_ot_pc=decode (recbdline.authstatcd,'Y',fcalcRqstDiscPCT(recbdline.bdnetamt,l_new_price--recbdline.listprice --Commented as part of CR:3172, to use the latest price
            ,NVL(recbdline.stddiscpct,0)),NULL),
            bl.update_dts=sysdate,
            bl.rqst_margin_pct=fcalcRqstMarginPCT( DECODE (recbdline.authstatcd,'Y', bl.rqst_bd_net_prc_am,'N', recbdline.bdnetamt,recbdline.bdnetamt ),recbdline.CostPrice),
            bl.auth_margin_pct=DECODE(RECBDLINE.AUTHSTATCD,'Y',rqst_margin_pct,NULL),
            bl.auth_dt_gmt=  DECODE (RECBDLINE.authstatcd,'Y',TO_TIMESTAMP (SUBSTR(I_auth_dt_gmt,1,19),'YYYY-MM-DD"T"HH24:MI:SS'), NULL),
            bl.auth_generic_emp_nr=DECODE (RECBDLINE.authstatcd,'Y',i_bmi_generic_emp_nr,NULL),
            bl.line_auth_type=DECODE (RECBDLINE.authstatcd,'Y',DECODE(lower(l_dealsourcecd),'bmi','EAB','ngq','EAN'), NULL), --Added this condition for CR:3259
            bl.auth_mc_date=DECODE (RECBDLINE.authstatcd,'Y',TO_TIMESTAMP (SUBSTR(I_auth_dt_gmt,1,19),'YYYY-MM-DD"T"HH24:MI:SS'), NULL),
            bl.auth_basis_text=DECODE (RECBDLINE.authstatcd,'Y',recbdline.AUTHBASISDESC,NULL),
            bl.extended_price=NVL(recbdline.qty * recbdline.bdnetamt,0),
            bl.GUIDANCE_AVAILABLE_FL=RECBDLINE.GuidanceAvailFl,--Added by Lakshmi for CR162102
            bl.GUIDANCE_DETAILS_ID=DECODE(RECBDLINE.GuidanceAvailFl,'Y',RECBDLINE.GuidanceDetailsID,NULL),--Added by Lakshmi for CR162102
            bl.GUIDANCE_EXPERT_PCT=DECODE(RECBDLINE.GuidanceAvailFl,'Y',RECBDLINE.GuidanceDiscExpertPct,NULL),--Added by Lakshmi for CR162102
            bl.GUIDANCE_FLOOR_PCT=DECODE(RECBDLINE.GuidanceAvailFl,'Y',RECBDLINE.GuidanceDiscFloorPct,NULL),--Added by Lakshmi for CR162102
            bl.GUIDANCE_TYPICAL_PCT=DECODE(RECBDLINE.GuidanceAvailFl,'Y',RECBDLINE.GuidanceDiscTypicalPct,NULL),--Added by Lakshmi for CR162102
            bl.GUIDANCE_LAST_REFRESH_DT=DECODE(RECBDLINE.GuidanceAvailFl,'Y',TO_TIMESTAMP (SUBSTR(RECBDLINE.GuidanceRefreshDateGMT,1,19),'YYYY-MM-DD"T"HH24:MI:SS'),NULL), --Added by Lakshmi for CR162102
            bl.INSTANT_PRC_METHOD = recbdline.InstantPrcMethod, --Added for CR: 255803-[HPE][Channel][US-7301] The deal reg info in eclipse deal is incorrect after BMI quote revised.
            bl.INSTANT_PRC_AMT = recbdline.InstantPrcAmt --Added for CR: 255803-[HPE][Channel][US-7301] The deal reg info in eclipse deal is incorrect after BMI quote revised.

       where bl.bd_id=i_bd_id
            and bl.prod_gnrc_nr_tx=recbdline.sku
            and bl.prod_opt_cd=decode(recbdline.OPTCD,null,' ',recbdline.OPTCD)
            and bl.scale_id = (select nvl(max(scale_id),0) from bundle_line where bd_id=i_bd_id and line_nr=i_bundle_line_nr)
            AND bl.line_nr=i_bundle_line_nr
            AND item_nr= RECBDLINE.ExtLineItemNr;

           --dbms_output.put_line ('Bundle Line Prices updated IN EXCEPTION - TOO MANY ROWS, rows updated ' || sql%rowcount);

    END;
    END LOOP;
    EXCEPTION
  WHEN OTHERS THEN
     l_msg_type              :='WARNING';
        l_errors                := 'Could not update bundle line prices for the bundle_index: '||i_bundle_index ||' bundle source: '||i_bundle_source||' bd_id : '||i_bd_id||SQLERRM;
        --||' bundle line: '||i_bundle_line_nr;
        --DBMS_OUTPUT.PUT_LINE('Auth Date GMT: '||TO_TIMESTAMP (SUBSTR(I_auth_dt_gmt,1,19),'YYYY-MM-DD"T"HH24:MI:SS'));
        PKGEDMSDEALCREATIONV2_R14.INSERTERROR_OUTPUT_MESSAGES ( i_bd_id, NULL,NULL,null, NULL,NULL,NULL,NULL,NULL,NULL, l_errors, l_msg_type, i_deal_creation_guid, NULL, NULL,l_errors);
END update_bundle_line_prices;

PROCEDURE update_remaining_amt(in_bd_id IN NUMBER)
IS
BEGIN
UPDATE line_item li1 SET remaining_amt=(SELECT DECODE(li.line_prog_cd,'Y',ROUND(li.estmtd_qt*auth_bd_net_prc_am),(li.estmtd_qt*rqst_bd_net_prc_am))
                                        FROM line_item li, line_disc_scale lds
                                        WHERE li.bd_id=lds.bd_id
                                        AND li.line_nr=lds.line_nr
                                        AND li.bd_id=in_bd_id
                                        AND li.bd_id=li1.bd_id
                                        AND li.line_nr=li1.line_nr
                                        AND lds.scale_id IN (SELECT MAX(scale_id) FROM line_disc_scale WHERE bd_id=in_bd_id))
                                        WHERE bd_id=in_bd_id;
EXCEPTION
WHEN OTHERS THEN
NULL;
--dbms_output.PUT_LINE('Could not update remaining_amt in line item table for the bd_id: '||in_bd_id);
END update_remaining_amt;

PROCEDURE get_list_prices_from_gypsy
        (i_countrycd IN VARCHAR2,
        i_pricelistcd IN VARCHAR2,
        i_currencycd IN VARCHAR2,
        i_pricetermcd IN VARCHAR2,
        i_deal_creation_guid IN VARCHAR2,
        i_GlobalFl IN VARCHAR2,
        i_hierarchy_cd IN VARCHAR2,
        i_enddate IN DATE)
IS
i_bundle_header_string VARCHAR2(32767);
i_line_item_string VARCHAR2(32767);
i_bundle_lines_string VARCHAR2(32767);
l_xmlnamespace VARCHAR2(250):=  'xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://schemas.datacontract.org/2004/07/HP.Eclipse.Data.EDMS"' ;
p_gypsy_price SYS_REFCURSOR;
p_prodstr VARCHAR2(32767);
p_prodstr_temp VARCHAR2(32767);
l_cnt_comma number;
/*type gypsy_rec
IS
  RECORD
  (
    prod_nr         VARCHAR2 (50),
    prod_opt_cd     VARCHAR2 (10),
    prod_desc       VARCHAR2 (100),
    stat            VARCHAR2 (10),
    price           NUMBER (16, 2),
    prod_line       VARCHAR2 (5),
    prod_family     VARCHAR2 (100),
    start_eff_dt    DATE,
    low_price       NUMBER (16, 2),
    qty_brk         NUMBER (10),
    end_eff_dt      DATE,
    ref_price_fl    VARCHAR2 (1),
    non_discount_fl VARCHAR2 (1),
    plc_fl          VARCHAR2 (10) );
  */
  gprice gypsy_rec;
  TYPE tab_number IS TABLE OF gypsy_rec;
l_data tab_number;
cnt_records NUMBER;
BEGIN
--Initial cleanup
DELETE FROM gt_product_bundles_prices;
--Get prices for bundle header products:
 --****************************************************************************************
  --Adding Bundles
  --****************************************************************************************
--commented by Harsh Shah 27-Jan-2015, for performance improvement
-- US7832

/*
  FOR recbd IN
    (SELECT    *
    FROM
      (SELECT extract ( value (d), '//LineItemBD/AddedByHPEmployee/EmployeeNr/text()', l_xmlnamespace). getstringval () AS addedbyempnr,    ---emp nr change from new xml
        extract ( value (d), '//LineItemBD/AddedByHPEmployee/EmailAddress/text()', l_xmlnamespace). getstringval ()     AS addedbyempemail, ---emp nr change from new xml
        extract ( value (d), '//LineItemBD/AuthBasisDesc/text()', l_xmlnamespace). getstringval ()                      AS authbasisdesc ,
        extract ( value (d), '//LineItemBD/AuthDate/text()', l_xmlnamespace ). getstringval ()                          AS authdate,
        extract ( value (d), '//LineItemBD/AuthDateGMT/text()', l_xmlnamespace). getstringval ()                        AS authdategmt,
        extract ( value (d), '//LineItemBD/AuthHPEmployee/EmployeeNr/text()', l_xmlnamespace). getstringval ()          AS authempnr,    ---emp nr change from new xml
        extract ( value (d), '//LineItemBD/AuthHPEmployee/EmailAddress/text()', l_xmlnamespace). getstringval ()        AS authempemail, ---emp nr change from new xml
        extract ( value (d), '//LineItemBD/AuthStatCD/text()', l_xmlnamespace). getstringval ()                         AS authstatcd,
        extract ( value (d), '//LineItemBD/BDNetAmt/text()', l_xmlnamespace ). getstringval ()                          AS bdnetamt,
        extract ( value (d), '//LineItemBD/CostPrice/text()', l_xmlnamespace). getstringval ()                          AS costprice,
        extract ( value (d), '//LineItemBD/ListPrice/text()', l_xmlnamespace). getstringval ()                          AS listprice,
        extract ( value (d), '//LineItemBD/PricingTypeCD/text()', l_xmlnamespace). getstringval ()                      AS pricingtypecd,
        extract (value (d), '//LineItemBD/ProdDesc/text()', l_xmlnamespace) . getstringval ()                           AS proddesc,
        extract (value (d), '//LineItemBD/RequestType/text()', l_xmlnamespace). getstringval ()                         AS requesttype,
        extract (value (d), '//LineItemBD/RolloutMonthQtys/text()', l_xmlnamespace). getstringval ()                    AS rolloutmonthqtys,
        extract (value (d), '//LineItemBD/ProdBaseNr/text()', l_xmlnamespace). getstringval ()                          AS sku,
        extract (value (d), '//LineItemBD/StdDiscPct/text()', l_xmlnamespace). getstringval ()                          AS stddiscpct,
        extract (value (d), '//LineItemBD/BundleDesc/text()', l_xmlnamespace). getstringval ()                          AS bundledesc,
        extract (value (d), '//LineItemBD/BundleSource /text()', l_xmlnamespace). getstringval ()                       AS bundlesource ,
        extract (value (d), '//LineItemBD/BundleIndex /text()', l_xmlnamespace). getstringval ()                        AS bundleindex,
        extract (value (d), '//LineItemBD/Qty/text()', l_xmlnamespace). getstringval ()                                 AS header_qty,
        extract (value (d), '//LineItemBD/OptCD/text()', l_xmlnamespace). getstringval ()                               AS optcd,
        extract (value (D), '//LineItemBD/ConfigID/text()', L_XMLNAMESPACE). GETSTRINGVAL ()                            as CONFIGID,
        extract (value (d), '//LineItemBD/PL/text()', l_xmlnamespace). getstringval ()                                  AS pl, --Added on 23-Jan for CR 3236
        extract ( value (D), '//LineItemBD/OrderMinQty/text()', l_xmlnamespace). GETSTRINGVAL () as ORDERMINQTY, ---Added for CR 4375
        extract (value (D), '//LineItemBD/DocNum/text()', l_xmlnamespace). GETSTRINGVAL ()                              as BMI_DOC_NO,  -- by Harsh Shah 17-Jan-2014,
        extract (value (D), '//LineItemBD/ExtPreApprvPrice/text()', l_xmlnamespace). GETSTRINGVAL ()                    as ExtPreApprvPrice,
         extract ( value (d), '//LineItemBD/DisplayCompPrcFl/text()', l_xmlnamespace). getstringval () AS DisplayCompPrcFl
      FROM edms_deal_queue x,
        TABLE ( xmlsequence ( extract ( x.xml_data_xml, 'DealCreationRequest/Bundles/LineItemBD', l_xmlnamespace))) d
      WHERE x.deal_creation_guid =i_deal_creation_guid
      )
    )

*/


  BEGIN
    FOR recbd IN
    (SELECT
           SKU AS sku,
           BUNDLE_SOURCE AS bundlesource,
           BUNDLE_INDEX AS bundleindex,
           OPT_CD AS optcd
        FROM   eclipse.GT_XML_BUNDLE
        WHERE GUID=i_deal_creation_guid

    )
    LOOP
       IF recbd.optcd IS NOT NULL THEN
        recbd.sku:= RPAD(recbd.sku,12) || rpad(recbd.optcd,3) ;
      ELSE
        recbd.sku:= recbd.sku;
      END IF;

    i_bundle_header_string := i_bundle_header_string||','||chr(39)||recbd.sku||chr(39);
       --*************************************
      --Looping through Bundle Line
      -- inserting bundle line
      --*************************************
     --Modified by Harsh Shah 27-Jan-2015
      --for performance improvement
      --US 7832
      FOR recbdline IN
      (
      SELECT
           SKU AS sku,
           OPT_CD AS optcd
        FROM   eclipse.GT_XML_BUNDLE_Line
        WHERE GUID=i_deal_creation_guid
        AND  PARENT_INDEX                                         =recbd.bundleindex
      AND BUNDLE_LINE_SOURCE                                     =RECBD.BUNDLESOURCE

     )
      LOOP
      IF recbdline.optcd IS NOT NULL THEN
        recbdline.sku:= RPAD(recbdline.sku,12) || rpad(recbdline.optcd,3) ;
      ELSE
        recbdline.sku:= recbdline.sku;
      END IF;

       i_bundle_lines_string := i_bundle_lines_string||','||chr(39)||recbdline.sku||chr(39);
       END LOOP;
        --i_bundle_lines_string := LTRIM(i_bundle_lines_string,',');
    --DBMS_OUTPUT.PUT_LINE('Bundle Lines prod string: '|| substr(i_bundle_lines_string,1,180));
    END LOOP;
    --i_bundle_lines_string := NULL;
    --i_bundle_header_string := LTRIM(i_bundle_header_string,',');
     --DBMS_OUTPUT.PUT_LINE('Bundle header prod string: '||substr(i_bundle_header_string,1,180));
    END;

--Get prices for Line items:
 BEGIN
    FOR rec IN
    (SELECT extract ( value (d), '//AddedByHPEmployee/EmployeeNr/text()', l_xmlnamespace). getstringval () AS addedbyempnr,    ---emp nr change from new xml
      extract ( value (d), '//AddedByHPEmployee/EmailAddress/text()', l_xmlnamespace). getstringval ()     AS addedbyempemail, ---emp nr change from new xml
      extract ( value (d), '//AuthBasisDesc/text()', l_xmlnamespace). getstringval ()                      AS authbasisdesc,
      extract ( value (d), '//AuthDate/text()', l_xmlnamespace).getstringval ()                            AS authdate,
      extract ( value (d), '//AuthDateGMT/text()', l_xmlnamespace). getstringval ()                        AS authdategmt,
      extract ( value (d), '//AuthHPEmployee/EmployeeNr/text()', l_xmlnamespace). getstringval ()          AS authempnr,    --emp nr change from new xml
      extract ( value (d), '//AuthHPEmployee/EmailAddress/text()', l_xmlnamespace). getstringval ()        AS authempemail, --emp nr change from new xml
      extract ( value (d), '//AuthStatCD/text()', l_xmlnamespace). getstringval ()                         AS authstatcd,
      extract ( value (d), '//BDNetAmt/text()', l_xmlnamespace). getstringval ()                           AS bdnetamt,
      extract ( value (d), '//ListPrice/text()', l_xmlnamespace). getstringval ()                          AS listprice,
      extract ( value (d), '//PL /text()', l_xmlnamespace). getstringval ()                                AS pl,
      extract ( value (d), '//PricingTypeCD /text()', l_xmlnamespace). getstringval ()                     AS pricingtypecd,
      extract ( value (d), '//ProdDesc/text()', l_xmlnamespace). getstringval ()                           AS proddesc,
      extract ( value (d), '//Qty/text()', l_xmlnamespace). getstringval ()                                AS qty,
      extract ( value (d), '//RequestType/text()', l_xmlnamespace). getstringval ()                        AS requesttype,
      extract ( value (d), '//RolloutMonthQtys/text()', l_xmlnamespace). getstringval ()                   AS rolloutmonthqtys,
      extract ( value (d), '//ProdBaseNr/text()', l_xmlnamespace). getstringval ()                         AS sku,
      extract ( value (d), '//StdDiscPct/text()', l_xmlnamespace). getstringval ()                         AS stddiscpct,
      extract ( value (d), '//OptCD/text()', l_xmlnamespace). getstringval ()                              AS optcd,
      extract ( value (d), '//CostPrice/text()', l_xmlnamespace). getstringval ()                          AS costprice,
      extract ( value (d), '//OrderMinQty/text()', l_xmlnamespace). getstringval ()                        AS orderminqty,-----CR 4735
      extract ( value (d), '//ExtPreApprvPrice/text()', l_xmlnamespace). getstringval ()                   AS ExtPreApprvPrice
    FROM edms_deal_queue x,
      TABLE ( xmlsequence ( extract ( x.xml_data_xml, 'DealCreationRequest/LineItems/LineItemPN', l_xmlnamespace))) d
    WHERE x.deal_creation_guid = i_deal_creation_guid
    )
    LOOP
     IF rec.optcd IS NOT NULL THEN
        rec.sku:= RPAD(rec.sku,12) || rpad(rec.optcd,3) ;
      ELSE
        rec.sku:= rec.sku;
      END IF;
        i_line_item_string :=i_line_item_string||','||chr(39)||rec.sku||chr(39);
    END LOOP;

    i_line_item_string := LTRIM(i_line_item_string,',');
     --DBMS_OUTPUT.PUT_LINE('Product Number string: '||i_line_item_string);
    END;
    P_PRODSTR :=i_line_item_string|| i_bundle_header_string||i_bundle_lines_string;
    P_PRODSTR := LTRIM(RTRIM(P_PRODSTR,','),',');
    --DBMS_OUTPUT.PUT_LINE('Product string which will be sent to Gpsy: '||P_PRODSTR);

    P_PRODSTR_TEMP:=P_PRODSTR;
while(length(P_PRODSTR_TEMP)>0) loop
l_cnt_comma :=instr(p_prodstr_temp,',',1,997);
P_PRODSTR := p_prodstr_temp;
if l_cnt_comma =0 then
p_prodstr_temp:=substr(p_prodstr_temp,1,length(p_prodstr_temp));
else
p_prodstr_temp:=substr(p_prodstr_temp,1,l_cnt_comma-1);
end if;
   ECLIPSE.PKGPRICELST_CHIANTE.GPPRICECOLLECTDTLPHD_REF ( i_countrycd, i_pricelistcd, i_currencycd, i_pricetermcd, p_prodstr_temp, i_GlobalFl, i_hierarchy_cd, i_enddate, p_gypsy_price );
 LOOP
     FETCH p_gypsy_price INTO gprice;
             EXIT WHEN p_gypsy_price%NOTFOUND;
    --DBMS_OUTPUT.PUT_LINE('Prod number: '||gprice.prod_nr);
    --DBMS_OUTPUT.PUT_LINE('Prod list price: '||gprice.price);
    --DBMS_OUTPUT.PUT_LINE ('Prod Family: '||gprice.prod_family);
    --DBMS_OUTPUT.PUT_LINE ('Prod Stat: '|| gprice.stat);
    --DBMS_OUTPUT.PUT_LINE ('Prod line: '|| gprice.prod_line);
    --DBMS_OUTPUT.PUT_LINE('Prod OptCd: '||gprice.prod_opt_cd);
    --DBMS_OUTPUT.PUT_LINE('>>>>>>>>>>>>>>>');
    INSERT INTO gt_product_bundles_prices(
    PROD_NR,
PROD_OPT_CD,
PROD_DESC,
STAT,
PRICE,
PROD_LINE,
PROD_FAMILY,
START_EFF_DT,
LOW_PRICE,
QTY_BRK,
END_EFF_DT,
REF_PRICE_FL,
NON_DISCOUNT_FL,
PLC_FL
,HAS_MCC
,PRC_DISP_CD)
    VALUES (gprice. prod_nr,
                                                    gprice. prod_opt_cd,
                                                    gprice.prod_desc,
                                                    gprice.stat,
                                                    gprice.price,
                                                    gprice.prod_line,
                                                    gprice.prod_family,
                                                    gprice.start_eff_dt,
                                                    gprice.low_price,
                                                    gprice.qty_brk,
                                                    gprice.end_eff_dt,
                                                    gprice.ref_price_fl,
                                                    gprice.non_discount_fl,
                                                    gprice.plc_fl,
                                                    gprice.has_mcc
                                                  ,gprice.prc_disp_cd
                                                    );

  END LOOP;
  if l_cnt_comma =0 then
  p_prodstr_temp:=substr(P_PRODSTR,length(p_prodstr_temp)+1,length(P_PRODSTR));
  else
  p_prodstr_temp:=substr(P_PRODSTR,l_cnt_comma+1,length(P_PRODSTR));
  end if;
 end loop;

  --TODO: to be removed.3/24/2014. Duplicate rows causing issues in insert_prod_line select statement. This is temp fix.
    DELETE from gt_product_bundles_prices
  where rowid in
  (select max(rowid) from gt_product_bundles_prices group by prod_nr, prod_opt_cd having count(*) > 1
  );


  SELECT COUNT(*) INTO cnt_records FROM gt_product_bundles_prices;
  DBMS_OUTPUT.PUT_LINE('No of rows in gt_product_bundles_prices: '||cnt_records);
     UPDATE gt_product_bundles_prices SET prod_opt_cd=NVL(prod_opt_cd,'1') , prod_nr=LTRIM(RTRIM(prod_nr));
  COMMIT;
  EXCEPTION
  WHEN OTHERS THEN
  DBMS_OUTPUT.PUT_LINE('Error occured in get_list_prices_from_gypsy: '||SQLERRM ||  dbms_utility.format_error_backtrace() );

  END get_list_prices_from_gypsy;


  PROCEDURE get_default_values_new (i_deal_creation_guid IN VARCHAR2,
                                   out_default_bus_model_cd OUT VARCHAR2,
                                   out_split_deal_fl OUT VARCHAR2,
                                   out_value_default_bm OUT VARCHAR2,
                                   out_volume_default_bm OUT VARCHAR2,
                                   out_mc_charge OUT VARCHAR2,
                                   out_value_mc_charge OUT VARCHAR2,
                                   out_volume_mc_charge OUT VARCHAR2,
                                   out_bus_group OUT VARCHAR2,
                                   out_bus_unit OUT VARCHAR2,
                                   out_cust_industry OUT VARCHAR2,
                                   out_cust_segment OUT VARCHAR2,
                                   out_routing_ind OUT VARCHAR2,
                                   out_value_routing_Ind OUT VARCHAR2,
                                   out_volume_routing_ind OUT VARCHAR2,
                                   out_asap_indicator OUT VARCHAR2,
                                   out_max_pl OUT VARCHAR2,
                                   out_deal_default_duration_days OUT NUMBER,
                                   out_value_refcursor OUT SYS_REFCURSOR,
                                   out_volume_refcursor OUT SYS_REFCURSOR,
                                   out_error_messages OUT SYS_REFCURSOR
                                  ,out_deal_tenantid OUT VARCHAR2 ---Added for SMO
                                   )
IS
l_countrycd deal.control_cntry_cd%type;
l_region ww_cntry.region%type;
max_prod_line_cd prod_line.prod_line_cd%TYPE;
--l_bm_group_cd prod_line.bm_grp_cd%TYPE;
l_busunit_cd prod_line.bus_unit_cd%TYPE;
l_busgroupcd bus_unit.bus_group_cd%TYPE;
l_errors                VARCHAR2 (3000);
l_msg_type              VARCHAR2(50);
l_value_only_fl prod_line.value_only_fl%TYPE;
l_volume_only_fl prod_line.volume_only_fl%TYPE;
L_default_bus_model_cd bus_model.bus_MODEL_CD%TYPE;--Changed from VARCHAR2(200);
l_Exception_cd default_bm.exception_cd%TYPE;
in_deal_creation_guid edms_deal_queue.deal_creation_guid%TYPE;--VARCHAR2(2000);
l_split_deal_fl VARCHAR2(1) :='N';
l_value_split_default_bm default_bm.value_split_bm_code%TYPE;
l_volume_split_default_bm default_bm.volume_split_bm_code%TYPE;
l_default_mc_charge mc_charge.mc_chrg%TYPE; --VARCHAR2(200);
l_busmodelcd bus_model.bus_MODEL_CD%TYPE;--VARCHAR2(20);
l_mdcp_cust_seg CUST_SEG.MDCP_CUST_SEG%TYPE;--VARCHAR2(30);
l_default_value_mc_charge mc_charge.mc_chrg%TYPE;--VARCHAR2(20);
l_default_volume_mc_charge mc_charge.mc_chrg%TYPE;--VARCHAR2(20);
l_value_products NUMBER;
l_volume_products NUMBER;
l_engagement_model default_bm.ENGAGEMENT_MODEL%TYPE;--VARCHAR2(100);
--l_rtm VARCHAR2(50);
l_distinct_bus_unit prod_line.bus_unit_cd%TYPE;
l_only_bu_exists_on_deal default_mc_charge.only_bu_exists_on_deal%type;  --by Harsh Shah 20-Jun-2014 to resovle the issue of wrong MC Charge
l_curr_cd deal.curr_cd%TYPE;
l_deal_value_greater_than deal.est_deal_value%type;
l_deal_value_greater_than_USD deal.est_deal_value%type;
config_count NUMBER :=0;
l_Deal_Has_CTO_Config_Fl DEFAULT_MC_CHARGE.Deal_Has_CTO_Config_Fl%TYPE;--VARCHAR2(1);
l_xmlnamespace VARCHAR2 (250);
data_not_Found VARCHAR2(1);
too_many_rows_found VARCHAR2(1);
cnt_distinct_val_vol_flags NUMBER;
value_products_fl DEFAULT_BM.VALUE_ONLY_FL%TYPE; --VARCHAR2(1);
volume_products_fl DEFAULT_BM.VOLUME_ONLY_FL%TYPE; --VARCHAR2(1);
max_product line_item.prod_gnrc_nr_tx%TYPE;
cnt_distinct_rebate_types NUMBER;
l_rebate_type DEFAULT_MC_CHARGE.REBATE_TYPE%TYPE:='*';
l_piu_Flag DEFAULT_MC_CHARGE.PIU_FLAG%TYPE:=' '; --: =VARCHAR2(1)
proceed_further_fl VARCHAR2(1):='Y';--To determine if checking MC Charge is needed or not.
--The below variables are used to store the actual values, which will be used to determine MC Charge codes.
actual_countrycd deal.control_cntry_cd%type;
actual_region ww_cntry.region%type;
actual_busunit_cd prod_line.bus_unit_cd%TYPE;
actual_busgroupcd bus_unit.bus_group_cd%TYPE;
data_found_at_rowid ROWID;
max_prod_gnrc_nr_tx ww_product.prod_base_nr%TYPE;
cnt_distinct_value NUMBER;
tab_rebate_type DEFAULT_MC_CHARGE.REBATE_TYPE%TYPE;--VARCHAR2(500);
l_custindustry industry.industry_nm%type;
counter NUMBER;
out_contract VARCHAR2(4);
status_message VARCHAR2(50);
temp NUMBER;
temp_var VARCHAR2(20);
l_tenantid deal.tenantid_data_cd%type;---Added for SMO --l_tenantid deal.tenantid%type;---Added for SMO (Tenantid column is replace with tenentid_data_cd for Federal project)
--out_deal_tenantid   deal.tenantid%type;---Added for SMO

TEMP_TABLE_FAILURE EXCEPTION; -- by Harsh shah 27-Jan-2015     --for US7832 Performance Improvement

l_source_asset_id edms_source_asset.source_asset_id%TYPE; --Added for US-9408 --> Encore Retirement  

BEGIN
L_Xmlnamespace := 'xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://schemas.datacontract.org/2004/07/HP.Eclipse.Data.EDMS"' ;
--in_deal_creation_guid := 'c55e678a-7306-4f69-8c5a-3db6e2e33784';
in_deal_creation_guid := i_deal_creation_Guid;
--Get country code from given guid
l_countrycd             := getsqtxmlvalue ('/DealCreationRequest/DealHeader/CountryCD/', in_deal_creation_guid);
l_busmodelcd            := getsqtxmlvalue ('/DealCreationRequest/DealHeader/BusModelCD/',in_deal_creation_guid);
l_mdcp_cust_seg         := getsqtxmlvalue('/DealCreationRequest/DealCustomer/CustSegment/' ,in_DEAL_CREATION_GUID);
l_custindustry          := getsqtxmlvalue('/DealCreationRequest/DealCustomer/CustIndustry/' ,in_DEAL_CREATION_GUID);-- Newly added variable as per Rupesh
l_engagement_model      := getsqtxmlvalue ('/DealCreationRequest/DealHeader/EngagementModel/',in_DEAL_CREATION_GUID);
l_rtm                   := getsqtxmlvalue ('/DealCreationRequest/DealHeader/RTM/',in_DEAL_CREATION_GUID);
l_rebate_type           := NVL(getsqtxmlvalue ('/DealCreationRequest/DealHeader/RebateType/',in_DEAL_CREATION_GUID),'*');
l_curr_cd               := getsqtxmlvalue ('/DealCreationRequest/DealHeader/CurrencyCD/',in_DEAL_CREATION_GUID);
l_piu_Flag              := NVL(getsqtxmlvalue ('/DealCreationRequest/DealHeader/PIUFl/',in_DEAL_CREATION_GUID),'*' );
l_tenantid              := getsqtxmlvalue ('/DealCreationRequest/DealHeader/TenantCmpyCD/',in_DEAL_CREATION_GUID ); --Added for SMO change

l_source_asset_id :=  getsqtxmlvalue ('/DealCreationRequest/DealRequestSource/ExtSourceCD/',in_DEAL_CREATION_GUID ); --Added for US-9408 --> Encore Retirement  
--dbms_output.PUT_LINE('Country code is: '||l_countrycd);
actual_countrycd :=l_countrycd;

BEGIN--Cleanup the error report table.
DELETE
  FROM edms_deal_error_report
  WHERE DEAL_CREATION_GUID = I_DEAL_CREATION_GUID;
DELETE FROM GT_DEFAULT_MC_CHARGE;
DELETE FROM gt_default_bm;
EXCEPTION
WHEN OTHERS THEN
NULL;
END;

    --by Harsh Shah , filling temp table, 27-Jan-2015
    --DBMS_OUTPUT.PUT_LINE ('Performance check temp table filling.. start time : '||  to_char(SYSDATE,'DD-MON-YYYY HH:MI:SS'));

  IF FILL_TEMP_TABLES(I_DEAL_CREATION_GUID,L_XMLNAMESPACE)='N' THEN
        --DBMS_OUTPUT.PUT_LINE ('eRROR IN TEMP TABLE ');
        RAISE TEMP_TABLE_FAILURE;
  END IF;

  --DBMS_OUTPUT.PUT_LINE ('Performance check temp table filling.. end time : '||   to_char(sysdate,'DD-MON-YYYY HH:MI:SS'));


--Get region code from the above country code
BEGIN
    SELECT region INTO l_region FROM ww_cntry WHERE cntry_cd = l_countrycd;
    --dbms_output.PUT_LINE('Region code is: '||l_region);
    actual_region := l_region;
  EXCEPTION
  WHEN no_data_found THEN
    l_errors  := 'Cannot Create Deal. Unable to find the country for the deal. Invalid Country : ' || l_countrycd;
    l_msg_type:='ERROR';
END;

--Get Max prod line code from the function.
max_prod_line_cd := get_max_pl_bmi(in_deal_creation_guid);
--dbms_output.PUT_LINE('Max PL from function is: '||max_prod_line_cd);

--As per Max, we are getting the value from ww_product if PL is NULL in the XML.
IF (max_prod_line_cd IS NULL) THEN
BEGIN
--dbms_output.PUT_LINE('Prod line is NULL in the XML');
    SELECT * INTO max_prod_gnrc_nr_tx FROM (SELECT prod_gnrc_nr_tx FROM gt_max_pl
    ORDER BY bdnetamt DESC) WHERE ROWNUM<=1;
SELECT prod_line_cd INTO max_prod_line_cd FROM (SELECT prod_line_cd FROM ww_product WHERE prod_base_nr=max_prod_gnrc_nr_tx)
                                        WHERE rownum<=1;
--dbms_output.PUT_LINE('Prod line derived from WW_PRODUCT table is: '||max_prod_line_cd);
EXCEPTION
WHEN OTHERS THEN
l_errors := 'Could not find Max Prod line. Error at: '||DBMS_UTILITY.FORMAT_ERROR_BACKTRACE()||' Error: '||SQLERRM;
log_default_value_errors(i_deal_creation_guid, l_errors);
END;
END IF;

out_max_pl := max_prod_line_cd;

BEGIN
FOR rec IN (SELECT * FROM gt_max_pl WHERE assoc_pl_cd IS NULL)
LOOP
UPDATE gt_max_pl gt SET assoc_pl_cd=(SELECT prod_line_cd FROM ww_product WHERE prod_base_nr=rec.prod_gnrc_nr_tx AND rownum<=1)
WHERE prod_gnrc_nr_tx=rec.prod_gnrc_nr_tx;--Changes made by Lakshmi as part of CR96944
--Changed gt.prod_gnrc_nr_tx to rec.prod_gnrc_nr_tx
--DBMS_OUTPUT.PUT_LINE('No of rows updated for NULL Prod Line Code: '||sql%rowcount);
END LOOP;
EXCEPTION
WHEN OTHERS THEN
l_errors := 'Could not update prod lines of GT table . Error at: '||DBMS_UTILITY.FORMAT_ERROR_BACKTRACE()||' Error: '||SQLERRM;
log_default_value_errors(i_deal_creation_guid, l_errors);
END;

IF (max_prod_line_cd IS NULL) THEN
BEGIN
--dbms_output.PUT_LINE('Prod line is NULL in the XML');
    SELECT * INTO max_prod_gnrc_nr_tx FROM (SELECT prod_gnrc_nr_tx FROM gt_max_pl
    ORDER BY bdnetamt DESC) WHERE ROWNUM<=1;
SELECT prod_line_cd INTO max_prod_line_cd FROM (SELECT prod_line_cd FROM ww_product WHERE prod_base_nr=max_prod_gnrc_nr_tx)
                                        WHERE rownum<=1;
--dbms_output.PUT_LINE('Prod line derived from WW_PRODUCT table is: '||max_prod_line_cd);
EXCEPTION
WHEN OTHERS THEN
l_errors := 'Could not find Max Prod line. Error at: '||DBMS_UTILITY.FORMAT_ERROR_BACKTRACE()||' Error: '||SQLERRM;
log_default_value_errors(i_deal_creation_guid, l_errors);
END;
END IF;

--Update the values of volume and value flag in GT table
Update Gt_Max_Pl Gt Set Volume_Only_Fl=(Select Decode(Val_Vol,'VOL','Y','N') From Ba_Pl_Hi Ba Where Prod_Line_Cd=Gt.Assoc_Pl_Cd),
                         Value_Only_Fl=(SELECT DECODE(val_vol,'VAL','Y','N') From Ba_Pl_Hi Ba Where Prod_Line_Cd=Gt.Assoc_Pl_Cd);
--dbms_output.PUT_LINE('No of rows updated in GT_MAX_PL table: '||sql%ROWCOUNT);

--Get bm group cd, bus unit code from prod_line table.
/*  BEGIN
SELECT bus_unit_cd--, value_only_fl, volume_only_fl
    INTO l_busunit_cd--, l_value_only_fl, l_volume_only_fl
    FROM prod_line
    WHERE prod_line_cd=max_prod_line_cd
    AND rownum<=1;
EXCEPTION
WHEN NO_DATA_FOUND THEN
l_errors  := 'Cannot Create Deal. Unable to find bm_group_cd and bus_unit_cd for the deal.';
    l_msg_type:='ERROR';
    --raise reject_deal;
END; */--Commented by Lakshmi to implement new logic as below, per CR2558 -Changes for Default BU derivation.

SELECT bus_unit_cd INTO l_busunit_cd
  FROM (  SELECT *
            FROM (  SELECT SUM (extended_list_price) extended_list_price,
                           bus_unit_cd
                      FROM gt_max_pl
                  GROUP BY bus_unit_cd)
        ORDER BY extended_list_price DESC)
 WHERE ROWNUM <= 1;

out_bus_unit := TRIM(l_busunit_cd);

--Get l_busgroup_cd from bus_unit table.
BEGIN
SELECT bus_group_cd INTO l_busgroupcd FROM bus_unit WHERE bus_unit_cd=l_busunit_cd;
actual_busgroupcd := l_busgroupcd;
EXCEPTION
WHEN NO_DATA_FOUND THEN
l_errors  := 'Cannot Create Deal. Unable to find bus_unit_cd for the deal.';
    l_msg_type:='ERROR';
    --raise reject_deal;
END;

 out_bus_group :=L_busgroupcd;

--dbms_output.PUT_LINE('L_busgroupcd: '||actual_busgroupcd);
--dbms_output.PUT_LINE('bus_unit_cd : '||l_busunit_cd);
--dbms_output.PUT_LINE('Engagement Model: '||l_engagement_model);

UPDATE gt_max_pl SET volume_only_fl=NVL(volume_only_fl,'N'),
                                    value_only_fl=NVL(value_only_fl,'N');


--Derive the Default Bus Model:

BEGIN
SELECT COUNT(DISTINCT volume_only_Fl) INTO cnt_distinct_val_vol_flags FROM gt_max_pl;
IF cnt_distinct_val_vol_flags=1 THEN
    SELECT DISTINCT volume_only_fl INTO l_volume_only_fl FROM gt_max_pl where assoc_pl_cd is not null;
ELSE
    l_volume_only_fl :='N';
END IF;
SELECT COUNT(DISTINCT value_only_fl) INTO cnt_distinct_val_vol_flags FROM gt_max_pl;
IF cnt_distinct_val_vol_flags=1 THEN
    SELECT DISTINCT value_only_fl INTO l_value_only_Fl FROM gt_max_pl where assoc_pl_cd is not null;
ELSE
    l_value_only_fl :='N';
END IF;
END;
--dbms_output.PUT_LINE('$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$');
--dbms_output.PUT_LINE('Value of DISTINCT value_only_flag: '||l_value_only_Fl);
--dbms_output.PUT_LINE('Value of DISTINCT volume_only_flag: '||l_volume_only_Fl);
--dbms_output.PUT_LINE('$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$');

--Moved to code here to resolve CR: 83190 -- Deal has config flag is not getting populated while finding bus model
--Check if the entire XML has atleast one ConfigID

-- Fix by Chau - CR 83190
 BEGIN
FOR bdconfig IN
      (Select Extract (Value (D), '//LineItemBD/ConfigID/text()', l_xmlnamespace). getstringval () AS   configId,
             extract (value (d), '//LineItemBD/BundleSource/text()', l_xmlnamespace). getstringval () AS   bundlesource
            FROM edms_deal_queue x,
        Table ( Xmlsequence ( Extract ( X.Xml_Data_Xml, 'DealCreationRequest/Bundles/LineItemBD', l_xmlnamespace))) d
      Where X.Deal_Creation_Guid =in_DEAL_CREATION_GUID      )
      LOOP
     -- Fix by Chau - remove unneccessary insert into gt_bundle to save execution time, and a
     IF  bdconfig.bundlesource = 'NGCE-FIX'  or   bdconfig.bundlesource =  'NFCE-BAND'
      THEN           config_count := config_count +1;
      END IF;

      END LOOP;

      IF config_count>0 THEN
        l_Deal_Has_CTO_Config_Fl := 'Y';
      ELSE
        l_Deal_Has_CTO_Config_Fl := 'N';
      END IF;

      --dbms_output.PUT_LINE('l_Deal_Has_CTO_Config_Fl is: '|| l_Deal_Has_CTO_Config_Fl);
      EXCEPTION
      WHEN OTHERS THEN
       l_Deal_Has_CTO_Config_Fl := 'N';
        End;
--End of CR: 83190

  ---Added for SMO
 IF l_tenantid IS NULL THEN
 out_deal_tenantid :=GET_TENANTCD_FROM_BG (L_busgroupcd);
 ELSE
 out_deal_tenantid:=l_tenantid;
 END IF;
 l_tenantid:= out_deal_tenantid;
 dbms_output.put_line('Get_default_bm  params:');
 dbms_output.put_line('l_engagement_model  :'||l_engagement_model);
 dbms_output.put_line('l_countrycd  :'||l_countrycd);
 dbms_output.put_line('l_region   :'||l_region);
 dbms_output.put_line('L_busgroupcd  :'||L_busgroupcd);
 dbms_output.put_line('l_busunit_cd   :'||l_busunit_cd);
 dbms_output.put_line('max_prod_line_cd  :'||max_prod_line_cd);
 dbms_output.put_line('l_value_only_fl   :'||l_value_only_fl);
 dbms_output.put_line('l_volume_only_fl   :' || l_volume_only_fl);
 dbms_output.put_line('l_Deal_Has_CTO_Config_Fl   :'||l_Deal_Has_CTO_Config_Fl);
 dbms_output.put_line('l_tenantid   :'||l_tenantid);

GET_DEFAULT_BM (
   l_engagement_model
  ,l_countrycd
  ,l_region
  ,L_busgroupcd
  ,l_busunit_cd
  ,max_prod_line_cd
  ,l_value_only_fl
  ,l_volume_only_fl
  ,l_Deal_Has_CTO_Config_Fl
   ,l_tenantid---Added for SMO changes
   ,l_source_asset_id --Added for US-9408 --> Encore Retirement
  ,L_default_bus_model_cd
   ,l_exception_cd
  ,l_value_split_default_bm
  ,l_volume_split_default_bm
  ,data_found_at_rowid
 ) ;

--dbms_output.PUT_LINE('Only one record found');
--dbms_output.PUT_LINE('Default Bus Model Derived is: '||L_default_bus_model_cd);
out_default_bus_model_cd := L_Default_bus_model_cd;
dbms_output.PUT_LINE('********************************');
dbms_output.PUT_LINE('Country_cd : '||l_countrycd);
dbms_output.PUT_LINE('l_region : '||l_region);
dbms_output.PUT_LINE('l_busgroupcd : '||l_busgroupcd);
dbms_output.PUT_LINE('bus_unit_cd : '||l_busunit_cd);
dbms_output.PUT_LINE('Prod line cd: '||max_prod_line_cd);
dbms_output.PUT_LINE('L value only flag: '||value_products_fl);
dbms_output.PUT_LINE('L volume only flag: '||volume_products_fl);
dbms_output.PUT_LINE('********************************');


IF (data_found_at_rowid is null) THEN
--DBMS_OUTPUT.PUT_LINE('Cannot Create Deal. Unable to derive the Business Model.');
l_errors  := 'Cannot Create Deal. Unable to derive the Business Model.';
l_msg_type:='ERROR';
INSERTERROR_OUTPUT_MESSAGES ( NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, l_errors, l_msg_type, in_deal_creation_guid, NULL, NULL,l_errors);
END IF;

--Check if the default_bus_model_cd='NA'
--Check if the default_bus_model_cd='NA' ,  L_Default_bus_model_cd is null here mean there is record with null value.
IF (l_default_bus_model_cd='NA' OR l_default_bus_model_cd IS NULL ) THEN
--DBMS_OUTPUT.PUT_LINE('Bus model code is NA');
    IF l_exception_cd='1' THEN
        l_split_deal_fl := 'Y';
        --DBMS_OUTPUT.PUT_LINE('Split deal flag is set to: '||l_split_deal_fl);
        proceed_further_fl :='Y';
    ELSIF l_exception_cd='2' THEN
        out_default_bus_model_cd := 'UNDETERMINED';
        out_mc_charge := 'UNDETERMINED';
         --out_mc_charge := '72';
        proceed_further_fl :='N';
        l_split_deal_fl :='N';
    ELSE
        l_split_deal_fl := 'N';
        proceed_further_fl :='Y';
    END IF;

END IF;

IF l_split_deal_fl !='Y' THEN
    l_value_split_default_bm := null ;
    l_volume_split_default_bm := null;
END IF;

out_split_deal_fl := l_split_deal_fl;
out_value_default_bm := l_value_split_default_bm;
out_volume_default_bm := l_volume_split_default_bm;

--dbms_output.PUT_LINE('Status of Proceed further flag is: '||proceed_further_fl);

IF (proceed_further_fl<>'N') THEN
--Commenting the below function call, as we can get the value from gt_max_pl table.
--l_deal_value_greater_than := NVL(total_value_of_deal (in_deal_creation_Guid),0);

--SELECT SUM(NVL(BDNETAMT,0)*NVL(QTY,0)) INTO l_deal_value_greater_than FROM gt_max_pl;--Changes made by Lakshmi on 10/20/2014 for CR# 2706

SELECT SUM(NVL(extended_list_price,0)) INTO l_deal_value_greater_than FROM gt_max_pl;--Changes made by Lakshmi on 6/17/2015 for --> IM20225625 Should be A9U not A9//TD 2985034

--DBMS_OUTPUT.PUT_LINE('l_deal_value_greater_than in new MC procedure: '||l_deal_value_greater_than);
--Check if the only one Bus Unit exists on the deal.
BEGIN
SELECT DISTINCT bus_unit_cd INTO l_distinct_bus_unit FROM prod_line WHERE prod_line_cd IN
(SELECT assoc_pl_cd FROM gt_max_pl);
l_only_bu_exists_on_deal :=l_distinct_bus_unit;
EXCEPTION
WHEN TOO_MANY_ROWS THEN
    l_only_bu_exists_on_deal :='*';
WHEN OTHERS THEN
    l_only_bu_exists_on_deal :='*';
END;

--Get the total value of the deal in USD, if the currency code is different.
IF (l_curr_cd                <>'UD') THEN
    l_deal_value_greater_than_USD:=convert_to_us_currency (l_curr_cd,'*', l_deal_value_greater_than,'ACCT',l_tenantid); --added tenantid for SMO changes
  ELSE
    --if it is already in USD then no conversion is required. So assigning the same value
    l_deal_value_greater_than_USD:=l_deal_value_greater_than;
END IF;


dbms_output.PUT_LINE('l_deal_value_greater_than is in USD: '||l_deal_value_greater_than_USD);
dbms_output.PUT_lINE('l_only_bu_exists_on_deal is: '||l_only_bu_exists_on_deal);
dbms_output.PUT_LINE('l_rebate_type: '||l_rebate_type);

--Get default cust segment
--dbms_output.PUT_LINE('MDCP_CUST_SEG is: '||l_mdcp_cust_seg);
/* BEGIN
----dbms_output.PUT_LINE('MDCP_CUST_SEG 1: '||l_mdcp_cust_seg,);
SELECT cust_seg_cd INTO out_cust_segment FROM cust_seg
WHERE UPPER(CUST_SEG_DESC)=UPPER(l_mdcp_cust_seg)
AND cust_seg_region=actual_region
AND mdcp_cust_seg IS NOT NULL
AND cust_seg_active_fl='Y';
EXCEPTION
WHEN TOO_MANY_ROWS THEN
--out_cust_segment := NULL;
BEGIN
SELECT cust_seg_cd INTO out_cust_segment
FROM (
SELECT cust_seg_cd FROM cust_seg
WHERE  INSTR(UPPER(l_mdcp_cust_seg),UPPER(CUST_SEG_DESC)) = 1
AND cust_seg_region=actual_region
AND cust_seg_active_fl='Y'
) WHERE rownum<=1;
EXCEPTION
WHEN NO_DATA_FOUND THEN
out_cust_segment :=NULL;
END;
WHEN NO_DATA_FOUND THEN
out_cust_segment := NULL;
END; */
END IF;

out_cust_segment := l_mdcp_cust_seg;

dbms_output.PUT_LINE('Cust segment from proc: '||out_cust_segment);

 --Derive the Default MC Charge:
--IF (proceed_further_fl <>'N') THEN
--BEGIN
l_countrycd := actual_countrycd;
l_region := actual_region;
l_busgroupcd := actual_busgroupcd;
dbms_output.PUT_LINE('Values used to check MC Charge: ');
dbms_output.PUT_LINE('>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>');
dbms_output.PUT_LINE('l_countrycd : '||l_countrycd);
dbms_output.PUT_LINE('l_region: '||l_region);
dbms_output.PUT_LINE('l_busgroupcd: '||l_busgroupcd);
dbms_output.PUT_LINE('l_Deal_Has_CTO_Config_Fl: '||l_Deal_Has_CTO_Config_Fl);
dbms_output.PUT_LINE('l_only_bu_exists_on_deal: '||l_only_bu_exists_on_deal);
dbms_output.PUT_LINE('l_mdcp_cust_seg: '||out_cust_segment);
dbms_output.PUT_LINE('l_deal_value_greater_than_USD: '||l_deal_value_greater_than_USD);
dbms_output.PUT_LINE('l_piu_Flag: '||l_piu_Flag);
dbms_output.PUT_LINE('l_rebate_type: '||l_rebate_type);
dbms_output.PUT_LINE('l_default_bus_model_cd: '||l_default_bus_model_cd);
dbms_output.PUT_LINE('Engagement model: '||l_engagement_model);
dbms_output.PUT_LINE('l_busunit_cd: '||l_busunit_cd);
dbms_output.PUT_LINE('>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>');

--Check for the exact match of MC Charge:



GET_DEFAULT_MC_CODE (
   l_engagement_model
  ,l_countrycd
  ,l_region
  ,L_default_bus_model_cd
  ,l_deal_value_greater_than_USD/1000
  ,out_cust_segment
  ,l_rebate_type
  ,L_busgroupcd
  ,l_piu_Flag
  ,l_Deal_Has_CTO_Config_Fl
 ,l_only_bu_exists_on_deal
 ,l_busunit_cd-- New parameter added by Lakshmi for CR:180261- To consider Lead Bus Unit while deriving Default MC Charge.
 ,l_tenantid----Added for SMO Changes
 ,l_source_asset_id  --Added for US-9408 --> Encore Retirement
  ,l_default_mc_charge
) ;


--dbms_output.PUT_LINE('Default MC Charge Derived is: '||l_default_mc_charge);


 --by Harsh Shah 28-Mar-2014
 -- MC charge was defaulting to 72 despite of correct value derived.
-- out_mc_charge  :=  NVL(l_default_mc_charge , '72');

 --commented by Lakshmi on 14th Apr as suggested by Chau
--out_mc_charge :=NVL( l_default_mc_charge,'72');

out_mc_charge :=l_default_mc_charge;

--Get the value mc charge if there is bm code for value deal
IF l_value_split_default_bm IS NOT NULL THEN
BEGIN
    GET_DEFAULT_MC_CODE (
       l_engagement_model
      ,l_countrycd
      ,l_region
      ,l_value_split_default_bm
      ,l_deal_value_greater_than_USD/1000
      ,out_cust_segment
      ,l_rebate_type
      ,L_busgroupcd
      ,l_piu_Flag
      ,l_Deal_Has_CTO_Config_Fl
      ,l_only_bu_exists_on_deal
      ,l_busunit_cd -- New parameter added by Lakshmi for CR:180261- To consider Lead Bus Unit while deriving Default MC Charge.
      ,l_tenantid ---Added for SMO changes
      ,l_source_asset_id --Added for US-9408 --> Encore Retirement
      ,l_default_value_mc_charge
    ) ;

END;
END IF;

--Get the volume mc charge if there is bm code for volume deal
IF l_volume_split_default_bm IS NOT NULL THEN
BEGIN
    GET_DEFAULT_MC_CODE (
       l_engagement_model
      ,l_countrycd
      ,l_region
      ,l_volume_split_default_bm
      ,l_deal_value_greater_than_USD/1000
      ,out_cust_segment
      ,l_rebate_type
      ,L_busgroupcd
      ,l_piu_Flag
      ,l_Deal_Has_CTO_Config_Fl
      ,l_only_bu_exists_on_deal
      ,l_busunit_cd -- New parameter added by Lakshmi for CR:180261- To consider Lead Bus Unit while deriving Default MC Charge.
      ,l_tenantid ---Added for SMO changes
      ,l_source_asset_id  --Added for US-9408 --> Encore Retirement
      ,l_default_volume_mc_charge
    ) ;
END;
END IF;


out_value_mc_charge := l_default_value_mc_charge;
out_volume_mc_charge := l_default_volume_mc_charge;

out_cust_industry := l_custindustry;

--dbms_output.PUT_LINE('Get the Region code for the given country code');
BEGIN
    SELECT region INTO l_region FROM ww_cntry WHERE cntry_cd = actual_countrycd;
    --dbms_output.PUT_LINE('Region code is: '||l_region);
  EXCEPTION
  WHEN no_data_found THEN
    l_errors  := 'Cannot Create Deal. Unable to find the country for the deal. Invalid Country : ' || actual_countrycd;
    l_msg_type:='ERROR';
END;

 --New logic to derive Default Routing Indicator:
 DBMS_OUTPUT.PUT_LINE('Value passed to Get_Default_RI are: ');
 DBMS_OUTPUT.PUT_LINE('l_engagement_model: '||l_engagement_model);
 DBMS_OUTPUT.PUT_LINE('l_region: '||l_region);
 DBMS_OUTPUT.PUT_LINE('l_countrycd: '||l_countrycd);
 DBMS_OUTPUT.PUT_LINE('out_default_bus_model_cd: '||out_default_bus_model_cd);
 DBMS_OUTPUT.PUT_LINE('out_cust_segment: '||out_cust_segment);
 DBMS_OUTPUT.PUT_LINE('l_value_split_default_bm: '||l_value_split_default_bm);

--PKGEDMSDEALCREATIONV2_R14.GET_DEFAULT_ROUTING_INDICATOR (
GET_DEFAULT_ROUTING_INDICATOR (
   l_engagement_model
  ,l_region
  ,l_countrycd
  ,out_default_bus_model_cd
  ,out_cust_segment
  ,l_tenantid  ---Added for SMO Changes
  , out_routing_ind
 ) ;

DBMS_OUTPUT.PUT_LINE('***************** Value Routing Indicator Derivation***************************');
 --Get default routing indicator for value deal:
IF l_value_split_default_bm IS NOT NULL THEN
BEGIN
--  PKGEDMSDEALCREATIONV2_R14.GET_DEFAULT_ROUTING_INDICATOR (
GET_DEFAULT_ROUTING_INDICATOR(
   l_engagement_model
  ,l_region
  ,l_countrycd
  , l_value_split_default_bm
  ,out_cust_segment
  ,l_tenantid ---Added for SMO Changes
  , out_value_routing_Ind
 ) ;
END;
DBMS_OUTPUT.PUT_LINE('***************** Value Routing Indicator Deried: '||out_value_routing_Ind);
END IF;
--Get default routing indicator for volume deal:
IF l_volume_split_default_bm IS NOT NULL THEN
BEGIN
  --PKGEDMSDEALCREATIONV2_R14.GET_DEFAULT_ROUTING_INDICATOR (
  GET_DEFAULT_ROUTING_INDICATOR (
   l_engagement_model
  ,l_region
  ,l_countrycd
  ,  l_volume_split_default_bm
  ,out_cust_segment
  ,l_tenantid  ----Added for SMO changes
  ,  Out_Volume_Routing_Ind
 ) ;
END;
DBMS_OUTPUT.PUT_LINE('***************** Volume Routing Indicator Deried: '||Out_Volume_Routing_Ind);
END IF;

--Temporary change to create only direct deals when RTM = Direct
/* IF (UPPER(l_rtm)='DIRECT') THEN
out_default_bus_model_cd :='VD';
out_value_default_bm :='VD';
out_volume_default_bm :='VD';
END IF; */

/* select asap_indicator_cd INTO out_asap_indicator  from ASAP_INDICATOR where CNTRY_CD=l_countrycd and ACTIVE_FL='Y'
AND ROWNUM<2;
 */
 out_asap_indicator := NULL;

  SELECT COUNT(*) INTO temp FROM gt_max_pl WHERE assoc_pl_cd IS NULL;
--DBMS_OUTPUT.PUT_LINE('Count of Null assoc_pl_cd: 5 '||temp);

BEGIN
FOR rec IN (SELECT * FROM gt_max_pl WHERE assoc_pl_cd IS NULL)
LOOP
--DBMS_OUTPUT.PUT_LINE('Prod base nr checked: '||rec.prod_gnrc_nr_tx);
UPDATE gt_max_pl gt SET assoc_pl_cd=(SELECT prod_line_cd FROM ww_product WHERE prod_base_nr=rec.prod_gnrc_nr_tx AND rownum<=1)
where prod_gnrc_nr_tx=rec.prod_gnrc_nr_tx;--Changes made by Lakshmi as part of CR96944
--DBMS_OUTPUT.PUT_LINE('Rows udpated: '||sql%rowcount);
SELECT assoc_pl_cd INTO temp_var FROM gt_max_pl WHERE prod_gnrc_nr_tx=rec.prod_gnrc_nr_tx;
--DBMS_OUTPUT.PUT_LINE('PL CODE UDPATED: '||temp_var);
COMMIT;
--Changed gt.prod_gnrc_nr_tx to rec.prod_gnrc_nr_tx
--DBMS_OUTPUT.PUT_LINE('No of rows updated for NULL Prod Line Code: '||sql%rowcount);
END LOOP;
EXCEPTION
WHEN OTHERS THEN
--DBMS_OUTPUT.PUT_LINE('ERROR: '||sqlerrm);
l_errors := 'Could not update prod lines of GT table . Error at: '||DBMS_UTILITY.FORMAT_ERROR_BACKTRACE()||' Error: '||SQLERRM;
log_default_value_errors(i_deal_creation_guid, l_errors);
END;

SELECT COUNT(*) INTO temp FROM gt_max_pl WHERE assoc_pl_cd IS NULL;
--DBMS_OUTPUT.PUT_LINE('Count of Null assoc_pl_cd: '||temp);

--Update the values of volume and value flag in GT table
Update Gt_Max_Pl Gt Set Volume_Only_Fl=(Select Decode(Val_Vol,'VOL','Y','N') From Ba_Pl_Hi Ba Where Prod_Line_Cd=Gt.Assoc_Pl_Cd),
                         Value_Only_Fl=(SELECT DECODE(val_vol,'VAL','Y','N') From Ba_Pl_Hi Ba Where Prod_Line_Cd=Gt.Assoc_Pl_Cd);
--dbms_output.PUT_LINE('No of rows updated in GT_MAX_PL table: '||sql%ROWCOUNT);


         IF l_split_deal_fl='Y' THEN
        split_value_volume_products (IN_deal_creation_guid);
        /* Changes made by Lakshmi on 11/17/2014:
        Issue: CR:176624- [Channel][Regression] Failed to generate deal for some quote.
                Deal creation fail, Eclipse Error Messages
                Duplicate LineItem SKU='BD506AAE', OptCD=''; ; Duplicate LineItem SKU='UR520E', OptCD=''; ;
                Overall split deal creation failed due to creation failure of constituent deal.; ; ceived a zero deal from Eclipse.
        Fix: Added DISTINCT keyword to remove duplicate PNs.
        */
        OPEN out_value_refcursor FOR SELECT DISTINCT prod_gnrc_nr_tx,assoc_pl_cd FROM gt_max_pl WHERE value_only_fl='Y' ;--AND bdnetamt IS NOT NULL;
        OPEN out_volume_refcursor FOR SELECT DISTINCT prod_gnrc_nr_tx,assoc_pl_cd FROM gt_max_pl WHERE volume_only_fl='Y' ;--AND bdnetamt IS NOT NULL;
        OPEN out_error_messages FOR SELECT NULL FROM DUAL;
        --ELSIF ((l_vo

    ELSE
            OPEN out_value_refcursor FOR SELECT NULL FROM DUAL;
            OPEN out_volume_refcursor FOR SELECT NULL FROM DUAL;
             OPEN out_error_messages FOR SELECT NULL FROM DUAL;
            END IF;


BEGIN
    SELECT deal_default_duration_days INTO out_deal_default_duration_days FROM bus_model
    WHERE bus_model_cd= out_default_bus_model_cd
    AND country_cd=l_countrycd
    AND tenantid = out_deal_tenantid ---Added for SMO Changes
    AND active_fl='Y';
 EXCEPTION
  WHEN OTHERS THEN
    l_errors            := ' Deal end date could not be determined for the given bus model and country code'||sqlerrm;
    l_msg_type          :='ERROR';
END;

COMMIT;

COMMIT;
EXCEPTION
WHEN TEMP_TABLE_FAILURE THEN
    l_errors := 'Error occured while getting default values, line nr: '||DBMS_UTILITY.FORMAT_ERROR_BACKTRACE()||' Error message: '||sqlerrm;
    log_default_value_errors ( i_deal_creation_Guid, l_errors);

WHEN OTHERS THEN
l_errors := 'Error occured while getting default values, line nr: '||DBMS_UTILITY.FORMAT_ERROR_BACKTRACE()||' Error message: '||sqlerrm;
log_default_value_errors ( i_deal_creation_Guid, l_errors);

END get_default_values_new;


PROCEDURE GET_DEFAULT_BM (
   i_ENGAGEMENT_MODEL  IN  DEFAULT_BM.ENGAGEMENT_MODEL%TYPE
  ,i_COUNTRY_CD  IN DEFAULT_BM.COUNTRY_CD%TYPE   default null
  ,i_REGION_CD  IN DEFAULT_BM.REGION_CD%TYPE     default null
  ,i_LEAD_BUS_GRP IN  DEFAULT_BM.LEAD_BUS_GRP%TYPE     default null
  ,i_BUS_UNIT_CD IN  DEFAULT_BM.BUS_UNIT_CD%TYPE     default null
  ,i_PROD_LINE_CD IN DEFAULT_BM.PROD_LINE_CD%TYPE     default null
  ,i_VALUE_ONLY_FL IN  DEFAULT_BM.VALUE_ONLY_FL%TYPE     default null
  ,i_VOLUME_ONLY_FL IN  DEFAULT_BM.VOLUME_ONLY_FL%TYPE    default null
  ,i_Deal_Has_CTO_Config_Fl  IN   DEFAULT_BM.Deal_Has_CTO_Config_Fl%TYPE     default null
  ,i_tenantid IN DEFAULT_BM.tenantid%type---Added for SMO changes
  , i_source_asset_id IN edms_source_asset.source_asset_id%TYPE --Added for US-9408 --> Encore Retirement  
  , o_DEFAULT_BUS_MODEL    OUT  DEFAULT_BM.DEFAULT_BUS_MODEL%TYPE
   , o_EXCEPTION_CD OUT  DEFAULT_BM.EXCEPTION_CD%TYPE
  ,o_VALUE_SPLIT_BM_CODE OUT  DEFAULT_BM.VALUE_SPLIT_BM_CODE%TYPE
  ,o_VOLUME_SPLIT_BM_CODE  OUT  DEFAULT_BM.VOLUME_SPLIT_BM_CODE%TYPE
  , o_data_found_rowid OUT ROWID
 )
 IS

l_ENGAGEMENT_MODEL  DEFAULT_BM.ENGAGEMENT_MODEL%TYPE   ;
l_COUNTRY_CD  DEFAULT_BM.COUNTRY_CD%TYPE  ;
l_REGION_CD  DEFAULT_BM.REGION_CD%TYPE   ;
l_LEAD_BUS_GRP  DEFAULT_BM.LEAD_BUS_GRP%TYPE   ;
l_BUS_UNIT_CD  DEFAULT_BM.BUS_UNIT_CD%TYPE   ;
l_PROD_LINE_CD  DEFAULT_BM.PROD_LINE_CD%TYPE   ;
l_VALUE_ONLY_FL  DEFAULT_BM.VALUE_ONLY_FL%TYPE  ;
l_VOLUME_ONLY_FL  DEFAULT_BM.VOLUME_ONLY_FL%TYPE   ;
l_Deal_Has_CTO_Config_Fl    DEFAULT_BM.Deal_Has_CTO_Config_Fl%TYPE    ;
l_source_asset_id edms_source_asset.source_asset_id%TYPE; --Added for US-9408 --> Encore Retirement  


o_ENGAGEMENT_MODEL  DEFAULT_BM.ENGAGEMENT_MODEL%TYPE   ;
o_COUNTRY_CD  DEFAULT_BM.COUNTRY_CD%TYPE  ;
o_REGION_CD  DEFAULT_BM.REGION_CD%TYPE   ;
o_LEAD_BUS_GRP  DEFAULT_BM.LEAD_BUS_GRP%TYPE   ;
o_BUS_UNIT_CD  DEFAULT_BM.BUS_UNIT_CD%TYPE   ;
o_PROD_LINE_CD  DEFAULT_BM.PROD_LINE_CD%TYPE   ;
o_VALUE_ONLY_FL  DEFAULT_BM.VALUE_ONLY_FL%TYPE  ;
o_VOLUME_ONLY_FL  DEFAULT_BM.VOLUME_ONLY_FL%TYPE   ;
o_Deal_Has_CTO_Config_Fl    DEFAULT_BM.Deal_Has_CTO_Config_Fl%TYPE    ;

BEGIN

 IF i_ENGAGEMENT_MODEL is NULL
   THEN dbms_output.put_line ('Invalid :ENGAGEMENT_MODEL - should not be null '   );
   GOTO END_ROUTINE;
 ELSE l_ENGAGEMENT_MODEL :=   i_ENGAGEMENT_MODEL ;
 END IF ;
 
 --Added for US-9408 --> Encore Retirement  
 IF i_source_asset_id is NULL
   THEN dbms_output.put_line ('Invalid :Source Asset - should not be null '   );
   GOTO END_ROUTINE;
 ELSE l_source_asset_id :=   i_source_asset_id ;
 END IF ;


IF i_COUNTRY_CD is NULL THEN  l_COUNTRY_CD := '*' ;  ELSE  l_COUNTRY_CD := i_COUNTRY_CD ;  END IF;
IF i_REGION_CD is NULL THEN  l_REGION_CD := '*' ; ELSE l_REGION_CD := i_REGION_CD ;  END IF;
IF i_LEAD_BUS_GRP is NULL THEN  l_LEAD_BUS_GRP := '*'; ELSE l_LEAD_BUS_GRP := i_LEAD_BUS_GRP ;  END IF;
IF i_BUS_UNIT_CD is NULL THEN  l_BUS_UNIT_CD := '*' ;  ELSE l_BUS_UNIT_CD  := i_BUS_UNIT_CD ;  END IF;
IF i_PROD_LINE_CD is NULL THEN  l_PROD_LINE_CD := '*' ; ELSE  l_PROD_LINE_CD := i_PROD_LINE_CD ;  END IF;
IF i_VALUE_ONLY_FL is NULL THEN  l_VALUE_ONLY_FL := '*' ; ELSE  l_VALUE_ONLY_FL := i_VALUE_ONLY_FL ;  END IF;
IF i_VOLUME_ONLY_FL is NULL THEN  l_VOLUME_ONLY_FL := '*' ; ELSE  l_VOLUME_ONLY_FL := i_VOLUME_ONLY_FL ; END IF;
IF i_Deal_Has_CTO_Config_Fl is NULL THEN  l_Deal_Has_CTO_Config_Fl  := '*'; ELSE  l_Deal_Has_CTO_Config_Fl := i_Deal_Has_CTO_Config_Fl ; END IF;


BEGIN

SELECT
 DEFAULT_BUS_MODEL ,
 ENGAGEMENT_MODEL  ,
 COUNTRY_CD ,
 REGION_CD ,
 LEAD_BUS_GRP ,
 BUS_UNIT_CD ,
 PROD_LINE_CD ,
 VALUE_ONLY_FL ,
 VOLUME_ONLY_FL ,
 Deal_Has_CTO_Config_Fl   ,
EXCEPTION_CD ,
VALUE_SPLIT_BM_CODE ,
VOLUME_SPLIT_BM_CODE ,
row_id
INTO  o_DEFAULT_BUS_MODEL ,
  o_ENGAGEMENT_MODEL  ,
  o_COUNTRY_CD ,
  o_REGION_CD ,
  o_LEAD_BUS_GRP ,
  o_BUS_UNIT_CD ,
  o_PROD_LINE_CD ,
  o_VALUE_ONLY_FL ,
  o_VOLUME_ONLY_FL ,
  o_Deal_Has_CTO_Config_Fl ,
  o_EXCEPTION_CD ,
  o_VALUE_SPLIT_BM_CODE,
  o_VOLUME_SPLIT_BM_CODE  ,
   o_data_found_rowid
 FROM
 (SELECT TEST_CONDITION, C.DEFAULT_BUS_MODEL ,
 C.ENGAGEMENT_MODEL  ,
 C.COUNTRY_CD ,
 C.REGION_CD ,
 C.LEAD_BUS_GRP ,
 C.BUS_UNIT_CD ,
 C.PROD_LINE_CD ,
 C.VALUE_ONLY_FL ,
 C.VOLUME_ONLY_FL ,
 C.Deal_Has_CTO_Config_Fl   ,
C.EXCEPTION_CD ,
C.VALUE_SPLIT_BM_CODE ,
C.VOLUME_SPLIT_BM_CODE ,
C.rowid as row_id
, C.source_asset_id AS source_asset_id --Added for US-9408 --> Encore Retirement  
   FROM  DEFAULT_BM  C  ,  (
SELECT   distinct TEST_CONDITION,
      ENGAGEMENT_MODEL,
      COUNTRY_CD, REGION_CD, LEAD_BUS_GRP,
      BUS_UNIT_CD, PROD_LINE_CD, VALUE_ONLY_FL,
      VOLUME_ONLY_FL, Deal_Has_CTO_Config_Fl,
      Tenantid --added for SMO
      ,source_asset_id --Added for US-9408 --> Encore Retirement  
FROM
 (
 select     distinct   dense_rank() over (  order by
    DECODE (UPPER(a.ENGAGEMENT_MODEL)  , UPPER(i_ENGAGEMENT_MODEL)  , 1, 0 ) +
    DECODE (a.COUNTRY_CD  , nvl(i_COUNTRY_CD ,' ')  , 1, 0 ) +
    DECODE (a.REGION_CD  , nvl(i_REGION_CD ,' ') , 1, 0 ) +
    DECODE (a.LEAD_BUS_GRP  , nvl(i_LEAD_BUS_GRP , ' ')  , 1, 0 ) +
    DECODE (a.BUS_UNIT_CD  , nvl(i_BUS_UNIT_CD , ' ')   , 1, 0 ) +
    DECODE (a.PROD_LINE_CD  , nvl(i_PROD_LINE_CD , ' ')  , 1, 0 ) +
    DECODE (a.VALUE_ONLY_FL  , nvl(i_VALUE_ONLY_FL, ' ') , 1, 0 ) +
    DECODE (a.VOLUME_ONLY_FL  , nvl(i_VOLUME_ONLY_FL , ' ') , 1, 0 ) +
    DECODE (a.Deal_Has_CTO_Config_Fl , nvl(i_Deal_Has_CTO_Config_Fl , ' ') , 1, 0 ) +
    DECODE (a.source_asset_id , nvl(i_source_asset_id , ' ') , 1, 0 )--Added for US-9408 --> Encore Retirement  
   desc)     TEST_CONDITION
 ,  a.ENGAGEMENT_MODEL
 ,DECODE (a.COUNTRY_CD , l_COUNTRY_CD  ,a.COUNTRY_CD , '*')  COUNTRY_CD
 ,DECODE (a.REGION_CD , l_REGION_CD  , a.REGION_CD , '*')  REGION_CD
 ,DECODE (a.LEAD_BUS_GRP , l_LEAD_BUS_GRP  , a.LEAD_BUS_GRP , '*')  LEAD_BUS_GRP
 ,DECODE (a.BUS_UNIT_CD , l_BUS_UNIT_CD  , a.BUS_UNIT_CD , '*')  BUS_UNIT_CD
 ,DECODE (a.PROD_LINE_CD , l_PROD_LINE_CD  , a.PROD_LINE_CD , '*')  PROD_LINE_CD
 ,DECODE (a.VALUE_ONLY_FL , l_VALUE_ONLY_FL  , a.VALUE_ONLY_FL , '*')  VALUE_ONLY_FL
 ,DECODE (a.VOLUME_ONLY_FL , l_VOLUME_ONLY_FL  , a.VOLUME_ONLY_FL , '*')  VOLUME_ONLY_FL
 ,DECODE (a.Deal_Has_CTO_Config_Fl , l_Deal_Has_CTO_Config_Fl , a.Deal_Has_CTO_Config_Fl , '*')  Deal_Has_CTO_Config_Fl
 ,TENANTID --Added for SMO Changes
 ,DECODE (a.source_asset_id , l_source_asset_id , a.source_asset_id , '*')  source_asset_ID --Added for US-9408 --> Encore Retirement  
 from default_bm  a
  where
     UPPER(a.ENGAGEMENT_MODEL)  = UPPER(l_ENGAGEMENT_MODEL)   AND
   (a.COUNTRY_CD  =  l_COUNTRY_CD OR
    a.REGION_CD  =  l_REGION_CD  OR
    a.LEAD_BUS_GRP  =  l_LEAD_BUS_GRP OR
    a.BUS_UNIT_CD  = l_BUS_UNIT_CD OR
    a.PROD_LINE_CD  =  l_PROD_LINE_CD OR
    a.VALUE_ONLY_FL  =  l_VALUE_ONLY_FL  OR
    a.VOLUME_ONLY_FL  =  l_VOLUME_ONLY_FL OR
    a.Deal_Has_CTO_Config_Fl = l_Deal_Has_CTO_Config_Fl  
    OR a.source_asset_id = l_source_asset_id  )
 )  ) T
WHERE
UPPER(C.ENGAGEMENT_MODEL) = UPPER(T.ENGAGEMENT_MODEL) AND
C.COUNTRY_CD = T.COUNTRY_CD AND
C.REGION_CD = T.REGION_CD AND
C.LEAD_BUS_GRP = T.LEAD_BUS_GRP AND
C.BUS_UNIT_CD = T.BUS_UNIT_CD AND
C.PROD_LINE_CD = T.PROD_LINE_CD AND
C.VALUE_ONLY_FL = T.VALUE_ONLY_FL AND
C.VOLUME_ONLY_FL = T.VOLUME_ONLY_FL AND
C.ACTIVE_FL = 'Y' AND
C.Deal_Has_CTO_Config_Fl =    T.Deal_Has_CTO_Config_Fl AND
C.tenantid =T.tenantid AND  ---Added for SMO Changes
C.tenantid = i_tenantid  --added for SMO changes
AND C.source_asset_id = i_source_asset_id --Added for US-9408 --> Encore Retirement  
order by  test_condition  ,
decode ( VALUE_ONLY_FL , 'Y' , 1, 'N' , 2 , '*' , 4)  +  decode ( VOLUME_ONLY_FL  , 'Y' , 1, 'N' , 2 , '*' , 4) )
where rownum <= 1 ;
EXCEPTION
WHEN NO_DATA_FOUND
  THEN dbms_output.put_line ('NO DATA FOUND'   || L_ENGAGEMENT_MODEL );
  WHEN OTHERS
  THEN dbms_output.put_line ('Other Error : '      );

END;

<<END_ROUTINE>>
           NULL;

END GET_DEFAULT_BM;



PROCEDURE  GET_DEFAULT_ROUTING_INDICATOR (
  i_ENGAGEMENT_MODEL  IN  DEFAULT_BM.ENGAGEMENT_MODEL%TYPE
  ,  i_REGION_CD  IN DEFAULT_ROUTING_INDICATOR.REGION_CD%TYPE     default null
  ,i_COUNTRY_CD  DEFAULT_ROUTING_INDICATOR.COUNTRY_CD%TYPE
  ,i_BUS_MODEL_CD  IN  DEFAULT_ROUTING_INDICATOR.BUS_MODEL_CD%TYPE     default null
  ,i_CUST_SEG_CD   IN  DEFAULT_ROUTING_INDICATOR.CUST_SEG_CD%TYPE     default null
  ,i_tenantid IN DEFAULT_ROUTING_INDICATOR.TENANTID%TYPE---Added for SMO changes
  , o_Routing_Ind    OUT DEFAULT_ROUTING_INDICATOR.ROUTING_INDICATOR_CD%TYPE
 )
 IS

l_ENGAGEMENT_MODEL  DEFAULT_BM.ENGAGEMENT_MODEL%TYPE   ;
l_COUNTRY_CD  DEFAULT_ROUTING_INDICATOR.COUNTRY_CD%TYPE  ;
l_REGION_CD  DEFAULT_ROUTING_INDICATOR.REGION_CD%TYPE   ;
l_CUST_SEG_CD  DEFAULT_ROUTING_INDICATOR.CUST_SEG_CD%TYPE   ;
l_BUS_MODEL_CD  DEFAULT_ROUTING_INDICATOR.BUS_MODEL_CD%TYPE   ;

o_ENGAGEMENT_MODEL  DEFAULT_BM.ENGAGEMENT_MODEL%TYPE   ;
o_COUNTRY_CD  DEFAULT_ROUTING_INDICATOR.COUNTRY_CD%TYPE  ;
o_REGION_CD  DEFAULT_ROUTING_INDICATOR.REGION_CD%TYPE   ;
o_CUST_SEG_CD  DEFAULT_ROUTING_INDICATOR.CUST_SEG_CD%TYPE   ;
o_BUS_MODEL_CD  DEFAULT_ROUTING_INDICATOR.BUS_MODEL_CD%TYPE   ;

BEGIN

 IF i_REGION_CD  is NULL
   THEN dbms_output.put_line ('Invalid :REGION_CD  - should not be null '   );
   GOTO END_ROUTINE;
 ELSE l_REGION_CD  :=   i_REGION_CD  ;
 END IF ;

IF i_ENGAGEMENT_MODEL is NULL THEN  l_ENGAGEMENT_MODEL := '*' ;  ELSE  l_ENGAGEMENT_MODEL := i_ENGAGEMENT_MODEL ;  END IF;
IF i_COUNTRY_CD is NULL THEN  l_COUNTRY_CD := '*' ;  ELSE  l_COUNTRY_CD := i_COUNTRY_CD ;  END IF;
IF i_CUST_SEG_CD is NULL THEN  l_CUST_SEG_CD := '*'; ELSE l_CUST_SEG_CD := i_CUST_SEG_CD ;  END IF;
IF i_BUS_MODEL_CD is NULL THEN  l_BUS_MODEL_CD := '*' ;  ELSE l_BUS_MODEL_CD  := i_BUS_MODEL_CD ;  END IF;

BEGIN

SELECT
 ROUTING_INDICATOR_CD,
 ENGAGEMENT_MODEL  ,
 COUNTRY_CD ,
 REGION_CD ,
 CUST_SEG_CD ,
 BUS_MODEL_CD
INTO  o_Routing_Ind ,
o_ENGAGEMENT_MODEL  ,
 o_COUNTRY_CD ,
 o_REGION_CD ,
 o_CUST_SEG_CD ,
 o_BUS_MODEL_CD
 FROM
 (SELECT TEST_CONDITION, ROUTING_INDICATOR_CD ,
 C.ENGAGEMENT_MODEL  ,
 C.COUNTRY_CD ,
 C.REGION_CD ,
 C.CUST_SEG_CD ,
 C.BUS_MODEL_CD
   FROM  DEFAULT_ROUTING_INDICATOR  C  ,  (
SELECT   distinct TEST_CONDITION,
      ENGAGEMENT_MODEL  , COUNTRY_CD, REGION_CD, CUST_SEG_CD,
      BUS_MODEL_CD
      ,tenantid ---Added for SMO changes
FROM
 (
 select     distinct   dense_rank() over (  order by
    DECODE (a.REGION_CD  , nvl(i_REGION_CD ,' ') , 4, 0 ) +
    DECODE (upper(a.ENGAGEMENT_MODEL)  , nvl(upper(i_ENGAGEMENT_MODEL) ,' ') , 1, 0 ) +
    DECODE (a.COUNTRY_CD  , nvl(i_COUNTRY_CD ,' ')  , 1, 0 ) +
    DECODE (a.CUST_SEG_CD  , nvl(i_CUST_SEG_CD , ' ')  , 1, 0 ) +
    DECODE (a.BUS_MODEL_CD  , nvl(i_BUS_MODEL_CD , ' ')   , 1, 0 )
    desc)     TEST_CONDITION
 ,  a.REGION_CD
  ,DECODE ( upper(a.ENGAGEMENT_MODEL) , upper(l_ENGAGEMENT_MODEL ),   a.ENGAGEMENT_MODEL  , '*')  ENGAGEMENT_MODEL
 ,DECODE (a.COUNTRY_CD , l_COUNTRY_CD  ,a.COUNTRY_CD , '*')  COUNTRY_CD
 ,DECODE (a.CUST_SEG_CD , l_CUST_SEG_CD  , a.CUST_SEG_CD , '*')  CUST_SEG_CD
 ,DECODE (a.BUS_MODEL_CD , l_BUS_MODEL_CD  , a.BUS_MODEL_CD , '*')  BUS_MODEL_CD
 ,tenantid ---Added for SMO changes
 from DEFAULT_ROUTING_INDICATOR  a
  where
     ( a.REGION_CD = l_REGION_CD   )  AND
     ( upper( a.ENGAGEMENT_MODEL)  in ( upper( l_ENGAGEMENT_MODEL) , '*')   OR  -- Chau Add * checking
        a.COUNTRY_CD  in (  l_COUNTRY_CD , '*' ) OR
        a.CUST_SEG_CD  in (  l_CUST_SEG_CD , '*' ) OR
    a.BUS_MODEL_CD  in ( l_BUS_MODEL_CD , '*') )
)  ) T
WHERE
C.ENGAGEMENT_MODEL  =  T.ENGAGEMENT_MODEL  AND
C.REGION_CD = T.REGION_CD  AND
C.COUNTRY_CD = T.COUNTRY_CD AND
C.CUST_SEG_CD = T.CUST_SEG_CD AND
C.BUS_MODEL_CD = T.BUS_MODEL_CD  AND
C.ACTIVE_FL = 'Y'
AND C.TENANTID =T.TENANTID   ----Added for SMO Changes
AND C.TENANTID in(I_TENANTID,'HPQ')   ----Added for SMO changes
order by  test_condition
)
where rownum <= 1 ;
EXCEPTION
WHEN NO_DATA_FOUND
  THEN
  dbms_output.put_line ('No Data Found error raised: '  );
  o_Routing_Ind  := 'EMRG';
  WHEN OTHERS
  THEN --dbms_output.put_line ('Other Error : '      );
  o_Routing_Ind := 'EMRG';
END;
/*
DBMS_OUTPUT.PUT_LINE ('Input value/Default used/Final used for ENGAGEMENT_MODEL is ' || i_ENGAGEMENT_MODEL || '/' || l_ENGAGEMENT_MODEL || '/' || o_ENGAGEMENT_MODEL );
DBMS_OUTPUT.PUT_LINE ('Input value/Default used/Final used for COUNTRY_CD is ' || i_COUNTRY_CD || '/' || l_COUNTRY_CD || '/' || o_COUNTRY_CD );
DBMS_OUTPUT.PUT_LINE ('Input value/Default used/Final used for REGION_CD is ' || i_REGION_CD || '/' || l_REGION_CD || '/' || o_REGION_CD );
DBMS_OUTPUT.PUT_LINE ('Input value/Default used/Final used for CUST_SEG_CD is ' || i_CUST_SEG_CD  || '/' || l_CUST_SEG_CD  || '/' || o_CUST_SEG_CD  );
DBMS_OUTPUT.PUT_LINE ('Input value/Default used/Final used for BUS_MODEL_CD is ' || i_BUS_MODEL_CD || '/' || l_BUS_MODEL_CD || '/' || o_BUS_MODEL_CD );

DBMS_OUTPUT.PUT_LINE ('The Default RI_CD   is ' ||    o_Routing_Ind    );
*/
<<END_ROUTINE>>
           NULL;

END GET_DEFAULT_ROUTING_INDICATOR;
FUNCTION GET_DEFAULT_EMP_NR_FROM_EMAIL (IN_won_lost_emp_email   IN VARCHAR2,
                                      l_control_cntry_cd IN VARCHAR2,
                                      l_region_cd IN VARCHAR2,
                                      l_rtm IN VARCHAR2,
                                      l_source_asset_id IN VARCHAR2--Added for US-9408 --> Encore Retirement  
                                        )
   RETURN NUMBER
IS
   return_INIT_HP_EMP_NR   NUMBER;
   --l_control_cntry_cd deal.control_cntry_cd%TYPE;
   --l_region deal.region%TYPE;
BEGIN
    SELECT init_hp_emp_nr
    INTO return_INIT_HP_EMP_NR
    FROM default_bmi_employee demp
    WHERE(demp.country_cd=L_control_cntry_cd or demp.country_cd='*')
    AND demp.region_cd=L_region_cd
    AND UPPER(demp.route_to_market) = UPPER(l_rtm)
    AND source_asset_ID =l_source_asset_id --Added for US-9408 --> Encore Retirement  
    AND (  UPPER(in_won_lost_emp_email)  IN (SELECT UPPER(dc_email)
                                    FROM default_bmi_employee WHERE (country_cd=l_control_cntry_cd OR country_cd='*')
                                                                          AND UPPER(route_to_market)=UPPER(l_rtm)
                                                                          AND region_cd=l_region_CD 
                                                                          AND source_asset_ID =l_source_asset_id --Added for US-9408 --> Encore Retirement  
                                                                          )
             OR UPPER(in_won_lost_emp_email)  IN (SELECT UPPER(sr_email)
                                    FROM default_bmi_employee WHERE (country_cd=l_control_cntry_cd OR country_cd='*')
                                                                          AND UPPER(route_to_market)=UPPER(l_rtm)
                                                                          AND region_cd=l_region_CD 
                                                                          AND source_asset_ID =l_source_asset_id --Added for US-9408 --> Encore Retirement  
                                                                          )
            OR UPPER(in_won_lost_emp_email)  IN (SELECT UPPER(dl_email)
                                    FROM default_bmi_employee WHERE (country_cd=l_control_cntry_cd OR country_cd='*')
                                                                           AND UPPER(route_to_market)=UPPER(l_rtm)
                                                                           AND region_cd=l_region_CD 
                                                                           AND source_asset_ID =l_source_asset_id --Added for US-9408 --> Encore Retirement  
                                                                           )
        OR UPPER(in_won_lost_emp_email)  IN (SELECT UPPER(dm_email)
                                    FROM default_bmi_employee WHERE (country_cd=l_control_cntry_cd OR country_cd='*')
                                                                           AND UPPER(route_to_market)=UPPER(l_rtm)
                                                                           AND region_cd=l_region_CD 
                                                                            AND source_asset_ID =l_source_asset_id --Added for US-9408 --> Encore Retirement  
                                                                           )
                                                                            )
    and ROWNUM<2;
RETURN return_INIT_HP_EMP_NR;
EXCEPTION
WHEN OTHERS THEN
return 0;
END GET_DEFAULT_EMP_NR_FROM_EMAIL;

PROCEDURE send_mail(
i_from_address VARCHAR2,
i_to_address VARCHAR2,
i_email_subject VARCHAR2,
i_email_body VARCHAR2,
i_receipents VARCHAR2,
o_vError OUT VARCHAR2)
IS
recipient     QUOTE_QUEUE.RECIPIENT_LIST%type; -- by harsh Shah 11/19/2014
mailhost      VARCHAR2 (30); --:= 'SMTP-AMERICAS.HP.COM'; --Commented  the server name to get the name from app configs.
sender        eclp_email_template.email_from_id%TYPE;
--recipient     eclp_email_template.email_from_id%TYPE;
message       eclp_email_template.EMAIL_BODY_TX%TYPE;
subject       eclp_email_template.EMAIL_SUBJECT_TX%TYPE;
HEADER        VARCHAR2 (1000);
crlf          VARCHAR2 (2) := UTL_TCP.CRLF;
vUserEmail    QUOTE_QUEUE.RECIPIENT_LIST%type; -- by harsh Shah 11/19/2014 --EMPLOYEE.EMAIL_UNIX_ADDR_TX%TYPE;
connection    UTL_SMTP.connection;
--vError VARCHAR2(3000);
l_count number(10);
BEGIN
----Added to get the SMTP_SERVER from app configs
SELECT AUTO_SMTP_SERVER INTO mailhost
FROM app_config;

--select app_value into mailhost
--from app_settings
--where app_name ='EDMS' and app_key='SMTP_SERVER';
dbms_output.put_line ('i_from_address: ' || i_from_address);
dbms_output.put_line ( 'Recp :' || i_receipents);
dbms_output.put_line ('email body :' || i_email_body);
dbms_output.put_line ('Subject :' || i_email_subject);
dbms_output.put_line (' Address :' || i_to_address);
dbms_output.put_line (' Mailhost  :' || mailhost);

--select length(i_receipents) into l_count from dual;

sender :=i_from_address;
recipient := i_receipents;
message := i_email_body;
subject := i_email_subject;
vUserEmail := i_to_address;


HEADER :=
            'Date: '
         || TO_CHAR (SYSDATE, 'dd Mon yy hh24:mi:ss')
         || crlf
         || 'From: '
         || sender
         || ''
         || crlf
         || 'Subject: '
         || subject
         || crlf
         || 'To: '
         || vUserEmail;

DBMS_OUTPUT.PUT_LINE ('HEADER TEXT :' || HEADER );

connection := UTL_SMTP.open_connection (mailhost, 25);
UTL_SMTP.helo (connection, mailhost);
UTL_SMTP.mail (connection, sender);
UTL_SMTP.rcpt (connection, recipient);
UTL_SMTP.open_data (connection);
UTL_SMTP.write_data (connection, 'Content-Type: text/html' || crlf);
-- WRITE THE HEADER
UTL_SMTP.write_data (connection, HEADER);
UTL_SMTP.write_data (connection, crlf || MESSAGE);
UTL_SMTP.close_data (connection);
EXCEPTION
WHEN UTL_SMTP.INVALID_OPERATION
THEN
DBMS_OUTPUT.PUT_LINE (' Invalid Operation in SMTP transaction.'||sqlerrm);
o_vError := ' Invalid Operation in SMTP transaction.' ||sqlerrm;
UTL_SMTP.close_data (connection);
WHEN UTL_SMTP.TRANSIENT_ERROR
THEN
DBMS_OUTPUT.PUT_LINE (' Temporary problems with sending email - try again later.'||sqlerrm  );
o_vError := ' Temporary problems with sending email - try again later.'||sqlerrm;
UTL_SMTP.close_data (connection);
WHEN UTL_SMTP.PERMANENT_ERROR
THEN
DBMS_OUTPUT.PUT_LINE (' Errors in code for SMTP transaction.'||sqlerrm);
o_vError := ' Errors in code for SMTP transaction.'||sqlerrm;
UTL_SMTP.close_data (connection);
WHEN OTHERS THEN
dbms_output.put_line('Sql Error:  '||sqlerrm || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE());
o_vError := sqlerrm;
UTL_SMTP.close_data (connection);
END send_mail;

FUNCTION is_reseller_b_high_risk ( i_bd_id deal.bd_id%type, i_deal_creation_guid edms_deal_error_report.deal_creation_guid%type )
RETURN VARCHAR2
IS
--by Harsh Shah CR 2624 'High Risk Reseller
--12/2/2014
--l_bd_id deal.bd_id%TYPE;
L_errors edms_deal_error_report.error_msg%type;
l_high_risk_cnt number(2):=0;

BEGIN

    --DBMS_OUTPUT.PUT_LINE ('Searching High Risk Reseller B ' || ' bd_id :' || i_bd_id);
--Identify the Resellers with HIgh Risk Flag set in Reseller Table

for rec in (
        SELECT R.RSLR_ID, R.CUST_NAME ,high_risk_fl ,PPRO_ID FROM  RESELLER R
        WHERE  EXISTS ( SELECT RSLR_ID
        FROM RSLR_B RSB  WHERE
        RSB.BD_ID=i_BD_ID
        AND RSB.RSLR_ID=R.RSLR_ID)
        AND R.HIGH_RISK_FL='Y')

LOOP

    --DBMS_OUTPUT.PUT_LINE (' High Risk Reseller B '|| REC.CUST_NAME );
    L_errors:='Reseller B : ' || rec.cust_name  || ', PPRO ID : ' || REC.PPRO_ID || ' , is marked as High Risk Reseller';
    inserterror_output_messages (i_bd_id,NULL,NULL,NULL ,NULL,NULL,NULL,NULL, NULL,NULL,l_errors,'INFO',i_deal_creation_guid,NULL,NULL,l_errors);
    L_high_risk_cnt:=l_high_risk_cnt +1;
END LOOP;

IF L_high_risk_cnt >0 then
    Return 'Y';
ELSE
    Return 'N';
END IF;

EXCEPTION
WHEN NO_DATA_FOUND THEN

L_ERRORS      := 'Error in finding High Risk Reseller B - ' || SQLCODE || ' -ERROR- ' || SQLERRM || '. Error at Line : ' || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE();
inserterror_output_messages (i_bd_id,NULL,NULL,NULL ,NULL,NULL,NULL,NULL, NULL,NULL,l_errors,'INFO',i_deal_creation_guid,NULL,NULL,l_errors);
--DBMS_OUTPUT.PUT_LINE (L_ERRORS);

--DBMS_OUTPUT.PUT_LINE (' High Risk Reseller B eRROR ');
Return 'N';
WHEN OTHERS THEN

    --DBMS_OUTPUT.PUT_LINE (' High Risk Reseller B eRROR ');
L_ERRORS      := 'Error in finding High Risk Reseller B - ' || SQLCODE || ' -ERROR- ' || SQLERRM || '. Error at Line : ' || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE();
--DBMS_OUTPUT.PUT_LINE (L_ERRORS);
inserterror_output_messages (i_bd_id,NULL,NULL,NULL ,NULL,NULL,NULL,NULL, NULL,NULL,l_errors,'INFO',i_deal_creation_guid,NULL,NULL,l_errors);
RETURN 'N';
END is_reseller_b_high_risk;

PROCEDURE GET_DEFAULT_MC_CODE (
i_engagement_model IN default_mc_charge.engagement_model%type  ,
i_COUNTRY_CD IN   default_mc_charge.country_cd%type   default null,
i_REGION_CD  IN default_mc_charge.region_cd%type   default null,
i_bus_model_cd  IN  default_mc_charge.bus_model_cd%type   default null,
i_Deal_Value_Greater_Than  IN  default_mc_charge.Deal_Value_Greater_Than%type  default null ,
i_Customer_Segment IN default_mc_charge.customer_segment%TYPE DEFAULT NULL,
i_Rebate_Type IN default_mc_charge.Rebate_Type%type  default null,
i_LEAD_bus_grp   IN default_mc_charge.lead_bus_grp%type    default null,
i_piu_flag   IN default_mc_charge.piu_flag%type   default null,
i_Deal_Has_CTO_Config_Fl IN   default_mc_charge.Deal_Has_CTO_Config_Fl%type   default null,
i_only_bu_exists_on_deal default_mc_charge.only_bu_exists_on_deal%type default null,
i_lead_bus_unit_cd IN default_mc_charge.lead_bus_unit_cd%TYPE DEFAULT NULL, -- New parameter added by Lakshmi for CR:180261 - To consider Lead Bus Unit while deriving Default MC Charge.
i_tenantid IN default_mc_charge.tenantid%type, ---Added for SMO Changes
i_source_asset_id IN edms_source_asset.source_asset_id%TYPE, --Added for US-9408 --> Encore Retirement
o_MC_CHARGE   OUT default_mc_charge.mc_charge%type
)

-- Test Value: Reseller, FR, EU, CH 0
IS

l_engagement_model default_mc_charge.engagement_model%type  ;

l_COUNTRY_CD  default_mc_charge.country_cd%type ;
l_REGION_CD  default_mc_charge.region_cd%type;
l_bus_model_cd  default_mc_charge.bus_model_cd%type;
l_Deal_Value_Greater_Than   default_mc_charge.Deal_Value_Greater_Than%type;
l_Customer_Segment  default_mc_charge.customer_segment%type;
l_Rebate_Type default_mc_charge.Rebate_Type%type ;
l_LEAD_bus_grp   default_mc_charge.lead_bus_grp%type;
l_piu_flag   default_mc_charge.piu_flag%type ;
l_only_bu_exists_on_deal default_mc_charge.only_bu_exists_on_deal%type;
l_lead_bus_unit_cd default_mc_charge.lead_bus_unit_cd%TYPE; --New parameter added by Lakshmi for CR:180261- To consider Lead Bus Unit while deriving Default MC Charge.
l_Deal_Has_CTO_Config_Fl   default_mc_charge.Deal_Has_CTO_Config_Fl%type ;
l_source_asset_id  edms_source_asset.source_asset_id%type ; --Added for US-9408 --> Encore Retirement
l_MC_CHARGE   default_mc_charge.mc_charge%type ;

o_engagement_model default_mc_charge.engagement_model%type  ;
o_COUNTRY_CD  default_mc_charge.country_cd%type ;
o_REGION_CD  default_mc_charge.region_cd%type;
o_bus_model_cd  default_mc_charge.bus_model_cd%type;
o_Deal_Value_Greater_Than   default_mc_charge.Deal_Value_Greater_Than%type;
o_Customer_Segment  default_mc_charge.customer_segment%type;
o_Rebate_Type default_mc_charge.Rebate_Type%type ;
o_LEAD_bus_grp   default_mc_charge.lead_bus_grp%type;
o_piu_flag   default_mc_charge.piu_flag%type ;
o_Deal_Has_CTO_Config_Fl   default_mc_charge.Deal_Has_CTO_Config_Fl%type ;
o_only_bu_exists_on_deal default_mc_charge.only_bu_exists_on_deal%type;
o_lead_bus_unit_cd default_mc_charge.lead_bus_unit_cd%TYPE ; --Added by Lakshmi for CR:180261- To consider Lead Bus Unit while deriving Default MC Charge.

 BEGIN
 --DBMS_OUTPUT.PUT_LINE('i_Deal_Value_Greater_Than: '||i_Deal_Value_Greater_Than);
 IF i_ENGAGEMENT_MODEL is NULL
   THEN dbms_output.put_line ('Invalid :ENGAGEMENT_MODEL - should not be null '   );
   GOTO END_ROUTINE;
 ELSE l_ENGAGEMENT_MODEL :=    i_ENGAGEMENT_MODEL  ;
 END IF ;
 
 --Added for US-9408 --> Encore Retirement
 IF i_source_asset_id is NULL
   THEN dbms_output.put_line ('Invalid :ENGAGEMENT_MODEL - should not be null '   );
   GOTO END_ROUTINE;
 ELSE l_source_asset_id :=    i_source_asset_id  ;
 END IF ;

IF i_COUNTRY_CD is NULL THEN  l_COUNTRY_CD := '*' ;  ELSE  l_COUNTRY_CD := i_COUNTRY_CD ;  END IF;
IF i_REGION_CD is NULL THEN  l_REGION_CD := '*' ; ELSE l_REGION_CD := i_REGION_CD ;  END IF;
IF i_BUS_MODEL_CD is NULL THEN  l_BUS_MODEL_CD := '*' ;  ELSE l_BUS_MODEL_CD  := i_BUS_MODEL_CD ;  END IF;
IF i_Deal_Value_Greater_Than  IS null THEN l_Deal_Value_Greater_Than := 0; ELSE l_Deal_Value_Greater_Than  := i_Deal_Value_Greater_Than ;    END IF;
IF i_Customer_Segment is NULL THEN  l_Customer_Segment := '*' ; ELSE  l_Customer_Segment := i_Customer_Segment ;  END IF;
IF l_Rebate_Type IS null THEN l_Rebate_Type := '*' ; ELSE l_Rebate_Type := i_Rebate_Type ; END IF;
IF i_LEAD_BUS_GRP is NULL THEN  l_LEAD_BUS_GRP := '*'; ELSE l_LEAD_BUS_GRP := i_LEAD_BUS_GRP ;  END IF;
IF i_piu_flag  IS null THEN l_piu_flag := '*' ;  ELSE l_piu_flag := i_piu_flag ; END IF;
IF i_Deal_Has_CTO_Config_Fl is NULL THEN  l_Deal_Has_CTO_Config_Fl  := '*'; ELSE  l_Deal_Has_CTO_Config_Fl := i_Deal_Has_CTO_Config_Fl ; END IF;
IF i_only_bu_exists_on_deal  is NULL THEN  l_only_bu_exists_on_deal  := '*'; ELSE  l_only_bu_exists_on_deal := i_only_bu_exists_on_deal ; END IF;
IF i_lead_bus_unit_cd  is NULL THEN  l_lead_bus_unit_cd  := '*'; ELSE  l_lead_bus_unit_cd := i_lead_bus_unit_cd ; END IF;  --Added by Lakshmi for CR:180261 - To consider Lead Bus Unit while deriving Default MC Charge.

BEGIN
 SELECT MC_CHARGE ,
             ENGAGEMENT_MODEL,
             COUNTRY_CD,
              REGION_CD,
              BUS_MODEL_CD,
              LEAD_BUS_GRP,
              REBATE_TYPE,
              CUSTOMER_SEGMENT,
              PIU_FLAG,
              Deal_Has_CTO_Config_Fl ,
              DEAL_VALUE_GREATER_THAN ,
              ONLY_BU_EXISTS_ON_DEAL,
              LEAD_BUS_UNIT_CD --Added by Lakshmi for CR:180261- To consider Lead Bus Unit while deriving Default MC Charge.
   INTO  o_MC_CHARGE   ,
              o_ENGAGEMENT_MODEL,
              o_COUNTRY_CD,
              o_REGION_CD,
              o_BUS_MODEL_CD,
              o_LEAD_BUS_GRP,
              o_REBATE_TYPE,
              o_CUSTOMER_SEGMENT,
              o_PIU_FLAG,
              o_Deal_Has_CTO_Config_Fl ,
              o_DEAL_VALUE_GREATER_THAN ,
              o_ONLY_BU_EXISTS_ON_DEAL,
              o_lead_bus_unit_cd --Added by Lakshmi for CR:180261- To consider Lead Bus Unit while deriving Default MC Charge.
              FROM
 (SELECT TEST_CONDITION, C.MC_CHARGE ,
              C.ENGAGEMENT_MODEL,
              C.COUNTRY_CD,
              C.REGION_CD,
              C.BUS_MODEL_CD,
              C.LEAD_BUS_GRP,
              C.REBATE_TYPE,
              C.CUSTOMER_SEGMENT,
              C.PIU_FLAG,
              C.Deal_Has_CTO_Config_Fl ,
              C.DEAL_VALUE_GREATER_THAN ,
              C.ONLY_BU_EXISTS_ON_DEAL,
              C.LEAD_BUS_UNIT_CD --Added by Lakshmi for CR:180261- To consider Lead Bus Unit while deriving Default MC Charge.
              ,C.SOURCE_ASSET_ID--Added for US-9408 --> Encore Retirement
  FROM  default_mc_charge C  ,  (
SELECT   distinct TEST_CONDITION,
 ENGAGEMENT_MODEL, COUNTRY_CD, REGION_CD,
   BUS_MODEL_CD, LEAD_BUS_GRP,
   REBATE_TYPE, CUSTOMER_SEGMENT,
   PIU_FLAG, Deal_Has_CTO_Config_Fl  ,  DEAL_VALUE ,ONLY_BU_EXISTS_ON_DEAL,
   LEAD_BUS_UNIT_CD,    --Added by Lakshmi for CR:180261- To consider Lead Bus Unit while deriving Default MC Charge.
   TENANTID ---Added for SMO changes
   ,SOURCE_ASSET_ID--Added for US-9408 --> Encore Retirement
FROM
 (
 select      dense_rank() over (  order by
 DECODE( UPPER(b.ENGAGEMENT_MODEL) , UPPER(i_ENGAGEMENT_MODEL)   , 1, 0) +
  DECODE(b.COUNTRY_CD , nvl(i_COUNTRY_CD ,' ')   , 1, 0) +
  DECODE( b.REGION_CD  , nvl(i_REGION_CD  ,' ')  , 1, 0)+
  DECODE( b.BUS_MODEL_CD  , nvl(i_BUS_MODEL_CD  ,' ')   , 1, 0) +
  DECODE( b.LEAD_BUS_GRP  , nvl(i_LEAD_BUS_GRP  ,' ')   , 1, 0) +
  DECODE(  b.REBATE_TYPE  ,nvl(i_REBATE_TYPE  ,' '), 1, 0)  +
  DECODE( b.CUSTOMER_SEGMENT  ,nvl(i_CUSTOMER_SEGMENT  ,' ') , 1, 0) +
  DECODE(  b.PIU_FLAG  , nvl(i_PIU_FLAG  ,' ')   , 1, 0)  +
  DECODE( b.Deal_Has_CTO_Config_Fl   , nvl(i_Deal_Has_CTO_Config_Fl  ,' ')  , 1, 0) +
  DECODE( b.ONLY_BU_EXISTS_ON_DEAL   , nvl(I_ONLY_BU_EXISTS_ON_DEAL  ,' ')  , 1, 0) +
  DECODE( b.LEAD_BUS_UNIT_CD   , nvl(i_LEAD_BUS_UNIT_CD  ,' ')  , 1, 0) +  --Added by Lakshmi for CR:180261- To consider Lead Bus Unit while deriving Default MC Charge.
   DECODE( b.SOURCE_ASSET_ID   , nvl(i_SOURCE_ASSET_ID  ,' ')  , 1, 0) +  --Added for US-9408 --> Encore Retirement
  (CASE WHEN L_DEAL_VALUE_GREATER_THAN  >   b.DEAL_VALUE_GREATER_THAN
            and   L_DEAL_VALUE_GREATER_THAN <= nvl( b.DEAL_VALUE_LESS_THAN ,L_DEAL_VALUE_GREATER_THAN )
            THEN 1  ELSE 0
            END
   )
   desc)     TEST_CONDITION ,
   ENGAGEMENT_MODEL, COUNTRY_CD, REGION_CD,
   BUS_MODEL_CD, LEAD_BUS_GRP,
   CASE  WHEN L_DEAL_VALUE_GREATER_THAN  >   b.DEAL_VALUE_GREATER_THAN
            and   L_DEAL_VALUE_GREATER_THAN <= nvl(b.DEAL_VALUE_LESS_THAN ,  L_DEAL_VALUE_GREATER_THAN  )
            THEN  b.DEAL_VALUE_GREATER_THAN      ELSE 0
            END DEAL_VALUE ,
   REBATE_TYPE, CUSTOMER_SEGMENT,
   PIU_FLAG, Deal_Has_CTO_Config_Fl ,ONLY_BU_EXISTS_ON_DEAL,
   LEAD_BUS_UNIT_CD, --Added by Lakshmi for CR:180261- To consider Lead Bus Unit while deriving Default MC Charge.
   TENANTID ---Added for SMO changes
   ,SOURCE_ASSET_ID --Added for US-9408 --> Encore Retirement
   FROM
   (SELECT
   A.ENGAGEMENT_MODEL
  ,DECODE( a.COUNTRY_CD ,  L_COUNTRY_CD   ,  a.COUNTRY_CD , '*')   COUNTRY_CD
 , DECODE( a.REGION_CD  , L_REGION_CD   , a.REGION_CD,   '*')   REGION_CD
 , DECODE( a.bus_MODEL_CD  ,L_BUS_MODEL_CD  ,  a.BUS_MODEL_CD  , '*')  BUS_MODEL_CD
 , DECODE( a.LEAD_BUS_GRP  , L_LEAD_BUS_GRP   , a.LEAD_BUS_GRP  , '*')  LEAD_BUS_GRP
 , DECODE( a.REBATE_TYPE  ,L_REBATE_TYPE  , a.REBATE_TYPE,   '*')  REBATE_TYPE
 , DECODE( a.CUSTOMER_SEGMENT  , L_CUSTOMER_SEGMENT   , a.CUSTOMER_SEGMENT  , '*')  CUSTOMER_SEGMENT
 , DECODE( a.PIU_FLAG  , L_PIU_FLAG ,  a.PIU_FLAG  , '*')   PIU_FLAG
  ,  a.DEAL_VALUE_GREATER_THAN
 , LEAD( a.DEAL_VALUE_GREATER_THAN , 1, null  ) OVER ( PARTITION BY
         ENGAGEMENT_MODEL, COUNTRY_CD, REGION_CD,
         BUS_MODEL_CD, LEAD_BUS_GRP,   REBATE_TYPE,
         CUSTOMER_SEGMENT,
         PIU_FLAG,    Deal_Has_CTO_Config_Fl , ONLY_BU_EXISTS_ON_DEAL
         ,LEAD_BUS_UNIT_CD--Added by Lakshmi for CR:180261- To consider Lead Bus Unit while deriving Default MC Charge.
         ,SOURCE_ASSET_ID --Added for US-9408 --> Encore Retirement
         ORDER BY DEAL_VALUE_GREATER_THAN ) DEAL_VALUE_LESS_THAN
 , DECODE( a.Deal_Has_CTO_Config_Fl   ,L_Deal_Has_CTO_Config_Fl   ,  a.Deal_Has_CTO_Config_Fl   , '*') Deal_Has_CTO_Config_Fl
  , DECODE( a.ONLY_BU_EXISTS_ON_DEAL   ,L_ONLY_BU_EXISTS_ON_DEAL   ,  a.ONLY_BU_EXISTS_ON_DEAL   , '*') ONLY_BU_EXISTS_ON_DEAL
  , DECODE( a.LEAD_BUS_UNIT_CD   ,L_LEAD_BUS_UNIT_CD   ,  a.LEAD_BUS_UNIT_CD   , '*') LEAD_BUS_UNIT_CD  --Added by Lakshmi for CR:180261- To consider Lead Bus Unit while deriving Default MC Charge.
  , DECODE( a.SOURCE_ASSET_ID   ,L_LEAD_BUS_UNIT_CD   ,  a.SOURCE_ASSET_ID   , '*') SOURCE_ASSET_ID,--Added for US-9408 --> Encore Retirement
  Tenantid ----Added for SMO changes
 from  default_mc_charge a
  WHERE
  UPPER(a. ENGAGEMENT_MODEL) =    UPPER(L_ENGAGEMENT_MODEL )    AND (
  a.COUNTRY_CD  =  L_COUNTRY_CD   OR
  a.REGION_CD  =  L_REGION_CD   OR
  a.BUS_MODEL_CD  =  L_BUS_MODEL_CD  OR
  a.LEAD_BUS_GRP   =  L_LEAD_BUS_GRP  OR
  a.REBATE_TYPE  =   L_REBATE_TYPE  OR
  a.CUSTOMER_SEGMENT  =  L_CUSTOMER_SEGMENT  OR
  a.PIU_FLAG  =  L_PIU_FLAG    OR
  a.DEAL_VALUE_GREATER_THAN  <  L_DEAL_VALUE_GREATER_THAN  OR
  a.DEAL_VALUE_GREATER_THAN = 0  OR
  a.Deal_Has_CTO_Config_Fl   =  L_Deal_Has_CTO_Config_Fl OR
  a.ONLY_BU_EXISTS_ON_DEAL = L_ONLY_BU_EXISTS_ON_DEAL
   OR a.LEAD_BUS_UNIT_CD  = l_LEAD_BUS_UNIT_CD  --Added by Lakshmi for CR:180261- To consider Lead Bus Unit while deriving Default MC Charge.
   OR a.SOURCE_ASSET_ID = l_SOURCE_ASSET_ID--Added for US-9408 --> Encore Retirement
   )

 )  B  WHERE  (L_DEAL_VALUE_GREATER_THAN >   B.DEAL_VALUE_GREATER_THAN
     AND   L_DEAL_VALUE_GREATER_THAN <=   NVL(B.DEAL_VALUE_LESS_THAN ,L_DEAL_VALUE_GREATER_THAN) )
     OR  B.DEAL_VALUE_GREATER_THAN  = 0  )  ) T
WHERE
  UPPER(C.ENGAGEMENT_MODEL)  = UPPER(T.ENGAGEMENT_MODEL )  AND
  C.COUNTRY_CD  = T.COUNTRY_CD    AND
  C.REGION_CD  =T.REGION_CD   AND
  C.BUS_MODEL_CD  =T.BUS_MODEL_CD   AND
  C.LEAD_BUS_GRP   = T.LEAD_BUS_GRP   AND
  C.REBATE_TYPE  = T.REBATE_TYPE  AND
  C.CUSTOMER_SEGMENT  = T.CUSTOMER_SEGMENT   AND
  C.PIU_FLAG  = T.PIU_FLAG AND
  C.DEAL_VALUE_GREATER_THAN  =  T.DEAL_VALUE  AND
  C.Deal_Has_CTO_Config_Fl   = T.Deal_Has_CTO_Config_Fl  AND
  C.ONLY_BU_EXISTS_ON_DEAL = T.ONLY_BU_EXISTS_ON_DEAL AND
  C.LEAD_BUS_UNIT_CD =T.LEAD_BUS_UNIT_CD AND --Added by Lakshmi for CR:180261- To consider Lead Bus Unit while deriving Default MC Charge.
  C.ACTIVE_FL='Y' AND
  C.TENANTID = T.TENANTID AND ---Added for SMO Changes
  C.TENANTID =i_tenantid ---Added for SMO Changes
  AND c.SOURCE_ASSET_ID = i_SOURCE_ASSET_ID --Added for US-9408 --> Encore Retirement
  ORDER BY TEST_CONDITION )
  where rownum = 1 ;
   --dbms_output.put_line ('mc_charge_code: ' || o_mc_charge );
EXCEPTION
WHEN NO_DATA_FOUND
  THEN dbms_output.put_line ('NO DATA: '  || L_ENGAGEMENT_MODEL  );
  WHEN OTHERS
  THEN dbms_output.put_line ('Other Error : '      );
END;
<<END_ROUTINE>>
           NULL;
END GET_DEFAULT_MC_CODE;
--by Harsh Shah 01/23/2015
FUNCTION FILL_TEMP_TABLES (I_GUID VARCHAR2,i_xmlnamespace VARCHAR2)
RETURN VARCHAR2
IS

vcount number (10);
l_add_PNs varchar2(1):='Y';
l_add_bundles varchar2(1):='Y';
--type line_item_tab is table of GT_XML_LINE_ITEM%rowtype;
 type bundle_tab is table of GT_XML_BUNDLE%rowtype;
 type bundle_line_tab is table of GT_XML_BUNDLE_Line%rowtype;
 --l_line_item_tab line_item_tab;
 l_bundle_tab bundle_tab;
l_bundle_line_tab bundle_line_tab;

BEGIN

select count(*) into vcount from eclipse.GT_XML_LINE_ITEM where guid=i_guid and rownum <2;
if vcount >0 then
                l_add_pns:='N';
                VCOUNT:=0;
DBMS_OUTPUT.PUT_LINE (' Add PNs : ' ||l_add_pns );
end if;

select count(*) into vcount from eclipse.GT_XML_BUNDLE where guid=i_guid and rownum <2;
if vcount >0 then
                l_add_bundles:='N';
                VCOUNT:=0;
                DBMS_OUTPUT.PUT_LINE (' Add Bundles : ' ||l_add_bundles );
end if;

/*
    --delete temp table data      by Harsh Shah 30-JAN-2015
    delete from eclipse.GT_XML_BUNDLE where guid=i_guid;
    delete from eclipse.GT_XML_BUNDLE_Line where guid=i_guid;
    delete from eclipse.GT_XML_line_item where guid=i_guid;

    commit;
                */


    --dbms_OUTPUT.put_line (' temp table guid is :' ||i_guid);

    --SELECT COUNT(*) INTO VCOUNT FROM GT_XML_BUNDLE ;
--    IF VCOUNT <=0 THEN


-------------------------

---Fill LineItem table-
--by harsh Shah 30-Jan-2015
----------------------------

if l_add_pns ='Y' THEN

INSERT INTO eclipse.GT_XML_line_item
(GUID,
ADDED_BY_EMP_NR,
ADDED_BY_EMP_EMAIL,
AUTH_BASIS_DESC,
AUTH_DATE,
AUTH_DATE_GMT,
AUTH_EMP_NR,
AUTH_EMP_EMAIL,
AUTH_STAT_CD,
BD_NET_AMT,
LIST_PRICE,
PROD_LINE_CD,
PRICING_TYPE_CD,
PROD_DESC,
QTY,
REQUEST_TYPE,
ROLLOUT_MONTH_QTY,
SKU,
STD_DISC_PCT,
OPT_CD,
COST_PRICE,
ORD_MIN_QTY,
BMI_DOC_NO,
EXT_PRE_APPRV_PRICE,
GUIDANCE_AVAIL_FL,
GUIDANCE_DETAEILS_ID,
GUIDANCE_DISC_EXPERT_PCT,
GUIDANCE_DISC_FLOOR_PCT,
GUIDANCE_DISC_TYPICAL_PCT,
GUIDANCE_REFRESHE_DATE_GMT,
NO_DISC_FL,
BUNDLE_DESC,
CONTRA_AMT,
INSTANT_PRC_METHOD,
INSTANT_PRC_AMT,
use_ext_list_price
)
SELECT
i_guid,
        extract ( value (d), '//AddedByHPEmployee/EmployeeNr/text()', i_xmlnamespace). getstringval ()                 AS addedbyempnr,    ---emp nr change from new xml
      extract ( value (d), '//AddedByHPEmployee/EmailAddress/text()', i_xmlnamespace). getstringval ()                 AS addedbyempemail, ---emp nr change from new xml
      extract ( value (d), '//AuthBasisDesc/text()', i_xmlnamespace). getstringval ()                                  AS authbasisdesc,
      extract ( value (d), '//AuthDate/text()', i_xmlnamespace).getstringval ()                                        AS authdate,
      extract ( value (d), '//AuthDateGMT/text()', i_xmlnamespace). getstringval ()                                    AS authdategmt,
      extract ( value (d), '//AuthHPEmployee/EmployeeNr/text()', i_xmlnamespace). getstringval ()                      AS authempnr,    --emp nr change from new xml
      extract ( value (d), '//AuthHPEmployee/EmailAddress/text()', i_xmlnamespace). getstringval ()                    AS authempemail, --emp nr change from new xml
      extract ( value (d), '//AuthStatCD/text()', i_xmlnamespace). getstringval ()                         AS authstatcd,
      extract ( value (d), '//BDNetAmt/text()', i_xmlnamespace). getstringval ()                           AS bdnetamt,
      extract ( value (d), '//ListPrice/text()', i_xmlnamespace). getstringval ()                          AS listprice,
      extract ( value (d), '//PL /text()', i_xmlnamespace). getstringval ()                                AS pl,
      extract ( value (d), '//PricingTypeCD /text()', i_xmlnamespace). getstringval ()                     AS pricingtypecd,
      extract ( value (d), '//ProdDesc/text()', i_xmlnamespace). getstringval ()                           AS proddesc,
      extract ( value (d), '//Qty/text()', i_xmlnamespace). getstringval ()                                AS qty,
      extract ( value (d), '//RequestType/text()', i_xmlnamespace). getstringval ()                        AS requesttype,
      extract ( value (d), '//RolloutMonthQtys/text()', i_xmlnamespace). getstringval ()                   AS rolloutmonthqtys,
      extract ( value (d), '//ProdBaseNr/text()', i_xmlnamespace). getstringval ()                         AS sku,
      extract ( value (d), '//StdDiscPct/text()', i_xmlnamespace). getstringval ()                         AS stddiscpct,
      extract ( value (d), '//OptCD/text()', i_xmlnamespace). getstringval ()                              AS optcd,
      extract ( value (d), '//CostPrice/text()', i_xmlnamespace). getstringval ()                          AS costprice,
      extract ( value (d), '//OrderMinQty/text()', i_xmlnamespace). getstringval ()                        AS orderminqty, -----CR 4735,
       extract ( value (d), '//DocNum/text()', i_xmlnamespace). getstringval ()                               AS bmi_doc_No,
        extract ( value (d), '//ExtPreApprvPrice/text()',i_xmlnamespace). getstringval ()                    AS ExtPreApprvPrice,
        extract ( value (d), '//GuidanceAvailFl/text()', i_xmlnamespace). getstringval ()                        AS GuidanceAvailFl,--Added by Lakshmi for CR6012
        extract ( value (d), '//GuidanceDetailsID/text()', i_xmlnamespace). getstringval ()                        AS GuidanceDetailsID,--Added by Lakshmi for CR6012
        extract ( value (d), '//GuidanceDiscExpertPct/text()', i_xmlnamespace). getstringval ()                        AS GuidanceDiscExpertPct,--Added by Lakshmi for CR6012
        extract ( value (d), '//GuidanceDiscFloorPct/text()', i_xmlnamespace). getstringval ()                        AS GuidanceDiscFloorPct,--Added by Lakshmi for CR6012
        extract ( value (d), '//GuidanceDiscTypicalPct/text()', i_xmlnamespace). getstringval ()                        AS GuidanceDiscTypicalPct,--Added by Lakshmi for CR6012
        extract ( value (d), '//GuidanceRefreshDateGMT/text()', i_xmlnamespace). getstringval ()                        AS GuidanceRefreshDateGMT,--Added by Lakshmi for CR6012
        extract ( value (d), '//NonDiscFl/text()', i_xmlnamespace). getstringval ()                        AS NonDiscFl,
        extract ( value (d), '//BundleDesc/text()', i_xmlnamespace). getstringval ()                        AS BundleDesc,
        --New fields added for US 7301--
        extract ( value (d), '//CurrencyProgramBenefit/text()', i_xmlnamespace). getstringval ()                        AS CurrencyProgramBenefit,
        extract ( value (d), '//InstantPrcMethod/text()', i_xmlnamespace). getstringval ()                        AS InstantPrcMethod,
        extract ( value (d), '//InstantPrcAmt/text()', i_xmlnamespace). getstringval ()                        AS InstantPrcAmt,
        extract ( value (d), '//UseExternalListPriceFl/text()', i_xmlnamespace). getstringval ()                        AS UseExternalListPriceFl
   FROM edms_deal_queue x,
      TABLE ( xmlsequence ( extract ( x.xml_data_xml, 'DealCreationRequest/LineItems/LineItemPN', i_xmlnamespace))) d
    WHERE x.deal_creation_guid = i_guid;

     --forall rec_line_item in l_line_item_tab.first..l_line_item_tab.last
      --  INSERT INTO eclipse.GT_XML_line_item values l_line_item_tab(rec_line_item);


END IF;



--      SELECT COUNT(*) INTO vcount FROM eclipse.GT_XML_line_item ;

      --dbms_output.put_line ('line item count: ' || vcount || ' xmlnamespace : ' || i_xmlnamespace);

-----------------------------------
IF L_ADD_BUNDLES='Y' THEN

 SELECT i_guid, extract ( value (d), '//LineItemBD/AddedByHPEmployee/EmployeeNr/text()', i_xmlnamespace). getstringval () AS addedbyempnr,    ---emp nr change from new xml
        extract ( value (d), '//LineItemBD/AddedByHPEmployee/EmailAddress/text()', i_xmlnamespace). getstringval ()     AS addedbyempemail, ---emp nr change from new xml
        extract ( value (d), '//LineItemBD/AuthBasisDesc/text()', i_xmlnamespace). getstringval ()                      AS authbasisdesc ,
        extract ( value (d), '//LineItemBD/AuthDate/text()', i_xmlnamespace ). getstringval ()                          AS authdate,
        extract ( value (d), '//LineItemBD/AuthDateGMT/text()', i_xmlnamespace). getstringval ()                        AS authdategmt,
        extract ( value (d), '//LineItemBD/AuthHPEmployee/EmployeeNr/text()', i_xmlnamespace). getstringval ()          AS authempnr,    ---emp nr change from new xml
        extract ( value (d), '//LineItemBD/AuthHPEmployee/EmailAddress/text()', i_xmlnamespace). getstringval ()        AS authempemail, ---emp nr change from new xml
        extract ( value (d), '//LineItemBD/AuthStatCD/text()', i_xmlnamespace). getstringval ()                         AS authstatcd,
        extract ( value (d), '//LineItemBD/BDNetAmt/text()', i_xmlnamespace ). getstringval ()                          AS bdnetamt,
        extract ( value (d), '//LineItemBD/CostPrice/text()', i_xmlnamespace). getstringval ()                          AS costprice,
        extract ( value (d), '//LineItemBD/ListPrice/text()', i_xmlnamespace). getstringval ()                          AS listprice,
        extract ( value (d), '//LineItemBD/PricingTypeCD/text()', i_xmlnamespace). getstringval ()                      AS pricingtypecd,
        extract (value (D), '//LineItemBD/ProdDesc/text()', i_xmlnamespace) . GETSTRINGVAL ()                           as PRODDESC,
        extract (value (d), '//LineItemBD/RequestType/text()', i_xmlnamespace). getstringval ()                         AS requesttype,
        extract (value (d), '//LineItemBD/RolloutMonthQtys/text()', i_xmlnamespace). getstringval ()                    AS rolloutmonthqtys,
        extract (value (d), '//LineItemBD/ProdBaseNr/text()', i_xmlnamespace). getstringval ()                          AS sku,
        extract (value (d), '//LineItemBD/StdDiscPct/text()', i_xmlnamespace). getstringval ()                          AS stddiscpct,
        extract (value (d), '//LineItemBD/BundleDesc/text()', i_xmlnamespace). getstringval ()                          AS bundledesc,
        extract (value (d), '//LineItemBD/BundleSource /text()', i_xmlnamespace). getstringval ()                       AS bundlesource ,
        extract (value (d), '//LineItemBD/BundleIndex /text()', i_xmlnamespace). getstringval ()                        AS bundleindex,
        extract (value (D), '//LineItemBD/Qty/text()', i_xmlnamespace). GETSTRINGVAL ()                                 as HEADER_QTY,
        extract (value (d), '//LineItemBD/OptCD/text()', i_xmlnamespace). getstringval ()                               AS optcd,
        extract (value (d), '//LineItemBD/ConfigID/text()', i_xmlnamespace). getstringval ()                            AS configid,
        extract (value (d), '//LineItemBD/PL/text()', i_xmlnamespace). getstringval ()                                  AS pl, --Added on 23-Jan for CR 3236
        extract ( value (D), '//LineItemBD/OrderMinQty/text()', i_xmlnamespace). GETSTRINGVAL () as ORDERMINQTY, ---Added for CR 4375,
        extract (value (D), '//LineItemBD/DocNum/text()', i_xmlnamespace). GETSTRINGVAL ()                                  as BMI_DOC_NO,  -- by Harsh Shah 17-Jan-2014,
        extract (value (D), '//LineItemBD/ExtPreApprvPrice/text()', i_xmlnamespace). GETSTRINGVAL ()                        as ExtPreApprvPrice,
        extract ( value (d), '//LineItemBD/DisplayCompPrcFl/text()', i_xmlnamespace). getstringval () AS DisplayCompPrcFl,--Added for US6037 --> Show Component Level Pricing
        extract (value (D), '//LineItemBD/EclipseBundleID/text()', i_xmlnamespace). GETSTRINGVAL ()                        as EclipseBundleID,
        extract ( value (d), '//LineItemBD/GuidanceAvailFl/text()', i_xmlnamespace). getstringval ()                        AS GuidanceAvailFl,--Added by Lakshmi for CR6012
        extract ( value (d), '//LineItemBD/GuidanceDetailsID/text()', i_xmlnamespace). getstringval ()                        AS GuidanceDetailsID,--Added by Lakshmi for CR6012
        extract ( value (d), '//LineItemBD/GuidanceDiscExpertPct/text()', i_xmlnamespace). getstringval ()                        AS GuidanceDiscExpertPct,--Added by Lakshmi for CR6012
        extract ( value (d), '//LineItemBD/GuidanceDiscFloorPct/text()', i_xmlnamespace). getstringval ()                        AS GuidanceDiscFloorPct,--Added by Lakshmi for CR6012
        extract ( value (d), '//LineItemBD/GuidanceDiscTypicalPct/text()', i_xmlnamespace). getstringval ()                        AS GuidanceDiscTypicalPct,--Added by Lakshmi for CR6012
        extract ( value (d), '//LineItemBD/GuidanceRefreshDateGMT/text()', i_xmlnamespace). getstringval ()                        AS GuidanceRefreshDateGMT,--Added by Lakshmi for        CR6012
        extract ( value (d), '//LineItemBD/NonDiscFl/text()', i_xmlnamespace). getstringval ()                        AS NonDiscFl
       --New fields added for US 7301--
        , extract ( value (d), '//LineItemBD/InstantPrcMethod/text()', i_xmlnamespace). getstringval ()                        AS InstantPrcMethod,
        extract ( value (d), '//LineItemBD/InstantPrcAmt/text()', i_xmlnamespace). getstringval ()                        AS InstantPrcAmt
        ,extract ( value (d), '//LineItemBD/CurrencyProgramBenefit/text()', i_xmlnamespace). getstringval ()                        AS CurrencyProgramBenefit
        ,extract ( value (d), '//LineItemBD/UseExternalListPriceFl/text()', i_xmlnamespace). getstringval ()                        AS UseExternalListPriceFl
        BULK COLLECT into l_bundle_tab
      FROM edms_deal_queue x,
        TABLE ( xmlsequence ( EXTRACT ( x.xml_data_xml, 'DealCreationRequest/Bundles/LineItemBD', i_xmlnamespace))) d
      WHERE x.deal_creation_guid =i_guid;


      forall rec_bundle in l_bundle_tab.first..l_bundle_tab.last
        INSERT INTO eclipse.GT_XML_BUNDLE values l_bundle_tab(rec_bundle);


      --SELECT COUNT(*) INTO vcount FROM eclipse.GT_XML_BUNDLE ;

      --dbms_output.put_line ( 'BUNDLE COUNT :' || vcount);



    SELECT i_guid, EXTRACT ( VALUE (D), '//AuthBasisDesc/text()',  i_xmlnamespace). GETSTRINGVAL ()         AS AUTHBASISDESC,
          extract ( value (d), '//AuthDate/text()',  i_xmlnamespace). getstringval ()                    AS authdate,
          extract ( value (d), '//AuthDateGMT/text()',  i_xmlnamespace). getstringval ()                 AS authdategmt,
          extract ( value (d), '//AuthHPEmployee/EmployeeNr/text()',  i_xmlnamespace). getstringval ()   AS authempnr,    ---emp nr change as per new xml
          extract ( value (d), '//AuthHPEmployee/EmailAddress/text()',  i_xmlnamespace). getstringval () AS authempemail, ---emp nr change as per new xml
          extract ( value (d), '//AuthStatCD/text()',  i_xmlnamespace). getstringval ()                  AS authstatcd,
          extract ( value (d), '//BDNetAmt/text()',  i_xmlnamespace). getstringval ()                    AS bdnetamt,
          extract ( value (D), '//ListPrice/text()',  i_xmlnamespace). GETSTRINGVAL ()                   AS LISTPRICE,
          extract ( value (d), '//PL/text()',  i_xmlnamespace). getstringval ()                          AS pl,
          extract ( value (d), '//ProdDesc/text()',  i_xmlnamespace). getstringval ()                    AS proddesc,
          extract ( value (d), '//Qty/text()',  i_xmlnamespace). getstringval ()                         AS qty,
          extract ( value (d), '//ProdBaseNr/text()',  i_xmlnamespace). getstringval ()                  AS sku,
          extract ( value (d), '//StdDiscPct/text()',  i_xmlnamespace). getstringval ()                  AS stddiscpct,
          extract ( value (d), '//ParentIndex/text()',  i_xmlnamespace). getstringval ()                 AS parentindex,
          extract ( value (d), '//BundleSource/text()',  i_xmlnamespace). getstringval ()                AS bundleline_source,
          extract (value (D), '//OptCD/text()',  i_xmlnamespace). GETSTRINGVAL ()                        AS OPTCD,
          extract (value (d), '//CostPrice/text()',  i_xmlnamespace). getstringval ()                    AS CostPrice,
          extract (value (d), '//BandedFl/text()',  i_xmlnamespace). getstringval ()                     AS BandedFl ,
         extract (value (d), '//ExtLineItemNr/text()',  i_xmlnamespace).getstringval()                   AS ExtLineItemNr ,
        extract (value (d), '//ExtPreApprvPrice/text()', i_xmlnamespace).getstringval()              AS ExtPreApprvPrice,
        extract ( value (d), '//GuidanceAvailFl/text()',  i_xmlnamespace). getstringval ()             AS GuidanceAvailFl,--Added by Lakshmi for CR6012
        extract ( value (d), '//GuidanceDetailsID/text()',  i_xmlnamespace). getstringval ()           AS GuidanceDetailsID,--Added by Lakshmi for CR6012
        extract ( value (d), '//GuidanceDiscExpertPct/text()',  i_xmlnamespace). getstringval ()       AS GuidanceDiscExpertPct,--Added by Lakshmi for CR6012
        extract ( value (d), '//GuidanceDiscFloorPct/text()',  i_xmlnamespace). getstringval ()        AS GuidanceDiscFloorPct,--Added by Lakshmi for CR6012
        extract ( value (d), '//GuidanceDiscTypicalPct/text()',  i_xmlnamespace). getstringval ()      AS GuidanceDiscTypicalPct,--Added by Lakshmi for CR6012
        extract ( value (d), '//GuidanceRefreshDateGMT/text()',  i_xmlnamespace). getstringval ()      AS GuidanceRefreshDateGMT, --Added by Lakshmi for CR6012
        extract ( value (d), '//NonDiscFl/text()',  i_xmlnamespace). getstringval ()                        AS NonDiscFl,
           --New fields added for US 7301--
        extract ( value (d), '//InstantPrcMethod/text()', i_xmlnamespace). getstringval ()                        AS InstantPrcMethod,
        extract ( value (d), '//InstantPrcAmt/text()', i_xmlnamespace). getstringval ()                        AS InstantPrcAmt
        ,extract ( value (d), '//CurrencyProgramBenefit/text()', i_xmlnamespace). getstringval ()                        AS CurrencyProgramBenefit
        ,extract ( value (d), '//UseExternalListPriceFl/text()', i_xmlnamespace). getstringval ()                        AS UseExternalListPriceFl
        BULK COLLECT into l_bundle_line_tab
        FROM edms_deal_queue x,
          TABLE ( xmlsequence ( EXTRACT ( x.xml_data_xml, 'DealCreationRequest/Bundles/LineItemBD/BundleLines/BundleLine',  i_xmlnamespace))) d
        WHERE x.deal_creation_guid =i_guid;

    forall rec_bundle_line in l_bundle_line_tab.first..l_bundle_line_tab.last
        INSERT INTO eclipse.GT_XML_BUNDLE_Line values l_bundle_line_tab(rec_bundle_line);

        --SELECT COUNT(*) INTO vcount FROM eclipse.GT_XML_BUNDLE_Line ;

      --dbms_output.put_line ( 'BUNDLE LINE COUNT :' || vcount);

    --END IF;
END IF;
      commit;
    RETURN 'Y';
exception
WHEN OTHERS THEN
RETURN 'N';
raise_application_error ( -20001, 'An error was encountered - ' || SQLCODE || ' -ERROR- ' || sqlerrm);
END FILL_TEMP_TABLES;

--Procedure created by Lakshmi for CR183981 - Taking Out PNs that are part of Autobundled Configs - They are completely deleted
PROCEDURE ReplaceBundles(
        i_deal_creation_guid IN VARCHAR2,
        i_xmlnamespace        IN  varchar,
        i_deal_creator_emp_nr IN  deal.init_hp_emp_nr%type,
        i_bd_id               IN  DEAL.BD_ID%TYPE,
        i_bd_nr               IN  DEAL.BD_NR%TYPE,
        i_bd_version_nr       IN  DEAL.BD_VERSION_NR%TYPE,
        i_dealsourcecd        IN  VARCHAR,
        i_dealvertocreate     IN  NUMBER,
        i_deal_begin_date     IN  DEAL.BEG_DT%TYPE,
        i_deal_end_date       IN  deal.end_dt%type,
        i_dealapprfl          IN  VARCHAR2,
        i_dealquotefl        IN  VARCHAR2,
        i_dealroutefl       IN  VARCHAR2,
        I_COUNTRY_CD DEAL.CONTROL_CNTRY_CD%TYPE,
        I_price_term_cd deal.price_term_cd%type,
        i_price_list_cd deal.price_list_cd%type,
        i_currency_cd deal.curr_cd%type,
        i_dealsourcedealtype deal.deal_source_deal_type%type,
        i_dealsourcekeyval deal.deal_source_keyval%type,
        i_hierarchy_cd deal_matrix.hierarchy_cd%type,
        i_busmodelcd DEAL.BUS_MODEL_CD%TYPE
)
IS
l_xml_path_to_Query varchar2(100);
  L_errors varchar2(2000);
  l_msg_type VARCHAR2(10);
  l_auth_date_gmt bundle_line.auth_dt_gmt%type;
  L_AUTH_MC_DATE LINE_ITEM.AUTH_MC_DATE%type;
  l_bundle_config bundle.config_id%type; -- NUMBER(10) :=0; --Commented as part of CR5020
  l_bundle_dtl_line_nr NUMBER(10) :=0;
  l_bundle_line_nr BUNDLE.LINE_NR%TYPE:=0;
  L_HDR_PROD_STD_DISC line_disc_scale.HIGH_RSLR_A_SD_PC%type;
  l_bd_hdr_sku_list_price  NUMERIC(16,2); --NUMERIC(10,2); Commented this to match the precision and scale of Line Disc Scale table
   l_BD_HDR_SKU_qty        NUMERIC(10);
  l_auth_bdnet_amt line_disc_scale.rqst_bd_net_prc_am%type;
  L_EXT_PRE_APPRV_PRC_AM LINE_DISC_SCALE.EXT_PRE_APPRV_PRC_AM%TYPE;
l_source_config_id bundle.source_config_id%TYPE;
l_hdr_bd_sku_opt_cd line_item.prod_opt_cd%type;
L_PROD_COST_PRICE_HDR_PROD BUNDLE_LINE.PROD_COST_AM%TYPE:=0;
l_line_AuthBasisDesc LINE_DISC_SCALE.AUTH_BASIS_TEXT%type;
  l_line_AuthStat bundle_line.ITEM_PROG_CD%type;
  l_line_AuthDtGMT DATE;
  l_line_AuthDtGMT_Char varchar2(200);
l_auth_generic_emp_nr line_item.auth_generic_emp_nr%type;--added for new auth changes
--l_bundle_config bundle.config_id%type; -- NUMBER(10) :=0; --Commented as part of CR5020
--l_busmodelcd bus_model.bus_model_cd%type;
l_line_auth_type line_item.line_auth_type%type;
--L_PROD_COST_PRICE_HDR_PROD BUNDLE_LINE.PROD_COST_AM%TYPE:=0;

--EXCEPTION Delcaration
REJECT_BUNDLE EXCEPTION;
l_create_new_version VARCHAR2(1):='Y';
new_l_bundle_dtl_line_nr NUMBER(10) :=0;
--L_banded_fl bundle_line.banded_fl%type;
l_line_Nr bundle.line_nr%TYPE;
old_bd_version_nr deal.bd_version_nr%TYPE;
new_version_end_date DEAL.end_dt%TYPE;
old_version_end_date DEAL.end_dt%TYPE;
l_dealapprfl  deal.bdme_aprvl_cd%TYPE;
l_dealquotefl deal.quote_dist_cd%TYPE;
old_bd_id DEAL.BD_ID%TYPE;
l_BEGINdate deal.beg_dt%TYPE;
l_enddate deal.end_dt%TYPE;
l_sku bundle_line.prod_gnrc_nr_tx%TYPE;
l_optcd bundle_line.prod_opt_cd%TYPE;
L_return_status varchar2(1000); --by Harsh Shah 17-Dec-2013
l_scale_id line_disc_scale.scale_id%TYPE;

  BEGIN

  l_dealapprfl      := getsqtxmlvalue ('/DealCreationRequest/DealActions/DealApprFl/', i_deal_creation_guid);
  l_dealquotefl     := getsqtxmlvalue ('/DealCreationRequest/DealActions/DealQuoteFl/', i_deal_creation_guid);

         --DBMS_OUTPUT.PUT_LINE('Calling ReplaceBundles procedure');

  IF lower(i_dealsourcecd) = 'bmi' THEN
      l_auth_generic_emp_nr   :=-999999911  ;
      l_line_auth_type        :='EAB';
    ELSIF lower(i_dealsourcecd) =('ngq') THEN
      l_auth_generic_emp_nr   :=-999999922  ;
      l_line_auth_type        :='EAN';
  END IF;
  --i_line_item_nr_for_bundle
  --****************************************************************************************
  --Replacing Bundles
  --****************************************************************************************
  /*  FOR recbd IN
    (
    SELECT    *
    FROM
      (SELECT extract ( value (d), '//LineItemBD/AddedByHPEmployee/EmployeeNr/text()', i_xmlnamespace). getstringval () AS addedbyempnr,    ---emp nr change from new xml
        extract ( value (d), '//LineItemBD/AddedByHPEmployee/EmailAddress/text()', i_xmlnamespace). getstringval ()     AS addedbyempemail, ---emp nr change from new xml
        extract ( value (d), '//LineItemBD/AuthBasisDesc/text()', i_xmlnamespace). getstringval ()                      AS authbasisdesc ,
        extract ( value (d), '//LineItemBD/AuthDate/text()', i_xmlnamespace ). getstringval ()                          AS authdate,
        extract ( value (d), '//LineItemBD/AuthDateGMT/text()', i_xmlnamespace). getstringval ()                        AS authdategmt,
        extract ( value (d), '//LineItemBD/AuthHPEmployee/EmployeeNr/text()', i_xmlnamespace). getstringval ()          AS authempnr,    ---emp nr change from new xml
        extract ( value (d), '//LineItemBD/AuthHPEmployee/EmailAddress/text()', i_xmlnamespace). getstringval ()        AS authempemail, ---emp nr change from new xml
        extract ( value (d), '//LineItemBD/AuthStatCD/text()', i_xmlnamespace). getstringval ()                         AS authstatcd,
        extract ( value (d), '//LineItemBD/BDNetAmt/text()', i_xmlnamespace ). getstringval ()                          AS bdnetamt,
        extract ( value (d), '//LineItemBD/CostPrice/text()', i_xmlnamespace). getstringval ()                          AS costprice,
        extract ( value (d), '//LineItemBD/ListPrice/text()', i_xmlnamespace). getstringval ()                          AS listprice,
        extract ( value (d), '//LineItemBD/PricingTypeCD/text()', i_xmlnamespace). getstringval ()                      AS pricingtypecd,
        extract (value (D), '//LineItemBD/ProdDesc/text()', I_XMLNAMESPACE) . GETSTRINGVAL ()                           as PRODDESC,
        extract (value (d), '//LineItemBD/RequestType/text()', i_xmlnamespace). getstringval ()                         AS requesttype,
        extract (value (d), '//LineItemBD/RolloutMonthQtys/text()', i_xmlnamespace). getstringval ()                    AS rolloutmonthqtys,
        extract (value (d), '//LineItemBD/ProdBaseNr/text()', i_xmlnamespace). getstringval ()                          AS sku,
        extract (value (d), '//LineItemBD/StdDiscPct/text()', i_xmlnamespace). getstringval ()                          AS stddiscpct,
        extract (value (d), '//LineItemBD/BundleDesc/text()', i_xmlnamespace). getstringval ()                          AS bundledesc,
        extract (value (d), '//LineItemBD/BundleSource /text()', i_xmlnamespace). getstringval ()                       AS bundlesource ,
        extract (value (d), '//LineItemBD/BundleIndex /text()', i_xmlnamespace). getstringval ()                        AS bundleindex,
        extract (value (D), '//LineItemBD/Qty/text()', I_XMLNAMESPACE). GETSTRINGVAL ()                                 as HEADER_QTY,
        extract (value (d), '//LineItemBD/OptCD/text()', i_xmlnamespace). getstringval ()                               AS optcd,
        extract (value (d), '//LineItemBD/ConfigID/text()', i_xmlnamespace). getstringval ()                            AS configid,
        extract (value (d), '//LineItemBD/PL/text()', i_xmlnamespace). getstringval ()                                  AS pl, --Added on 23-Jan for CR 3236
        extract ( value (D), '//LineItemBD/OrderMinQty/text()', i_xmlnamespace). GETSTRINGVAL () as ORDERMINQTY, ---Added for CR 4375,
        extract (value (D), '//LineItemBD/DocNum/text()', i_xmlnamespace). GETSTRINGVAL ()                                  as BMI_DOC_NO,  -- by Harsh Shah 17-Jan-2014,
        extract (value (D), '//LineItemBD/ExtPreApprvPrice/text()', i_xmlnamespace). GETSTRINGVAL ()                        as ExtPreApprvPrice,
        extract ( value (d), '//LineItemBD/DisplayCompPrcFl/text()', i_xmlnamespace). getstringval () AS DisplayCompPrcFl,--Added for US6037 --> Show Component Level Pricing
        extract (value (D), '//LineItemBD/EclipseBundleID/text()', I_XMLNAMESPACE). GETSTRINGVAL ()                        as EclipseBundleID,
        extract ( value (d), '//LineItemBD/GuidanceAvailFl/text()', i_xmlnamespace). getstringval ()                        AS GuidanceAvailFl,--Added by Lakshmi for CR6012
        extract ( value (d), '//LineItemBD/GuidanceDetailsID/text()', i_xmlnamespace). getstringval ()                        AS GuidanceDetailsID,--Added by Lakshmi for CR6012
        extract ( value (d), '//LineItemBD/GuidanceDiscExpertPct/text()', i_xmlnamespace). getstringval ()                        AS GuidanceDiscExpertPct,--Added by Lakshmi for CR6012
        extract ( value (d), '//LineItemBD/GuidanceDiscFloorPct/text()', i_xmlnamespace). getstringval ()                        AS GuidanceDiscFloorPct,--Added by Lakshmi for CR6012
        extract ( value (d), '//LineItemBD/GuidanceDiscTypicalPct/text()', i_xmlnamespace). getstringval ()                        AS GuidanceDiscTypicalPct,--Added by Lakshmi for CR6012
        extract ( value (d), '//LineItemBD/GuidanceRefreshDateGMT/text()', i_xmlnamespace). getstringval ()                        AS GuidanceRefreshDateGMT,--Added by Lakshmi for        CR6012
        extract ( value (d), '//LineItemBD/NonDiscFl/text()', i_xmlnamespace). getstringval ()                        AS NonDiscFl
      FROM edms_deal_queue x,
        TABLE ( xmlsequence ( extract ( x.xml_data_xml, 'DealCreationRequest/Bundles/LineItemBD', i_xmlnamespace))) d
      WHERE x.deal_creation_guid =i_deal_creation_guid
      )
      where upper(requesttype) IN ('REPLACE')--1/16/2015
    )
      LOOP */
        FOR recbd IN
    (
                SELECT ADDED_BY_EMP_NR AS addedbyempnr,
                   ADDED_BY_EMP_EMAIL AS addedbyempemail,
                   AUTH_BASIS_DESC AS authbasisdesc,
                   AUTH_DATE AS authdate,
                   AUTH_DATE_GMT AS authdategmt,
                   AUTH_EMP_NR AS authempnr,
                   AUTH_EMP_EMAIL AS authempemail,
                   AUTH_STAT_CD AS authstatcd,
                   BD_NET_AMT AS bdnetamt,
                   COST_PRICE AS costprice,
                   LIST_PRICE AS listprice,
                   PRICING_TYPE_CD AS pricingtypecd,
                   PROD_DESC AS proddesc,
                   REQUEST_TYPE AS requesttype,
                   ROLLOUT_MONTH_QTY AS rolloutmonthqtys,
                   SKU AS sku,
                   STD_DISC_PCT AS stddiscpct,
                   BUNDLE_DESC AS bundledesc,
                   BUNDLE_SOURCE AS bundlesource,
                   BUNDLE_INDEX AS bundleindex,
                   HEADER_QTY AS header_qty,
                   OPT_CD AS optcd,
                   CONFIG_ID AS CONFIGID,
                   PROD_LINE_CD AS pl,
                   ORD_MIN_QTY AS ORDERMINQTY,
                   BMI_DOC_NO AS BMI_DOC_NO,
                   EXT_PRE_APPRV_PRICE AS ExtPreApprvPrice,
                   DISPLAY_COMP_PRC_FL AS DisplayCompPrcFl,
                   ECLIPSE_BUNDLE_ID AS EclipseBundleID,
                   GUIDANCE_AVAIL_FL AS GuidanceAvailFl,
                   GUIDANCE_DETAEILS_ID AS GuidanceDetailsID,
                   GUIDANCE_DISC_EXPERT_PCT AS GuidanceDiscExpertPct,
                   GUIDANCE_DISC_FLOOR_PCT AS GuidanceDiscFloorPct,
                   GUIDANCE_DISC_TYPICAL_PCT AS GuidanceDiscTypicalPct,
                   GUIDANCE_REFRESHE_DATE_GMT AS GuidanceRefreshDateGMT,
                   NO_DISC_FL AS NonDiscFl
                   ,INSTANT_PRC_METHOD As instantprcmethod
                  ,Instant_prc_amt As Instantprcamt
                  ,CONTRA_AMT As contraamt
                  , USE_EXT_LIST_PRICE AS UseExternalListPriceFl
              FROM ECLIPSE.GT_XML_BUNDLE
             WHERE GUID = i_deal_creation_guid
                   AND  UPPER (REQUEST_TYPE) = 'REPLACE'
    )
    LOOP
              l_sku := recbd.sku;
              l_optcd := recbd.optcd;
--    dbms_OUTPUT.put_line('Prod base nr checked within ReplaceBundles Procedure : '||recbd.sku||' Optcd: '||recbd.optcd||' for bd_id: '||i_bd_id);
              BEGIN
              SELECT line_nr INTO l_line_nr
              FROM line_item
                                  WHERE line_type_cd='BD'
--                                  AND prod_gnrc_nr_tx= recbd.sku
--                                 AND prod_opt_cd=--DECODE(recbd.OPTCD,NULL,' ',recbd.OPTCD)
--                                  DECODE((SELECT prod_opt_cd FROM line_item WHERE bd_id=i_bd_id AND line_type_cd='BD' AND PROD_GNRC_NR_TX=recbd.sku
--                                 AND bmi_doc_No=recbd.bmi_doc_no AND rownum<=1),NULL,' ',(SELECT prod_opt_cd FROM line_item WHERE bd_id=i_bd_id AND line_type_cd='BD' AND PROD_GNRC_NR_TX=recbd.sku
--                                 AND bmi_doc_No=recbd.bmi_doc_no AND rownum<=1))
                                  AND bd_id=i_bd_id
                                  AND ( SRC_BUNDLE_DESC_TX=recbd.BundleDesc OR SRC_BUNDLE_DESC_TX IS NULL)
                                  --and bmi_doc_no=recbd.BMI_DOC_NO
                                  and ROWNUM<2;
                --DBMS_OUTPUT.PUT_LINE('Updating Line Number: '||l_line_nr ||' to HOLD in ReplaceBundles procedure ');
            EXCEPTION
            --by Harsh Shah 11/21/2014 - for CR 165054 - GUS Ticket--Quantity not updated in Eclipse after Revise Quote (TD # 2710002) - zhirong.shen@hp.com
            WHEN NO_DATA_FOUND then
                l_errors:='Error occured during HOLD update for LINE_ITEM table : '||dbms_utility.format_error_backtrace();
                inserterror_output_messages (i_bd_id,i_bd_nr,i_bd_version_nr, null,null,null,null, null,null,null,l_errors,'WARNING', i_deal_creation_guid,NULL,NULL,NULL);

                DBMS_OUTPUT.PUT_LINE(L_ERRORS);

                l_errors:='LINE_ITEM table error Sku to be put on HOLD is: '||recbd.sku||' bundledesc: '||RECBD.bundledesc||' optcd : '||recbd.OPTCD ;
                inserterror_output_messages (i_bd_id,i_bd_nr,i_bd_version_nr, null,null,null,null, null,null,null,l_errors,'WARNING', i_deal_creation_guid,NULL,NULL,NULL);

                l_line_nr := -1;
                DBMS_OUTPUT.PUT_LINE(L_ERRORS);
            WHEN OTHERS THEN
                l_errors:='Error occured while getting line number from Line item table.'||dbms_utility.format_error_backtrace();
                inserterror_output_messages (i_bd_id,i_bd_nr,i_bd_version_nr, null,null,null,null, null,null,null,l_errors,'WARNING', i_deal_creation_guid,NULL,NULL,NULL);

                DBMS_OUTPUT.PUT_LINE(L_ERRORS);

                --by Harsh Shah 11/21/2014 - for CR 165054 - GUS Ticket--Quantity not updated in Eclipse after Revise Quote (TD # 2710002) - zhirong.shen@hp.com
                l_errors:='LINE_ITEM table error Sku to be put on HOLD is: '||recbd.sku||' bundledesc: '||RECBD.bundledesc||' optcd : '||recbd.OPTCD ;
                inserterror_output_messages (i_bd_id,i_bd_nr,i_bd_version_nr, null,null,null,null, null,null,null,l_errors,'WARNING', i_deal_creation_guid,NULL,NULL,NULL);

                l_line_nr := -1;
                DBMS_OUTPUT.PUT_LINE(L_ERRORS);
            END;

            SELECT max(scale_id)  INTO l_scale_id
            FROM bundle_line WHERE line_nr=l_line_nr AND bd_id=i_bd_id;

            --dbms_OUTPUT.put_line('Bd_id: '||i_bd_id||' , scale_id: '||l_scale_id||' , line_nr: '||l_line_nr);

            DELETE FROM gt_bundle_line;
            DELETE FROM gt_line_disc_scale;

            INSERT INTO gt_bundle_line
            SELECT *  FROM bundle_line WHERE line_nr=l_line_nr AND bd_id=i_bd_id ;

            INSERT INTO gt_line_disc_scale
            SELECT *  FROM line_disc_scale WHERE line_nr=l_line_nr AND bd_id=i_bd_id ;

            DELETE FROM line_item WHERE line_nr=l_line_nr AND bd_id=i_bd_id;--This will remove from LINE_ITEM, BUNDLE, ROLLOUT_SCHEDULE and BUNDLE_LINE tables.

            INSERT INTO bundle_line SELECT * FROM gt_bundle_line;

            INSERT INTO line_disc_scale SELECT * FROM gt_line_disc_scale;

            l_bundle_line_nr := l_line_nr;

           IF recbd.addedbyempnr IS NULL AND recbd.addedbyempemail IS NOT NULL THEN
        recbd.addedbyempnr  :=get_emp_nr(recbd.addedbyempemail);
      END IF;

      IF recbd.authempnr IS NULL AND recbd.authempemail IS NOT NULL THEN
        recbd.authempnr  :=get_emp_nr(recbd.authempemail);
      END IF;
      IF (lower(i_dealsourcecd)='eprime' AND i_dealvertocreate = 0) THEN --aded to not authorise if eprime deal version to be created is 0
        recbd.AuthBasisDesc   :=NULL;
        recbd.AuthDate        :=NULL;
        recbd.AuthDateGMT     :=NULL;
        recbd.authempnr       :=NULL;
        recbd.authempemail    :=NULL;
        recbd.AuthStatCD      :='N';
      END IF;
      IF lower(i_dealsourcecd)  IN ('bmi','ngq','sts') AND recbd.addedbyempnr IS NULL THEN
        recbd.addedbyempnr    :=i_deal_creator_emp_nr;
      END IF;
      ---added as eprime is not going to send the order min qty and this will be default to 1
      IF recbd.orderminqty IS NULL THEN
        recbd.orderminqty  :=1 ;
      END IF;
      l_errors              :='Bundle Header SKU : ' || recbd.sku || ' OptCode : ' || recbd.OptCd || ' Bundle Source ' || recbd.bundlesource || ' Config : ' || RECBD.CONFIGID || ' Bundle Index ' || recbd.bundleindex;

      IF recbd.addedbyempnr IS NULL THEN
        l_errors            :='Added by Employee No is not provided for ' || l_errors;
        l_msg_type          :='ERROR';
        raise REJECT_BUNDLE;
      END IF;
      IF (ltrim(rtrim(recbd.rolloutmonthqtys))) IS NULL AND (i_dealsourcecd <> con_deal_source_bmi) THEN
        l_errors                                :='Rollout Month Qtys is empty For ' || l_errors;
        l_msg_type                              :='ERROR';
        raise REJECT_BUNDLE;
      END IF;

      IF (lower(i_dealsourcecd)               NOT IN ('bmi','ngq','sts')) THEN
        IF (is_user_exists(recbd.addedbyempnr
        ,NULL
        ) ='N') THEN
          l_errors                            :='Invalid Employee No ' || recbd.addedbyempnr || ' or Employee is not a valid Eclipse User, For  ' || l_errors;
          l_msg_type                          :='ERROR';
          raise REJECT_BUNDLE;
        END IF;
      END IF;
      IF ( i_dealapprfl='Y') THEN
        IF recbd.authstatcd                     ='Y' THEN
          IF LTRIM(RTRIM(recbd.authbasisdesc)) IS NULL THEN
            L_ERRORS                           :='Auth Basis Description is empty for the ' || l_errors;
            l_msg_type                         :='ERROR';
            raise REJECT_BUNDLE;
          elsif ltrim(rtrim(recbd.authempnr)) IS NULL THEN
            L_ERRORS                          :='Auth Emp Nr is empty for the ' || l_errors;
            l_msg_type                        :='ERROR';
            raise REJECT_BUNDLE;
          elsif is_user_exists(recbd.authempnr
          ,i_dealsourcecd --Added for US-9408 --> Encore Retirement  
          ) ='N' THEN
            L_ERRORS                           :='Invalied Auth Emp Nr : ' || recbd.authempnr || ' for the ' || l_errors;
            l_msg_type                         :='ERROR';
            raise REJECT_BUNDLE;
          END IF;
        END IF;
      END IF;

     L_AUTH_DATE_GMT       :=NULL;
      IF (RECBD.AUTHDATEGMT IS NOT NULL OR RECBD.AUTHDATEGMT<>'') THEN
        L_AUTH_DATE_GMT     :=TO_TIMESTAMP (SUBSTR(RECBD.AUTHDATEGMT,1,19),'YYYY-MM-DD"T"HH24:MI:SS');
      ELSE
        L_AUTH_DATE_GMT:=NULL;
      END IF;
      L_AUTH_MC_DATE:=NULL;
      --Get Auth MC date from XML and convert it to oracle date time format
      IF (RECBD.AUTHDATE IS NOT NULL OR RECBD.AUTHDATE<>'') THEN
        L_AUTH_MC_DATE   :=TO_TIMESTAMP (SUBSTR(RECBD.AUTHDATE,1,19),'YYYY-MM-DD"T"HH24:MI:SS');
      ELSE
        L_AUTH_MC_DATE:=NULL;
      END IF;
      ----dbms_output.PUT_LINE (' converted to date auth date gmt ' || L_AUTH_DATE_GMT );
      --generate bundle config.
      IF recbd.bundlesource=con_bundle_source_watson THEN
        l_bundle_config   :=recbd.configid;
        --dbms_output.put_line ('watson config id: ' || l_bundle_config);
      ELSIF recbd.bundlesource = con_bundle_source_ezconfig OR recbd.bundlesource=con_bundle_source_ecfix OR recbd.bundlesource= con_bundle_source_ecband THEN---condition added for ePrime
        l_bundle_config       :=recbd.configid;
        --TODO: New logic to reside here


        -- recbd.bundlesource ='EC-FIX';
      elsif recbd.bundlesource=con_bundle_source_soft OR recbd.bundlesource=con_bundle_source_ngce OR recbd.bundlesource=con_bundle_source_ngce_fix THEN --If  bundle source is ngce or soft thenn bundle config need to be created
      --TODO: config changes
          if LENGTH(RECBD.CONFIGID)>8 THEN

                  IF UPPER(recbd.requesttype) ='DEL_ADD' THEN

                        l_bundle_config := recbd.EclipseBundleID;
                        l_source_config_id := recbd.configid;

                    ELSE
                  SELECT seq_ca_config_id.nextval
                  INTO l_bundle_config
                  FROM dual;
                  l_source_config_id:=RECBD.CONFIGID;
                  END IF;

          elsif  LENGTH(RECBD.CONFIGID)<=8 then
                   l_bundle_config:=RECBD.CONFIGID;
                   l_source_config_id:=l_bundle_config;
        END IF;
      ELSE
        l_bundle_config:=NULL;
        --Pending implementation -- exit if bundle source is other tahn watson/soft (only if required)
      END IF;

      --dbms_output.put_line (' New Bundle Config ID : '|| l_bundle_config);

      --l_bundle_line_nr:=l_bundle_line_nr+1;

      --dbms_output.put_line ('Adding first Bundle ' || l_bundle_line_nr );

      --dbms_output.put_line (' recbd.sku ' || recbd.sku || ' Bundle Index ' || recbd.bundleindex || ' Bundle Header Line ' || l_bundle_line_nr);

      --*********************
      --Looping through bundle Header
      --*********************
      --Get the bundle Header SKU Auth BD Net amount from the BundleLines XMl Element

      l_HDR_PROD_STD_DISC:=0;

      --Modified byHarsh Shah 18-Oct-2013
      -- added l_xml_path_to_Query in order to generalize the changes with BMIs modified XQuery Path.
      l_xml_path_to_Query:='DealCreationRequest/Bundles/LineItemBD/BundleLines/BundleLine';

      --GET_BD_HDR_AUTH_LIST_AMT( l_xml_path_to_Query,i_DEAL_CREATION_GUID , i_xmlnamespace, RECBD.BUNDLEINDEX, RECBD.BUNDLESOURCE, RECBD.SKU, L_BD_HDR_SKU_LIST_PRICE ,
      --L_AUTH_BDNET_AMT,L_BD_HDR_SKU_QTY,L_HDR_BD_SKU_OPT_CD,L_PROD_COST_PRICE_HDR_PROD,L_HDR_PROD_STD_DISC, l_line_AuthBasisDesc,l_line_AuthStat,l_line_AuthDtGMT);
       -- GET_BD_HDR_AUTH_LIST_AMT( l_xml_path_to_Query, L_DEAL_CREATION_GUID , L_XMLNAMESPACE, RECBD.BUNDLEINDEX, RECBD.BUNDLESOURCE, RECBD.SKU, L_BD_HDR_SKU_LIST_PRICE ,
    --   L_AUTH_BDNET_AMT,L_BD_HDR_SKU_QTY,L_HDR_BD_SKU_OPT_CD,L_PROD_COST_PRICE_HDR_PROD,L_HDR_PROD_STD_DISC, l_line_AuthBasisDesc,l_line_AuthStat,l_line_AuthDtGMT);
     begin
          select nvl(list_price,0),nvl(BD_NET_AMT,0),nvl(qty,0),opt_cd,COST_PRICE,STD_DISC_PCT,AUTH_BASIS_DESC,nvl(AUTH_STAT_CD,'N'),AUTH_DATE_GMT
       INTO  L_BD_HDR_SKU_LIST_PRICE , L_AUTH_BDNET_AMT,L_BD_HDR_SKU_QTY,L_HDR_BD_SKU_OPT_CD,L_PROD_COST_PRICE_HDR_PROD,L_HDR_PROD_STD_DISC, l_line_AuthBasisDesc,l_line_AuthStat,l_line_AuthDtGMT_Char
         from gt_xml_bundle_line where guid =i_DEAL_CREATION_GUID and parent_index=RECBD.BUNDLEINDEX and bundle_line_source=RECBD.BUNDLESOURCE and sku=RECBD.SKU and rownum<2;

          IF (l_line_AuthDtGMT_Char IS NOT NULL OR l_line_AuthDtGMT_Char<>'') THEN
              l_line_AuthDtGMT              :=TO_TIMESTAMP (SUBSTR(l_line_AuthDtGMT_Char,1,19),'YYYY-MM-DD"T"HH24:MI:SS');
          ELSE
               l_line_AuthDtGMT:=NULL;
          END IF;
      exception
      when others then
      dbms_output.put_line('Error om get_bd_hdr_....    '||DBMS_UTILITY.FORMAT_ERROR_BACKTRACE()||' error    :'||sqlerrm);
       L_MSG_TYPE:='WARNING';
        l_errors  :='Error in get bundle header auth list amt   '||recbd.sku||'---'||substr(sqlerrm,1,200);
    --dbms_output.put_line (l_errors);
         --inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr, l_deal_prog_cd,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code, l_high_risk_fl,l_risk_reasion_desc,l_risk_desc,l_errors,l_msg_type, l_deal_creation_guid,NULL,NULL,NULL);
          inserterror_output_messages (i_bd_id,i_bd_nr,i_bd_version_nr, null,null,null,null, null,null,null,l_errors,L_MSG_TYPE, i_deal_creation_guid,NULL,NULL,NULL);

      end;


      BMI_insert_prod_line (
          I_BD_ID, I_bd_nr, I_bd_version_nr, recbd.authstatcd, NULL, NULL, NULL, NULL, NULL, NULL, NULL, i_deal_creation_guid, i_country_cd,
      i_price_list_cd, i_currency_cd, i_price_term_cd, recbd.sku, 'N',
      I_hierarchy_cd, I_deal_end_date,'BD', recbd.listprice, recbd.authbasisdesc, recbd.header_qty, recbd.bdnetamt, recbd.authempnr,
      l_auth_generic_emp_nr,recbd.addedbyempnr, recbd.pricingtypecd, l_bundle_line_nr, I_deal_begin_date , 'Y','Y',
      recbd.bundlesource, l_bundle_config, l_source_config_id, l_hdr_prod_std_disc, l_bundle_line_nr,recbd.authstatcd, l_hdr_bd_sku_opt_cd,recbd.rolloutmonthqtys,
      l_auth_date_gmt,l_auth_mc_date,i_dealsourcedealtype,
      l_bd_hdr_sku_qty,recbd.bundledesc,recbd.pl,l_auth_bdnet_amt,recbd.costprice,
      l_prod_cost_price_hdr_prod,i_busmodelcd,recbd.orderminqty,l_line_auth_type, l_line_AuthBasisDesc,l_line_AuthStat,l_line_AuthDtGMT, l_create_new_version ,'N',
      recbd.bmi_doc_no,recbd.proddesc, L_EXT_PRE_APPRV_PRC_AM,recbd.listprice,recbd.bdnetamt, recbd.DisplayCompPrcFl,
        recbd.GuidanceAvailFl,recbd.GuidanceDetailsID,recbd.GuidanceDiscExpertPct,recbd.GuidanceDiscFloorPct,
        recbd.GuidanceDiscTypicalPct,recbd.GuidanceRefreshDateGMT, recbd.nondiscfl
        ,recbd.instantprcmethod,recbd.Instantprcamt,recbd.contraamt,   ----added for US 7301
        recbd.UseExternalListPriceFl
        );

       l_auth_bdnet_amt:=NULL;
      --L_EXT_PRE_APPRV_PRC_AM := NULL;
      --Increasing bundle detail line nr.. as it already inserted  by the above code.
      -- l_bundle_dtl_line_nr:=1;
      --*************************************
      --Looping through Bundle Line
      -- inserting bundle line
      --*************************************
     /*  FOR recbdline IN
      (
      SELECT        *
      FROM
        (SELECT EXTRACT ( VALUE (D), '//AuthBasisDesc/text()', I_XMLNAMESPACE). GETSTRINGVAL ()         AS AUTHBASISDESC,
          extract ( value (d), '//AuthDate/text()', i_xmlnamespace). getstringval ()                    AS authdate,
          extract ( value (d), '//AuthDateGMT/text()', i_xmlnamespace). getstringval ()                 AS authdategmt,
          extract ( value (d), '//AuthHPEmployee/EmployeeNr/text()', i_xmlnamespace). getstringval ()   AS authempnr,    ---emp nr change as per new xml
          extract ( value (d), '//AuthHPEmployee/EmailAddress/text()', i_xmlnamespace). getstringval () AS authempemail, ---emp nr change as per new xml
          extract ( value (d), '//AuthStatCD/text()', i_xmlnamespace). getstringval ()                  AS authstatcd,
          extract ( value (d), '//BDNetAmt/text()', i_xmlnamespace). getstringval ()                    AS bdnetamt,
          extract ( value (D), '//ListPrice/text()', i_xmlnamespace). GETSTRINGVAL ()                   AS LISTPRICE,
          extract ( value (d), '//PL/text()', i_xmlnamespace). getstringval ()                          AS pl,
          extract ( value (d), '//ProdDesc/text()', i_xmlnamespace). getstringval ()                    AS proddesc,
          extract ( value (d), '//Qty/text()', i_xmlnamespace). getstringval ()                         AS qty,
          extract ( value (d), '//ProdBaseNr/text()', i_xmlnamespace). getstringval ()                  AS sku,
          extract ( value (d), '//StdDiscPct/text()', i_xmlnamespace). getstringval ()                  AS stddiscpct,
          extract ( value (d), '//ParentIndex/text()', i_xmlnamespace). getstringval ()                 AS parentindex,
          extract ( value (d), '//BundleSource/text()', i_xmlnamespace). getstringval ()                AS bundleline_source,
          extract (value (D), '//OptCD/text()', i_xmlnamespace). GETSTRINGVAL ()                        AS OPTCD,
          extract (value (d), '//CostPrice/text()', i_xmlnamespace). getstringval ()                    AS CostPrice,
          extract (value (d), '//BandedFl/text()', i_xmlnamespace). getstringval ()                     AS BandedFl ,
         extract (value (d), '//ExtLineItemNr/text()', i_xmlnamespace).getstringval()                   AS ExtLineItemNr ,
        extract (value (d), '//ExtPreApprvPrice/text()',i_xmlnamespace).getstringval()              AS ExtPreApprvPrice,
        extract ( value (d), '//GuidanceAvailFl/text()', i_xmlnamespace). getstringval ()             AS GuidanceAvailFl,--Added by Lakshmi for CR6012
        extract ( value (d), '//GuidanceDetailsID/text()', i_xmlnamespace). getstringval ()           AS GuidanceDetailsID,--Added by Lakshmi for CR6012
        extract ( value (d), '//GuidanceDiscExpertPct/text()', i_xmlnamespace). getstringval ()       AS GuidanceDiscExpertPct,--Added by Lakshmi for CR6012
        extract ( value (d), '//GuidanceDiscFloorPct/text()', i_xmlnamespace). getstringval ()        AS GuidanceDiscFloorPct,--Added by Lakshmi for CR6012
        extract ( value (d), '//GuidanceDiscTypicalPct/text()', i_xmlnamespace). getstringval ()      AS GuidanceDiscTypicalPct,--Added by Lakshmi for CR6012
        extract ( value (d), '//GuidanceRefreshDateGMT/text()', i_xmlnamespace). getstringval ()      AS GuidanceRefreshDateGMT, --Added by Lakshmi for CR6012
        extract ( value (d), '//NonDiscFl/text()', i_xmlnamespace). getstringval ()                        AS NonDiscFl
        FROM edms_deal_queue x,
          TABLE ( xmlsequence ( extract ( x.xml_data_xml, 'DealCreationRequest/Bundles/LineItemBD/BundleLines/BundleLine', i_xmlnamespace))) d
        WHERE x.deal_creation_guid =i_deal_creation_guid
        )
      WHERE parentindex                                         =recbd.bundleindex
      AND BUNDLELINE_SOURCE                                     =RECBD.BUNDLESOURCE
      /*  AND (LTRIM(RTRIM(SKU)),DECODE(OPTCD,NULL,' ',OPTCD)) NOT IN
        (SELECT LTRIM(RTRIM(PROD_GNRC_NR_TX)),
          DECODE(PROD_OPT_CD,NULL,' ',PROD_OPT_CD)
        FROM BUNDLE_LINE BL
        WHERE BL.BD_ID=I_BD_ID
        AND LINE_NR   =L_BUNDLE_LINE_NR
        )  */
      --)
      --LOOP */
        FOR recbdline IN
      (
            SELECT GUID,
                   AUTH_BASIS_DESC AS AUTHBASISDESC,
                   AUTH_DATE AS authdate,
                   AUTH_DATE_GMT AS authdategmt,
                   AUTH_EMP_NR AS authempnr,
                   AUTH_EMP_EMAIL AS authempemail,
                   AUTH_STAT_CD AS authstatcd,
                   BD_NET_AMT AS bdnetamt,
                   LIST_PRICE AS LISTPRICE,
                   PROD_LINE_CD AS pl,
                   PROD_DESC AS proddesc,
                   QTY AS qty,
                   SKU AS sku,
                   STD_DISC_PCT AS stddiscpct,
                   PARENT_INDEX AS parentindex,
                   BUNDLE_LINE_SOURCE AS bundleline_source,
                   OPT_CD AS OPTCD,
                   COST_PRICE AS CostPrice,
                   BANDED_FL AS bandedfl,
                   to_number(NVL(EXT_LINE_ITEM_NR,0)) AS ExtLineItemNr,
                   EXT_PRE_APPRV_PRICE AS ExtPreApprvPrice,
                   GUIDANCE_AVAIL_FL AS GuidanceAvailFl,
                   GUIDANCE_DETAILS_ID AS GuidanceDetailsID,
                   GUIDANCE_DISC_EXPERT_PCT AS GuidanceDiscExpertPct,
                   GUIDANCE_DISC_FLOOR_PCT AS GuidanceDiscFloorPct,
                   GUIDANCE_TYPICAL_PCT AS GuidanceDiscTypicalPct,
                   GUIDANCE_REFRESH_DATE_GMT AS GuidanceRefreshDateGMT,
                   NON_DISC_FL AS NonDiscFl
                   ,INSTANT_PRC_METHOD AS InstantPrcMethod---Added for US 7301
                  ,INSTANT_PRC_AMT AS InstantPrcAmt---Added for US 7301
                  ,CONTRA_AMT AS ContraAmt---Added for US 7301
                  , USE_EXT_LIST_PRICE AS UseExternalListPriceFl
              FROM ECLIPSE.GT_XML_BUNDLE_Line
             WHERE
                        GUID =i_deal_creation_guid
                    AND PARENT_INDEX = recbd.bundleindex
                    AND BUNDLE_LINE_SOURCE =RECBD.BUNDLESOURCE
                    order by ExtLineItemNr --4-mar-2015 by Harsh Shah - CR 202569-[Channel_PST][US-7832]The products sequence in eclipse is not consistent with BMI page
                      /*   AND (LTRIM(RTRIM(SKU)),DECODE(OPT_CD,NULL,' ',OPT_CD)) NOT IN
                                (SELECT LTRIM(RTRIM(PROD_GNRC_NR_TX)),
                                  DECODE(PROD_OPT_CD,NULL,' ',PROD_OPT_CD)
                                FROM BUNDLE_LINE BL
                                WHERE BL.BD_ID=I_BD_ID
                                AND LINE_NR   =L_BUNDLE_LINE_NR
                  ) */
          )
      LOOP

        ---Added for eprime/BMI deal creation
        IF recbdline.authempnr IS NULL AND recbdline.authempemail IS NOT NULL THEN
          recbdline.authempnr  :=get_emp_nr(recbdline.authempemail);
        END IF;
        IF (lower(i_dealsourcecd) ='eprime' AND i_dealvertocreate = 0) THEN --aded to not authorise if eprime deal version to be created is 0
          recbdline.AuthBasisDesc:=NULL;
          recbdline.AuthDate     :=NULL;
          recbdline.AuthDateGMT  :=NULL;
          recbdline.authempnr    :=NULL;
          recbdline.authempemail :=NULL;
          recbdline.AuthStatCD   :='N';
        END IF;

        --l_bundle_dtl_line_nr:=l_bundle_dtl_line_nr+1;

        --Changes made by Lakshmi as part of eRFC for ExtLineItemNr
        new_l_bundle_dtl_line_nr := new_l_bundle_dtl_line_nr +1;

         --Changes made by Lakshmi as part of eRFC for ExtLineItemNr
        IF recbdline.ExtLineItemNr is NULL THEN
                l_bundle_dtl_line_nr:=new_l_bundle_dtl_line_nr;
        ELSE
                l_bundle_dtl_line_nr := recbdline.ExtLineItemNr;
        END IF;
     l_errors:='Bundle Line Detail SKU : ' || recbdline.sku || ' OptCode : ' || recbdline.OptCd || ' Bundle Source ' || recbd.bundlesource || ' Config : ' || RECBD.CONFIGID || ' Bundle Parent Index ' || recbdline.ParentIndex;

     dbms_OUTPUT.put_line('Bundle Componenet details: '||l_errors);

        --Check if auth basis description is null
        IF (i_dealsourcedealtype    <>Con_HIGH_TOUCH_DEALTYPE_DESC AND i_dealapprfl='Y') THEN
          IF ( recbdline.authstatcd <>'Y' AND recbdline.authstatcd <>'N' )THEN
            L_ERRORS                :='Invalid value for Auth Stat Code : ' || recbdline.authstatcd || ' for ' || l_errors;
            l_msg_type              :='ERROR';
            raise REJECT_BUNDLE;
          END IF;
          IF recbdline.authstatcd                     ='Y' THEN
            IF LTRIM(RTRIM(recbdline.authbasisdesc)) IS NULL THEN
              L_ERRORS                               :='Auth Basis Description is empty for the ' || l_errors;
              l_msg_type                             :='ERROR';

              raise REJECT_BUNDLE;
            elsif ltrim(rtrim(recbdline.authempnr)) IS NULL THEN
              L_ERRORS                              :='Auth Emp Nr is empty for the ' || l_errors;
              l_msg_type                            :='ERROR';
              raise REJECT_BUNDLE;
            elsif is_user_exists(recbdline.authempnr
            ,i_dealsourcecd --Added for US-9408 --> Encore Retirement  
            ) ='N' THEN
              L_ERRORS                               :='Invalied Auth Emp Nr : ' || recbd.authempnr || ' for the ' || l_errors;
              l_msg_type                             :='ERROR';
              raise REJECT_BUNDLE;
            END IF;
          END IF;
        END IF;
        --add the below conditions for eprime as eprime can authorise a product even if it is a high_touch deal
        IF (lower(i_DEALSOURCECD)                 ='eprime' AND i_dealsourcedealtype = Con_HIGH_TOUCH_DEALTYPE_DESC ) THEN
          IF recbd.authstatcd                     ='Y' THEN
            IF LTRIM(RTRIM(recbd.authbasisdesc)) IS NULL THEN
              L_ERRORS                           :='Auth Basis Description is empty for the ' || l_errors;
              l_msg_type                         :='ERROR';
              raise REJECT_BUNDLE;
            elsif ltrim(rtrim(recbd.authempnr)) IS NULL THEN
              L_ERRORS                          :='Auth Emp Nr is empty for the ' || l_errors;
              l_msg_type                        :='ERROR';
              raise REJECT_BUNDLE;
            elsif is_user_exists(recbd.authempnr
            ,i_dealsourcecd --Added for US-9408 --> Encore Retirement  
            ) ='N' THEN
              L_ERRORS                           :='Invalied Auth Emp Nr : ' || recbd.authempnr || ' for the ' || l_errors;
              l_msg_type                         :='ERROR';
              raise REJECT_BUNDLE;
            END IF;
          END IF;
        END IF;---end of new condition for ePrime--
        L_AUTH_DATE_GMT           :=NULL;
        IF (RECBDLINE.AUTHDATEGMT IS NOT NULL OR RECBDLINE.AUTHDATEGMT<>'') THEN
          L_AUTH_DATE_GMT         :=TO_TIMESTAMP ( SUBSTR(RECBDLINE.AUTHDATEGMT,1,19),'YYYY-MM-DD"T"HH24:MI:SS');
        ELSE
          L_AUTH_DATE_GMT:=NULL;
        END IF;
        L_AUTH_MC_DATE:=NULL;
        --Get Auth MC date from XML and convert it to oracle date time format
        IF (RECBDLINE.AUTHDATE IS NOT NULL OR RECBDLINE.AUTHDATE<>'') THEN
          L_AUTH_MC_DATE       :=TO_TIMESTAMP ( SUBSTR(RECBDLINE.AUTHDATE,1,19),'YYYY-MM-DD"T"HH24:MI:SS');
        ELSE
          L_AUTH_MC_DATE:=NULL;
        END IF;
      L_AUTH_BDNET_AMT          :=NULL;
        --L_EXT_PRE_APPRV_PRC_AM := NULL;
        L_PROD_COST_PRICE_HDR_PROD:=0;

        l_auth_bdnet_amt:=NULL;
      --bundle desc is not required for Bundle Lines. It is only for the bundle Header Level.
        L_HDR_PROD_STD_DISC:=0; --initializing to zero as we don't need this for bundle line. Bundle line has got std disc values in XML
        --dbms_output.PUT_LINE (' bundle line std disc : ' || RECBDLINE.STDDISCPCT || ' bundle line No : ' || L_BUNDLE_DTL_LINE_NR || ' Banded Flag : ' || recbdline.bandedfl);
    --dbms_OUTPUT.put_line('Bundle component passsed: '||RECBDLINE.SKU||'  with option code: '||RECBDLINE.OPTCD||' new_l_bundle_dtl_line_nr: '||new_l_bundle_dtl_line_nr||' BD_ID: '||i_bd_id);
        BMI_INSERT_PROD_LINE ( I_BD_ID, I_BD_NR,I_BD_VERSION_NR, RECBDLINE.AUTHSTATCD,null,null,null, null, null, null,null, I_DEAL_CREATION_GUID, I_COUNTRY_CD,I_PRICE_LIST_CD,I_CURRENCY_CD, I_PRICE_TERM_CD,
        RECBDLINE.SKU,'N',I_HIERARCHY_CD,
        i_deal_end_date,'BD', RECBDLINE.LISTPRICE,RECBDLINE.AUTHBASISDESC, RECBDLINE.QTY, RECBDLINE.BDNETAMT , RECBDLINE.AUTHEMPNR, l_auth_generic_emp_nr,
        RECBD.ADDEDBYEMPNR,RECBD.PRICINGTYPECD,L_BUNDLE_DTL_LINE_NR ,i_deal_end_date,'Y','N',RECBD.BUNDLESOURCE, L_BUNDLE_CONFIG,L_SOURCE_CONFIG_ID ,
        RECBDLINE.STDDISCPCT, L_BUNDLE_LINE_NR,RECBDLINE.AUTHSTATCD,RECBDLINE.OPTCD,NULL,L_AUTH_DATE_GMT,L_AUTH_MC_DATE,i_DEALSOURCEDEALTYPE, 0,NULL,
        RECBDLINE.PL,NULL,RECBDLINE.COSTPRICE,L_PROD_COST_PRICE_HDR_PROD,i_busmodelcd,NULL,l_line_auth_type, NULL,NULL,NULL, l_create_new_version,recbdline.bandedfl,
        recbd.bmi_doc_no,recbdline.proddesc, recbdline.ExtPreApprvPrice,recbd.listprice,recbd.bdnetamt, recbd.DisplayCompPrcFl,
        recbdline.GuidanceAvailFl,recbdline.GuidanceDetailsID,recbdline.GuidanceDiscExpertPct,recbdline.GuidanceDiscFloorPct,recbdline.GuidanceDiscTypicalPct,recbdline.GuidanceRefreshDateGMT, recbdline.NonDiscFl
        ,recbdline.InstantPrcMethod ,recbdline.InstantPrcAmt  ,recbdline.ContraAmt ---Added for US 7301
        ,recbd.UseExternalListPriceFl
        ); --Added by Ramesh on 17-Feb-2014 for R8

        l_auth_bdnet_amt:=NULL;
        --L_EXT_PRE_APPRV_PRC_AM := NULL;

      END LOOP;

      --l_bundle_dtl_line_nr:=1;
      new_l_bundle_dtl_line_nr:=0;

      replace_date_range( L_line_nr,
                          i_bd_id ,
                          L_return_status );

      --DBMS_OUTPUT.PUT_LINE(' Inserting data back into bundle_line table in ReplaceBundles procedure');

                        IF L_RETURN_STATUS<>'SUCCESS' THEN
                            --DBMS_OUTPUT.PUT_LINE('Error occured in add_date_range procedure');
                                    inserterror_output_messages (i_bd_id,i_bd_nr,i_bd_version_nr, null,null,null,null, null,null,null,L_return_status,'WARNING', i_deal_creation_guid,NULL,NULL
                                ,L_return_status);
                                ELSE
                                DBMS_OUTPUT.PUT_LINE('No Error occured in add_date_range procedure');
                            END IF;
 end loop;
END ReplaceBundles;
PROCEDURE replace_date_range( in_line_nr IN NUMBER,
                          in_bd_id IN NUMBER,
                          out_status OUT VARCHAR2)
IS
l_version_created NUMBER;
l_upper_bndry_dt DATE;
l_scale_id line_disc_scale.scale_id%TYPE;
new_upper_bndry_date LINE_DISC_SCALE.upper_bndry_dt%TYPE;
new_lower_bndry_date LINE_DISC_SCALE.lower_bndry_dt%TYPE;
old_upper_bndry_date LINE_DISC_SCALE.upper_bndry_dt%TYPE;
old_lower_bndry_date LINE_DISC_SCALE.lower_bndry_dt%TYPE;
upper_bndry_eq_lower_bndry VARCHAR2(1):='N';
deal_end_date deal.end_dt%TYPE;
BEGIN

--Get the version_created and upper boundary date from DEAL table.
    SELECT bd_version_nr, end_dt
    INTO l_version_created, deal_end_date
    FROM deal
    WHERE bd_id=in_bd_id;
-----------------------------------------------------------------------------------------------
  --Deleting Extra Date Ranges
 -----------------------------------------------------------------------------------------------


SELECT MAX(scale_id)-1 INTO l_scale_id
   FROM line_disc_scale
 WHERE bd_id=in_bd_id
AND line_nr=in_line_nr;

--DBMS_OUTPUT.PUT_LINE (' Max  scale id : ' || l_scale_id );

  new_lower_bndry_date := SYSDATE;

SELECT upper_bndry_dt,lower_bndry_dt
        INTO old_upper_bndry_date , old_lower_bndry_date
        FROM line_disc_scale
        WHERE bd_id = in_bd_id
        AND line_nr = in_line_nr
        AND scale_id = l_scale_id;

        --DBMS_OUTPUT.PUT_LINE('Deal End date: '||deal_end_date);
        --DBMS_OUTPUT.PUT_LINE('Current date range: '||old_lower_bndry_date||' - '||old_upper_bndry_date);

new_lower_bndry_date := SYSDATE;
new_upper_bndry_date := deal_end_date;

old_upper_bndry_date := SYSDATE-1;

IF (old_upper_bndry_date < old_lower_bndry_date) THEN
    old_upper_bndry_date := old_lower_bndry_date;
    new_lower_bndry_date := old_upper_bndry_date+1;
END IF;

IF new_upper_bndry_date < SYSDATE THEN
    new_lower_bndry_date := SYSDATE;
END IF;

IF old_upper_bndry_date = old_lower_bndry_date THEN
    new_lower_bndry_date := old_upper_bndry_date + 1;
END IF;

--DBMS_OUTPUT.PUT_LINE('New Upper boundary date: '||  new_upper_bndry_date);
--DBMS_OUTPUT.PUT_LINE('New Lower boundary date: '||  new_lower_bndry_date);
--DBMS_OUTPUT.PUT_LINE('Previous Upper boundary date: '||  old_upper_bndry_date);
--DBMS_OUTPUT.PUT_LINE('Previous Lower boundary date: '||old_lower_bndry_date);

UPDATE line_disc_scale SET upper_bndry_dt=new_upper_bndry_date,
                                            lower_bndry_dt= new_lower_bndry_date
                                            WHERE bd_id = in_bd_id AND line_nr = in_line_nr AND scale_id = l_scale_id+1;

UPDATE line_disc_scale SET upper_bndry_dt=old_upper_bndry_date,
                                            lower_bndry_dt= old_lower_bndry_date
                                            WHERE bd_id = in_bd_id AND line_nr = in_line_nr AND scale_id = l_scale_id;

    --DBMS_OUTPUT.PUT_LINE('add_date_range 4');

    out_status :='SUCCESS';
    EXCEPTION
    WHEN OTHERS THEN
    out_status := 'An error was encountered while updating Date range - for line_nr: '|| in_line_nr ||', '||
    SQLCODE || ' -ERROR- ' || SQLERRM || '. Error at Line : ' || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE();
    --dbms_output.PUT_LINE (OUT_STATUS);
    --RAISE;

END replace_date_range;

--The below procedure is created for US-7331- Eclipse Deal Sync Eclipse Processing
--This procedure updates the existing version of the deal and does not create new deal.
Procedure BMIUpdateDeal (
i_deal_creation_guid IN VARCHAR2,
    p_result OUT sys_refcursor,
    p_prod_details             OUT SYS_REFCURSOR)

IS
l_risk_reasion_desc VARCHAR2(100);
l_risk_desc gt_edms_smqt_err_results.risk_desc%type;
l_xml_path_to_Query varchar2(100);
L_GenerateOPGNbrFl varchar2(1):='N';
l_quotedbyempnr deal.quote_hp_emp_nr%type;
l_quoted_by_user_id user_tab.user_id%type;
l_high_list_line_nr bundle_line.line_nr%type;
l_high_list_pl bundle_line.assoc_pl%type;
p_addLineItemsErrors sys_refcursor;
l_deal_creator_dc deal.init_hp_emp_nr%type;
l_dealapprfl  deal.bdme_aprvl_cd%TYPE;
l_dealquotefl deal.quote_dist_cd%TYPE;
l_dealroutefl VARCHAR2 (1);
l_dealvertocreate deal.bd_version_nr%type;
l_source_BD_ID DEAL.BD_ID%TYPE;
l_source_BD_NR DEAL.BD_NR%TYPE;
l_source_BD_VERSION_NR DEAL.BD_VERSION_NR%TYPE;
L_ERRORS edms_deal_error_report.error_msg%TYPE;--varchar2(1000);--Modified this to 1000 as part of CR: 265727
l_message varchar2(2000);
l_requesttype  VARCHAR2 (30);
l_xmlnamespace VARCHAR2 (250);
l_bd_id deal.bd_id%type;
l_new_bd_nr deal.bd_nr%type;
l_new_bd_version_nr deal.bd_version_nr%type;
L_ECLIPSE_USER_ID user_tab.user_id%type;
l_reccount NUMBER;
I_ERROR_MESSAGE VARCHAR2(2000);
l_region ww_cntry.region%type;
l_high_risk_fl      VARCHAR2(1):='N';
L_RISK_REASON VARCHAR2(300);
l_msg_type                 VARCHAR2(15);
L_O_DCTEXPIRETHRESHOLDPCT BUS_MODEL.MAX_QTY_THRESHOLD_PCT%type;
l_bd_version_nr deal.bd_version_nr%TYPE;
l_bus_justify_reqd_fl bus_model.bus_justify_reqd_fl%type;
l_deal_prog_cd      deal.deal_prog_cd%TYPE :='U';
l_bdme_aprvl_cd     deal.bdme_aprvl_cd%TYPE:='N';
l_quote_dist_cd     deal.quote_dist_cd%TYPE:='N';
l_bus_justify_bd_id deal.bd_id%type;
l_is_all_lines_authorized VARCHAR2(1):='N';
C_HIGH_TOUCH_DEALTYPE_DESC    CONSTANT VARCHAR2(15)  :='HIGH_TOUCH';
l_euv_at_won_fl bus_model.euv_at_won_fl%type;
out_error_message VARCHAR2(2000);
l_deal_unlock_error_msg varchar2(300);
l_ext_quote_version  DEAL.DEAL_SOURCE_EXT_QUOTE_NR%TYPE;
l_mcchargecd deal.mc_charge%type;
l_countrycd deal.control_cntry_cd%type;
--variables for new version creation procedure
a_out1              NUMBER (10);
a_out2              NUMBER (10);
a_out3              VARCHAR2 (500);
a_out4              VARCHAR2 (500);
a_out5              VARCHAR2 (500);
a_out6              VARCHAR2 (500);
a_out7              VARCHAR2 (500);

L_DEALSOURCECD DEAL.DEAL_SOURCE_CD%type;
l_dealsourcedealtype deal.deal_source_deal_type%type;
l_dealsourcekeyval deal.deal_source_keyval%type;
l_COUNTRY_CD DEAL.CONTROL_CNTRY_CD%TYPE;
l_price_term_cd deal.price_term_cd%type;
l_price_list_cd deal.price_list_cd%type;
l_currency_cd deal.curr_cd%type;
l_hierarchy_cd deal_matrix.hierarchy_cd%type;
l_busmodelcd DEAL.BUS_MODEL_CD%TYPE ;
l_begin_date deal.beg_dt%type;
l_end_date deal.end_dt%type;
l_guid_exists Number (5);
l_ExtQuoteNr deal.DEAL_SOURCE_EXT_QUOTE_NR%TYPE;
o_success_fl VARCHAR2(1);
l_rslra_proid NUMBER;                                   -- Added as a temporary solution
l_rslrb_proid NUMBER;                                   -- Added as a temporary solution
l_rslr_a_added          VARCHAR2(1):='N';
l_rslr_b_added          VARCHAR2(1):='N';
l_dealdescription deal.deal_desc_tx%type;
l_engagement_model default_bm.ENGAGEMENT_MODEL%TYPE;--VARCHAR2(2000);  Commented VARCHAR2 as part of EDMS Hardening process
l_cust_seg_cd deal.cust_seg_cd%TYPE;
l_leadbusgroup deal.lead_bus_grp%type;
l_quotedbyempemail employee.email_unix_addr_tx%type;-----email change for ePrime and BMI
new_version_Mc_charge deal.mc_charge%TYPE;

--Exceptions
blank_source_bdnr     exception;
INVALID_GUID     exception;
REJECT_VERSION_UPDATE EXCEPTION;
start_time NUMBER;
end_time NUMBER;
l_v$instance VARCHAR2(200);

--List of variables added by Lakshmi on 9/16/2014 to send emails when deal goes to High Risk:
l_app_value APP_CONFIG_KEYS.app_value%TYPE;
l_from_address eclp_email_template.email_from_id%TYPE;
l_email_subject eclp_email_template.EMAIL_SUBJECT_TX%TYPE;
l_email_body eclp_email_template.EMAIL_BODY_TX%TYPE;
l_to_address  VARCHAR2(4000);
emp_email_address eclp_email_template.email_from_id%TYPE;
receipient_email_address VARCHAR2(4000);
l_cntry_cd deal.control_cntry_cd%TYPE;
l_bus_model_cd deal.bus_MODEL_CD%TYPE;
l_euc_cmpny_Nm deal.eu_cmpny_nm%TYPE;
l_tenantid deal.tenantid_data_cd %type;--l_tenantid deal.tenantid %type;---Added For SMO Changes (tenantid column is replaced with tenantid_data_cd for Federal project)

--Variable added by Lakshmi on 1/29/2015 for UpdateDeal- US7331
l_add_date_range VARCHAR2(1) :='Y';
--l_is_all_lines_authorized VARCHAR2(1) :='N';
TEMP_TABLE_FAILURE EXCEPTION;

--Below variables Added for CR: 265727
null_list_price_products VARCHAR2(4000); 
i_bundle_header_string VARCHAR2(4000);
i_line_item_string VARCHAR2(4000); 
i_bundle_lines_string VARCHAR2(4000); 
--End of variables added for CR:265727

l_won_lost_prob_pct deal.w_l_prob%TYPE; --New variable added by Lakshmi to update Won/Loss probability while creating new version
l_prc_pro_cd deal.prc_pro_cd%type; --New variable added by Lakshmi to update Price Protection Code while creating new version

l_created_by deal.created_by%TYPE; --New variable added by Lakshmi for Aruba
l_product_mix deal.product_mix%TYPE; --New variable added by Lakshmi for Aruba

BEGIN

start_time := dbms_utility.get_time();

  DELETE
  FROM edms_deal_error_report
  WHERE DEAL_CREATION_GUID = I_DEAL_CREATION_GUID;

  DELETE FROM GT_EDMS_SMQT_ERR_RESULTS;

  COMMIT;

  IF (i_deal_creation_guid IS NULL OR i_deal_creation_guid = ' ') THEN
    l_errors               :=' Deal Creation Guid is blank ';
  END IF;

  --xml namespace declaration
  L_XMLNAMESPACE := 'xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://schemas.datacontract.org/2004/07/HP.Eclipse.Data.EDMS"' ;

  --dbms_output.put_line ('checking whether guid exists');
  select count(*)  into l_guid_exists from edms_deal_queue where deal_creation_guid=i_deal_creation_guid;

  if l_guid_exists<=0 then
    l_errors :=' Invalid GUID. Could not get the deal details. GUID Ref No: ' || i_deal_creation_guid;
    RAISE INVALID_GUID;
  else
          --dbms_output.put_line (' Guid exists ');
          NULL;
  end if;

  --Get the source BD Nr from XML
  if getsqtxmlvalue ( '/DealRequestSource/SourceDealNr/', i_deal_creation_guid) =' ' then
    L_source_bd_nr:=-1;
    RAISE BLANK_SOURCE_BDNR;
  else
    L_source_bd_nr      := nvl(getsqtxmlvalue ( '/DealCreationRequest/DealRequestSource/SourceDealNr/', i_deal_creation_guid),0);     --tag from new  xml
  end if;

--dbms_output.PUT_LINE ('Source BD NR is : ' || l_source_bd_nr);

  --Get basic deal data
  --Get basic XML details to process the line item inserts.
  l_dealsourcecd      := getsqtxmlvalue ( '/DealCreationRequest/DealRequestSource/ExtSourceCD/', i_deal_creation_guid);     --tag from new  xml
   l_extquotenr       := getsqtxmlvalue (' /DealCreationRequest/DealRequestSource/ExtQuoteNr/', i_deal_creation_Guid);
  l_dealsourcedealtype  := getsqtxmlvalue ( '/DealCreationRequest/DealRequestSource/DealCreationType/', i_deal_creation_guid);--tag from new xml
  l_dealsourcekeyval := getsqtxmlvalue ( '/DealCreationRequest/DealRequestSource/ExtUniqueKey/', i_deal_creation_guid);---tag from new xml
  --<DealActions>
  l_dealapprfl      := getsqtxmlvalue ('/DealCreationRequest/DealActions/DealApprFl/', I_deal_creation_guid);
  l_dealquotefl     := getsqtxmlvalue ('/DealCreationRequest/DealActions/DealQuoteFl/', i_deal_creation_guid);
  l_dealroutefl     := getsqtxmlvalue ('/DealCreationRequest/DealActions/DealRouteFl/', i_deal_creation_guid);
  l_dealvertocreate := getsqtxmlvalue ( '/DealCreationRequest/DealActions/DealVerToCreate/', i_deal_creation_guid);
  l_quotedbyempnr    := getsqtxmlvalue ('/DealCreationRequest/DealActions/QuotedByHPEmployee/EmployeeNr/', i_deal_creation_guid); ---new eprime change
  l_quotedbyempemail :=getsqtxmlvalue ('/DealCreationRequest/DealActions/QuotedByHPEmployee/EmailAddress/', i_deal_creation_guid);---new eprime change
  l_quotedbyempemail := LOWER(l_quotedbyempemail);
  l_GenerateOPGNbrFl := getsqtxmlvalue ( '/DealCreationRequest/DealActions/GenerateOPGNbrFl/', i_deal_creation_guid);
  l_dealdescription       := getsqtxmlvalue ( '/DealCreationRequest/DealHeader/DealDescription/', i_deal_creation_guid);
  
  l_created_by        := getsqtxmlvalue ( '/DealCreationRequest/DealHeader/Createdby/', i_deal_creation_guid);
  l_product_mix        := getsqtxmlvalue ( '/DealCreationRequest/DealHeader/ProductMix/', i_deal_creation_guid);

--Below code added by Lakshmi to read Price Protection Code from XML.
 --l_prc_pro_cd := NVL(getsqtxmlvalue ( '/DealCreationRequest/DealHeader/ProtectionCD/', i_deal_creation_guid),'O');
 l_prc_pro_cd := NVL(getsqtxmlvalue ( '/DealCreationRequest/DealHeader/ProtectionCD/', i_deal_creation_guid),'N'); --Changed O to N for CR:281985
 
  l_rtm                     := getsqtxmlvalue ('/DealCreationRequest/DealHeader/RTM/',i_deal_creation_guid);
  
  l_won_lost_prob_pct :=getsqtxmlvalue ( '/DealCreationRequest/DealWonLostStat/WonLostProbPct/', i_deal_creation_guid); --New Variable added by Lakshmi to update Won/Loss probability
  
  --Get the deal creator from the source deal
    select init_hp_emp_nr,  bd_id, bd_Version_nr, deal_prog_cd, bdme_aprvl_cd,NVL(tenantid_data_cd,'HPE')--NVL(tenantid,'HPE')--Added for SMO Changes (tenantid column is replaced with tenantid_data_cd for Federal project)
    INTO l_deal_creator_dc, l_bd_id, l_new_bd_version_nr, l_deal_prog_cd, l_bdme_aprvl_cd,l_tenantid---Added for SMO Changes
    from deal
    where bd_nr=l_source_bd_nr and current_version_fl='Y';
    
    --New Code added by Lakshmi to update Won/Loss probability
        UPDATE deal 
            SET     w_l_prob = NVL(l_won_lost_prob_pct ,0)
                    , prc_pro_cd = l_prc_pro_cd  --New parameter added by Lakshmi to update Price Protection Code
                    ,created_by = NVL(l_created_by, created_by)  --New variable added by Lakshmi for Aruba
                    ,product_mix = NVL(l_product_mix, product_mix)  --New variable added by Lakshmi for Aruba
        WHERE bd_id=l_bd_id;
        
     L_ECLIPSE_USER_ID         :=getValid_Eclipse_UserID(L_DEAL_CREATOR_DC,L_ERRORS);

    IF LOCKDEAL(L_source_bd_nr,l_eclipse_user_id,l_errors)='N' THEN
      inserterror_output_messages ( NULL,NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, 'ERROR', i_deal_creation_guid, NULL,NULL,l_errors);
      RAISE REJECT_VERSION_UPDATE;
  else
    NULL;
  END IF;

DELETE FROM gt_XML_BUNDLE WHERE guid=I_DEAL_CREATION_GUID;
DELETE FROM gt_XML_BUNDLE_LINE WHERE guid=I_DEAL_CREATION_GUID;
DELETE FROM gt_XML_LINE_ITEM WHERE guid=I_DEAL_CREATION_GUID;
  
  
  IF FILL_TEMP_TABLES(I_DEAL_CREATION_GUID,L_XMLNAMESPACE)='N' THEN
        --DBMS_OUTPUT.PUT_LINE ('eRROR IN TEMP TABLE ');
    RAISE TEMP_TABLE_FAILURE;
  END IF;

    --Open the deal, if the deal is Approved / Rejected
    IF (l_deal_prog_cd='F' OR l_bdme_aprvl_cd IN ('D','S') ) THEN
        UPDATE deal SET deal_prog_cd='U'
                                , bdme_aprvl_cd='N'
                                , quote_dist_cd='N'  WHERE bd_id=l_bd_id;
            FOR line_item_query IN (SELECT line_nr FROM line_item WHERE bd_id=L_bd_id  AND LINE_AUTH_TYPE<>'BDM')
            LOOP
                    clear_auth(l_bd_id ,
                            line_item_query.line_nr,
                            i_deal_creation_guid);
            END LOOP;
END IF;

--dbms_OUTPUT.put_line('Updating deal status to Open');

SELECT count(*) INTO a_out1 FROM deal_timings WHERE bd_id=l_bd_id AND start_code IN ('REJECTED', 'CANCELLED') ;

 --To check
IF a_out1 >0 THEN
    UPDATE deal SET status_tx=NULL WHERE bd_id= l_bd_id;
    ins_deal_timings(l_bd_id,sysdate, l_deal_creator_dc,sysdate,l_deal_creator_dc,'DC02',NULL,'CREATEVER','CREATEVER');
    UPDATE deal_timings SET reason_cd=' ' WHERE bd_id=l_bd_id AND reason_cd IS NULL AND stop_code='REJECTED';
END IF;

--    UPDATE deal SET status_tx=NULL WHERE bd_id= (SELECT bd_id FROM deal_timings WHERE bd_id=l_bd_id AND start_code='REJECTED');
--    dbms_OUTPUT.put_line('Updated deal status to Open');
--
--    DELETE FROM deal_timings WHERE bd_id=l_bd_id AND start_code='REJECTED';
--    dbms_OUTPUT.put_line('Removed Rejected deal status from Deal_Timings table');

    --The below lines ensure that no new date ranges is added, as the deal is Open
    l_add_date_range :='N';

  l_ext_quote_version := getsqtxmlvalue ( '/DealCreationRequest/DealRequestSource/ExtQuoteVersion/', i_deal_creation_guid); --tag from new  BMI xml
   --Get deal details
   BEGIN
         select beg_dt, end_dt, control_cntry_cd, price_list_cd,price_term_cd, curr_cd,
         bus_model_cd,region,lead_bus_grp,cust_seg_cd,control_cntry_cd
          into
              l_begin_date,
              l_end_date,
              l_COUNTRY_CD ,
              l_price_list_cd ,
              l_price_term_cd,
              l_currency_cd,
              l_busmodelcd ,
              l_region,
              l_leadbusgroup,
              l_cust_seg_cd,
              l_countrycd
          from deal where BD_ID=l_bd_id and current_version_fl='Y';
  EXCEPTION

  WHEN NO_DATA_FOUND THEN
    l_errors:='Unable to get new deal version details for the BD_NR :' || l_source_bd_nr;
    --dbms_output.PUT_LINE (l_errors);
    raise REJECT_VERSION_UPDATE;
  END;

    get_list_prices_from_gypsy
        (l_COUNTRY_CD,
        l_price_list_cd,
        l_currency_cd,
        l_price_term_cd,
        i_deal_creation_guid,
        'N',
        l_hierarchy_cd,
        l_end_date);

        --Added for CR: 265727
        BEGIN        
                SELECT LISTAGG(sku||NVL(opt_cd,''),',')WITHIN GROUP(ORDER BY SKU) 
                INTO i_bundle_lines_string 
            FROM gt_XML_BUNDLE_LINE gtbl
                WHERE gtbl.sku NOT IN (SELECT prod_nr FROM gt_product_bundles_prices)
                AND guid=i_deal_creation_guid;
            
            SELECT LISTAGG(sku||NVL(opt_cd,''),',')WITHIN GROUP(ORDER BY SKU) 
              INTO i_bundle_header_string
                            FROM gt_XML_BUNDLE gtb
                WHERE gtb.sku NOT IN (SELECT prod_nr FROM gt_product_bundles_prices)
                AND guid=i_deal_creation_guid;
                
                SELECT LISTAGG(sku||NVL(opt_cd,''),',')WITHIN GROUP(ORDER BY SKU) 
                INTO i_line_item_string
                            FROM gt_XML_LINE_ITEM gtb
                WHERE gtb.sku NOT IN (SELECT prod_nr FROM gt_product_bundles_prices)
                AND guid=i_deal_creation_guid;

                null_list_price_products :=SUBSTR(NVL(i_bundle_lines_string,'')||','||NVL(i_bundle_header_string,'')||','||NVL(i_line_item_string,''),1,4000);
                
                null_list_price_products := LTRIM(RTRIM(null_list_price_products,','));
        IF null_list_price_products IS NOT NULL THEN
                l_errors := SUBSTR(('Version update cannot continue, as Product(s): '||null_list_price_products||' not found in Gpsy.'),1,1000);
                DBMS_OUTPUT.PUT_LINE('L_ERRORS: '||l_errors);
                inserterror_output_messages ( NULL,NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, 'ERROR', i_deal_creation_guid, NULL,NULL,l_errors);
                RAISE REJECT_VERSION_UPDATE;
        END IF;
        END;
    --===================================
    --UPDATE DEAL DETAILS FOR NEW VERSION
    --===================================
  BEGIN
UpdateDealDettailsForNewVersio(
        i_deal_creation_guid,
        l_xmlnamespace,
        l_bd_id,
        o_success_fl);

        IF o_success_fl='N' THEN
        l_errors := 'Cannot update deal details for the source deal: '||l_source_bd_nr||' version: '||l_new_bd_version_nr||' Bd_id: '||l_bd_id;
        inserterror_output_messages (l_bd_id,l_source_bd_nr,l_new_bd_version_nr, NULL ,NULL,NULL,NULL, NULL, NULL,NULL,l_errors,'ERROR', I_deal_creation_guid, NULL,NULL,l_errors);
        END IF;

    --===================================
   --ADD NEW LINE ITEMS
   --===================================
--Need to add one more parameter to check if adding new date range is needed or not ?
Add_lineItems(i_deal_creation_guid,L_xmlnamespace,l_bd_id,'N', p_addLineItemsErrors);
        L_hierarchy_cd:='WW';

    --========================
    --DELETE RESELLER A AND B
    --========================
delete_resellers(i_deal_creation_guid,
                 l_bd_id,
                'xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://schemas.datacontract.org/2004/07/HP.Eclipse.Data.EDMS"',
                 out_error_message);


   IF (out_error_message IS NOT NULL) THEN
   l_errors := 'There was an error while deleting the resellers';
   --dbms_output.PUT_LINE('There was an error while deleting the resellers');
   inserterror_output_messages ( NULL,NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, 'ERROR', i_deal_creation_guid, NULL,NULL,l_errors);
   END IF;
   --===============
   --ADD RESELLER A
   --===============
    BEGIN
    SELECT 1
    INTO l_rslra_proid
    FROM edms_deal_queue x,
      TABLE ( xmlsequence ( extract ( x.xml_data_xml, 'DealCreationRequest/ResellerAs/ResellerA',l_xmlnamespace))) d
    WHERE x.deal_creation_guid                                                = i_deal_creation_guid
    AND LENGTH(extract ( value (d), '//PartnerProID/text()',l_xmlnamespace) ) >0;
  EXCEPTION
  WHEN NO_DATA_FOUND THEN
    l_rslra_proid :=0;
  WHEN TOO_MANY_ROWS THEN
    l_rslra_proid :=2;
  END;

  IF (l_rslra_proid >0 )THEN
       l_rslr_a_added:=add_reseller_a_new (i_deal_creation_guid,l_xmlnamespace,l_bd_id,l_country_cd,l_region,l_busmodelcd,l_deal_creator_dc,l_errors);
  ELSE
        l_rslr_a_added:=add_reseller_a_new (i_deal_creation_guid,l_xmlnamespace,l_bd_id,l_country_cd,l_region,l_busmodelcd,l_deal_creator_dc,l_errors);
  END IF;

  IF (L_RSLR_A_ADDED         ='N' AND UPPER(l_rtm) = 'INDIRECT' ) THEN
  --l_dealsourcecd<>c_deal_souce_bmi THEN --Condition added as BMI  is not adding resellers other than default as all the deals are direct deals
    IF lower(l_dealsourcecd)='eprime' THEN                                 --added this condition to alow deal creation with version 0 even routing indicator is not provided for ePrime deals.
            l_msg_type           :='ERROR';
            l_errors             := ' Creating 0 Version deal as reseller A is not added ';
            l_dealvertocreate    :=0;
            --INSERTERROR_OUTPUT_MESSAGES ( l_bd_id, l_source_bd_nr, l_bd_version_nr, l_deal_prog_cd, l_bdme_aprvl_cd, l_quote_dist_cd, l_euv_stat_code, l_high_risk_fl, l_risk_reasion_desc, l_risk_desc, l_errors, l_msg_type, l_deal_creation_guid, NULL, NULL,l_errors);
    ELSE
            --dbms_output.PUT_LINE ('Reseller A not added');
            L_ERRORS  :=l_errors||' Deal cannot be created. Unable to add Reseller A';
            L_MSG_TYPE:=C_M_TYPE_ERROR;

           -- RAISE REJECT_DEAL;
   END IF;
  END IF;

  --===============
  --ADD RESELLER B
  --===============
  ---Added as temporary solution for adding reseler ids
  SELECT COUNT(*)
  INTO l_rslrb_proid
  FROM edms_deal_queue x,
    TABLE ( xmlsequence ( extract ( x.xml_data_xml, 'DealCreationRequest/ResellerBs/ResellerB',l_xmlnamespace))) d
  WHERE x.deal_creation_guid                                                = i_deal_creation_guid
  AND LENGTH(extract ( value (d), '//PartnerProID/text()',l_xmlnamespace) ) >0;
  IF l_rslrb_proid                                                          >0 THEN
    l_rslr_b_added:=add_reseller_B_new (i_deal_creation_guid,l_xmlnamespace,l_bd_id,l_country_cd,l_region,l_busmodelcd,l_deal_creator_dc,l_errors);
  ELSE
    l_rslr_b_added:=add_reseller_B_new (i_deal_creation_guid,l_xmlnamespace,l_bd_id,l_country_cd,l_region,l_busmodelcd,l_deal_creator_dc,l_errors);
  END IF;

  IF L_RSLR_B_ADDED='N' AND (l_dealsourcecd NOT IN ('NGQ','BMI','STS') OR lower(l_dealsourcecd) <> 'eprime' )THEN --Condition added as BMI  is not adding resellers other than default as all the deals are direct deals
    L_ERRORS  :=l_errors ||' Deal cannot be created. Unable to add Reseller B';
    L_MSG_TYPE:=C_M_TYPE_ERROR;
 END IF;

  dbms_output.PUT_LINE ('adding Bundles now ');
  ---------------------------------------------------------------------------------------------------------------
  -- Add bundles / Bundle line items
  ---------------------------------------------------------------------------------------------------------------
  add_bundle_products (i_deal_creation_guid, l_xmlnamespace, l_deal_creator_dc, l_bd_id, l_source_bd_nr, l_new_bd_version_nr, L_dealsourcecd , L_dealvertocreate , L_begin_date , L_end_date , L_dealapprfl , L_dealquotefl ,
  L_dealroutefl , L_COUNTRY_CD , L_price_term_cd , L_price_list_cd , L_currency_cd , L_dealsourcedealtype , L_dealsourcekeyval , L_hierarchy_cd , L_busmodelcd );

  replace_bundle_products (i_deal_creation_guid, l_xmlnamespace, l_deal_creator_dc, l_bd_id, l_source_bd_nr, l_new_bd_version_nr, L_dealsourcecd , L_dealvertocreate , L_begin_date , L_end_date , L_dealapprfl , L_dealquotefl ,
  L_dealroutefl , L_COUNTRY_CD , L_price_term_cd , L_price_list_cd , L_currency_cd , L_dealsourcedealtype , L_dealsourcekeyval , L_hierarchy_cd , L_busmodelcd );


  --This procedure updates the bundle status to HOLD
--Need to add one more parameter to check if adding new date range is needed or not ?
  UpdateBundles(i_deal_creation_guid ,
                l_xmlnamespace,
                l_bd_id,
                l_source_bd_nr,
                l_new_bd_version_nr,
                'N');

ReplaceBundles(i_deal_creation_guid, l_xmlnamespace, l_deal_creator_dc, l_bd_id, l_source_bd_nr, l_new_bd_version_nr, L_dealsourcecd , L_dealvertocreate , L_begin_date , L_end_date , L_dealapprfl , L_dealquotefl , L_dealroutefl ,
    L_COUNTRY_CD , L_price_term_cd , L_price_list_cd , L_currency_cd , L_dealsourcedealtype , L_dealsourcekeyval , L_hierarchy_cd , L_busmodelcd );

--dbms_output.PUT_LINE ('Bundles Replace ..done');

--Update the line_nr in bundle lines. Fix for CR44121.
BEGIN
FOR bl_line_nr IN (SELECT DISTINCT line_nr FROM bundle WHERE bd_id=l_bd_id ) LOOP
UPDATE bundle_line SET item_nr=ROWNUM WHERE line_nr=bl_line_nr.line_nr AND bd_id=l_bd_id
AND Scale_id= (SELECT max(scale_id) FROM line_disc_scale WHERE bd_id=l_bd_id);
END LOOP;
EXCEPTION
WHEN OTHERS THEN
 l_msg_type              :='ERROR';
 l_errors                := 'Could not update bundle line item numbers: '||SQLERRM;
        PKGEDMSDEALCREATIONV2_R14.INSERTERROR_OUTPUT_MESSAGES ( l_bd_id, NULL,NULL,null, NULL,NULL,NULL,NULL,NULL,NULL, l_errors, l_msg_type, i_deal_creation_guid, NULL, NULL,l_errors);
END;

--This procedure should be called after adding products to the deal.- Change made by Lakshmi on 10/17/2014 for CR162108-Date Range set in past
  --Update end date of the new version of the deal.
    update_deal_enddate  ( l_bd_id,
                           i_deal_creation_guid,
                           l_errors);
    IF (l_errors <>'SUCCESS') THEN
    inserterror_output_messages ( l_bd_id,L_SOURCE_BD_NR, a_out2,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, 'WARNING',
     i_deal_creation_guid, NULL,NULL,l_errors);
    END IF;

--call the procedure which updates the remaining_amt in line_item table.
update_remaining_amt(l_bd_id);

  ---CR 4744 for highest list price PL in bundle product
  bundle_high_list_price(l_bd_id,l_errors);

  --Added by Lakshmi.
  --dbms_output.PUT_LINE ('updating line disc scale');
  update_line_disc_scale( l_bd_id,i_deal_creation_guid,I_ERROR_MESSAGE);

  --Added by Lakshmi.
  --Call the procedure to insert data into deal_pl and update it.
  SELECT region INTO l_region FROM ww_cntry WHERE cntry_cd = l_country_cd;
  -----------------------------------------------------------------------------------------------
  --Calculating /Re-calculating DEAL PL TOTALS
   insert_deal_pl (l_bd_id, l_region, i_deal_creation_guid, I_ERROR_MESSAGE);
 -----------------------------------------------------------------------------------------------
  --*****************************
  --DEAL COMPETITORS
  --*****************************
  --dbms_output.put_line ('Inserting data for deal competitors ');
  INS_COMPETITORS (l_bd_id,i_deal_creation_guid,L_XMLNAMESPACE);
  --dbms_output.PUT_LINE ('Dea competitors entry..done..');

   ----deal Comments
  INS_DEAL_COMMENT_MEMO (l_bd_id , i_deal_creation_guid, L_XMLNAMESPACE);
  --dbms_output.PUT_LINE (' Deal comment memo done');

  --Agent Incentives
  INS_DEAL_PL(l_bd_id , i_deal_creation_guid, L_XMLNAMESPACE , L_REGION, 100 );
  dbms_output.PUT_LINE (' ins deal pl done');

  --Update agent approval flag
  update_agent_aprvl_fl(l_bd_id);

   --calculate deal risk
  --dbms_output.PUT_LINE (' calculate deal risk start ...');
  CALCULATE_DEAL_RISK (l_bd_id,L_RISK_REASON,L_ERRORS);

dbms_output.PUT_LINE (' deal risk errors: ' || L_ERRORS );
dbms_output.PUT_LINE (' deal risk reasons ' || L_RISK_REASON );

--by Harsh Shah 14 Mar 2014
  --Updating Total Bundle Header discount
  IF updatehdrpricingvalues(l_bd_id) ='N' then
     -- dbms_output.PUT_LINE ('Header Pricing values could not be updated');
      NULL;
  END IF;
  --dbms_output.PUT_LINE ('Header Pricing values updated');

  --Added by Lakshmi on 3/7/2015 for CR: 203673 -Failed Different total discounts in Eclipse between Deal Status and Deal Guidance
  calculate_deal_disc_margin_pct (l_bd_id);

  IF (L_ERRORS    IS NULL AND LENGTH(LTRIM(RTRIM(L_RISK_REASON)))>2) THEN
    L_HIGH_RISK_FL:='Y';
    SELECT DECODE ( SUBSTR(l_risk_reason,1,1), ';', SUBSTR(l_risk_reason,2), SUBSTR(l_risk_reason,1) )
    INTO l_errors
    FROM DUAL;
    L_RISK_REASON:='High Risk Reasons : ' || L_ERRORS;
    L_ERRORS     :='WARNING';
    --Dbms_output.put_line (' Deal High Risk Reasons using decode ' || l_risk_reason);
    inserterror_output_messages ( NULL,NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_risk_reason, 'WARNING', i_deal_creation_guid, NULL,NULL,l_risk_reason);

    --dbms_output.PUT_LINE ('901');

--Added by Lakshmi on 9/16/2014 to send mails when deal goes to High Risk
--Changes made by Lakshmi on 9/18/2014
/* BEGIN */
SELECT app_value
  INTO l_app_value
  FROM APP_CONFIG_KEYS
 WHERE app_key LIKE 'HIGH_RISK%';
--dbms_output.PUT_LINE ('902');

SELECT email_from_id, email_subject_tx , email_body_tx
  INTO l_from_address, l_email_subject, l_email_body
  FROM ECLP_EMAIL_TEMPLATE
  WHERE email_template_cd = l_app_value
  and tenantid=l_tenantid; ---Added for SMO changes CR  216348

 SELECT control_cntry_cd,bus_model_cd INTO l_cntry_cd, l_bus_model_cd FROM deal WHERE bd_id=l_bd_id;

 SELECT REPLACE(l_email_subject,'<DEAL.BD_NR>',l_source_bd_nr) INTO l_email_subject FROM DUAL;

 BEGIN
 SELECT eu_cmpny_Nm INTO l_euc_cmpny_Nm FROM deal WHERE bd_nr=l_source_bd_nr AND current_version_Fl='Y';
 EXCEPTION
 WHEN OTHERS THEN
 l_euc_cmpny_Nm := NULL;
 --dbms_output.PUT_LINE ('903');
 END;

 SELECT REPLACE(l_email_subject,'( <Deal.CUSTOMER> )',l_euc_cmpny_Nm) INTO l_email_subject FROM DUAL;

FOR employee_email_list IN (SELECT d.init_hp_emp_nr,
                            d.driving_hp_emp_nr,
                            d.dsm_hp_emp_nr,
                            d.DEAL_LEAD_EMP_NR from deal d
                            where d.bd_id=l_bd_id)
LOOP
IF (is_emp_bmi_default(employee_email_list.init_hp_emp_nr
,l_dealsourcecd --Added for US-9408 --> Encore Retirement  
)='Y')  THEN
    SELECT * INTO emp_email_address FROM (select dc_email  from default_bmi_employee demp where demp.region_cd in (select region from ww_cntry wc where wc.cntry_cd=L_CNTRY_CD)
    AND (upper(route_to_market))=(SELECT DISTINCT DECODE(direct_fl,'Y','DIRECT','INDIRECT') FROM bus_model WHERE bus_model_cd=l_bus_model_cd AND country_cd=L_CNTRY_CD
                                                                                                                                                                                                        AND tenantid =l_tenantid) ---Added for SMO Changes
     AND (demp.country_cd=l_cntry_cd OR country_cd='*' )
     AND tenantid =l_tenantid --Added for SMO changes
     AND source_asset_ID = l_dealsourcecd  --Added for US-9408 --> Encore Retirement  
     ORDER BY COUNTRY_CD DESC)
      WHERE rownum<=1;
        l_to_address := l_to_address||','||emp_email_address;
    --dbms_output.PUT_LINE ('904');
ELSE
        --dbms_output.PUT_LINE ('905');
        SELECT email_unix_addr_tx INTO emp_email_address FROM employee emp WHERE emp_nr=employee_email_list.init_hp_emp_nr
        AND UPPER (emp.emp_stat_cd) = 'ACTIVE';
        l_to_address := l_to_address||emp_email_address;
END IF;

IF (is_emp_bmi_default(employee_email_list.driving_hp_emp_nr
,l_dealsourcecd --Added for US-9408 --> Encore Retirement  
)='Y')  THEN
    --dbms_output.PUT_LINE ('908');
    SELECT * INTO emp_email_address FROM (select sr_email  from default_bmi_employee demp where demp.region_cd in (select region from ww_cntry wc where wc.cntry_cd=L_CNTRY_CD)
    AND (upper(route_to_market))=(SELECT DISTINCT DECODE(direct_fl,'Y','DIRECT','INDIRECT') FROM bus_model WHERE bus_model_cd=l_bus_model_cd AND country_cd=L_CNTRY_CD
                                                                                                                                                                                                 AND tenantid =l_tenantid) ---Added for SMO Changes)
     AND (demp.country_cd=l_cntry_cd OR country_cd='*' )
     AND tenantid =l_tenantid --Added for SMO changes
     AND source_asset_ID = l_dealsourcecd  --Added for US-9408 --> Encore Retirement  
     ORDER BY COUNTRY_CD DESC)
      WHERE rownum<=1;
    l_to_address := l_to_address||','||emp_email_address;
ELSE
--dbms_output.PUT_LINE ('909');
SELECT email_unix_addr_tx INTO emp_email_address FROM employee emp WHERE emp_nr=employee_email_list.driving_hp_emp_nr
AND UPPER (emp.emp_stat_cd) = 'ACTIVE';
l_to_address := l_to_address||emp_email_address;
END IF;

--dbms_output.PUT_LINE ('910');
IF (is_emp_bmi_default(employee_email_list.dsm_hp_emp_nr
,l_dealsourcecd --Added for US-9408 --> Encore Retirement  
)='Y')  THEN
--dbms_output.PUT_LINE ('911');
SELECT * INTO emp_email_address FROM (select dm_email  from default_bmi_employee demp where demp.region_cd in (select region from ww_cntry wc where wc.cntry_cd=L_CNTRY_CD)
AND (upper(route_to_market))=(SELECT DISTINCT DECODE(direct_fl,'Y','DIRECT','INDIRECT') FROM bus_model WHERE bus_model_cd=l_bus_model_cd AND country_cd=L_CNTRY_CD
                                                                                                                                                                                         AND tenantid =l_tenantid) ---Added for SMO Changes
 AND (demp.country_cd=l_cntry_cd OR country_cd='*' )
 AND tenantid =l_tenantid --Added for SMO changes
 AND source_asset_ID = l_dealsourcecd  --Added for US-9408 --> Encore Retirement  
 ORDER BY COUNTRY_CD DESC)
  WHERE rownum<=1;
l_to_address := l_to_address||','||emp_email_address;
ELSE
--dbms_output.PUT_LINE ('912');
SELECT email_unix_addr_tx INTO emp_email_address FROM employee emp WHERE emp_nr=employee_email_list.dsm_hp_emp_nr
AND UPPER (emp.emp_stat_cd) = 'ACTIVE';
l_to_address := l_to_address||emp_email_address;
END IF;

--dbms_output.PUT_LINE ('913');
IF (is_emp_bmi_default(employee_email_list.deal_lead_emp_nr
,l_dealsourcecd --Added for US-9408 --> Encore Retirement  
)='Y')  THEN
--dbms_output.PUT_LINE ('914');
SELECT * INTO emp_email_address FROM (select dl_email  from default_bmi_employee demp where demp.region_cd in (select region from ww_cntry wc where wc.cntry_cd=L_CNTRY_CD)
AND (upper(route_to_market))=(SELECT DISTINCT DECODE(direct_fl,'Y','DIRECT','INDIRECT') FROM bus_model WHERE bus_model_cd=l_bus_model_cd AND country_cd=L_CNTRY_CD
                                                                                                                                                                                                             AND tenantid =l_tenantid) ---Added for SMO Changes
 AND (demp.country_cd=l_cntry_cd OR country_cd='*' )
 AND tenantid =l_tenantid --Added for SMO changes
 AND source_asset_ID = l_dealsourcecd  --Added for US-9408 --> Encore Retirement  
 ORDER BY COUNTRY_CD DESC)
  WHERE rownum<=1;
l_to_address := l_to_address||','||emp_email_address;
ELSE
--dbms_output.PUT_LINE ('915');
SELECT email_unix_addr_tx INTO emp_email_address FROM employee emp WHERE emp_nr=employee_email_list.deal_lead_emp_nr
AND UPPER (emp.emp_stat_cd) = 'ACTIVE';
l_to_address := l_to_address||emp_email_address;
END IF;

END LOOP;
 --dbms_output.PUT_LINE ('916');
--For each receipient send a mail
--For each receipient send a mail
FOR receipent_list IN (SELECT d.init_hp_emp_nr,
                            d.driving_hp_emp_nr,
                            d.dsm_hp_emp_nr,
                            d.DEAL_LEAD_EMP_NR from deal d
                            where d.bd_id=l_bd_id)
LOOP

BEGIN
IF (is_emp_bmi_default(receipent_list.init_hp_emp_nr
,l_dealsourcecd --Added for US-9408 --> Encore Retirement  
)='Y')  THEN
--dbms_output.PUT_LINE ('917');
    SELECT * INTO receipient_email_address FROM (select dc_email  from default_bmi_employee demp where demp.region_cd in (select region from ww_cntry wc where wc.cntry_cd=L_CNTRY_CD)
    AND (upper(route_to_market))=(SELECT DISTINCT DECODE(direct_fl,'Y','DIRECT','INDIRECT') FROM bus_model WHERE bus_model_cd=l_bus_model_cd AND country_cd=L_CNTRY_CD
                                                                                                                                                     AND tenantid =l_tenantid) ---Added for SMO Changes
     AND (demp.country_cd=l_cntry_cd OR country_cd='*' )
     AND tenantid =l_tenantid --Added for SMO changes
     AND source_asset_ID = l_dealsourcecd  --Added for US-9408 --> Encore Retirement  
     ORDER BY COUNTRY_CD DESC)
      WHERE rownum<=1;
ELSE
--dbms_output.PUT_LINE ('918');
SELECT email_unix_addr_tx INTO receipient_email_address FROM employee emp WHERE emp_nr=receipent_list.init_hp_emp_nr
AND UPPER (emp.emp_stat_cd) = 'ACTIVE';
END IF;
--dbms_output.put_line ('i_from_address: ' || l_from_address);
----dbms_output.put_line ( 'Recp :' || l_to_address);
--dbms_output.put_line ('l_email_subject :' || l_email_subject);
--dbms_output.put_line ('l_email_body :' || l_email_body);
--dbms_output.put_line (' receipient_email_address:' || receipient_email_address);

 send_mail(
            l_from_address,
            l_to_address ,
            l_email_subject,
            l_email_body,
            receipient_email_address,
            l_errors);
            dbms_output.PUT_LINE ('919');
IF l_errors IS NOT NULL THEN
        inserterror_output_messages ( NULL,NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, 'WARNING', i_deal_creation_guid, NULL,NULL,'Error while sending High Risk Email to Deal Creator');
END IF;

IF (is_emp_bmi_default(receipent_list.driving_hp_emp_nr
,l_dealsourcecd --Added for US-9408 --> Encore Retirement  
)='Y')  THEN
    SELECT * INTO receipient_email_address FROM (select sr_email  from default_bmi_employee demp where demp.region_cd in (select region from ww_cntry wc where wc.cntry_cd=L_CNTRY_CD)
    AND (upper(route_to_market))=(SELECT DISTINCT DECODE(direct_fl,'Y','DIRECT','INDIRECT') FROM bus_model WHERE bus_model_cd=l_bus_model_cd AND country_cd=L_CNTRY_CD
                                                                                                                                                                     AND tenantid =l_tenantid) ---Added for SMO Changes
     AND (demp.country_cd=l_cntry_cd OR country_cd='*' )
     AND tenantid =l_tenantid --Added for SMO changes
     AND source_asset_ID = l_dealsourcecd  --Added for US-9408 --> Encore Retirement  
     ORDER BY COUNTRY_CD DESC)
      WHERE rownum<=1;
ELSE
        SELECT email_unix_addr_tx INTO receipient_email_address FROM employee emp WHERE emp_nr=receipent_list.driving_hp_emp_nr
        AND UPPER (emp.emp_stat_cd) = 'ACTIVE';
END IF;
    send_mail(
            l_from_address,
            l_to_address ,
            l_email_subject,
            l_email_body,
            receipient_email_address,
            l_errors);
IF l_errors IS NOT NULL THEN
  inserterror_output_messages ( NULL,NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, 'WARNING', i_deal_creation_guid, NULL,NULL,'Error while sending High Risk Email to Deal Creator');
END IF;

IF (is_emp_bmi_default(receipent_list.dsm_hp_emp_nr
,l_dealsourcecd --Added for US-9408 --> Encore Retirement  
)='Y')  THEN
SELECT * INTO receipient_email_address FROM (select dm_email  from default_bmi_employee demp where demp.region_cd in (select region from ww_cntry wc where wc.cntry_cd=L_CNTRY_CD)
AND (upper(route_to_market))=(SELECT DISTINCT DECODE(direct_fl,'Y','DIRECT','INDIRECT') FROM bus_model WHERE bus_model_cd=l_bus_model_cd AND country_cd=L_CNTRY_CD
                                                                                                                                                                                                         AND tenantid =l_tenantid) ---Added for SMO Changes
 AND (demp.country_cd=l_cntry_cd OR country_cd='*' )
 AND tenantid =l_tenantid --Added for SMO changes
 AND source_asset_ID = l_dealsourcecd  --Added for US-9408 --> Encore Retirement  
 ORDER BY COUNTRY_CD DESC)
  WHERE rownum<=1;
   ELSE
SELECT email_unix_addr_tx INTO receipient_email_address FROM employee emp WHERE emp_nr=receipent_list.dsm_hp_emp_nr
AND UPPER (emp.emp_stat_cd) = 'ACTIVE';
END IF;
     send_mail(
            l_from_address,
            l_to_address ,
            l_email_subject,
            l_email_body,
            receipient_email_address,
            l_errors);
IF l_errors IS NOT NULL THEN
  inserterror_output_messages ( NULL,NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, 'WARNING', i_deal_creation_guid, NULL,NULL,'Error while sending High Risk Email to Deal Creator');
END IF;

IF (is_emp_bmi_default(receipent_list.DEAL_LEAD_EMP_NR
,l_dealsourcecd --Added for US-9408 --> Encore Retirement  
)='Y')  THEN
SELECT * INTO receipient_email_address FROM (select dl_email  from default_bmi_employee demp where demp.region_cd in (select region from ww_cntry wc where wc.cntry_cd=L_CNTRY_CD)
AND (upper(route_to_market))=(SELECT DISTINCT DECODE(direct_fl,'Y','DIRECT','INDIRECT') FROM bus_model WHERE bus_model_cd=l_bus_model_cd AND country_cd=L_CNTRY_CD
                                                                                                                                                                                 AND tenantid =l_tenantid) ---Added for SMO Changes
 AND (demp.country_cd=l_cntry_cd OR country_cd='*' )
 AND tenantid =l_tenantid --Added for SMO changes
 AND source_asset_ID = l_dealsourcecd  --Added for US-9408 --> Encore Retirement  
 ORDER BY COUNTRY_CD DESC)
  WHERE rownum<=1;
      ELSE
SELECT email_unix_addr_tx INTO receipient_email_address FROM employee emp WHERE emp_nr=receipent_list.DEAL_LEAD_EMP_NR
AND UPPER (emp.emp_stat_cd) = 'ACTIVE';
END IF;
     send_mail(
            l_from_address,
            l_to_address ,
            l_email_subject,
            l_email_body,
            receipient_email_address,
            l_errors);
IF l_errors IS NOT NULL THEN
  inserterror_output_messages ( NULL,NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, 'WARNING', i_deal_creation_guid, NULL,NULL,'Error while sending High Risk Email to Deal Creator');
END IF;

EXCEPTION
WHEN OTHERS THEN
L_ERRORS:='Error occured while sending mails for High Risk Deal'||sqlerrm;
    inserterror_output_messages ( NULL,NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, 'WARNING', i_deal_creation_guid, NULL,NULL,l_errors);
END;
END LOOP;

  ELSE
    L_ERRORS:='Deal Risk Errors : ' || L_ERRORS ;
    inserterror_output_messages ( NULL,NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, 'WARNING', i_deal_creation_guid, NULL,NULL,l_errors);
  END IF;

  --Update the existing high risk flag only if high risk is true from the below function. This is because, we may get high risk true from the calculate deal risk procedure and we don't want to disturb that logic.
  -- by Harsh Shah FOR  CR 2624 'High Risk Reseller
  --DBMS_OUTPUT.PUT_LINE ('Searching High Risk Reseller B ');
  IF Is_reseller_b_high_risk(l_bd_id,i_deal_creation_Guid)='Y' THEN
      L_HIGH_RISK_FL:='Y';
  END IF;
  --DBMS_OUTPUT.PUT_LINE ('Searching High Risk Reseller B Ends');
   --update deal table with high risk flag
  UPDATE DEAL
  SET DEAL_RISK_FL =L_HIGH_RISK_FL
  WHERE BD_ID      =l_bd_id;
  --------------------
  --SET DCT STATUS
  --------------------
  L_O_DCTEXPIRETHRESHOLDPCT:=1;

  SET_DCT_STATUS(l_bd_id,I_DEAL_CREATION_GUID,L_O_DCTEXPIRETHRESHOLDPCT);
  UPDATE ROLLOUT_SCHEDULE
  SET RTQTY  =ROUND(LINE_MAX_QTY + (((L_O_DCTEXPIRETHRESHOLDPCT-100)/100) * NVL(LINE_MAX_QTY, 0)))
  WHERE bd_id=l_bd_id;
--DBMS_OUTPUT.PUT_LINE ('907');

----- Handling auto event in deal timings table ----
    --ins_deal_timings(l_new_bd_id, sysdate,l_deal_creator_dc,sysdate,l_deal_creator_dc,'DC01',NULL,'CREATEDEAL','CREATEDEAL');

      --******************************************************
      --Approve Deal/Quote Deal
      --******************************************************
        --approve_deal(l_new_bd_id, l_is_all_lines_authorized);
        --added if condition by Harsh Shah 11/10/2014 For the CR
        --CR 171727 & 170008 - [Channel][Regression] Bundle's rqst% is modified in dealV2 after accept quote for a HT deal
      if l_dealapprfl ='Y' then
         approve_deal(l_bd_id, l_is_all_lines_authorized);
      end if;
      --DBMS_OUTPUT.PUT_LINE ('908');

  IF ( l_dealapprfl ='Y' )THEN
    BEGIN
      --dbms_output.put_line (' Checking for Deal Actions ');
      l_bd_id        := l_bd_id;
      l_new_bd_version_nr:=l_new_bd_version_nr;
      --update business justification details with latest bd_id
      IF l_bus_justify_reqd_fl='Y' THEN
      l_bus_justify_bd_id:=l_bd_id;
        UPDATE deal_bus_justify SET bd_id=l_bd_id WHERE bd_id=l_bus_justify_bd_id;
      END IF;

        IF l_quotedbyempnr IS NULL AND l_quotedbyempemail IS NOT NULL THEN
        l_quotedbyempnr  :=get_emp_nr(l_quotedbyempemail);
        END IF;

      IF (l_dealsourcedealtype <>C_HIGH_TOUCH_DEALTYPE_DESC) THEN
    L_QUOTED_BY_USER_ID    :=GETVALID_ECLIPSE_USERID (L_QUOTEDBYEMPNR,L_ERRORS);
    --if L_QUOTEDBYEMPNR is null  then
    --L_ERRORS:='Quoted by Employee No is mandatory,Please provide the details and re-try to create deal';
    --L_MSG_TYPE:=C_M_TYPE_ERROR;
    --raise reject_deal;
    IF L_ERRORS IS NOT NULL THEN
      L_MSG_TYPE:=C_M_TYPE_ERROR;
      --raise reject_deal;
    ELSIF L_QUOTED_BY_USER_ID IS NULL THEN
    l_quoted_by_user_id := 'bmidef';
      L_ERRORS                :='Invalid Quoted by Employee No';
      l_msg_type              :=c_m_type_ERROR;
      --RAISE REJECT_DEAL;
    END IF;
  END IF;

        --************
        --Quote deal
        --************
        SELECT  euv_at_won_fl
    INTO l_euv_at_won_fl
    FROM bus_model
    WHERE bus_model_cd       = l_busmodelcd
    AND bus_model.country_cd = l_country_cd
     AND tenantid =l_tenantid; ---Added for SMO Changes
    --DBMS_OUTPUT.PUT_LINE('Before Quote_Deal procedure: '||l_busmodelcd||' , '||l_country_cd||', ' ||l_euv_at_won_fl);

    dbms_OUTPUT.put_line('Values passed to Quote deal procedure: l_dealapprfl: '||l_dealapprfl||', l_is_all_lines_authorized: '||l_is_all_lines_authorized||' , L_QUOTED_BY_USER_ID: '||L_QUOTED_BY_USER_ID);

        quote_deal(l_bd_id,
                    l_source_bd_nr,
                     l_new_bd_version_nr,
                      l_dealquotefl,--l_dealquote_fl
                      l_dealapprfl,
                      l_is_all_lines_authorized,
                      L_QUOTED_BY_USER_ID,
                      L_QUOTEDBYEMPNR,
                      L_HIGH_RISK_FL,
                      l_GenerateOPGNbrFl,
                      l_EUV_AT_WON_FL
                      );

         SELECT deal_prog_cd, bdme_aprvl_cd, quote_dist_cd
        INTO L_DEAL_PROG_CD,L_BDME_APRVL_CD,L_QUOTE_DIST_CD
        FROM deal WHERE bd_Id=l_bd_id;

   UPDATE gt_edms_smqt_err_results
  SET DEAL_PROG_CD=L_DEAL_PROG_CD,
    BDME_APRVL_CD =L_BDME_APRVL_CD,
    QUOTE_DIST_CD =L_QUOTE_DIST_CD,
    RISK_DESC     =DECODE(l_high_risk_fl,'Y',L_RISK_REASON,NULL),
    HIGH_RISK_FL  =L_HIGH_RISK_FL,
    bd_id         =l_bd_id,
    BD_NR         =l_source_bd_nr,
    bd_version_nr =l_new_bd_version_nr;
    --dbms_output.put_line('Updating gt_edms_smqt_err_results done');

                      END;
elsif (l_dealapprfl = 'N' )
THEN
    l_bd_id          := l_bd_id;
    l_bd_version_nr  :=l_new_bd_version_nr;
    --new version is created but cannot be approved as per the flag.
    l_deal_prog_cd :='U';
    l_bdme_aprvl_cd:='N';
    l_quote_dist_cd:='N';
    l_msg_type     :='WARNING';
    L_ERRORS       := 'New version of deal is created but cannot be approved as per the Deal Actions provided' ;

    inserterror_output_messages (l_bd_id,l_source_bd_nr,l_new_bd_version_nr, l_deal_prog_cd,l_bdme_aprvl_cd,l_quote_dist_cd,NULL,--l_euv_stat_code,
    l_high_risk_fl,NULL,--l_risk_reasion_desc,
    NULL,
    l_errors,l_msg_type, i_deal_creation_guid,NULL,NULL,l_errors);
    --return all results
    --OPEN p_result FOR SELECT * FROM gt_edms_smqt_err_results order by msg_type DESC;
    --COMMIT;
  /* elsif (to_number(l_dealvertocreate)=0) THEN
    l_deal_prog_cd                  :='U';
    l_bdme_aprvl_cd                 :='N';
    l_quote_dist_cd                 :='N';
    l_msg_type                      :='SUCCESS';
    l_errors                        :='SUCCESS'; */
    -- insert into error table and output table.
    --inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr,l_deal_prog_cd --,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code,l_high_risk_fl, --l_risk_reasion_desc,l_risk_desc,l_errors,l_msg_type,l_deal_creation_guid, NULL,NULL,l_errors);
    --OPEN p_result FOR SELECT * FROM gt_edms_smqt_err_results order by msg_type DESC;
    --COMMIT;
 /*  elsif (to_number(l_dealvertocreate)<>0) THEN
    IF ( a_out3                      IS NULL OR a_out3='' ) THEN
      l_errors                       :='Unable to create new version of deal ';
      l_msg_type                     :='ERROR';
      --dbms_output.PUT_LINE(' A_OUT3' || a_out3);
      --dbms_output.PUT_LINE(' A_OUT4' || a_out4);
      --dbms_output.PUT_LINE(' A_OUT5' || a_out5);
      --dbms_output.PUT_LINE(' A_OUT6' || a_out6);
      --dbms_output.PUT_LINE(' A_OUT7' || a_out7);
      -- insert into error table and output table.
      --inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr, l_deal_prog_cd ,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code, --l_high_risk_fl, l_risk_reasion_desc,l_risk_desc,l_errors,l_msg_type, l_deal_creation_guid, NULL,NULL,l_errors);
    ELSE
      l_errors  :='Unable to Update new version of deal Oracle Error Code is ' || a_out3 ;
      l_msg_type:='ERROR';
      --raise reject_deal; --Need to change this.
    END IF; */
    --return all results
    --  OPEN p_result FOR SELECT * FROM gt_edms_smqt_err_results order by msg_type DESC;
  END IF;

  SELECT  euv_at_won_fl
    INTO l_euv_at_won_fl
    FROM bus_model
    WHERE bus_model_cd       = l_busmodelcd
    AND country_cd = l_country_cd
     AND tenantid =l_tenantid;--Added for SMO Changes
--DBMS_OUTPUT.PUT_LINE('Before route_deal procedure: '||l_busmodelcd||' , '||l_country_cd||', ' ||l_euv_at_won_fl);
    ------------------------
    --Route Deal------------
    ------------------------
    route_deal(l_bd_id,
            l_dealroutefl,
            l_dealvertocreate,
            l_high_risk_fl,
            l_dealsourcedealtype,
            l_euv_at_won_fl,
            l_eclipse_user_id
            );
--DBMS_OUTPUT.PUT_LINE('After route_deal procedure');

  if UnlockDeal(l_source_bd_nr, l_errors)    ='N' THEN
        inserterror_output_messages ( NULL,NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, 'WARNING', i_deal_creation_guid, NULL,NULL,Null);
   END IF;

   --unlocking the previous version of deal - by Harsh Shah 19 Mar 2014,
            --this should go to a common procedure/function- todo later
            UPDATE deal SET deal_lock_fl='N', deal_lock_user_id = NULL WHERE bd_id=l_bd_id;
end_time := dbms_utility.get_time();

INSERTERROR_OUTPUT_MESSAGES ((end_time-start_time)/100, NULL, NULL, NULL, NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,i_deal_creation_guid,NULL, NULL,'BMICREATENEWVERSION_MODULE');
EXCEPTION

when OTHERS then
--dbms_output.put_line (l_errors);
--unlocking the previous version of deal - by Harsh Shah 19 Mar 2014,
            --this should go to a common procedure/function- todo later
            UPDATE deal SET deal_lock_fl='N', deal_lock_user_id = NULL WHERE bd_id=l_bd_id;
INSERTERROR_OUTPUT_MESSAGES ( null,null, null,null, null, null, null, null, null,null,L_ERRORS, 'ERROR', I_DEAL_CREATION_GUID, null,null,null);

    l_errors:='Error while creating new version  a_out4 :' || a_out4 ;
    l_errors:='Error while creating new version  a_out5 :' || a_out5 ;
    l_errors:='Error while creating new version a_out6 :' || a_out6 ;
    l_errors:='Error while creating new version a_out7 :' || a_out7 ;

    l_errors:='Error while creating new version.';
    inserterror_output_messages ( NULL,NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, 'ERROR', i_deal_creation_guid, NULL,NULL,l_errors);

    l_errors := 'An error was encountered - ' || SQLCODE || ' -ERROR- ' || sqlerrm || '. Error at Line : ' || dbms_utility.format_error_backtrace();
    inserterror_output_messages ( NULL,NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, 'ERROR', i_deal_creation_guid, NULL,NULL,Null);
    --dbms_output.put_line (l_errors);

      if UnlockDeal(l_source_bd_nr, l_errors)    ='N' THEN
        inserterror_output_messages ( NULL,NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, 'WARNING', i_deal_creation_guid, NULL,NULL,l_errors);
       END IF;
END;

        update_error_tables (i_deal_creation_guid, l_bd_id,l_new_bd_version_nr,l_source_bd_nr, l_source_bd_version_nr,l_source_bd_version_nr );

UPDATE gt_edms_smqt_err_results
  SET DEAL_PROG_CD=L_DEAL_PROG_CD,
    BDME_APRVL_CD =L_BDME_APRVL_CD,
    QUOTE_DIST_CD =L_QUOTE_DIST_CD,
    RISK_DESC     =DECODE(l_high_risk_fl,'Y',L_RISK_REASON,NULL),
    HIGH_RISK_FL  =L_HIGH_RISK_FL,
    bd_id         =l_bd_id,
    BD_NR         =l_source_bd_nr,
    bd_version_nr =l_new_bd_version_nr;

    DELETE
  FROM GT_EDMS_SMQT_ERR_RESULTS
  WHERE ERROR_desc='NOROUTE';
     --dbms_output.PUT_LINE('delete from GT_EDMS_SMQT_ERR_RESULTS done');

   --updating High Risk Deals
  select decode(l_high_risk_fl,'Y',l_risk_reason,null) into l_risk_desc from dual;

  inserterror_output_messages (l_bd_id,l_source_bd_nr,l_new_bd_version_nr, l_deal_prog_cd,l_bdme_aprvl_cd,l_quote_dist_cd,null,--l_euv_stat_code,
      l_high_risk_fl,l_risk_reasion_desc,   null, l_errors,'WARNING', i_deal_creation_guid,null,null,l_errors);

        --return response back to Web Service
        OPEN p_result FOR SELECT * FROM gt_edms_smqt_err_results order by msg_type DESC;


        --Returning product details to BMI-Web Service
          --by Harsh Shah 17-Jan-2014
          OPEN p_prod_details FOR
          SELECT line_nr,
          line_type_cd,
          assoc_pl_cd,
          prod_gnrc_nr_tx,
          prod_gnrc_desc_tx ,
          NULL config_id,
          NULL CONFIG_SRC,
          NULL SRC_BUNDLE_DESC_TX,
          BMI_DOC_NO
          FROM line_item WHERE bd_id = l_bd_id AND line_type_cd <> 'BD'
          UNION
          SELECT l.line_nr,
            l.line_type_cd,
            l.assoc_pl_cd,
            l.prod_gnrc_nr_tx,
            l.prod_gnrc_desc_tx ,
            b.config_id,
            b.CONFIG_SRC,
            l.SRC_BUNDLE_DESC_TX,
            L.BMI_DOC_NO
          FROM line_item l,
            bundle b
          WHERE l.bd_id      = l_bd_id
          AND l.line_type_cd = 'BD'
          AND b.bd_id        = l.bd_id
          AND l.line_nr      =b.line_nr ;

        --commiting the changes
        COMMIT;
EXCEPTION
WHEN TEMP_TABLE_FAILURE THEN
    BEGIN
    l_errors:='Unable to fill temp table or no data in XML';

     inserterror_output_messages ( NULL,NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, 'ERROR', i_deal_creation_guid, NULL,NULL,l_errors);
     commit;
     --delete temp table data      by Harsh Shah 30-JAN-2015
    --delete temp table data      by Harsh Shah 30-JAN-2015
    delete from eclipse.GT_XML_BUNDLE ;
    delete from eclipse.GT_XML_BUNDLE_Line;
        delete from eclipse.GT_XML_line_item;

      --  delete from eclipse.GT_XML_BUNDLE_Line where guid=i_deal_creation_guid;


    END;
WHEN  INVALID_GUID  THEN
--dbms_output.put_line (l_errors);
  begin
    ROLLBACK;

    inserterror_output_messages ( NULL,NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, 'ERROR', i_deal_creation_guid, NULL,NULL,l_errors);
  update_error_tables (i_deal_creation_guid, l_bd_id,l_new_bd_version_nr,l_source_bd_nr, l_source_bd_version_nr,l_source_bd_version_nr );

  OPEN p_result FOR SELECT * FROM gt_edms_smqt_err_results order by msg_type DESC;

    commit;
    END;
WHEN  BLANK_SOURCE_BDNR THEN
  BEGIN
  --dbms_output.put_line (l_errors);
    ROLLBACK;
    --dbms_output.PUT_LINE ('Cannot proceed, Source Deal No is empty');
    L_errors:='Cannot proceed, Source Deal No is empty';
    inserterror_output_messages ( NULL,NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, 'ERROR', i_deal_creation_guid, NULL,NULL,l_errors);

     update_error_tables (i_deal_creation_guid, l_bd_id,l_new_bd_version_nr,l_source_bd_nr, l_source_bd_version_nr,l_source_bd_version_nr );

    commit;
    --Return error output
    OPEN p_result FOR SELECT * FROM gt_edms_smqt_err_results order by msg_type DESC;

    END;
WHEN REJECT_VERSION_UPDATE THEN
  BEGIN
             UPDATE deal SET deal_lock_fl='N', deal_lock_user_id = NULL WHERE bd_id=l_bd_id;
    if UnlockDeal(l_source_bd_nr, l_errors)    ='N' THEN
        inserterror_output_messages ( NULL,NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, 'WARNING', i_deal_creation_guid, NULL,NULL,l_errors);
    END IF;
    inserterror_output_messages ( NULL,NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, 'WARNING', i_deal_creation_guid, NULL,NULL,l_errors);
    update_error_tables (i_deal_creation_guid, l_bd_id,l_new_bd_version_nr,l_source_bd_nr, l_source_bd_version_nr,l_source_bd_version_nr );
    commit;

    --Return error output
   OPEN p_result FOR SELECT * FROM gt_edms_smqt_err_results order by msg_type DESC;

    END;
WHEN OTHERS THEN
  BEGIN
   ROLLBACK;
       if UnlockDeal(l_source_bd_nr, l_deal_unlock_error_msg)    ='N' THEN
            inserterror_output_messages ( NULL,NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_deal_unlock_error_msg, 'WARNING', i_deal_creation_guid, NULL,NULL,l_deal_unlock_error_msg);
       END IF;

      inserterror_output_messages ( NULL,NULL, NULL,NULL, NULL, NULL, NULL, NULL, NULL,NULL,l_errors, 'WARNING', i_deal_creation_guid, NULL,NULL,l_errors);

         --unlocking the previous version of deal - by Harsh Shah 19 Mar 2014,
                    --this should go to a common procedure/function- todo later
        UPDATE deal SET deal_lock_fl='N', deal_lock_user_id = NULL WHERE bd_id=l_bd_id;
          update_error_tables (i_deal_creation_guid, l_bd_id,l_new_bd_version_nr,l_source_bd_nr, l_source_bd_version_nr,l_source_bd_version_nr );

        commit;

        --Return error output
        OPEN p_result FOR SELECT * FROM gt_edms_smqt_err_results order by msg_type DESC;
    END;
END BMIUpdateDeal;    

PROCEDURE clear_auth(i_bd_id IN deal.bd_id%TYPE,
                                    i_line_nr IN NUMBER,
                                    i_deal_guid IN VARCHAR2)
IS
l_bd_nr deal.bd_nr%TYPE;
l_bd_version_nr deal.bd_version_nr%TYPE;
l_error_desc VARCHAR2(4000);
BEGIN
--Get basis deal details.
SELECT bd_nr, bd_Version_nr
INTO l_bd_nr, l_bd_version_nr
FROM deal
WHERE bd_id=i_bd_id;

--Update Line_item table:
UPDATE line_item SET
        line_prog_cd='N',
        auth_mc_hp_emp_nr=DECODE(line_type_cd, 'BD',0,NULL),
        update_dts=SYSDATE,
        line_auth_type=NULL
WHERE bd_id=i_bd_id
AND line_nr=i_line_nr;

--Update Line_disc_Scale table:
UPDATE line_disc_scale
SET auth_fl='N',
auth_basis_text=NULL,
update_dts=SYSDATE
WHERE bd_id=i_bd_id
AND line_nr=i_line_nr
AND scale_id=(SELECT MAX(scale_id) FROM line_disc_scale WHERE bd_id=i_bd_id AND line_nr=i_line_nr);

--Update Bundle_line table:
UPDATE bundle_line
SET item_prog_cd='N',
auth_mc_hp_emp_nr=NULL,
update_dts=SYSDATE,
auth_Basis_text=NULL,
line_auth_type=NULL
WHERE bd_id=i_bd_id
AND line_nr=i_line_nr
AND scale_id=(SELECT MAX(scale_id) FROM line_disc_scale WHERE bd_id=i_bd_id AND line_nr=i_line_nr);

EXCEPTION
WHEN OTHERS THEN
l_error_desc := SUBSTR(SQLERRM,1,4000);
inserterror_output_messages(
    i_bd_id ,
    l_bd_nr,
    l_bd_version_nr ,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    l_error_desc ,
    'WARNING',--i_msg_type          VARCHAR2,
    i_deal_guid,
    NULL,
    NULL,
    'Clearing Auth has failed');
END CLEAR_AUTH;


procedure replace_bundle_products(
    i_deal_creation_guid IN VARCHAR2,
  i_xmlnamespace        IN  varchar,
    i_deal_creator_emp_nr IN  deal.init_hp_emp_nr%type,
    i_bd_id               IN  DEAL.BD_ID%TYPE,
    i_bd_nr               IN  DEAL.BD_NR%TYPE,
    i_bd_version_nr       IN  DEAL.BD_VERSION_NR%TYPE,
    i_dealsourcecd        IN  VARCHAR,
    i_dealvertocreate     IN  NUMBER,
    i_deal_begin_date     IN  DEAL.BEG_DT%TYPE,
    i_deal_end_date       IN  deal.end_dt%type,
    i_dealapprfl          IN  VARCHAR2,
    i_dealquotefl        IN  VARCHAR2,
    i_dealroutefl       IN  VARCHAR2,
    I_COUNTRY_CD DEAL.CONTROL_CNTRY_CD%TYPE,
    I_price_term_cd deal.price_term_cd%type,
    i_price_list_cd deal.price_list_cd%type,
    i_currency_cd deal.curr_cd%type,
    i_dealsourcedealtype deal.deal_source_deal_type%type,
    i_dealsourcekeyval deal.deal_source_keyval%type,
    i_hierarchy_cd deal_matrix.hierarchy_cd%type,
    i_busmodelcd DEAL.BUS_MODEL_CD%TYPE )
IS
  l_xml_path_to_Query varchar2(100);
  L_errors varchar2(2000);
  l_msg_type VARCHAR2(10);
  l_auth_date_gmt bundle_line.auth_dt_gmt%type;
  L_AUTH_MC_DATE LINE_ITEM.AUTH_MC_DATE%type;
  l_bundle_config bundle.config_id%type; -- NUMBER(10) :=0; --Commented as part of CR5020
  l_bundle_dtl_line_nr NUMBER(10) :=0;
  l_bundle_line_nr BUNDLE.LINE_NR%TYPE:=0;
  L_HDR_PROD_STD_DISC line_disc_scale.HIGH_RSLR_A_SD_PC%type;
  l_bd_hdr_sku_list_price  NUMERIC(16,2); --NUMERIC(10,2); Commented this to match the precision and scale of Line Disc Scale table
   l_BD_HDR_SKU_qty        NUMERIC(10);
  l_auth_bdnet_amt line_disc_scale.rqst_bd_net_prc_am%type;
  L_EXT_PRE_APPRV_PRC_AM LINE_DISC_SCALE.EXT_PRE_APPRV_PRC_AM%TYPE;
l_source_config_id bundle.source_config_id%TYPE;
l_hdr_bd_sku_opt_cd line_item.prod_opt_cd%type;
L_PROD_COST_PRICE_HDR_PROD BUNDLE_LINE.PROD_COST_AM%TYPE:=0;
l_line_AuthBasisDesc LINE_DISC_SCALE.AUTH_BASIS_TEXT%type;
  l_line_AuthStat bundle_line.ITEM_PROG_CD%type;
  l_line_AuthDtGMT DATE;
  l_line_AuthDtGMT_Char varchar2(200);
l_auth_generic_emp_nr line_item.auth_generic_emp_nr%type;--added for new auth changes
--l_bundle_config bundle.config_id%type; -- NUMBER(10) :=0; --Commented as part of CR5020
--l_busmodelcd bus_model.bus_model_cd%type;
l_line_auth_type line_item.line_auth_type%type;
--L_PROD_COST_PRICE_HDR_PROD BUNDLE_LINE.PROD_COST_AM%TYPE:=0;

--EXCEPTION Delcaration
REJECT_BUNDLE EXCEPTION;
l_create_new_version VARCHAR2(1):='Y';
new_l_bundle_dtl_line_nr NUMBER(10) :=0;
--L_banded_fl bundle_line.banded_fl%type;
l_line_Nr bundle.line_nr%TYPE;
l_scale_id LINE_DISC_SCALE.SCALE_ID%TYPE;

BEGIN

--Get the Max line_nr for the new line items
  select NVL(max(line_nr),0)  into l_bundle_line_nr FROM line_item WHERE BD_ID=i_bd_id;
  --dbms_output.put_line ('Current Line No is '|| l_bundle_line_nr);
  
  IF lower(i_dealsourcecd) =('bmi') THEN --Added this condition for CR: 3259
  l_auth_generic_emp_nr   :=-999999911  ;
  l_line_auth_type        :='EAB';
  ELSIF lower(i_dealsourcecd) =('ngq') THEN
      l_auth_generic_emp_nr   :=-999999922  ;
      l_line_auth_type        :='EAN';
    END IF;

  BEGIN
  --****************************************************************************************
  --Adding Bundles
  --****************************************************************************************
  /*
    Modified by Harsh Shah 17-Nov-2013
    added condition to filter bundles only with the request type =ADD
    to resolve the issue of bundles getting added with every version
  */

   --get list price from Gpsy:
  get_list_prices_from_gypsy
        (I_COUNTRY_CD,
        i_price_list_cd,
        i_currency_cd,
        I_price_term_cd,
        i_deal_creation_guid,
        'N',
        i_hierarchy_cd,
        i_deal_end_date);


    FOR recbd IN
    (

            SELECT ADDED_BY_EMP_NR AS addedbyempnr,
                   ADDED_BY_EMP_EMAIL AS addedbyempemail,
                   AUTH_BASIS_DESC AS authbasisdesc,
                   AUTH_DATE AS authdate,
                   AUTH_DATE_GMT AS authdategmt,
                   AUTH_EMP_NR AS authempnr,
                   AUTH_EMP_EMAIL AS authempemail,
                   AUTH_STAT_CD AS authstatcd,
                   BD_NET_AMT AS bdnetamt,
                   COST_PRICE AS costprice,
                   LIST_PRICE AS listprice,
                   PRICING_TYPE_CD AS pricingtypecd,
                   PROD_DESC AS proddesc,
                   REQUEST_TYPE AS requesttype,
                   ROLLOUT_MONTH_QTY AS rolloutmonthqtys,
                   SKU AS sku,
                   STD_DISC_PCT AS stddiscpct,
                   BUNDLE_DESC AS bundledesc,
                   BUNDLE_SOURCE AS bundlesource,
                   BUNDLE_INDEX AS bundleindex,
                   HEADER_QTY AS header_qty,
                   OPT_CD AS optcd,
                   CONFIG_ID AS CONFIGID,
                   PROD_LINE_CD AS pl,
                   ORD_MIN_QTY AS ORDERMINQTY,
                   BMI_DOC_NO AS BMI_DOC_NO,
                   EXT_PRE_APPRV_PRICE AS ExtPreApprvPrice,
                   DISPLAY_COMP_PRC_FL AS DisplayCompPrcFl,
                   ECLIPSE_BUNDLE_ID AS EclipseBundleID,
                   GUIDANCE_AVAIL_FL AS GuidanceAvailFl,
                   GUIDANCE_DETAEILS_ID AS GuidanceDetailsID,
                   GUIDANCE_DISC_EXPERT_PCT AS GuidanceDiscExpertPct,
                   GUIDANCE_DISC_FLOOR_PCT AS GuidanceDiscFloorPct,
                   GUIDANCE_DISC_TYPICAL_PCT AS GuidanceDiscTypicalPct,
                   GUIDANCE_REFRESHE_DATE_GMT AS GuidanceRefreshDateGMT,
                   NO_DISC_FL AS NonDiscFl
            ,INSTANT_PRC_METHOD As instantprcmethod
              ,Instant_prc_amt As Instantprcamt
              ,CONTRA_AMT As contraamt
            , USE_EXT_LIST_PRICE AS UseExternalListPriceFl
              FROM ECLIPSE.GT_XML_BUNDLE
             WHERE GUID = i_deal_creation_guid
                   AND (   UPPER (REQUEST_TYPE) = 'REPLACE_CURRENT_DATERANGE'
                        OR REQUEST_TYPE IS NULL
                        OR REQUEST_TYPE = ''
                        )

    )
    LOOP


     BEGIN
            --Added by Lakshmi on 3/22/2015 to fix the issue of no_data_found error
            --Issue: When bundle header component is changed, the query is unable to derive the line number.
        SELECT bd.line_nr INTO l_line_nr
                  FROM line_item li , bundle bd
                 WHERE li.line_type_cd = 'BD'
                       AND (SRC_BUNDLE_DESC_TX = 'Auto Bundle Header'
                            OR src_bundle_desc_Tx IS NULL)
                       AND li.bd_id = i_bd_id
                       AND bd.config_id='99999'
                       AND bd.line_nr=li.line_nr
                       AND ROWNUM < 2;

/*                SELECT line_nr
                  INTO l_line_nr
                  FROM line_item
                 WHERE line_type_cd = 'BD' AND prod_gnrc_nr_tx = recbd.sku
                 AND (SRC_BUNDLE_DESC_TX = recbd.BundleDesc  OR src_bundle_desc_Tx IS NULL)
                 AND bd_id = i_bd_id
                       AND ROWNUM < 2;
 */
                --DBMS_OUTPUT.PUT_LINE('Updating Line Number: '||l_line_nr ||' to HOLD in ReplaceBundles_for_currentdate procedure ');
            EXCEPTION
            --by Harsh Shah 11/21/2014 - for CR 165054 - GUS Ticket--Quantity not updated in Eclipse after Revise Quote (TD # 2710002) - zhirong.shen@hp.com
            WHEN NO_DATA_FOUND then
                    BEGIN
                       SELECT line_nr
                          INTO l_line_nr
                          FROM line_item
                         WHERE line_type_cd = 'BD' --AND prod_gnrc_nr_tx = recbd.sku
                         AND (SRC_BUNDLE_DESC_TX = recbd.BundleDesc  OR src_bundle_desc_Tx IS NULL)
                         AND bd_id = i_bd_id
                               AND ROWNUM < 2;
                        EXCEPTION
                        WHEN NO_DATA_FOUND THEN
                        l_errors:='Error occured during HOLD update for LINE_ITEM table : '||dbms_utility.format_error_backtrace();
                        inserterror_output_messages (i_bd_id,i_bd_nr,i_bd_version_nr, null,null,null,null, null,null,null,l_errors,'WARNING', i_deal_creation_guid,NULL,NULL,NULL);

                        --DBMS_OUTPUT.PUT_LINE(L_ERRORS);

                        l_errors:='LINE_ITEM table error Sku to be put on HOLD is: '||recbd.sku||' bundledesc: '||RECBD.bundledesc||' optcd : '||recbd.OPTCD ;
                        inserterror_output_messages (i_bd_id,i_bd_nr,i_bd_version_nr, null,null,null,null, null,null,null,l_errors,'WARNING', i_deal_creation_guid,NULL,NULL,NULL);

                        l_line_nr := -1;
                        --DBMS_OUTPUT.PUT_LINE(L_ERRORS);
                        END;
            WHEN OTHERS THEN
                l_errors:='Error occured while getting line number from Line item table.'||dbms_utility.format_error_backtrace();
                inserterror_output_messages (i_bd_id,i_bd_nr,i_bd_version_nr, null,null,null,null, null,null,null,l_errors,'WARNING', i_deal_creation_guid,NULL,NULL,NULL);

                ---DBMS_OUTPUT.PUT_LINE(L_ERRORS);

                --by Harsh Shah 11/21/2014 - for CR 165054 - GUS Ticket--Quantity not updated in Eclipse after Revise Quote (TD # 2710002) - zhirong.shen@hp.com
                l_errors:='LINE_ITEM table error Sku to be put on HOLD is: '||recbd.sku||' bundledesc: '||RECBD.bundledesc||' optcd : '||recbd.OPTCD ;
                inserterror_output_messages (i_bd_id,i_bd_nr,i_bd_version_nr, null,null,null,null, null,null,null,l_errors,'WARNING', i_deal_creation_guid,NULL,NULL,NULL);

                l_line_nr := -1;
                --DBMS_OUTPUT.PUT_LINE(L_ERRORS);
            END;

    SELECT max(scale_id)  INTO l_scale_id
            FROM bundle_line WHERE line_nr=l_line_nr AND bd_id=i_bd_id;

        DELETE FROM bundle WHERE bd_id=i_bd_id AND line_nr=l_line_nr;

        DELETE FROM bundle_line WHERE bd_id=i_bd_id AND line_nr=l_line_nr AND scale_id=l_scale_id;

        DELETE FROM bundle_line_contra WHERE bd_id=i_bd_id AND line_nr=l_line_nr AND scale_id=l_scale_id;-- Added for US 7301

        DELETE FROM bundle_line_guidance WHERE bd_id=i_bd_id AND line_nr=l_line_nr AND scale_id=l_scale_id;

            --by harsh shah 17-jan-2014
            --dbms_output.PUT_LINE ('BMI DOC No for Bundle Lines  : ' || recbd.bmi_doc_no );

          ---Added for eprime/BMI deal creation
      IF recbd.addedbyempnr IS NULL AND recbd.addedbyempemail IS NOT NULL THEN
        recbd.addedbyempnr  :=get_emp_nr(recbd.addedbyempemail);
      END IF;

      IF recbd.authempnr IS NULL AND recbd.authempemail IS NOT NULL THEN
        recbd.authempnr  :=get_emp_nr(recbd.authempemail);
      END IF;
      IF (lower(i_dealsourcecd)='eprime' AND i_dealvertocreate = 0) THEN --aded to not authorise if eprime deal version to be created is 0
        recbd.AuthBasisDesc   :=NULL;
        recbd.AuthDate        :=NULL;
        recbd.AuthDateGMT     :=NULL;
        recbd.authempnr       :=NULL;
        recbd.authempemail    :=NULL;
        recbd.AuthStatCD      :='N';
      END IF;
      --added below condition as BMI takes the deal creator as line added by employee if null generic BMI employee
      IF lower(i_dealsourcecd)  IN ( 'bmi','ngq','sts') AND recbd.addedbyempnr IS NULL THEN
        recbd.addedbyempnr    :=i_deal_creator_emp_nr;
      END IF;
      ---added as eprime is not going to send the order min qty and this will be default to 1
      IF recbd.orderminqty IS NULL THEN
        recbd.orderminqty  :=1 ;
      END IF;

      l_errors              :='Bundle Header SKU : ' || recbd.sku || ' OptCode : ' || recbd.OptCd || ' Bundle Source ' || recbd.bundlesource || ' Config : ' || RECBD.CONFIGID || ' Bundle Index ' || recbd.bundleindex;

      IF recbd.addedbyempnr IS NULL THEN
        l_errors            :='Added by Employee No is not provided for ' || l_errors;
        l_msg_type          :='ERROR';
        raise REJECT_BUNDLE;
      END IF;

            --check if rollout months qty exists
      IF (ltrim(rtrim(recbd.rolloutmonthqtys))) IS NULL AND (i_dealsourcecd <> con_deal_source_bmi) THEN
        l_errors                                :='Rollout Month Qtys is empty For ' || l_errors;
        l_msg_type                              :='ERROR';
        raise REJECT_BUNDLE;
      END IF;

      IF (lower(i_dealsourcecd)       NOT IN ('bmi','ngq','sts')) THEN
        IF (is_user_exists(recbd.addedbyempnr
        ,NULL
        ) ='N') THEN
          l_errors                            :='Invalid Employee No ' || recbd.addedbyempnr || ' or Employee is not a valid Eclipse User, For  ' || l_errors;
          l_msg_type                          :='ERROR';
          raise REJECT_BUNDLE;
        END IF;
      END IF;
      --l_errors:=null;
      --Check if auth basis description is null
      --IF (i_dealsourcedealtype                 <>Con_HIGH_TOUCH_DEALTYPE_DESC AND i_dealapprfl='Y') THEN
      IF ( i_dealapprfl='Y') THEN
        IF recbd.authstatcd                     ='Y' THEN
          IF LTRIM(RTRIM(recbd.authbasisdesc)) IS NULL THEN
            L_ERRORS                           :='Auth Basis Description is empty for the ' || l_errors;
            l_msg_type                         :='ERROR';
            raise REJECT_BUNDLE;
          elsif ltrim(rtrim(recbd.authempnr)) IS NULL THEN
            L_ERRORS                          :='Auth Emp Nr is empty for the ' || l_errors;
            l_msg_type                        :='ERROR';
            raise REJECT_BUNDLE;
          elsif is_user_exists(recbd.authempnr
          ,i_dealsourcecd --Added for US-9408 --> Encore Retirement  
          ) ='N' THEN
            L_ERRORS                           :='Invalied Auth Emp Nr : ' || recbd.authempnr || ' for the ' || l_errors;
            l_msg_type                         :='ERROR';
            raise REJECT_BUNDLE;
          END IF;
        END IF;
      END IF;

      L_AUTH_DATE_GMT       :=NULL;
      IF (RECBD.AUTHDATEGMT IS NOT NULL OR RECBD.AUTHDATEGMT<>'') THEN
        L_AUTH_DATE_GMT     :=TO_TIMESTAMP (SUBSTR(RECBD.AUTHDATEGMT,1,19),'YYYY-MM-DD"T"HH24:MI:SS');
      ELSE
        L_AUTH_DATE_GMT:=NULL;
      END IF;
      L_AUTH_MC_DATE:=NULL;
      --Get Auth MC date from XML and convert it to oracle date time format
      IF (RECBD.AUTHDATE IS NOT NULL OR RECBD.AUTHDATE<>'') THEN
        L_AUTH_MC_DATE   :=TO_TIMESTAMP (SUBSTR(RECBD.AUTHDATE,1,19),'YYYY-MM-DD"T"HH24:MI:SS');
      ELSE
        L_AUTH_MC_DATE:=NULL;
      END IF;
      ----dbms_output.PUT_LINE (' converted to date auth date gmt ' || L_AUTH_DATE_GMT );
      --generate bundle config.
      IF recbd.bundlesource=con_bundle_source_watson THEN
        l_bundle_config   :=recbd.configid;
        --dbms_output.put_line ('watson config id: ' || l_bundle_config);
      ELSIF recbd.bundlesource = con_bundle_source_ezconfig OR recbd.bundlesource=con_bundle_source_ecfix OR recbd.bundlesource= con_bundle_source_ecband THEN---condition added for ePrime
        l_bundle_config       :=recbd.configid;
        --TODO: New logic to reside here


        -- recbd.bundlesource ='EC-FIX';
      elsif recbd.bundlesource=con_bundle_source_soft OR recbd.bundlesource=con_bundle_source_ngce OR recbd.bundlesource=con_bundle_source_ngce_fix THEN --If  bundle source is ngce or soft thenn bundle config need to be created
      --TODO: config changes
          if LENGTH(RECBD.CONFIGID)>8 THEN

                  IF UPPER(recbd.requesttype) ='DEL_ADD' THEN

                        l_bundle_config := recbd.EclipseBundleID;
                        l_source_config_id := recbd.configid;

                    ELSE
                  SELECT seq_ca_config_id.nextval
                  INTO l_bundle_config
                  FROM dual;
                  l_source_config_id:=RECBD.CONFIGID;
                  END IF;

          elsif  LENGTH(RECBD.CONFIGID)<=8 then
                   l_bundle_config:=RECBD.CONFIGID;
                   l_source_config_id:=l_bundle_config;
        END IF;
      ELSE
        l_bundle_config:=NULL;
        --Pending implementation -- exit if bundle source is other tahn watson/soft (only if required)
      END IF;

      --dbms_output.put_line (' New Bundle Config ID : '|| l_bundle_config);

      --l_bundle_line_nr:=l_bundle_line_nr+1;
    l_bundle_line_nr:= l_line_nr;
      --dbms_output.put_line ('Adding first Bundle ' || l_bundle_line_nr );

      --dbms_output.put_line (' recbd.sku ' || recbd.sku || ' Bundle Index ' || recbd.bundleindex || ' Bundle Header Line ' || l_bundle_line_nr);

      --*********************
      --Looping through bundle Header
      --*********************
      --Get the bundle Header SKU Auth BD Net amount from the BundleLines XMl Element

      l_HDR_PROD_STD_DISC:=0;

      --Modified byHarsh Shah 18-Oct-2013
      -- added l_xml_path_to_Query in order to generalize the changes with BMIs modified XQuery Path.
      l_xml_path_to_Query:='DealCreationRequest/Bundles/LineItemBD/BundleLines/BundleLine';

      --GET_BD_HDR_AUTH_LIST_AMT( l_xml_path_to_Query,i_DEAL_CREATION_GUID , i_xmlnamespace, RECBD.BUNDLEINDEX, RECBD.BUNDLESOURCE, RECBD.SKU, L_BD_HDR_SKU_LIST_PRICE ,

      --L_AUTH_BDNET_AMT,L_BD_HDR_SKU_QTY,L_HDR_BD_SKU_OPT_CD,L_PROD_COST_PRICE_HDR_PROD,L_HDR_PROD_STD_DISC, l_line_AuthBasisDesc,l_line_AuthStat,l_line_AuthDtGMT);
         -- GET_BD_HDR_AUTH_LIST_AMT( l_xml_path_to_Query, L_DEAL_CREATION_GUID , L_XMLNAMESPACE, RECBD.BUNDLEINDEX, RECBD.BUNDLESOURCE, RECBD.SKU, L_BD_HDR_SKU_LIST_PRICE ,
    --   L_AUTH_BDNET_AMT,L_BD_HDR_SKU_QTY,L_HDR_BD_SKU_OPT_CD,L_PROD_COST_PRICE_HDR_PROD,L_HDR_PROD_STD_DISC, l_line_AuthBasisDesc,l_line_AuthStat,l_line_AuthDtGMT);
     begin
          select nvl(list_price,0),nvl(BD_NET_AMT,0),nvl(qty,0),opt_cd,COST_PRICE,STD_DISC_PCT,AUTH_BASIS_DESC,nvl(AUTH_STAT_CD,'N'),AUTH_DATE_GMT
       INTO  L_BD_HDR_SKU_LIST_PRICE , L_AUTH_BDNET_AMT,L_BD_HDR_SKU_QTY,L_HDR_BD_SKU_OPT_CD,L_PROD_COST_PRICE_HDR_PROD,L_HDR_PROD_STD_DISC, l_line_AuthBasisDesc,l_line_AuthStat,l_line_AuthDtGMT_Char
         from gt_xml_bundle_line where guid =i_DEAL_CREATION_GUID and parent_index=RECBD.BUNDLEINDEX and bundle_line_source=RECBD.BUNDLESOURCE and sku=RECBD.SKU and rownum<2;

          IF (l_line_AuthDtGMT_Char IS NOT NULL OR l_line_AuthDtGMT_Char<>'') THEN
              l_line_AuthDtGMT              :=TO_TIMESTAMP (SUBSTR(l_line_AuthDtGMT_Char,1,19),'YYYY-MM-DD"T"HH24:MI:SS');
          ELSE
               l_line_AuthDtGMT:=NULL;
          END IF;
      exception
      when others then
      dbms_output.put_line('Error om get_bd_hdr_....    '||DBMS_UTILITY.FORMAT_ERROR_BACKTRACE()||' error    :'||sqlerrm);
       L_MSG_TYPE:='WARNING';
        l_errors  :='Error in get bundle header auth list amt   '||recbd.sku||'---'||substr(sqlerrm,1,200);
    --dbms_output.put_line (l_errors);
          --inserterror_output_messages (l_bd_id,l_bd_nr,l_bd_version_nr, l_deal_prog_cd,l_bdme_aprvl_cd,l_quote_dist_cd,l_euv_stat_code, l_high_risk_fl,l_risk_reasion_desc,l_risk_desc,l_errors,l_msg_type, l_deal_creation_guid,NULL,NULL,NULL);
           inserterror_output_messages (i_bd_id,i_bd_nr,i_bd_version_nr, null,null,null,null, null,null,null,l_errors,L_MSG_TYPE, i_deal_creation_guid,NULL,NULL,NULL);
      end;



--Changes made by Lakshmi on 9/19/2014 for CR:156213 Update of bundles fail when the config ID are same for UPDATE and DEL_ADD requests

      BMI_insert_prod_line_Replace (
          I_BD_ID, I_bd_nr, I_bd_version_nr, recbd.authstatcd, NULL, NULL, NULL, NULL, NULL, NULL, NULL, i_deal_creation_guid, i_country_cd,
      i_price_list_cd, i_currency_cd, i_price_term_cd, recbd.sku, 'N',
      I_hierarchy_cd, I_deal_end_date,'BD', recbd.listprice, recbd.authbasisdesc, recbd.header_qty, recbd.bdnetamt, recbd.authempnr,
      l_auth_generic_emp_nr,recbd.addedbyempnr, recbd.pricingtypecd, l_bundle_line_nr, I_deal_begin_date , 'Y','Y',
      recbd.bundlesource, l_bundle_config, l_source_config_id, l_hdr_prod_std_disc, l_bundle_line_nr,recbd.authstatcd, l_hdr_bd_sku_opt_cd,recbd.rolloutmonthqtys,
      l_auth_date_gmt,l_auth_mc_date,i_dealsourcedealtype,
      l_bd_hdr_sku_qty,recbd.bundledesc,recbd.pl,l_auth_bdnet_amt,recbd.costprice,
      l_prod_cost_price_hdr_prod,i_busmodelcd,recbd.orderminqty,l_line_auth_type, l_line_AuthBasisDesc,l_line_AuthStat,l_line_AuthDtGMT, l_create_new_version ,'N',
      recbd.bmi_doc_no,recbd.proddesc, L_EXT_PRE_APPRV_PRC_AM,recbd.listprice,recbd.bdnetamt, recbd.DisplayCompPrcFl,
        recbd.GuidanceAvailFl,recbd.GuidanceDetailsID,recbd.GuidanceDiscExpertPct,recbd.GuidanceDiscFloorPct,
        recbd.GuidanceDiscTypicalPct,recbd.GuidanceRefreshDateGMT, recbd.nondiscfl, l_scale_id
          ,recbd.instantprcmethod,recbd.Instantprcamt,recbd.contraamt  ----added for US 7301
          ,recbd.UseExternalListPriceFl
          );



      l_auth_bdnet_amt:=NULL;
      --L_EXT_PRE_APPRV_PRC_AM := NULL;
      --Increasing bundle detail line nr.. as it already inserted  by the above code.
      -- l_bundle_dtl_line_nr:=1;
      --*************************************
      --Looping through Bundle Line
      -- inserting bundle line
      --*************************************
      FOR recbdline IN
      (
            SELECT GUID,
                   AUTH_BASIS_DESC AS AUTHBASISDESC,
                   AUTH_DATE AS authdate,
                   AUTH_DATE_GMT AS authdategmt,
                   AUTH_EMP_NR AS authempnr,
                   AUTH_EMP_EMAIL AS authempemail,
                   AUTH_STAT_CD AS authstatcd,
                   BD_NET_AMT AS bdnetamt,
                   LIST_PRICE AS LISTPRICE,
                   PROD_LINE_CD AS pl,
                   PROD_DESC AS proddesc,
                   QTY AS qty,
                   SKU AS sku,
                   STD_DISC_PCT AS stddiscpct,
                   PARENT_INDEX AS parentindex,
                   BUNDLE_LINE_SOURCE AS bundleline_source,
                   OPT_CD AS OPTCD,
                   COST_PRICE AS CostPrice,
                   BANDED_FL AS bandedfl,
                   TO_NUMBER(nvl(EXT_LINE_ITEM_NR,0)) AS ExtLineItemNr,
                   EXT_PRE_APPRV_PRICE AS ExtPreApprvPrice,
                   GUIDANCE_AVAIL_FL AS GuidanceAvailFl,
                   GUIDANCE_DETAILS_ID AS GuidanceDetailsID,
                   GUIDANCE_DISC_EXPERT_PCT AS GuidanceDiscExpertPct,
                   GUIDANCE_DISC_FLOOR_PCT AS GuidanceDiscFloorPct,
                   GUIDANCE_TYPICAL_PCT AS GuidanceDiscTypicalPct,
                   GUIDANCE_REFRESH_DATE_GMT AS GuidanceRefreshDateGMT,
                   NON_DISC_FL AS NonDiscFl
               ,INSTANT_PRC_METHOD AS InstantPrcMethod---Added for US 7301
              ,INSTANT_PRC_AMT AS InstantPrcAmt---Added for US 7301
              ,CONTRA_AMT AS ContraAmt---Added for US 7301
              ,USE_EXT_LIST_PRICE AS UseExternalListPriceFl
              FROM ECLIPSE.GT_XML_BUNDLE_Line
             WHERE
                        GUID =i_deal_creation_guid
                    AND PARENT_INDEX = recbd.bundleindex
                    AND BUNDLE_LINE_SOURCE =RECBD.BUNDLESOURCE
                       /*  AND (LTRIM(RTRIM(SKU)),DECODE(OPT_CD,NULL,' ',OPT_CD)) NOT IN
                                (SELECT LTRIM(RTRIM(PROD_GNRC_NR_TX)),
                                  DECODE(PROD_OPT_CD,NULL,' ',PROD_OPT_CD)
                                FROM BUNDLE_LINE BL
                                WHERE BL.BD_ID=I_BD_ID
                                AND LINE_NR   =L_BUNDLE_LINE_NR
                  ) */
                  order by ExtLineItemNr --4-mar-2015 by Harsh Shah - CR 202569-[Channel_PST][US-7832]The products sequence in eclipse is not consistent with BMI page
          )
      LOOP
        ---Added for eprime/BMI deal creation
        IF recbdline.authempnr IS NULL AND recbdline.authempemail IS NOT NULL THEN
          recbdline.authempnr  :=get_emp_nr(recbdline.authempemail);
        END IF;
        IF (lower(i_dealsourcecd) ='eprime' AND i_dealvertocreate = 0) THEN --aded to not authorise if eprime deal version to be created is 0
          recbdline.AuthBasisDesc:=NULL;
          recbdline.AuthDate     :=NULL;
          recbdline.AuthDateGMT  :=NULL;
          recbdline.authempnr    :=NULL;
          recbdline.authempemail :=NULL;
          recbdline.AuthStatCD   :='N';
        END IF;

        --l_bundle_dtl_line_nr:=l_bundle_dtl_line_nr+1;

        --Changes made by Lakshmi as part of eRFC for ExtLineItemNr
        new_l_bundle_dtl_line_nr := new_l_bundle_dtl_line_nr +1;

         --Changes made by Lakshmi as part of eRFC for ExtLineItemNr
        IF recbdline.ExtLineItemNr is NULL THEN
                l_bundle_dtl_line_nr:=new_l_bundle_dtl_line_nr;
        ELSE
                l_bundle_dtl_line_nr := recbdline.ExtLineItemNr;
        END IF;

        l_errors:='Bundle Line Detail SKU : ' || recbdline.sku || ' OptCode : ' || recbdline.OptCd || ' Bundle Source ' || recbd.bundlesource || ' Config : ' || RECBD.CONFIGID || ' Bundle Parent Index ' || recbdline.ParentIndex;
        --Check if auth basis description is null
        IF (i_dealsourcedealtype    <>Con_HIGH_TOUCH_DEALTYPE_DESC AND i_dealapprfl='Y') THEN
          IF ( recbdline.authstatcd <>'Y' AND recbdline.authstatcd <>'N' )THEN
            L_ERRORS                :='Invalid value for Auth Stat Code : ' || recbdline.authstatcd || ' for ' || l_errors;
            l_msg_type              :='ERROR';
            raise REJECT_BUNDLE;
          END IF;
          IF recbdline.authstatcd                     ='Y' THEN
            IF LTRIM(RTRIM(recbdline.authbasisdesc)) IS NULL THEN
              L_ERRORS                               :='Auth Basis Description is empty for the ' || l_errors;
              l_msg_type                             :='ERROR';

              raise REJECT_BUNDLE;
            elsif ltrim(rtrim(recbdline.authempnr)) IS NULL THEN
              L_ERRORS                              :='Auth Emp Nr is empty for the ' || l_errors;
              l_msg_type                            :='ERROR';
              raise REJECT_BUNDLE;
            elsif is_user_exists(recbdline.authempnr
            ,i_dealsourcecd --Added for US-9408 --> Encore Retirement  
            ) ='N' THEN
              L_ERRORS                               :='Invalied Auth Emp Nr : ' || recbd.authempnr || ' for the ' || l_errors;
              l_msg_type                             :='ERROR';
              raise REJECT_BUNDLE;
            END IF;
          END IF;
        END IF;
        --add the below conditions for eprime as eprime can authorise a product even if it is a high_touch deal
        IF (lower(i_DEALSOURCECD)                 ='eprime' AND i_dealsourcedealtype = Con_HIGH_TOUCH_DEALTYPE_DESC ) THEN
          IF recbd.authstatcd                     ='Y' THEN
            IF LTRIM(RTRIM(recbd.authbasisdesc)) IS NULL THEN
              L_ERRORS                           :='Auth Basis Description is empty for the ' || l_errors;
              l_msg_type                         :='ERROR';
              raise REJECT_BUNDLE;
            elsif ltrim(rtrim(recbd.authempnr)) IS NULL THEN
              L_ERRORS                          :='Auth Emp Nr is empty for the ' || l_errors;
              l_msg_type                        :='ERROR';
              raise REJECT_BUNDLE;
            elsif is_user_exists(recbd.authempnr
            ,i_dealsourcecd --Added for US-9408 --> Encore Retirement  
            ) ='N' THEN
              L_ERRORS                           :='Invalied Auth Emp Nr : ' || recbd.authempnr || ' for the ' || l_errors;
              l_msg_type                         :='ERROR';
              raise REJECT_BUNDLE;
            END IF;
          END IF;
        END IF;---end of new condition for ePrime--
        L_AUTH_DATE_GMT           :=NULL;
        IF (RECBDLINE.AUTHDATEGMT IS NOT NULL OR RECBDLINE.AUTHDATEGMT<>'') THEN
          L_AUTH_DATE_GMT         :=TO_TIMESTAMP ( SUBSTR(RECBDLINE.AUTHDATEGMT,1,19),'YYYY-MM-DD"T"HH24:MI:SS');
        ELSE
          L_AUTH_DATE_GMT:=NULL;
        END IF;
        L_AUTH_MC_DATE:=NULL;
        --Get Auth MC date from XML and convert it to oracle date time format
        IF (RECBDLINE.AUTHDATE IS NOT NULL OR RECBDLINE.AUTHDATE<>'') THEN
          L_AUTH_MC_DATE       :=TO_TIMESTAMP ( SUBSTR(RECBDLINE.AUTHDATE,1,19),'YYYY-MM-DD"T"HH24:MI:SS');
        ELSE
          L_AUTH_MC_DATE:=NULL;
        END IF;
        L_AUTH_BDNET_AMT          :=NULL;
        --L_EXT_PRE_APPRV_PRC_AM := NULL;
        L_PROD_COST_PRICE_HDR_PROD:=0;
        l_auth_bdnet_amt:=NULL;
        --L_EXT_PRE_APPRV_PRC_AM := NULL;
        /*if (l_dealsourcedealtype<>c_high_touch_dealtype_desc ) THEN
        l_auth_bdnet_amt:=RECBDLINE.BDNETAMT;
        else
        l_auth_bdnet_amt:=null;
        end if;
        */
        --bundle desc is not required for Bundle Lines. It is only for the bundle Header Level.
        L_HDR_PROD_STD_DISC:=0; --initializing to zero as we don't need this for bundle line. Bundle line has got std disc values in XML
        --dbms_output.PUT_LINE (' bundle line std disc : ' || RECBDLINE.STDDISCPCT || ' bundle line No : ' || L_BUNDLE_DTL_LINE_NR || ' Banded Flag : ' || recbdline.bandedfl);

        BMI_insert_prod_line_Replace ( I_BD_ID, I_BD_NR,I_BD_VERSION_NR, RECBDLINE.AUTHSTATCD,null,null,null, null, null, null,null, I_DEAL_CREATION_GUID, I_COUNTRY_CD,I_PRICE_LIST_CD,I_CURRENCY_CD, I_PRICE_TERM_CD, RECBDLINE.SKU,'N',I_HIERARCHY_CD,
        i_deal_end_date,'BD', RECBDLINE.LISTPRICE,RECBDLINE.AUTHBASISDESC, RECBDLINE.QTY, RECBDLINE.BDNETAMT , RECBDLINE.AUTHEMPNR, l_auth_generic_emp_nr,
        RECBD.ADDEDBYEMPNR,RECBD.PRICINGTYPECD,L_BUNDLE_DTL_LINE_NR ,i_deal_end_date,'Y','N',RECBD.BUNDLESOURCE, L_BUNDLE_CONFIG,L_SOURCE_CONFIG_ID ,
        RECBDLINE.STDDISCPCT, L_BUNDLE_LINE_NR,RECBDLINE.AUTHSTATCD,RECBDLINE.OPTCD,NULL,L_AUTH_DATE_GMT,L_AUTH_MC_DATE,i_DEALSOURCEDEALTYPE, 0,NULL,
        RECBDLINE.PL,NULL,RECBDLINE.COSTPRICE,L_PROD_COST_PRICE_HDR_PROD,i_busmodelcd,NULL,l_line_auth_type, NULL,NULL,NULL, l_create_new_version,recbdline.bandedfl,
        recbd.bmi_doc_no,recbdline.proddesc, recbdline.ExtPreApprvPrice,recbd.listprice,recbd.bdnetamt, recbd.DisplayCompPrcFl,
        recbdline.GuidanceAvailFl,recbdline.GuidanceDetailsID,recbdline.GuidanceDiscExpertPct,recbdline.GuidanceDiscFloorPct,recbdline.GuidanceDiscTypicalPct,
        recbdline.GuidanceRefreshDateGMT, recbdline.NonDiscFl , l_scale_id
        ,recbdline.InstantPrcMethod ,recbdline.InstantPrcAmt  ,recbdline.ContraAmt ---Added for US 7301
        ,recbdline.UseExternalListPriceFl
        );  --Added by Ramesh on 17-Feb-2014 for R8

        l_auth_bdnet_amt:=NULL;
        --L_EXT_PRE_APPRV_PRC_AM := NULL;
      END LOOP;
      --l_bundle_dtl_line_nr:=1;
      new_l_bundle_dtl_line_nr:=0;
    end loop;
  EXCEPTION
   WHEN REJECT_BUNDLE THEN
      BEGIN
              ROLLBACK;
              --delete NOROUTE entry
              DELETE
              FROM GT_EDMS_SMQT_ERR_RESULTS
              WHERE ERROR_desc='NOROUTE' ;
              DELETE
              FROM edms_deal_error_report
              WHERE deal_creation_guid=I_deal_creation_guid
              AND ERROR_MSG           = 'NOROUTE';
      END;
    END;
END replace_bundle_products;

PROCEDURE BMI_insert_prod_line_Replace
  (
    i_bd_id                   NUMBER,
    i_bd_nr                   NUMBER,
    i_bd_version_nr           NUMBER,
    i_line_prog_cd            VARCHAR2,
    i_deal_prog_cd            VARCHAR2,
    i_bdme_aprvl_cd           VARCHAR2,
    i_quote_dist_cd           VARCHAR2,
    i_euv_stat_code           VARCHAR2,
    i_high_risk_fl            VARCHAR2,
    i_risk_reasion_desc       VARCHAR2,
    i_risk_desc               VARCHAR2,
    i_deal_creation_guid      VARCHAR2,
    i_countrycd               VARCHAR2,
    i_pricelistcd             VARCHAR2,
    i_currencycd              VARCHAR2,
    i_pricetermcd             VARCHAR2,
    i_prod_string             VARCHAR2,
    i_globai_fl               VARCHAR2,
    i_hierarchy_cd            VARCHAR2,
    i_enddate                 VARCHAR2,
    i_line_type_cd            VARCHAR2,
    i_prod_list_price         NUMBER,
    i_prod_auth_basis_text    VARCHAR2,
    i_prod_qty                NUMBER,
    i_bdnetamt                NUMBER,
    i_auth_emp_nr             NUMBER,
    i_auth_mc_hp_emp_nr       NUMBER,
    i_line_added_by_emp_nr    NUMBER,
    i_pricingtypecd           VARCHAR2,
    i_line_nr                 NUMBER,
    i_begindate               VARCHAR2,
    i_add_bundles             VARCHAR2,
    i_add_bundleheader        VARCHAR2,
    i_config_src              VARCHAR2,
    i_config_id               VARCHAR2,-- NUMBER,  commented as part of CR5020
    i_source_config_id        VARCHAR2,
    i_stddiscpct              NUMBER,
    i_line_item_nr_for_bundle NUMBER,
    i_auth_stat_cd            VARCHAR2,
    i_opt_cd                  VARCHAR2,
    I_ROLLOUTMONTHQTYS        VARCHAR2,
    i_authdategmt             VARCHAR2,
    i_auth_mc_date            VARCHAR2,
    i_dealsourcedealtype      VARCHAR2,
    i_bd_line_qty_for_hdr_sku NUMBER,
    i_bundle_desc             VARCHAR2,
    i_sku_pl                  VARCHAR2, ---Added for CR3236
    I_BD_HDR_LINE_AUTH_BD_NET LINE_DISC_SCALE.RQST_BD_NET_PRC_AM%type,
    I_PROD_COST_PRICE          NUMBER,
    I_PROD_COST_PRICE_HDR_PROD NUMBER,
    i_busmodelcd               VARCHAR2,          ---Added  for CR 4774
    i_minorder_qty             VARCHAR2 ,         ---Added for CR4735
    i_line_auth_type line_item.line_auth_type%type,--added for new auth changes
    i_line_authdesc VARCHAR2 ,
    i_line_AuthStat bundle_line.ITEM_PROG_CD%type,
    i_line_AuthDtGMT DATE,
    o_create_new_version OUT VARCHAR,
    i_banded_fl varchar2,
    i_bmi_doc_no varchar2,
    i_prod_desc  LINE_ITEM.PROD_GNRC_DESC_TX%TYPE , --Added by Ramesh on 17-Feb-2014 for R8
    i_EXT_PRE_APPRV_PRC_AM line_disc_scale.EXT_PRE_APPRV_PRC_AM%TYPE,
    i_total_hdr_listprice_value number,
    i_total_hdr_bdnet_value number,
      I_DisplayCompPrcFl VARCHAR2,--Added for US6037 --> Show Component Level Pricing
      i_guidance_available_fl VARCHAR2,--Added by Lakshmi for CR6012
      i_guidance_details_id NUMBER,--Added by Lakshmi for CR6012
      i_guidance_expert_pct NUMBER,--Added by Lakshmi for CR6012
      i_guidance_floor_pct NUMBER,--Added by Lakshmi for CR6012
      i_guidance_typical_pct NUMBER,--Added by Lakshmi for CR6012
      i_guidance_last_refresh_dt VARCHAR2,--Added by Lakshmi for CR6012
      i_non_discount_Fl VARCHAR2,
      i_scale_id IN NUMBER
        ,i_InstantPrcMethod  bundle_line.INSTANT_PRC_METHOD%TYPE  --Added for UsS7301
        ,i_InstantPrcAmount  bundle_line.INSTANT_PRC_AMT%TYPE --Added for US 7301
        ,i_ContraAmt bundle_line_contra.CONTRA_AMT%TYPE---Added for 7301
        ,i_use_ext_list_price    GT_XML_line_item.use_ext_list_price%TYPE --New variable added by Lakshmi for HP SW Project
  )
IS
  l_auth_bdnet_amt LINE_DISC_SCALE.RQST_BD_NET_PRC_AM%TYPE;
  L_EXT_PRE_APPRV_PRC_AM LINE_DISC_SCALE.EXT_PRE_APPRV_PRC_AM%TYPE;
  l_rollout_ins_qry VARCHAR2(4000);
  L_NO_OF_MONTHS    number;
  l_rollout_mnths t_rollout_mnths:=t_rollout_mnths();
  l_gypsy_prod_string VARCHAR2(50);
  p_gypsy_price sys_refcursor; --Contains the GPSy price details - fetched
  -- through DARTWWI
  --l_auth_basis_text line_disc_scale.auth_basis_text%type;
  --l_rollout_mnths t_rollout_mnths:=t_rollout_mnths();
  --l_line_nr number(10);
  l_scale_id               NUMBER(10);
  l_errors                 VARCHAR2(3000);
  l_msg_type               VARCHAR2(20);
  L_LINE_PROD_GNRC_DESC_TX VARCHAR2(200);
  l_line_bus_unit_cd       VARCHAR2(10);
  L_LINE_BUS_GROUP_CD      VARCHAR2(10);
  l_auth_disc_otc_pc       NUMBER(5,2) :=0;
  l_rqst_disc_otc_pc       NUMBER(5,2) :=0;
  l_config_src bundle.config_src%type;
/*type gypsy_rec
IS
  record
  (
    prod_nr         VARCHAR2 (50),
    prod_opt_cd     VARCHAR2 (10),
    prod_desc       VARCHAR2 (100),
    stat            VARCHAR2 (10),
    price           NUMBER (16, 2),
    prod_line       VARCHAR2 (5),
    prod_family     VARCHAR2 (100),
    start_eff_dt    DATE,
    low_price       NUMBER (16, 2),
    qty_brk         NUMBER (10),
    end_eff_dt      DATE,
    ref_price_fl    VARCHAR2 (1),
    non_discount_fl VARCHAR2 (1),
    plc_fl          VARCHAR2 (10) );
  */
  gprice gypsy_rec;
  l_createnewversion     VARCHAR2(1)                    :='N';
  L_BUNDLE_LINE_SCALE_ID NUMBER(5)                      :=0;
  L_SET_LINE_AUTH_CODE   VARCHAR2(1)                    :='N';
  l_rqst_margin_pct line_disc_scale.rqst_margin_pct%type:=0;
  --l_disp_comp_prc_fl bus_model.DISP_COMP_PRC_FL%type; --Added with CR 4774
  l_disp_comp_prc_fl bus_model.DISP_COMP_PRC_FL%type; --ADDED BY LAKSHMI FOR US6037 --> Show Component Level Pricing
  l_disp_comp_prc_fl_BM bus_model.DISP_COMP_PRC_FL%type;
  reject_deal EXCEPTION;
  cntr NUMBER;
 l_log_messages VARCHAR2(1);
   BEGIN
  o_create_new_version:='Y';
  --dbms_output.PUT_LINE ('INSERT PROD LINE for bundle ');
  --dbms_output.PUT_LINE ('Deal type is : ' || i_dealsourcedealtype || ' and auth bdnet amount is : ' || i_bdnetamt);
  --l_gypsy_prod_string:='''' || i_prod_string ||'''';
  --add option code if the option code exists for that product.
  --IF i_opt_cd          IS NOT NULL THEN
--    l_gypsy_prod_string:= chr(39) || RPAD(i_prod_string,12) || rpad(i_opt_cd,3) || chr (39);
--  ELSE
    --l_gypsy_prod_string:= chr(39) || i_prod_string || chr(39);
  --END IF;

   SELECT app_value
  INTO l_log_messages
  FROM APP_CONFIG_KEYS
 WHERE app_key='LOG_EXT_LP_MSG';
 
  
    BEGIN
    ---Changes for CR 3156 (Invalid products are not allowed to be added to a deal)----
    l_price :=NULL;
   l_prod_desc:=NULL;
   l_prod_nr:=NULL;
   l_stat:=NULL;
   l_prod_line:=NULL;
   l_non_discount_fl :=NULL;
   l_ref_price_fl:=NULL;
   l_prod_family:=NULL;
  SELECT price, prod_desc , prod_nr, stat, prod_line, non_discount_fl , ref_price_fl , prod_family
  INTO l_price, l_prod_desc , l_prod_nr, l_stat, l_prod_line , l_non_discount_fl, l_ref_price_fl, l_prod_family
  FROM gt_product_bundles_prices
  WHERE prod_nr=i_prod_string
  AND prod_opt_cd= DECODE(i_opt_cd,NULL,'1',i_opt_cd);
  --DBMS_OUTPUT.PUT_LINE('Price found for the product: '|| i_prod_string ||' and opt_cd: '||i_opt_cd||'__is: '||l_price);
 EXCEPTION
 --Below exception added for CR:282430-ORA-01422: exact fetch returns more than requested number of rows
  WHEN TOO_MANY_ROWS THEN
  SELECT DISTINCT price, prod_desc , prod_nr, stat, prod_line, non_discount_fl , ref_price_fl , prod_family
  INTO l_price, l_prod_desc , l_prod_nr, l_stat, l_prod_line , l_non_discount_fl, l_ref_price_fl, l_prod_family
  FROM gt_product_bundles_prices
  WHERE prod_nr=i_prod_string
  AND prod_opt_cd= DECODE(i_opt_cd,NULL,'1',i_opt_cd)
  AND prod_line IN (SELECT prod_line_cd FROM prod_line WHERE tenantid =(SELECT tenantid FROM deal WHERE bd_id=i_bd_id));
  WHEN NO_DATA_FOUND THEN
  DBMS_OUTPUT.PUT_LINE('Data not found for: '|| i_opt_cd||','||i_prod_string);
   ---Changes for CR 3156 (Invalid products are not allowed to be added to a deal)----
    l_price :=NULL;
   l_prod_desc:=NULL;
   l_prod_nr:=NULL;
   l_stat:=NULL;
   l_prod_line:=NULL;
   l_non_discount_fl :=NULL;
   l_ref_price_fl:=NULL;
   l_prod_family:=NULL;
--  RETURN;
  WHEN OTHERS THEN
  DBMS_OUTPUT.PUT_LINE('Error occured while querying gt_product_bundles_prices: '||SQLERRM);
   ---Changes for CR 3156 (Invalid products are not allowed to be added to a deal)----
    l_price :=NULL;
   l_prod_desc:=NULL;
   l_prod_nr:=NULL;
   l_stat:=NULL;
   l_prod_line:=NULL;
   l_non_discount_fl :=NULL;
   l_ref_price_fl:=NULL;
   l_prod_family:=NULL;
  END;

   --Below block added by Lakshmi for HP SW Project
  IF i_use_ext_list_price ='Y' THEN
  IF l_log_messages='Y' THEN
    l_errors  :='Gpsy List price: '||l_price||' of Product : ' || i_prod_string || ' '||i_opt_cd||' is overwritten by External List Price: '||i_prod_list_price;
    l_msg_type :='WARNING';
        inserterror_output_messages (i_bd_id,i_bd_nr,i_bd_version_nr, i_deal_prog_cd,i_bdme_aprvl_cd,i_quote_dist_cd,i_euv_stat_code, 
        i_high_risk_fl,i_risk_reasion_desc,i_risk_desc,l_errors,l_msg_type, i_deal_creation_guid,NULL,NULL,l_errors);
    END IF;
    l_price := i_prod_list_price;
  END IF;
  
--Changes made as per CR83540, Overwrite Gypy non_discount_flag with XML value from Optimus
--CR83540The Non-discountable attribute in Eclipse is displayed incorrect for non-discountable product which set in Optimus
  l_non_discount_fl := i_non_discount_Fl;

  --dbms_output.put_line (' GPSy PROD for Bundle : ' ||l_gypsy_prod_string);
  --Get GPSy Price
  --pkgpricelst_chiante.gppricecollectdtlphd_ref ( i_countrycd, i_pricelistcd, i_currencycd, i_pricetermcd, l_gypsy_prod_string, 'N', i_hierarchy_cd, i_enddate, p_gypsy_price );
  ----dbms_output.put_line (' insert prod line -- 1  ');
  --Loop through GPSy price cursor to get price details.
  --LOOP
   -- FETCH p_gypsy_price INTO gprice;
      IF i_prod_desc is not null THEN  --Added by Ramesh on 17-Feb-2014 for R8
         l_prod_desc := i_prod_desc;
    END IF;

    ----dbms_output.put_line (' insert prod line -- 2  ');
    IF l_price IS NULL THEN
      ----dbms_output.put_line (' insert prod line -- 3  ');
      l_createnewversion:='N';
      l_errors          :='Product : ' || l_gypsy_prod_string || ' does not exists in GPSy. Cannot create new version of deal. Check Bundle Config : ' || i_config_id ||'Bundle Source config id: '|| i_source_config_id ||',Bundle Source : ' || i_config_src || ', Bundle Line : '|| i_line_nr;
      --dbms_output.put_line (l_errors);
      l_msg_type          :='WARNING';
      o_create_new_version:='N';
      --dbms_output.PUT_LINE (' Error from GPSy ---Cannot proceed .. Create New Version Flag : ' || o_create_new_version);
      --insert into message repository
      inserterror_output_messages (i_bd_id,i_bd_nr,i_bd_version_nr, i_deal_prog_cd,i_bdme_aprvl_cd,i_quote_dist_cd,i_euv_stat_code, i_high_risk_fl,i_risk_reasion_desc,i_risk_desc,l_errors,l_msg_type, i_deal_creation_guid,NULL,NULL,l_errors);
    END IF;
    --EXIT   WHEN P_GYPSY_PRICE%NOTFOUND;
    --get the product line details
    --dbms_output.put_line (' insert prod line -- 4  ');
    IF (to_number(l_price) >to_number(i_prod_list_price)) THEN
      -- l_errors                 := 'GPSy price is greater than smart quote price for the product : ' || gprice.prod_nr ||'  ' || gprice.prod_desc ||'  GPSy Price : '|| gprice.price || ' , SmartQuote Price : ' || i_prod_list_price;
      l_errors := 'GPSy price is greater than BMI price for the product : ' || l_prod_nr ||'  ' || l_prod_desc ||'  GPSy Price : '|| l_price || ' , bmi Price : ' || i_prod_list_price;
      --dbms_output.put_line (l_errors);
      L_MSG_TYPE:='WARNING';
      inserterror_output_messages (i_bd_id,i_bd_nr,i_bd_version_nr, i_deal_prog_cd,i_bdme_aprvl_cd,i_quote_dist_cd,i_euv_stat_code, i_high_risk_fl,i_risk_reasion_desc,i_risk_desc,l_errors,l_msg_type, i_deal_creation_guid,NULL,NULL,l_errors);
    END IF;
    IF (to_number(l_price) <to_number(i_prod_list_price)) THEN
      --l_errors                 := 'GPSy price is lesser than smart quote price for the product : ' || gprice.prod_nr ||'  ' || gprice.prod_desc ||'  GPSy Price : '|| gprice.price || ' , SmartQuote Price : ' || i_prod_list_price ;
      l_errors := 'GPSy price is lesser than BMI price for the product : ' || l_prod_nr ||'  ' || l_prod_desc ||'  GPSy Price : '|| l_price || ' , bmi Price : ' || i_prod_list_price ;
      --dbms_output.put_line (l_errors);
      --L_MSG_TYPE:='WARNING'; Commented as part of CR 74200
      L_MSG_TYPE:='WARNING';
      inserterror_output_messages (i_bd_id,i_bd_nr,i_bd_version_nr, i_deal_prog_cd,i_bdme_aprvl_cd,i_quote_dist_cd,i_euv_stat_code, i_high_risk_fl,i_risk_reasion_desc,i_risk_desc,l_errors,l_msg_type, i_deal_creation_guid,NULL,NULL,l_errors);
      --RAISE REJECT_DEAL;
    END IF;
    --Check product status - Active /Obsolete
    IF (l_stat='O') THEN
      l_errors    :='Product : ' || l_prod_nr ||'  ' || l_prod_desc ||'  is obsolete ' ;
      --dbms_output.put_line (l_errors);
      L_MSG_TYPE:='WARNING';
      inserterror_output_messages (i_bd_id,i_bd_nr,i_bd_version_nr, i_deal_prog_cd,i_bdme_aprvl_cd,i_quote_dist_cd,i_euv_stat_code, i_high_risk_fl,i_risk_reasion_desc,i_risk_desc,l_errors,l_msg_type, i_deal_creation_guid,NULL,NULL,l_errors);
    END IF;
    --if deal is a high touch deal then
    --auth bd net should be null
    --and bdnet amount should be populated to rqst_bd_net_prc_am
    --QC2554
    IF (i_dealsourcedealtype   <>c_high_touch_dealtype_desc ) THEN
      l_auth_bdnet_amt         :=i_bdnetamt;
      L_EXT_PRE_APPRV_PRC_AM := i_EXT_PRE_APPRV_PRC_AM;
    elsif (i_dealsourcedealtype = c_high_touch_dealtype_desc AND i_line_prog_cd ='Y') THEN--added for ePrime requorement as auith amt should not be null if product is added with authoriszation
      l_auth_bdnet_amt         :=i_bdnetamt;
      L_EXT_PRE_APPRV_PRC_AM := i_EXT_PRE_APPRV_PRC_AM;
    ELSE
      l_auth_bdnet_amt:=NULL;
      --L_EXT_PRE_APPRV_PRC_AM :=null;
    END IF;
    /*
    ---------------------------------------------------------------
    -- zero list price management for the bundle products
    ---------------------------------------------------------------
    if gprice.price=0 then
    L_AUTH_BDNET_AMT:=0;
    l_errors                 := 'Zero list Price for GPSy product (Bundle Product ) :' ||' Bundle Line - ' ||  i_line_item_nr_for_bundle ||' ' || gprice.prod_nr ||'  ' || gprice.prod_desc ||'  GPSy Price : '|| gprice.price || ' , SmartQuote Price : ' || i_prod_list_price || ' , BD Net values will be marked as zero';
    L_MSG_TYPE:='WARNING';
    inserterror_output_messages (i_bd_id,i_bd_nr,i_bd_version_nr, i_deal_prog_cd,i_bdme_aprvl_cd,i_quote_dist_cd,i_euv_stat_code, i_high_risk_fl,i_risk_reasion_desc,i_risk_desc,l_errors,l_msg_type, i_deal_creation_guid,NULL,NULL,l_errors);
    end if;
    */
    --get details from prod_line table
    BEGIN
      SELECT pl.prod_line_desc_tx,
        pl.bus_unit_cd,
        bu.bus_group_cd
      INTO l_line_prod_gnrc_desc_tx,
        l_line_bus_unit_cd,
        l_line_bus_group_cd
      FROM prod_line pl,
        bus_unit bu
      WHERE PL.BUS_UNIT_CD =BU.BUS_UNIT_CD
      AND pl.prod_line_cd  =l_prod_line;
    EXCEPTION
    WHEN NO_DATA_FOUND THEN
      l_errors :=' Prod line ' || l_prod_line || ' details does not exists in prodcut line master ';
      ----dbms_output.PUT_LINE (L_ERRORS);
      L_MSG_TYPE:='WARNING';
      inserterror_output_messages (i_bd_id,i_bd_nr,i_bd_version_nr, i_deal_prog_cd,i_bdme_aprvl_cd,i_quote_dist_cd,i_euv_stat_code, i_high_risk_fl,i_risk_reasion_desc,i_risk_desc,l_errors,l_msg_type, i_deal_creation_guid,NULL,NULL,l_errors);
    END;
    --**************************************************************************
    --Adding Non Header Bundles
    --**************************************************************************
    IF (i_add_bundles='Y' AND i_add_bundleheader ='N') THEN
      --get the new scale id for the line
      SELECT NVL(MAX(scale_id),0)
      INTO l_scale_id
      FROM line_disc_scale
      WHERE bd_id =i_bd_id
      AND line_nr =i_line_item_nr_for_bundle;
      --dbms_output.put_line ( ' insert into bundle line with scale id for the Line item ' || i_line_item_nr_for_bundle || ' and bundle line ' || i_line_nr );
      --pending
      --if scale id is null or zero then raise the error and exit from deal
      -- creation.
      /*
      bd_id
      line_nr
      disc_bndry_id
      scale_id
      item_nr
      */
      --                    --dbms_output.put_line (' Inserting into bundle line
      -- without Header details ' || i_line_nr);
      --When adding a bundle line details
      --i_line_nr contains the bundle line details NR
      --**************************************************************************
      -- Insert into Bundle_line table - Non Header.
      --**************************************************************************
      BEGIN
        G_SET_LINE_AUTHORIZER_CODE:=NULL;
        --decide on whether to authorize the line
        -----------
        --dbms_output.put_line (' --------- outputs for the bundle  line - g_set_line_authorizer_code fields');
        --dbms_output.PUT_LINE (' i_bdnetamt ' || I_BDNETAMT);
        --dbms_output.PUT_LINE (' GPRICE.PRICE ' || GPRICE.PRICE );
        --dbms_output.PUT_LINE (' I_AUTH_MC_HP_EMP_NR ' || I_AUTH_MC_HP_EMP_NR);
        --dbms_output.PUT_LINE ('I_LINE_ADDED_BY_EMP_NR      ' || I_LINE_ADDED_BY_EMP_NR );
        --dbms_output.PUT_LINE (' i_auth_stat_cd ' || I_AUTH_STAT_CD);
        --dbms_output.PUT_LINE (' i_auth_emp_nr ' || I_AUTH_EMP_NR);
        --dbms_output.PUT_LINE (' ------------outputs for the bundle  line - g_set_line_authorizer_code fields .. ends');

        IF ( I_BDNETAMT             IS NULL OR l_PRICE IS NULL OR I_AUTH_MC_HP_EMP_NR IS NULL OR I_LINE_ADDED_BY_EMP_NR IS NULL OR I_AUTH_STAT_CD IS NULL OR I_AUTH_EMP_NR IS NULL ) THEN
          g_set_line_authorizer_code:=NULL;
          g_set_gnrc_line_authorizer:= NULL;
          g_line_auth_type          := NULL;
        ELSIF (I_AUTH_STAT_CD        ='Y') THEN
          g_set_line_authorizer_code:= i_auth_emp_nr;
          g_set_gnrc_line_authorizer:= i_auth_mc_hp_emp_nr;
          g_line_auth_type          := i_line_auth_type;
        ELSE
          g_set_line_authorizer_code:=NULL;
          g_set_gnrc_line_authorizer:= NULL;
          g_line_auth_type          := NULL;
        END IF;

        ----dbms_output.put_line (' Non Header bundle auth code g_set_line_authorizer_code' ||g_set_line_authorizer_code);
        -----------------------------------
        --calculate Auth Disc PCT
        -----------------------------------
        --dbms_output.PUT_LINE (' in bundle line - std disc is : ' || I_STDDISCPCT || ' Non Header product ');
        --dbms_output.put_line ('i_dealsourcedealtype : ' || i_dealsourcedealtype);
        --IF (I_PROD_LIST_PRICE>0 AND GPRICE.PRICE>0 AND i_dealsourcedealtype<>c_high_touch_dealtype_desc) THEN
        IF l_PRICE>0 THEN
          --dbms_output.PUT_LINE (' Calculated Auth Disc % for Each Bundle LIne is : ' || (ROUND(100- (( I_BDNETAMT/GPRICE.PRICE) *100)- NVL(I_STDDISCPCT,0),2)) );
          --l_auth_disc_otc_pc:=ROUND(((gprice.price-i_bdnetamt)/gprice.price) *100 ,2);
          IF ( (ROUND(100 - (( I_BDNETAMT/l_PRICE) *100)- NVL(I_STDDISCPCT,0),2))>99.99 OR ROUND(100- (( I_BDNETAMT/l_PRICE) *100)- NVL(I_STDDISCPCT,0),2) <-99.99 ) THEN
            IF I_DEALSOURCEDEALTYPE                                                   =C_HIGH_TOUCH_DEALTYPE_DESC THEN
              L_ERRORS                                                               :=' Invalid Rqst Disc % for Bundle Line SKU: '|| i_prod_string||CASE WHEN i_opt_cd IS NOT NULL THEN ','||i_opt_cd END||
              ' Rqst BDNet :' || I_BDNETAMT || ' List price :' || l_PRICE || ' Rqst Disc Amt is : ' || (ROUND(100- (( I_BDNETAMT/l_PRICE) *100)- NVL(I_STDDISCPCT,0),2));
            ELSE
              L_ERRORS :=' Invalid Auth Disc % for Bundle Line SKU: '|| i_prod_string||CASE WHEN i_opt_cd IS NOT NULL THEN ','||i_opt_cd END||
              ' Auth BDNet :' || I_BDNETAMT || ' List price :' || l_PRICE || ' Auth Disc Amt is : ' || (ROUND(100- (( I_BDNETAMT/l_PRICE) *100)- NVL(I_STDDISCPCT,0),2));
            END IF;
            L_MSG_TYPE :=C_M_TYPE_WARNING;
            --dbms_output.PUT_LINE (l_errors);
            --log errors
            inserterror_output_messages ( i_bd_id,i_bd_nr,i_bd_version_nr, NULL, NULL, NULL, NULL, NULL,NULL, NULL, l_errors, l_msg_type, i_deal_creation_guid, NULL, NULL,l_errors );
            l_auth_disc_otc_pc:=NULL;
            l_rqst_disc_otc_pc:=0;
            
         --Condition added by Lakshmi for CR:3268 - NGQ: When Eclipse receives a BDNet of -0- with list price greater than -0- the Rqst% should be recalculated
            IF ((I_BDNETAMT = 0 AND I_STDDISCPCT=0) OR (ROUND(100 - (( I_BDNETAMT/l_PRICE) *100)- NVL(I_STDDISCPCT,0),2))>99.99) THEN 
               l_rqst_disc_otc_pc :=100;
               L_ERRORS                                                                 :='Adjusting Rqst Disc % to 100, for Bundle Line SKU: '|| i_prod_string||CASE WHEN i_opt_cd IS NOT NULL THEN ','||i_opt_cd END||
                     ' Line: '||i_line_nr ||
                     ' ,Item: '||i_line_item_nr_for_bundle ||
                     ' Rqst BDNet :' || I_BDNETAMT || ' List price :' || l_PRICE|| ' Rqst Disc Amt is : ' || 
                     (ROUND(100- (( I_BDNETAMT/l_PRICE) *100)- NVL(I_STDDISCPCT,0),2));
                     L_MSG_TYPE                                                               :=C_M_TYPE_WARNING;
                     inserterror_output_messages ( i_bd_id,i_bd_nr,i_bd_version_nr,  NULL, NULL, NULL, NULL, NULL,NULL, NULL, l_errors, l_msg_type, i_deal_creation_guid, NULL, NULL,l_errors );
                    ELSE 
                l_rqst_disc_otc_pc:=0;
            END IF; --End of Condition added for CR:3268 - NGQ: When Eclipse receives a BDNet of -0- with list price greater than -0- the Rqst% should be recalculated
            
          ELSE
            L_AUTH_DISC_OTC_PC:=ROUND(100- (( I_BDNETAMT/l_PRICE) *100)- NVL(I_STDDISCPCT,0),2);
            l_rqst_disc_otc_pc:=L_AUTH_DISC_OTC_PC;
          END IF;
        ELSE
          l_auth_disc_otc_pc  :=NULL;
          IF l_PRICE      =0 THEN
            l_auth_disc_otc_pc:=0;
            l_rqst_disc_otc_pc:=0;
          END IF;
        END IF;


        --set auth Disc % to Null in case of High Touch Deal
        --IF i_dealsourcedealtype=c_high_touch_dealtype_desc AND i_line_prog_cd <> 'Y' THEN --i_line_prog_cd condition is added for ePrime as ePrime can approve high touch deal products
          --L_AUTH_DISC_OTC_PC  :=NULL;
        --END IF;

        --By Harsh Shah 29-Nov-2013
        --if auth stat code is No that means there is no authorization for that line
        -- the the auth discount % should be null

        IF i_line_prog_cd <> 'Y' THEN --i_line_prog_cd condition is added for ePrime as ePrime can approve high touch deal products
          L_AUTH_DISC_OTC_PC  :=NULL;
        END IF;

        ----dbms_output.PUT_LINE (' Bundle line Auth disc % value ' || L_AUTH_DISC_OTC_PC );
        ----dbms_output.put_line ('Bundle Line Auth Stat Code I_AUTH_STAT_CD : ' || I_AUTH_STAT_CD || ' AND auth date gmt is : ' || I_AUTHDATEGMT);
        ---Added on 23-Jan for CR3236
        IF I_SKU_PL <> l_PROD_LINE THEN
          L_MSG_TYPE:='WARNING';
          --l_errors                 :='PL '||i_sku_pl ||'does not tally between SQ and Eclipse' || '(SQ PL :'|| i_sku_pl||' GPSy PL :'||gprice.prod_line||')'||'PL '||i_sku_pl ||'Is Overriden';
          l_errors :='PL for SKU '||i_prod_string ||' does not tally between '||g_err_src||' and Eclipse ' || '( '||g_err_src||' PL :'|| i_sku_pl||' GPSy PL :'||l_prod_line||' )'||' PL for SKU '||i_prod_string ||' is overriden';
          --dbms_output.put_line (l_errors);
          inserterror_output_messages (i_bd_id,i_bd_nr,i_bd_version_nr, i_deal_prog_cd,i_bdme_aprvl_cd,i_quote_dist_cd,i_euv_stat_code, i_high_risk_fl,i_risk_reasion_desc,i_risk_desc,l_errors,l_msg_type, i_deal_creation_guid,NULL,NULL,l_errors);
        END IF;
        ---End of add CR3236
        ---------------------------------------------------------------
        -- zero list price management for the bundle products
        ---------------------------------------------------------------
        IF l_price    =0 THEN
        --Added by Lakshmi to use LP and BDNet from XML when LP from Gpsy = 0    
        l_price := NVL(i_prod_list_price,0);
        l_auth_bdnet_amt   :=NVL(i_bdnetamt,0);
        
          --L_AUTH_BDNET_AMT:=NULL;----Commented as part of CR81079
          --L_AUTH_BDNET_AMT :=0; --Added as part of CR81079 --Commented the code to support List price= 0 in Gpsy - Lakshmi 
          --L_EXT_PRE_APPRV_PRC_AM :=0;
          --L_ERRORS                 := 'Zero list Price for GPSy product (Bundle Product ) :' ||' Bundle Line - ' ||  I_LINE_ITEM_NR_FOR_BUNDLE ||' ' || GPRICE.PROD_NR ||'  ' || GPRICE.PROD_DESC ||'  GPSy Price : '|| GPRICE.PRICE || ' , SmartQuote Price : ' || I_PROD_LIST_PRICE || ' , BD Net values will be marked as zero';
          --L_ERRORS  := 'Zero list Price for GPSy product (Bundle Product ) :' ||' Bundle Line - ' || I_LINE_ITEM_NR_FOR_BUNDLE ||' ' || l_PROD_NR ||'  ' || l_PROD_DESC ||'  GPSy Price : '|| l_PRICE || ' , bmi Price : ' || I_PROD_LIST_PRICE || ' , BD Net values will be marked as zero';
          L_ERRORS  := 'Zero list Price for GPSy product (Bundle Product ) :' ||' Bundle Line - ' || I_LINE_ITEM_NR_FOR_BUNDLE ||' ' || l_PROD_NR ||'  ' || l_PROD_DESC ||'  GPSy Price : '|| l_PRICE || ' , bmi Price : ' || I_PROD_LIST_PRICE;
          L_MSG_TYPE:='WARNING';
          INSERTERROR_OUTPUT_MESSAGES (I_BD_ID,I_BD_NR,I_BD_VERSION_NR, I_DEAL_PROG_CD,I_BDME_APRVL_CD,I_QUOTE_DIST_CD,I_EUV_STAT_CODE, I_HIGH_RISK_FL,I_RISK_REASION_DESC,I_RISK_DESC,L_ERRORS,L_MSG_TYPE, I_DEAL_CREATION_GUID,NULL,NULL,L_ERRORS);
        END IF;
        --inserting bundle line details
        --done
        --MARGINS
        IF I_PROD_COST_PRICE                                                                                                          >0 THEN
          IF ((L_AUTH_BDNET_AMT                                                                                                      IS NULL OR L_AUTH_BDNET_AMT=0) AND l_price>0 ) THEN
            IF I_BDNETAMT                                                                                                             >0 THEN
              IF (ROUND((( (I_BDNETAMT                                                 - I_PROD_COST_PRICE) / I_BDNETAMT) * 100), 2)) < -99 THEN --CR 1262 Nov release  (ROUND(((  (I_BDNETAMT - I_PROD_COST_PRICE) / I_BDNETAMT) * 100), 2) <0 AND length(ROUND(((  (I_BDNETAMT - I_PROD_COST_PRICE) / I_BDNETAMT) * 100), 2))>3 ) THEN ---CR4717
                L_RQST_MARGIN_PCT                                                                                                    :=-99.99;                                                   --CR4717
              ELSIF (ROUND((( (I_BDNETAMT                                              - I_PROD_COST_PRICE) / I_BDNETAMT) * 100), 2)) > 100 THEN                                                 --CR 1262 Nov release (ROUND(((  (I_BDNETAMT - I_PROD_COST_PRICE) / I_BDNETAMT) * 100), 2) >0 AND length(ROUND(((  (I_BDNETAMT - I_PROD_COST_PRICE) / I_BDNETAMT) * 100), 2))>3 ) THEN ---CR4717
                L_RQST_MARGIN_PCT                                                                                                    :=999.99;                                                   --CR4717
              ELSE                                                                                                                                                                              ---CR4717
                L_RQST_MARGIN_PCT:=ROUND((( (I_BDNETAMT - I_PROD_COST_PRICE) / I_BDNETAMT) * 100), 2);
              END IF;
            END IF;
          elsif ((L_AUTH_BDNET_AMT                                                                                                                   IS NOT NULL AND L_AUTH_BDNET_AMT > 0) ) THEN
            IF (ROUND((( (L_AUTH_BDNET_AMT                                                       - I_PROD_COST_PRICE) / L_AUTH_BDNET_AMT) * 100), 2)) < -99 THEN -- CR 1262 Nov release (ROUND(((  (L_AUTH_BDNET_AMT - I_PROD_COST_PRICE) / L_AUTH_BDNET_AMT) * 100), 2) <0 AND LENGTH(ROUND(((  (L_AUTH_BDNET_AMT - I_PROD_COST_PRICE) / L_AUTH_BDNET_AMT) * 100), 2))>3 ) THEN --CR4717
              L_RQST_MARGIN_PCT                                                                                                                      :=-99.99;                                                         --CR4717
            ELSIF (ROUND((( (L_AUTH_BDNET_AMT                                                    - I_PROD_COST_PRICE) / L_AUTH_BDNET_AMT) * 100), 2)) > 100 THEN                                                       -- CR 1262 Nov release (ROUND(((  (L_AUTH_BDNET_AMT - I_PROD_COST_PRICE) / L_AUTH_BDNET_AMT) * 100), 2) >0 AND LENGTH(ROUND(((  (L_AUTH_BDNET_AMT - I_PROD_COST_PRICE) / L_AUTH_BDNET_AMT) * 100), 2))>3 ) THEN --CR4717
              L_RQST_MARGIN_PCT                                                                                                                      :=999.99;                                                         --CR4717
            ELSE                                                                                                                                                                                                       --CR4717
              L_RQST_MARGIN_PCT:=ROUND((( (L_AUTH_BDNET_AMT - I_PROD_COST_PRICE) / L_AUTH_BDNET_AMT) * 100), 2);
            END IF;
          ELSE
            L_RQST_MARGIN_PCT:=0;
          END IF;
        ELSE
          L_RQST_MARGIN_PCT:=0;
        END IF;
        --Modified by Harsh Shah , 23-Jan-2013
        --CR 4786 - [APJ MTP] ???Auth Amt? and ???Auth%?  populated with some data after creating the deal via EIS.
        --updating extended_price column with Null when list price is zero.
        --updating AUTH_DISC_OT_PCT column with Null when list price is zero.
        -- 8-feb-2013 by Harsh Shah
        -- modified the Auth amount for the bundle_line table. If list price is 0 then auth amount should be null
        ----dbms_output.put_line ( ' bundle line test L_AUTH_BDNET_AMT for bundle line ' || L_AUTH_BDNET_AMT || ' prod_gnrc_nr_tx ' ||gprice.prod_nr );

BEGIN
        INSERT
        INTO BUNDLE_LINE
          (
            bd_id,
            line_nr,
            prod_gnrc_nr_tx,
            prod_opt_cd,
            disc_bndry_id,
            scale_id,
            qty,
            prod_type,
            prod_gnrc_desc_tx,
            disc_pc,
            list_price,
            extended_price,
            rqst_bd_net_prc_am,
            auth_bd_net_prc_am,
            rqst_incr_disc_am,
            auth_incr_disc_am,
            version_created,
            assoc_pl,
            item_prog_cd,
            auth_mc_date ,
            auth_mc_hp_emp_nr,
            disc_as_pct,
            disc_type_cd,
            rqst_disc_ot_pc,
            auth_disc_ot_pc,
            prev_auth_cd,
            creation_dts,
            update_dts,
            ref_price_fl,
            price_list_cd,
            currency_cd,
            price_term_cd,
            banded_fl,
            SPCL_CONFIG_FL,
            PROD_COST_AM,
            prod_cost_date,
            rqst_margin_pct,
            auth_margin_pct,
            cost_avail_fl,
            auth_dt_gmt,
            future_prod_fl,
            mult_cntry_vrfy_fl,
            ship_charge_fl,
            bus_group_cd,
            bus_unit_cd,
            item_nr,
            AUTH_BASIS_TEXT,
            NON_DISCOUNT_FL,
            line_auth_type,
            auth_generic_emp_nr,
            EXT_PRE_APPRV_PRC_AM,
            GUIDANCE_AVAILABLE_FL,
            GUIDANCE_DETAILS_ID,
            GUIDANCE_EXPERT_PCT,
            GUIDANCE_FLOOR_PCT,
            GUIDANCE_TYPICAL_PCT,
            GUIDANCE_LAST_REFRESH_DT
            ,INSTANT_PRC_METHOD --Added for UsS7301
            ,INSTANT_PRC_AMT  --Added for UsS7301
          )
          VALUES
          (
            i_bd_id,
            i_line_item_nr_for_bundle,
            TRIM(l_prod_nr),--gprice.prod_nr,--Changes made by Lakshmi to remove extra spaces in SQ deals
            DECODE(i_opt_cd,NULL,' ',i_opt_cd),
            1, --disc boundry
            l_scale_id, --SCALE ID
            I_PROD_QTY,
            NULL,
            SUBSTRB(l_prod_desc,1,65),
            NULL,                                                                                               --prod_type
            l_PRICE,                                                                                       --list price
            DECODE(l_PRICE,0,NULL,DECODE(L_AUTH_BDNET_AMT,NULL,i_bdnetamt,L_AUTH_BDNET_AMT) * i_prod_qty), --extended price
            DECODE (L_AUTH_BDNET_AMT,NULL,I_BDNETAMT,L_AUTH_BDNET_AMT),                                         --rqst_bd_net_prc_am
            --DECODE(l_PRICE,0,0,DECODE(I_AUTH_STAT_CD,'Y',L_AUTH_BDNET_AMT,NULL))  ,                       --auth amt, Change by harsh 29-nov-2013 --Commented the code to support List price= 0 in Gpsy - Lakshmi 
            DECODE(I_AUTH_STAT_CD,'Y',L_AUTH_BDNET_AMT,NULL)  ,                       --auth amt, Change by harsh 29-nov-2013
            DECODE(l_PRICE,0,0,NULL),                                                                      --RQST_INCR_DISC_AM
            NULL,
            i_bd_version_nr,
            l_prod_line,
            I_AUTH_STAT_CD, --item_prog_cd
            DECODE (I_AUTH_STAT_CD,'Y',i_auth_mc_date ,NULL),
            G_SET_LINE_AUTHORIZER_CODE,
            DECODE(I_STDDISCPCT,NULL,0, I_STDDISCPCT),             --disc_as_pct
            DECODE(i_pricingtypecd,NULL,'B',i_pricingtypecd),      -- disc_type
            DECODE (l_rqst_disc_otc_pc,NULL,0,l_rqst_disc_otc_pc), --rqst_disc_ot_pc
            --DECODE(l_price,0,0,L_AUTH_DISC_OTC_PC),--auth_disc_ot_pc
            DECODE(I_AUTH_STAT_CD,'Y',DECODE(l_price,0,0,L_AUTH_DISC_OTC_PC),NULL),--Added by Lakshmi for CR96402
            'N',
            sysdate,
            sysdate,
            l_ref_price_fl,
            i_pricelistcd,
            i_currencycd,
            i_pricetermcd,
            i_banded_fl,                                                --BANDED -- modified byHarsh Shah 16-Oct-2013 to cater to the requirement of BMI r7
            'N',                                                -- SPCL CONFIG
            I_PROD_COST_PRICE,                                  --PROD COST
            sysdate,                                            --PROD COST DATE
            L_RQST_MARGIN_PCT,                                  --RQST MARGIN
            DECODE (I_AUTH_STAT_CD,'Y',L_RQST_MARGIN_PCT,NULL), --AUTH MARGIN
            DECODE(I_PROD_COST_PRICE,NULL,'N',0,'N','Y'),       --COST AVAIL FL
            DECODE (I_AUTH_STAT_CD,'Y',I_AUTHDATEGMT,NULL),
            'N',
            'N',
            'N',
            l_line_bus_group_cd,
            L_LINE_BUS_UNIT_CD,
            I_LINE_NR,
            DECODE (I_AUTH_STAT_CD,'Y',I_PROD_AUTH_BASIS_TEXT,NULL),
            l_NON_DISCOUNT_FL,-- Modified by Lakshmi for CR83540- The Non-discountable attribute in Eclipse is displayed incorrect for non-discountable product which set in Optimus
            g_line_auth_type,
            g_set_gnrc_line_authorizer,
            L_EXT_PRE_APPRV_PRC_AM,-- DECODE(L_EXT_PRE_APPRV_PRC_AM ,NULL, 0,L_EXT_PRE_APPRV_PRC_AM)
            i_guidance_available_fl,
            DECODE(i_guidance_available_fl,'Y',i_guidance_details_id,NULL),
            DECODE(i_guidance_available_fl,'Y',i_guidance_expert_pct,NULL),
            DECODE(i_guidance_available_fl,'Y',i_guidance_floor_pct,NULL),
            DECODE(i_guidance_available_fl,'Y',i_guidance_typical_pct,NULL),
             DECODE(i_guidance_available_fl,'Y',TO_TIMESTAMP (SUBSTR(i_guidance_last_refresh_dt,1,19),'YYYY-MM-DD"T"HH24:MI:SS'),NULL)
             ,i_InstantPrcMethod  --Added for UsS7301
           ,i_InstantPrcAmount  --Added for US 7301
          );
      EXCEPTION
      WHEN dup_val_on_index THEN
        l_errors            := 'Duplicate Bundle Line. Bundle Line :'|| i_line_item_nr_for_bundle || ' Prod Nr : ' || l_prod_nr || ' OptCd :' || i_opt_cd;
        l_msg_type          :=c_m_type_warning;
        o_create_new_version:='N';
        --insert into error and output table
        INSERTERROR_OUTPUT_MESSAGES ( i_bd_id, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, l_errors, l_msg_type, g_deal_creation_guid, NULL, NULL,l_errors );
        END;
      END;
    END IF;
    --adding line item details.rollout details, line_disc_scale details

    --********************************************************************************
    -- Adding bundle Header and Bundle line Details
    --********************************************************************************
    IF (I_ADD_BUNDLES='Y' AND I_ADD_BUNDLEHEADER ='Y') THEN
      --dbms_output.PUT_LINE (' Adding bundle header item ');
      /*
      IF (i_dealsourcedealtype<>c_high_touch_dealtype_desc ) THEN
      l_auth_bdnet_amt      :=I_BD_HDR_LINE_AUTH_BD_NET;
      else
      L_AUTH_BDNET_AMT:=null;
      END IF;
      */
      IF ( i_bdnetamt             IS NULL OR l_price IS NULL OR i_auth_mc_hp_emp_nr IS NULL OR i_line_added_by_emp_nr IS NULL OR i_auth_stat_cd IS NULL OR i_auth_emp_nr IS NULL  ) THEN
        G_SET_LINE_AUTHORIZER_CODE:=NULL;
        g_set_gnrc_line_authorizer:= NULL; --added for new auth changes for line_items
        g_line_auth_type          := NULL;
      ELSIF (I_AUTH_STAT_CD        ='Y' ) THEN
        g_set_line_authorizer_code:= i_auth_emp_nr;
        g_set_gnrc_line_authorizer:= i_auth_mc_hp_emp_nr; --added for new auth changes for line_items
        g_line_auth_type          := i_line_auth_type;
      ELSE
        g_set_line_authorizer_code:=NULL;
        g_set_gnrc_line_authorizer:= NULL; --added for new auth changes for line_items
        g_line_auth_type          := NULL;
      END IF;
      --dbms_output.PUT_LINE (' bundle header item g_set_line_authorizer_code ' || G_SET_LINE_AUTHORIZER_CODE);
      --insert into line_item
      ---Added on 23-Jan for CR3236
      IF i_sku_pl <> l_prod_line THEN
        L_MSG_TYPE:='WARNING';
        --l_errors                 :='PL '||i_sku_pl ||'does not tally between SQ and Eclipse' || '(SQ PL :'|| i_sku_pl||' GPSy PL :'||gprice.prod_line||')'||'PL '||i_sku_pl ||'Is Overriden';
        l_errors :='PL for SKU '||i_prod_string ||' does not tally between '||g_err_src||' and Eclipse ' || '( '||g_err_src||' PL :'|| i_sku_pl||' GPSy PL :'||l_prod_line||' )'||' PL for SKU '||i_prod_string ||' is overriden';
        --dbms_output.put_line (l_errors);
        inserterror_output_messages (i_bd_id,i_bd_nr,i_bd_version_nr, i_deal_prog_cd,i_bdme_aprvl_cd,i_quote_dist_cd,i_euv_stat_code, i_high_risk_fl,i_risk_reasion_desc,i_risk_desc,l_errors,l_msg_type, i_deal_creation_guid,NULL,NULL,l_errors);
      END IF;

      --dbms_OUTPUT.put_line('Updating the line Items product string to: '||i_prod_string||'  for line_nr: '||i_line_nr||', and bd_id: '||i_bd_id||' in BMI_Replace_insert prod line proc' );

--added by Lakshmi on 3/22/2015 to update line item table when header product is changed in a bundle.
      UPDATE line_item SET prod_gnrc_nr_tx=i_prod_string
      WHERE line_nr=i_line_nr
      AND bd_id= i_bd_id;


      ---End of add CR3236
      --dbms_output.PUT_LINE ('Adding Line -' || ' i_line_type_cd :' || i_line_type_cd || ' line_nr ' || i_line_nr  || 'prod_nr : ' || TRIM(gprice.prod_nr));

      --added bmi-doc_no column to the insert statement
      --this was required by BMI -Beejoy - by harsh Shah 17-jan-2014
     /*  INSERT
      INTO line_item
        (
          line_prog_cd,
          support_pack_fl,
          future_prod_fl,
          change_pndg_fl,
          version_created,
          bd_id,
          LINE_NR,
          LINE_TYPE_CD,
          prod_gnrc_desc_tx,
          prod_gnrc_nr_tx,
          line_added_by_emp_nr,
          bus_group_cd,
          bus_unit_cd,
          assoc_pl_cd,
          assoc_pf_cd,
          estmtd_qt,
          estmtd_dlr_am,
          price_list_cd,
          price_term_cd,
          currency_cd,
          auth_mc_hp_emp_nr,
          AUTH_MC_DATE,
          AUTH_DT_GMT,
          prod_opt_cd,
          REMAINING_AMT,
         -- SQ_AUTH_EMP_NR,
          SRC_BUNDLE_DESC_TX,
          AUTH_GENERIC_EMP_NR,
          line_auth_type,
          bmi_doc_no
        )
        VALUES
        (
         DECODE( i_line_prog_cd,NULL,'N',i_line_prog_cd),
          'N',
          'N',
          'N',
          i_bd_version_nr,
          i_bd_id,
          i_line_nr,
          i_line_type_cd,
          SUBSTRB(l_prod_desc,1,65),    -- l_line_prod_gnrc_desc_tx,  CR 4744
          --i_bundle_desc,
          TRIM(l_prod_nr),--gprice.prod_nr Changes made by Lakshmi to remove extra spaces in SQ deals
          i_line_added_by_emp_nr ,
          l_line_bus_group_cd,
          l_line_bus_unit_cd,
          l_prod_line,
          l_prod_family,
          i_prod_qty,
          NULL,
          i_pricelistcd,
          i_pricetermcd,
          I_CURRENCYCD,
          g_set_line_authorizer_code,
          DECODE (I_LINE_PROG_CD,'Y',I_AUTHDATEGMT,NULL),
          DECODE (I_LINE_PROG_CD,'Y',I_AUTH_MC_DATE,NULL),
          DECODE(LTRIM(RTRIM(I_OPT_CD)),NULL,' ',I_OPT_CD),
          DECODE (L_AUTH_BDNET_AMT,0,0,NULL,i_bdnetamt * I_PROD_QTY,L_AUTH_BDNET_AMT * I_PROD_QTY),
         -- DECODE (I_AUTH_STAT_CD,'Y',i_auth_emp_nr,NULL),
          i_bundle_desc,
          g_set_gnrc_line_authorizer,
          g_line_auth_type,
          DECODE(i_bmi_doc_no,null,0,i_bmi_doc_no)
        ) ;

      --adding one entry into line_disc_bndry table - per line
      INSERT
      INTO line_disc_bndry
        (
          bd_id,
          line_nr,
          disc_bndry_id,
          disc_bndry_type_cd,
          creation_dts,
          update_dts
        )
        VALUES
        (
          i_bd_id,
          i_line_nr,
          1,
          'D',
          sysdate,
          sysdate
        ); */
      --get the new scale id for the line
     /*  SELECT NVL(MAX(scale_id),0)+1
      INTO l_scale_id
      FROM line_disc_scale
      WHERE BD_ID =I_BD_ID
      AND line_nr =i_line_nr; */
      --dbms_output.put_line (' bundle header sku list price ' || i_prod_list_price || ' and GPSy price ' || gprice.price);
      --IF (i_prod_list_price>0 AND gprice.price>0 AND i_dealsourcedealtype<>c_high_touch_dealtype_desc)THEN


      --dbms_output.PUT_LINE (' GPRICE ' || GPRICE.PRICE || 'PROD : ' || gprice.prod_nr || ' Auth bd net Header bundle sku is ' || i_total_hdr_bdnet_value || ' header list price ' || i_total_hdr_listprice_value) ;

      --Calculate Header Auth/Rqst disc pct.
      --By harsh Shah 10-Mar-2014
       --i_total_hdr_listprice_value NUMBER,
      --i_total_hdr_bdnet_value number
      L_RQST_DISC_OTC_PC:=FCALCRQSTDISCPCT(i_total_hdr_bdnet_value,i_total_hdr_listprice_value,I_STDDISCPCT);
      l_auth_disc_otc_pc:=l_rqst_disc_otc_pc;

      --dbms_output.PUT_LINE ('Calculated Auth / rqst discount pct with new formula ' || l_rqst_disc_otc_pc || ' header auth bdnet' || i_total_hdr_bdnet_value || ' header sku list price ' || i_total_hdr_listprice_value );


--      ' || I_BD_HDR_LINE_AUTH_BD_NET || ' L_BD_HDR_SKU_LIST_PRICE header list price ' || L_BD_HDR_SKU_LIST_PRICE) ;

      /*
      IF gprice.price>0 THEN
        --dbms_output.put_line (' Calculated Auth Disc % for Each Bundle Header is : ' || (ROUND(100                                                                                                                  - (( I_BD_HDR_LINE_AUTH_BD_NET/L_BD_HDR_SKU_LIST_PRICE) *100)- NVL(i_stddiscpct,0),2)) );
        IF ( (ROUND(100                                                                                                                                                                                             - (( I_BD_HDR_LINE_AUTH_BD_NET/L_BD_HDR_SKU_LIST_PRICE) *100)- NVL(i_stddiscpct,0),2))>99.99 OR ROUND(100- (( I_BD_HDR_LINE_AUTH_BD_NET/L_BD_HDR_SKU_LIST_PRICE) *100)- NVL(i_stddiscpct,0),2) <-99.99 ) THEN
          --dbms_output.put_line (' Invalid Auth Disc % for Bundle Header SKU :' || gprice.prod_nr || ' Auth bd net is ' || i_bdnetamt || ' list price is  : ' || gprice.price || ' Auth Disc Amt is : ' || (ROUND(100- (( i_bdnetamt/gprice.price) *100)- NVL(i_stddiscpct,0),2)) );
          l_auth_disc_otc_pc:=NULL;
          l_rqst_disc_otc_pc:=0;
        ELSE
          --    L_AUTH_DISC_OTC_PC:=ROUND(100- (( I_BDNETAMT/GPRICE.PRICE) *100)- NVL(I_STDDISCPCT,0),2);
          L_AUTH_DISC_OTC_PC:=ROUND(100- (( I_BD_HDR_LINE_AUTH_BD_NET/L_BD_HDR_SKU_LIST_PRICE) *100)- NVL(I_STDDISCPCT,0),2);
          l_rqst_disc_otc_pc:=L_AUTH_DISC_OTC_PC;
        END IF;
        --l_auth_disc_otc_pc:=ROUND(((gprice.price-i_bdnetamt)/gprice.price) *100 ,2);
        --L_AUTH_DISC_OTC_PC:=ROUND(100- (( I_BDNETAMT/GPRICE.PRICE) *100)- NVL(I_STDDISCPCT,0),2);
      ELSE
        L_AUTH_DISC_OTC_PC  :=NULL;
        IF GPRICE.PRICE      =0 THEN
          L_AUTH_DISC_OTC_PC:=0;
          l_rqst_disc_otc_pc:=0;
        END IF;
      END IF;
      */


      --dbms_output.put_line ('Header L_AUTH_DISC_OTC_PC ' || i_bundle_desc  || ' header auth bdnet ' || I_BD_HDR_LINE_AUTH_BD_NET || ' list price ' || gprice.price);

      --set auth Disc % to Null in case of High Touch Deal
      IF i_dealsourcedealtype=c_high_touch_dealtype_desc AND i_line_prog_cd <> 'Y' THEN ---i_line_prog_cd condition is added for ePrime as ePrime can approve the products in HIGH_touch deals
        L_AUTH_DISC_OTC_PC  :=NULL;
      END IF;
      --dbms_output.PUT_LINE (' calculated auth disc pct for bundle header SKU ' || GPRICE.PROD_NR || ' Auth disc % is ' || L_AUTH_DISC_OTC_PC);
      ----Insert data into LINE_DISC_SCALE table.
      --done
      --MARGIN
      L_RQST_MARGIN_PCT:=0;
      /*
      if I_PROD_COST_PRICE_HDR_PROD>0 then
      if ( (L_AUTH_BDNET_AMT is null or L_AUTH_BDNET_AMT=0) and gprice.price >0 ) then
      if I_BDNETAMT>0 then
      L_RQST_MARGIN_PCT:=ROUND(((  (I_BDNETAMT - I_PROD_COST_PRICE_HDR_PROD) / I_BDNETAMT) * 100), 2);
      end if;
      elsif (L_AUTH_BDNET_AMT is not null and L_AUTH_BDNET_AMT > 0)  then
      L_RQST_MARGIN_PCT:=ROUND(((  (L_AUTH_BDNET_AMT - I_PROD_COST_PRICE_HDR_PROD) / L_AUTH_BDNET_AMT) * 100), 2);
      else
      L_RQST_MARGIN_PCT:=0;
      end if;
      else
      L_RQST_MARGIN_PCT:=0;
      end if;
      */
      --calculating Margin Pct
      IF i_prod_cost_price_hdr_prod                                                                                     >0 THEN
        IF ( I_BD_HDR_LINE_AUTH_BD_NET                                                                                  >0 AND l_price >0 ) THEN
          IF( ROUND((( (I_BD_HDR_LINE_AUTH_BD_NET - I_PROD_COST_PRICE_HDR_PROD) / I_BD_HDR_LINE_AUTH_BD_NET) * 100), 2) < -99.99 ) THEN --- CR 1262 Nov release
            --ROUND(((  (I_BD_HDR_LINE_AUTH_BD_NET - I_PROD_COST_PRICE_HDR_PROD) / I_BD_HDR_LINE_AUTH_BD_NET) * 100), 2) <0 AND
            --           LENGTH(ROUND(((  (I_BD_HDR_LINE_AUTH_BD_NET - I_PROD_COST_PRICE_HDR_PROD) / I_BD_HDR_LINE_AUTH_BD_NET) * 100), 2)) >3) THEN --CR4717
            L_RQST_MARGIN_PCT                                                                                             :=                     -99.99; --CR4717
          ELSIF (ROUND((( (I_BD_HDR_LINE_AUTH_BD_NET - I_PROD_COST_PRICE_HDR_PROD) / I_BD_HDR_LINE_AUTH_BD_NET) * 100), 2) >100 ) THEN                  --- CR 1262 Nov release
            ---- ROUND(((  (I_BD_HDR_LINE_AUTH_BD_NET - I_PROD_COST_PRICE_HDR_PROD) / I_BD_HDR_LINE_AUTH_BD_NET) * 100), 2) >0 AND
            --      LENGTH(ROUND(((  (I_BD_HDR_LINE_AUTH_BD_NET - I_PROD_COST_PRICE_HDR_PROD) / I_BD_HDR_LINE_AUTH_BD_NET) * 100), 2)) >3) THEN      --CR4717
            L_RQST_MARGIN_PCT :=999.99; --CR4717
          ELSE
            L_RQST_MARGIN_PCT:=ROUND((( (I_BD_HDR_LINE_AUTH_BD_NET - I_PROD_COST_PRICE_HDR_PROD) / I_BD_HDR_LINE_AUTH_BD_NET) * 100), 2);
          END IF;
        elsif (L_AUTH_BDNET_AMT                                                                       IS NOT NULL AND L_AUTH_BDNET_AMT > 0) THEN
          IF ( ROUND((( (L_AUTH_BDNET_AMT - I_PROD_COST_PRICE_HDR_PROD) / L_AUTH_BDNET_AMT) * 100), 2) < -99.99 ) THEN
            --ROUND(((  (L_AUTH_BDNET_AMT - I_PROD_COST_PRICE_HDR_PROD) / L_AUTH_BDNET_AMT) * 100), 2) <0 AND
            --     LENGTH(ROUND(((  (L_AUTH_BDNET_AMT - I_PROD_COST_PRICE_HDR_PROD) / L_AUTH_BDNET_AMT) * 100), 2))>3 ) THEN --CR4717
            L_RQST_MARGIN_PCT                                                                           :=            -99.99; --CR4717
          ELSIF (ROUND((( (L_AUTH_BDNET_AMT - I_PROD_COST_PRICE_HDR_PROD) / L_AUTH_BDNET_AMT) * 100), 2) > 100) THEN
            --ROUND(((  (L_AUTH_BDNET_AMT - I_PROD_COST_PRICE_HDR_PROD) / L_AUTH_BDNET_AMT) * 100), 2) >0 AND
            --LENGTH(ROUND(((  (L_AUTH_BDNET_AMT - I_PROD_COST_PRICE_HDR_PROD) / L_AUTH_BDNET_AMT) * 100), 2))>3 ) THEN --CR4717
            L_RQST_MARGIN_PCT:=999.99; --CR4717
          ELSE
            L_RQST_MARGIN_PCT:=ROUND((( (L_AUTH_BDNET_AMT - I_PROD_COST_PRICE_HDR_PROD) / L_AUTH_BDNET_AMT) * 100), 2);
          END IF;
        ELSE
          L_RQST_MARGIN_PCT:=0;
        END IF;
      ELSE
        L_RQST_MARGIN_PCT:=0;
      END IF;
      --Modified by Harsh Shah , 23-Jan-2013
       --CR 4786 - [APJ MTP] ???Auth Amt? and ???Auth%?  populated with some data after creating the deal via EIS.
      --updating AUTH_DISC_OT_PC column with Null when list price is zero.

      --dbms_output.PUT_LINE ('L_AUTH_DISC_OTC_PC for header bundle '|| L_AUTH_DISC_OTC_PC );
      --dbms_output.put_line ('Header L_AUTH_DISC_OTC_PC ' || i_bundle_desc  || ' header auth bdnet ' || I_BD_HDR_LINE_AUTH_BD_NET || '  list price  ' || gprice.price );
   /*  BEGIN
      INSERT
      into LINE_DISC_SCALE
        (
          bd_id,
          line_nr,
          disc_bndry_id,
          scale_id,
          disc_type_cd,
          upper_bndry_dt,
          lower_bndry_dt,
          auth_fl,
          rqst_disc_ot_pc,
          auth_disc_ot_pc,
          disc_as_pc_rqst,
          version_created,
          auth_bd_net_prc_am,
          prod_lst_prc_am,
          rqst_bd_net_prc_am,
          cost_avail_fl,
          updated_by_emp_nr,
          auth_basis_text,
          non_discount_fl,
          disc_as_pc,
          high_rslr_a_sd_pc,
          RQST_INCR_DISC_AM,
          RQST_MARGIN_PCT,
          AUTH_MARGIN_PCT,
          PROD_COST_AM,
          PROD_COST_DATE,
          EXT_PRE_APPRV_PRC_AM,
          GUIDANCE_AVAILABLE_FL,
          GUIDANCE_DETAILS_ID,
          GUIDANCE_EXPERT_PCT,
          GUIDANCE_FLOOR_PCT,
          GUIDANCE_TYPICAL_PCT,
          GUIDANCE_LAST_REFRESH_DT
        )
        VALUES
        (
          i_bd_id,
          i_line_nr,
          1,
          l_scale_id,
          DECODE(i_pricingtypecd,NULL,'B',i_pricingtypecd),
          i_enddate,
          i_begindate,
          I_AUTH_STAT_CD,                                          --auth_fl
          DECODE (L_RQST_DISC_OTC_PC,NULL,0, L_RQST_DISC_OTC_PC) , --rqst_disc_ot_pc
          DECODE(l_PRICE,0,0,DECODE(I_AUTH_STAT_CD,'Y',L_AUTH_DISC_OTC_PC,NULL)),          --auth_disc_ot_pc
          0,
          i_bd_version_nr,
          DECODE(I_AUTH_STAT_CD,'Y',L_AUTH_BDNET_AMT,NULL),                                          --auth bd net
          l_PRICE,                                              -- list price
          DECODE(L_AUTH_BDNET_AMT,NULL,i_bdnetamt,L_AUTH_BDNET_AMT), --rqst bd net amout
          DECODE(I_PROD_COST_PRICE_HDR_PROD,NULL,'N',0,'N','Y'),     --COST AVAIL FL
          DECODE (I_AUTH_STAT_CD,'Y',I_AUTH_EMP_NR,NULL),
          DECODE(i_auth_stat_cd,'Y',i_prod_auth_basis_text,NULL),
          l_NON_DISCOUNT_FL, -- Modified by Lakshmi for CR83540 The Non-discountable attribute in Eclipse is displayed incorrect for non-discountable product which set in Optimus
          0,                                        -- disc_as_pc
          DECODE(I_STDDISCPCT,NULL,0,I_STDDISCPCT), --HIGH_RSLR_A_SD_PC
          DECODE(l_PRICE,0,0,NULL),            --RQST_INCR_DISC_AM
          L_RQST_MARGIN_PCT,
          DECODE(I_AUTH_STAT_CD,'Y',L_RQST_MARGIN_PCT,NULL) , --auth margin
          I_PROD_COST_PRICE_HDR_PROD,                         --PROD COST AM,
          SYSDATE  ,                                           --PROD COST DATE,
          L_EXT_PRE_APPRV_PRC_AM,
          i_guidance_available_fl,
          DECODE(i_guidance_available_fl,'Y',i_guidance_details_id,NULL),
          DECODE(i_guidance_available_fl,'Y',i_guidance_expert_pct,NULL),
          DECODE(i_guidance_available_fl,'Y',i_guidance_floor_pct,NULL),
          DECODE(i_guidance_available_fl,'Y',i_guidance_typical_pct,NULL),
          DECODE(i_guidance_available_fl,'Y',TO_TIMESTAMP (SUBSTR(i_guidance_last_refresh_dt,1,19),'YYYY-MM-DD"T"HH24:MI:SS'),NULL)
        );
        EXCEPTION
        WHEN dup_val_on_index THEN
         INSERT
      into LINE_DISC_SCALE
        (
          bd_id,
          line_nr,
          disc_bndry_id,
          scale_id,
          disc_type_cd,
          upper_bndry_dt,
          lower_bndry_dt,
          auth_fl,
          rqst_disc_ot_pc,
          auth_disc_ot_pc,
          disc_as_pc_rqst,
          version_created,
          auth_bd_net_prc_am,
          prod_lst_prc_am,
          rqst_bd_net_prc_am,
          cost_avail_fl,
          updated_by_emp_nr,
          auth_basis_text,
          non_discount_fl,
          disc_as_pc,
          high_rslr_a_sd_pc,
          RQST_INCR_DISC_AM,
          RQST_MARGIN_PCT,
          AUTH_MARGIN_PCT,
          PROD_COST_AM,
          PROD_COST_DATE,
          EXT_PRE_APPRV_PRC_AM,
          GUIDANCE_AVAILABLE_FL,
          GUIDANCE_DETAILS_ID,
          GUIDANCE_EXPERT_PCT,
          GUIDANCE_FLOOR_PCT,
          GUIDANCE_TYPICAL_PCT,
          GUIDANCE_LAST_REFRESH_DT
        )
        VALUES
        (
          i_bd_id,
          i_line_nr,
          1,
          l_scale_id+1,
          DECODE(i_pricingtypecd,NULL,'B',i_pricingtypecd),
          i_enddate,
          i_begindate,
          I_AUTH_STAT_CD,                                          --auth_fl
          DECODE (L_RQST_DISC_OTC_PC,NULL,0, L_RQST_DISC_OTC_PC) , --rqst_disc_ot_pc
          DECODE(l_PRICE,0,0,DECODE(I_AUTH_STAT_CD,'Y',L_AUTH_DISC_OTC_PC,NULL)),          --auth_disc_ot_pc
          0,
          i_bd_version_nr,
          DECODE(I_AUTH_STAT_CD,'Y',L_AUTH_BDNET_AMT,NULL),                                          --auth bd net
          l_PRICE,                                              -- list price
          DECODE(L_AUTH_BDNET_AMT,NULL,i_bdnetamt,L_AUTH_BDNET_AMT), --rqst bd net amout
          DECODE(I_PROD_COST_PRICE_HDR_PROD,NULL,'N',0,'N','Y'),     --COST AVAIL FL
          DECODE (I_AUTH_STAT_CD,'Y',I_AUTH_EMP_NR,NULL),
          DECODE(i_auth_stat_cd,'Y',i_prod_auth_basis_text,NULL),
          l_NON_DISCOUNT_FL, -- Modified by Lakshmi for CR83540 The Non-discountable attribute in Eclipse is displayed incorrect for non-discountable product which set in Optimus
          0,                                        -- disc_as_pc
          DECODE(I_STDDISCPCT,NULL,0,I_STDDISCPCT), --HIGH_RSLR_A_SD_PC
          DECODE(l_PRICE,0,0,NULL),            --RQST_INCR_DISC_AM
          L_RQST_MARGIN_PCT,
          DECODE(I_AUTH_STAT_CD,'Y',L_RQST_MARGIN_PCT,NULL) , --auth margin
          I_PROD_COST_PRICE_HDR_PROD,                         --PROD COST AM,
          SYSDATE  ,                                           --PROD COST DATE,
          L_EXT_PRE_APPRV_PRC_AM,
          i_guidance_available_fl,
          DECODE(i_guidance_available_fl,'Y',i_guidance_details_id,NULL),
          DECODE(i_guidance_available_fl,'Y',i_guidance_expert_pct,NULL),
          DECODE(i_guidance_available_fl,'Y',i_guidance_floor_pct,NULL),
          DECODE(i_guidance_available_fl,'Y',i_guidance_typical_pct,NULL),
          DECODE(i_guidance_available_fl,'Y',TO_TIMESTAMP (SUBSTR(i_guidance_last_refresh_dt,1,19),'YYYY-MM-DD"T"HH24:MI:SS'),NULL)
        );
        END;

      --******************************************************
      -- Insert into Rollout Schedule for bundle Header
      --******************************************************
      --dbms_output.PUT_LINE (' bundle Header Rollout  1 ' );
      l_rollout_mnths :=t_rollout_mnths();
      ----dbms_output.put_line('Rollout month qtys   :'||i_rolloutmonthqtys);
      get_rollout_months(i_rolloutmonthqtys,l_rollout_mnths );
      --dbms_output.PUT_LINE (' bundle Header Rollout  2 ' );
      l_rollout_ins_qry        := 'insert into rollout_schedule (bd_id,
line_nr,
prod_base_nr,
ro_bgn_dt,
ro_end_dt,
load_type,
est_qty,
pct_prob,
mth1_qty,
mth2_qty,
mth3_qty,
mth4_qty,
mth5_qty,
mth6_qty,
mth7_qty,
mth8_qty,
mth9_qty,
mth10_qty,
mth11_qty,
mth12_qty,
mth13_qty,
mth14_qty,
mth15_qty,
schedule_change_fl,
ordr_min_qty,
line_max_qty,
creation_dts,
update_dts,
remaining_qty,
rtqty,
prod_opt_cd )
values ( ' ||i_bd_id||',' ||i_line_nr||',' ||'''' || TRIM(l_prod_nr) ||'''' ||',' || 'to_date('||''''||i_begindate||''''||','||'''DD-MON-YY'''||')'||',' || 'to_date('||''''||i_enddate||''''||','||'''DD-MON-YY'''||')'||',' || '''Even'''||',' || i_prod_qty||',' ||100||',';
      l_no_of_months           :=1;
      IF l_rollout_mnths.first IS NOT NULL THEN
        FOR months_rec IN l_rollout_mnths.first..l_rollout_mnths.last
        LOOP
          IF LENGTH
            (
              l_rollout_mnths(months_rec)
            )
                              =0 THEN
            l_rollout_ins_qry:=l_rollout_ins_qry||'NULL'||',';
          ELSE
            l_rollout_ins_qry:=l_rollout_ins_qry||l_rollout_mnths(months_rec) ||',';
          END IF;
          l_no_of_months:=l_no_of_months+1;
        END LOOP;
      END IF;
      FOR i IN l_no_of_months-1 ..14
      LOOP
        l_rollout_ins_qry:=l_rollout_ins_qry||'NULL'||',';
      END LOOP;
      l_rollout_ins_qry:=l_rollout_ins_qry|| '''N'''||','||NVL(i_minorder_qty,'NULL')||',' || i_prod_qty ||',' || 'SYSDATE'||',' ||' SYSDATE'||',' ||i_prod_qty||',' ||i_prod_qty ||',' || '''' ||NVL(ltrim(rtrim(I_OPT_CD)),' ') || '''' || ')';
      ----dbms_output.put_line(' Rollout query length ' || LENGTH(l_rollout_ins_qry));
      --dbms_output.put_line( 'Bundle rollout query   '||l_rollout_ins_qry);
      EXECUTE immediate (l_rollout_ins_qry);

      --************************************************
      --Adding Bundle Header Details
      --insert into Bundle Table - Inserting Bundle Header
      --************************************************
      --dbms_output.put_line ('adding bundle header');
      ----Added with CR 4774
      SELECT b.disp_comp_prc_fl
      INTO l_disp_comp_prc_fl_BM
      FROM bus_model b
      WHERE b.bus_model_cd = i_busmodelcd
      AND b.country_cd     = i_countrycd;

         --Added by Lakshmi to implement US6037 --> Show Component Level Pricing

     IF (I_DisplayCompPrcFl IN ('Y','N') AND l_disp_comp_prc_fl_BM='N') THEN
    l_disp_comp_prc_fl := 'N';
    ELSIF (I_DisplayCompPrcFl='N' AND l_disp_comp_prc_fl_BM='Y') THEN
    l_disp_comp_prc_fl :='N';
    ELSE
    l_disp_comp_prc_fl :='Y';
    END IF;

     --End of changes for US6037
 */

      l_config_src        :=i_config_src;
      IF i_config_src      = c_bundle_source_ezconfig THEN --Added as part of ePrime as ePrime sends EZconfigs.
        l_config_src      :='EC-BAND';
      END IF;
      INSERT
      INTO bundle
        (
          bd_id,
          line_nr,
          prod_base_nr,
          prod_base_desc,
          config_src,
          config_id,
          source_config_id,
          supply_chain,
          disp_comp_prc_fl,
          creation_dts,
          update_dts,
          add_to_deal_dt,
          component_change_dt
        )
        VALUES
        (          i_bd_id,
          i_line_nr,
          TRIM(l_prod_nr),--l_prod_nr--Changes made by Lakshmi to remove extra spaces in SQ deals
          SUBSTRB(l_prod_desc,1,65),
          --i_bundle_desc,
          l_config_src,--i_config_src,
          i_config_id,
          i_source_config_id,
          NULL,
          l_disp_comp_prc_fl,--'Y',  ----Added with CR 4774.
          sysdate,
          sysdate,
          sysdate,
          sysdate
        );
      --dbms_output.put_line (' Inserting into bundle line with Header details ' || i_line_nr);
      /* primary key bundle lines
      bd_id, line_nr
      disc_bndry_id, scale_id, item_nr
      */
      --dbms_output.put_line (' Bundle header - Bundle LIne - auth bd ' || i_bdnetamt);
      --dbms_output.put_line (' Bundle Headers - Bundle Line Qty ' || i_bd_line_qty_for_hdr_sku );
      --dbms_output.PUT_LINE (' Bundle Header  -- insert bundle line rqst bdnet value  ' || ' SKU ' || gprice.prod_nr || '  '|| i_bdnetamt || ' and auth bd net value ' || l_auth_bdnet_amt);
      /*
      i_bdnetamt * i_bd_line_qty_for_hdr_sku, --extended price
      decode (l_auth_bdnet_amt,null,i_bdnetamt,l_auth_bdnet_amt), --rqst_bd_net_prc_am
      l_auth_bdnet_amt, --auth bd net amout
      */
      -------------------------------------------
      -- Insert data into Bundle Line table
      -----------------------------------------
      --dbms_output.put_line (' I_BD_HDR_LINE_AUTH_BD_NET : ' || i_bd_hdr_line_auth_bd_net || ' I_BD_LINE_QTY_FOR_HDR_SKU ' || i_bd_line_qty_for_hdr_sku);
      --dbms_output.PUT_LINE ('AUTH DISC % FOR BUNDLE HEADERS LINE  ' || l_auth_disc_otc_pc);
    END IF;
 -- END LOOP;
END BMI_insert_prod_line_Replace;

Function GET_TENANTCD_FROM_BG ( i_lead_BG IN deal.lead_bus_grp%type) RETURN VARCHAR2
IS
l_tenantcd deal.tenantid_data_cd%type;--l_tenantcd deal.tenantid%type; (tenantid column is replaced with tenantid_data_cd column for Federal project)

BEGIN
select distinct bg.tenantid  into l_tenantcd from ECLIPSE.gt_max_pl gt,
prod_line pl,
bus_unit bu
,bus_group bg
where gt.assoc_pl_cd=pl.prod_line_cd
AND pl.bus_unit_cd=bu.bus_unit_cd
AND bu.bus_group_cd=bg.bus_group_cd;
--l_tenant_cd:=l_tenantid;
Return l_tenantcd;
EXCEPTION
WHEN TOO_MANY_ROWS THEN
select tenantid into l_tenantcd from bus_group where bus_group_cd=i_lead_BG and rownum<2;
Return l_tenantcd;
WHEN NO_DATA_FOUND THEN
RETURN NULL;
WHEN OTHERS THEN
RETURN NULL;
END GET_TENANTCD_FROM_BG;

  PROCEDURE get_default_values_2 (i_deal_creation_guid IN VARCHAR2,
                                                   out_default_bus_model_cd OUT VARCHAR2,
                                                   out_split_deal_fl OUT VARCHAR2,
                                                   out_value_default_bm OUT VARCHAR2,
                                                   out_volume_default_bm OUT VARCHAR2,
                                                   out_mc_charge OUT VARCHAR2,
                                                   out_value_mc_charge OUT VARCHAR2,
                                                   out_volume_mc_charge OUT VARCHAR2,
                                                   out_routing_ind OUT VARCHAR2,
                                                   out_value_routing_Ind OUT VARCHAR2,
                                                   out_volume_routing_Ind OUT VARCHAR2,
                                                   out_deal_default_duration_days OUT NUMBER,
                                                   out_error_messages OUT SYS_REFCURSOR,
                                                  out_deal_tenantid OUT VARCHAR2 ---Added for SMO
                                                   )
IS
l_countrycd deal.control_cntry_cd%type;
l_region ww_cntry.region%type;
l_max_prod_line_cd prod_line.prod_line_cd%TYPE;
--l_bm_group_cd prod_line.bm_grp_cd%TYPE;
l_LeadBusUnit prod_line.bus_unit_cd%TYPE;
l_busgroupcd bus_unit.bus_group_cd%TYPE;
l_errors                VARCHAR2 (3000);
l_msg_type              VARCHAR2(50);
l_value_only_fl prod_line.value_only_fl%TYPE;
l_volume_only_fl prod_line.volume_only_fl%TYPE;
l_ValVolFl VARCHAR2(5);
L_default_bus_model_cd bus_model.bus_MODEL_CD%TYPE;--Changed from VARCHAR2(200);
l_Exception_cd default_bm.exception_cd%TYPE;
in_deal_creation_guid edms_deal_queue.deal_creation_guid%TYPE;--VARCHAR2(2000);
l_split_deal_fl VARCHAR2(1) :='N';
l_value_split_default_bm default_bm.value_split_bm_code%TYPE;
l_volume_split_default_bm default_bm.volume_split_bm_code%TYPE;
l_default_mc_charge mc_charge.mc_chrg%TYPE; --VARCHAR2(200);
l_busmodelcd bus_model.bus_MODEL_CD%TYPE;--VARCHAR2(20);
l_mdcp_cust_seg CUST_SEG.MDCP_CUST_SEG%TYPE;--VARCHAR2(30);
l_default_value_mc_charge mc_charge.mc_chrg%TYPE;--VARCHAR2(20);
l_default_volume_mc_charge mc_charge.mc_chrg%TYPE;--VARCHAR2(20);
l_engagement_model default_bm.ENGAGEMENT_MODEL%TYPE;--VARCHAR2(100);
l_distinct_bus_unit prod_line.bus_unit_cd%TYPE;
l_only_bu_exists_on_deal default_mc_charge.only_bu_exists_on_deal%type;  --by Harsh Shah 20-Jun-2014 to resovle the issue of wrong MC Charge
l_curr_cd deal.curr_cd%TYPE;
l_TotalDealValue deal.est_deal_value%type;
l_TotalDealValue_USD deal.est_deal_value%type;
config_count NUMBER :=0;
l_Deal_Has_CTO_Config_Fl DEFAULT_MC_CHARGE.Deal_Has_CTO_Config_Fl%TYPE;--VARCHAR2(1);
l_xmlnamespace VARCHAR2 (250);
data_not_Found VARCHAR2(1);
too_many_rows_found VARCHAR2(1);
cnt_distinct_val_vol_flags NUMBER;
value_products_fl DEFAULT_BM.VALUE_ONLY_FL%TYPE; --VARCHAR2(1);
volume_products_fl DEFAULT_BM.VOLUME_ONLY_FL%TYPE; --VARCHAR2(1);
max_product line_item.prod_gnrc_nr_tx%TYPE;
cnt_distinct_rebate_types NUMBER;
l_rebate_type DEFAULT_MC_CHARGE.REBATE_TYPE%TYPE:='*';
l_piu_Flag DEFAULT_MC_CHARGE.PIU_FLAG%TYPE:=' '; --: =VARCHAR2(1)
proceed_further_fl VARCHAR2(1):='Y';--To determine if checking MC Charge is needed or not.
data_found_at_rowid ROWID;
max_prod_gnrc_nr_tx ww_product.prod_base_nr%TYPE;
cnt_distinct_value NUMBER;
tab_rebate_type DEFAULT_MC_CHARGE.REBATE_TYPE%TYPE;--VARCHAR2(500);
l_custindustry industry.industry_nm%type;
counter NUMBER;
out_contract VARCHAR2(4);
status_message VARCHAR2(50);
temp NUMBER;
temp_var VARCHAR2(20);
l_tenantid deal.tenantid_data_cd%type;--l_tenantid deal.tenantid%type; (tenantid is replaced with tenantid_data_cd for Federal project)
out_cust_segment cust_seg.mdcp_cust_seg%TYPE;
--out_routing_ind routing_indicator.routing_indicator_cd%type;
--out_value_routing_Ind routing_indicator.routing_indicator_cd%type;
--out_volume_routing_Ind routing_indicator.routing_indicator_cd%type;

TEMP_TABLE_FAILURE EXCEPTION; -- by Harsh shah 27-Jan-2015     --for US7832 Performance Improvement

l_source_asset_id edms_source_asset.source_asset_id%TYPE; --Added for US-9408 --> Encore Retirement  

BEGIN
L_Xmlnamespace := 'xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://schemas.datacontract.org/2004/07/HP.Eclipse.Data.EDMS"' ;
--in_deal_creation_guid := 'c55e678a-7306-4f69-8c5a-3db6e2e33784';
in_deal_creation_guid := i_deal_creation_Guid;
--Get country code from given guid
l_countrycd             := getsqtxmlvalue ('/DealCreationRequest/DealHeader/CountryCD/', in_deal_creation_guid);
l_busmodelcd            := getsqtxmlvalue ('/DealCreationRequest/DealHeader/BusModelCD/',in_deal_creation_guid);
l_mdcp_cust_seg         := getsqtxmlvalue('/DealCreationRequest/DealCustomer/CustSegment/' ,in_DEAL_CREATION_GUID);
l_custindustry          := getsqtxmlvalue('/DealCreationRequest/DealCustomer/CustIndustry/' ,in_DEAL_CREATION_GUID);-- Newly added variable as per Rupesh
l_engagement_model      := getsqtxmlvalue ('/DealCreationRequest/DealHeader/EngagementModel/',in_DEAL_CREATION_GUID);
l_rtm                   := getsqtxmlvalue ('/DealCreationRequest/DealHeader/RTM/',in_DEAL_CREATION_GUID);
l_rebate_type           := NVL(getsqtxmlvalue ('/DealCreationRequest/DealHeader/RebateType/',in_DEAL_CREATION_GUID),'*');
l_curr_cd               := getsqtxmlvalue ('/DealCreationRequest/DealHeader/CurrencyCD/',in_DEAL_CREATION_GUID);
l_piu_Flag              := NVL(getsqtxmlvalue ('/DealCreationRequest/DealHeader/PIUFl/',in_DEAL_CREATION_GUID),'*' );
l_tenantid              := getsqtxmlvalue ('/DealCreationRequest/DealHeader/TenantID/',in_DEAL_CREATION_GUID ); --Added for SMO change

l_source_asset_id :=  getsqtxmlvalue ('/DealCreationRequest/DealRequestSource/ExtSourceCD/',in_DEAL_CREATION_GUID ); --Added for US-9408 --> Encore Retirement  

--New parameters added for Performance
l_Deal_Has_CTO_Config_Fl              := getsqtxmlvalue ('/DealCreationRequest/DealHeader/HasCTOConfigFl/',in_DEAL_CREATION_GUID ); --Added for SMO change
l_max_prod_line_cd             := getsqtxmlvalue ('/DealCreationRequest/DealHeader/LeadPL/',in_DEAL_CREATION_GUID ); --Added for SMO change
l_only_bu_exists_on_deal              := getsqtxmlvalue ('/DealCreationRequest/DealHeader/SingleBUFl/',in_DEAL_CREATION_GUID ); --Added for SMO change
l_TotalDealValue              := getsqtxmlvalue ('/DealCreationRequest/DealHeader/TotalDealValue/',in_DEAL_CREATION_GUID ); --Added for SMO change
l_ValVolFl              := getsqtxmlvalue ('/DealCreationRequest/DealHeader/ValVolFl/',in_DEAL_CREATION_GUID ); --Added for SMO change
l_LeadBusUnit              := getsqtxmlvalue ('/DealCreationRequest/DealHeader/LeadBusUnit/',in_DEAL_CREATION_GUID );

--Get region code from the above country code
BEGIN
    SELECT region INTO l_region FROM ww_cntry WHERE cntry_cd = l_countrycd;
  EXCEPTION
  WHEN no_data_found THEN
    l_errors  := 'Cannot Create Deal. Unable to find the country for the deal. Invalid Country : ' || l_countrycd;
    l_msg_type:='ERROR';
END;

IF l_ValVolFl='VAL' THEN
    l_value_only_fl :='Y';
    l_volume_only_fl :='N';
ELSIF l_ValVolFl='VOL' THEN
    l_volume_only_fl :='Y';
    l_value_only_fl :='N';
ELSE
    l_volume_only_fl :='N';
    l_value_only_fl :='N';
END IF;

IF l_only_bu_exists_on_deal ='Y' THEN
    l_only_bu_exists_on_deal := l_LeadBusUnit;
ELSE
    l_only_bu_exists_on_deal :='*';
END IF;

SELECT bus_group_cd INTO L_busgroupcd FROM bus_unit WHERE bus_unit_cd= l_LeadBusUnit;

  ---Added for SMO
 IF l_tenantid IS NULL THEN
 out_deal_tenantid :=GET_TENANTCD_FROM_BG (L_busgroupcd);
 ELSE
 out_deal_tenantid:=l_tenantid;
 END IF;
 l_tenantid:= out_deal_tenantid;
 dbms_output.put_line('Get_default_bm  params:');
 dbms_output.put_line('l_engagement_model  :'||l_engagement_model);
 dbms_output.put_line('l_countrycd  :'||l_countrycd);
 dbms_output.put_line('l_region   :'||l_region);
 dbms_output.put_line('L_busgroupcd  :'||L_busgroupcd);
 dbms_output.put_line('l_busunit_cd   :'||l_LeadBusUnit);
 dbms_output.put_line('max_prod_line_cd  :'||l_max_prod_line_cd);
 dbms_output.put_line('l_value_only_fl   :'||l_value_only_fl);
 dbms_output.put_line('l_volume_only_fl   :' || l_volume_only_fl);
 dbms_output.put_line('l_Deal_Has_CTO_Config_Fl   :'||l_Deal_Has_CTO_Config_Fl);
 dbms_output.put_line('l_tenantid   :'||l_tenantid);

GET_DEFAULT_BM (
   l_engagement_model
  ,l_countrycd
  ,l_region
  ,L_busgroupcd
  , l_LeadBusUnit--,l_busunit_cd
  --,max_prod_line_cd
  ,l_max_prod_line_cd
  ,l_value_only_fl
  ,l_volume_only_fl
  ,l_Deal_Has_CTO_Config_Fl
  ,l_tenantid---Added for SMO changes
  ,l_source_asset_id --Added for US-9408 --> Encore Retirement  
  ,L_default_bus_model_cd
  ,l_exception_cd
  ,l_value_split_default_bm
  ,l_volume_split_default_bm
  ,data_found_at_rowid
 ) ;

out_default_bus_model_cd := L_Default_bus_model_cd;
dbms_output.PUT_LINE('********************************');
dbms_output.PUT_LINE('Country_cd : '||l_countrycd);
dbms_output.PUT_LINE('l_region : '||l_region);
dbms_output.PUT_LINE('l_busgroupcd : '||l_busgroupcd);
dbms_output.PUT_LINE('bus_unit_cd : '||l_LeadBusUnit);
dbms_output.PUT_LINE('Prod line cd: '||l_max_prod_line_cd);
dbms_output.PUT_LINE('L value only flag: '||l_value_only_fl);
dbms_output.PUT_LINE('L volume only flag: '||l_volume_only_fl);
dbms_output.PUT_LINE('********************************');


IF (data_found_at_rowid is null) THEN
--DBMS_OUTPUT.PUT_LINE('Cannot Create Deal. Unable to derive the Business Model.');
l_errors  := 'Cannot Create Deal. Unable to derive the Business Model.';
l_msg_type:='ERROR';
INSERTERROR_OUTPUT_MESSAGES ( NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, l_errors, l_msg_type, in_deal_creation_guid, NULL, NULL,l_errors);
END IF;

--Check if the default_bus_model_cd='NA'
--Check if the default_bus_model_cd='NA' ,  L_Default_bus_model_cd is null here mean there is record with null value.
IF (l_default_bus_model_cd='NA' OR l_default_bus_model_cd IS NULL ) THEN
--DBMS_OUTPUT.PUT_LINE('Bus model code is NA');
    IF l_exception_cd='1' THEN
        l_split_deal_fl := 'Y';
        --DBMS_OUTPUT.PUT_LINE('Split deal flag is set to: '||l_split_deal_fl);
        proceed_further_fl :='Y';
    ELSIF l_exception_cd='2' THEN
        out_default_bus_model_cd := 'UNDETERMINED';
        out_mc_charge := 'UNDETERMINED';
         --out_mc_charge := '72';
        proceed_further_fl :='N';
        l_split_deal_fl :='N';
    ELSE
        l_split_deal_fl := 'N';
        proceed_further_fl :='Y';
    END IF;

END IF;

IF l_split_deal_fl !='Y' THEN
    l_value_split_default_bm := null ;
    l_volume_split_default_bm := null;
END IF;

out_split_deal_fl := l_split_deal_fl;
out_value_default_bm := l_value_split_default_bm;
out_volume_default_bm := l_volume_split_default_bm;

--dbms_output.PUT_LINE('Status of Proceed further flag is: '||proceed_further_fl);

IF (proceed_further_fl<>'N') THEN

--Get the total value of the deal in USD, if the currency code is different.
IF (l_curr_cd                <>'UD') THEN
    l_TotalDealValue_USD:=convert_to_us_currency (l_curr_cd,'*', l_TotalDealValue,'ACCT',l_tenantid); --added tenantid for SMO changes
  ELSE
    --if it is already in USD then no conversion is required. So assigning the same value
    l_TotalDealValue_USD:=l_TotalDealValue;
END IF;
dbms_output.PUT_LINE('l_deal_value_greater_than is in USD: '||l_TotalDealValue_USD);
dbms_output.PUT_lINE('l_only_bu_exists_on_deal is: '||l_only_bu_exists_on_deal);
dbms_output.PUT_LINE('l_rebate_type: '||l_rebate_type);
END IF;

out_cust_segment := l_mdcp_cust_seg;

--dbms_output.PUT_LINE('Cust segment from proc: '||out_cust_segment);

 --Derive the Default MC Charge:
--l_countrycd := actual_countrycd;
--l_region := actual_region;
--l_busgroupcd := actual_busgroupcd;
dbms_output.PUT_LINE('Values used to check MC Charge: ');
dbms_output.PUT_LINE('>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>');
dbms_output.PUT_LINE('l_countrycd : '||l_countrycd);
dbms_output.PUT_LINE('l_region: '||l_region);
dbms_output.PUT_LINE('l_busgroupcd: '||l_busgroupcd);
dbms_output.PUT_LINE('l_Deal_Has_CTO_Config_Fl: '||l_Deal_Has_CTO_Config_Fl);
dbms_output.PUT_LINE('l_only_bu_exists_on_deal: '||l_only_bu_exists_on_deal);
dbms_output.PUT_LINE('l_mdcp_cust_seg: '||out_cust_segment);
dbms_output.PUT_LINE('l_deal_value_greater_than_USD: '||l_TotalDealValue_USD);
dbms_output.PUT_LINE('l_piu_Flag: '||l_piu_Flag);
dbms_output.PUT_LINE('l_rebate_type: '||l_rebate_type);
dbms_output.PUT_LINE('l_default_bus_model_cd: '||l_default_bus_model_cd);
dbms_output.PUT_LINE('Engagement model: '||l_engagement_model);
dbms_output.PUT_LINE('l_LeadBusUnit: '||l_LeadBusUnit);
dbms_output.PUT_LINE('>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>');

--Check for the exact match of MC Charge:

GET_DEFAULT_MC_CODE (
   l_engagement_model
  ,l_countrycd
  ,l_region
  ,L_default_bus_model_cd
  ,l_TotalDealValue_USD/1000
  ,out_cust_segment
  ,l_rebate_type
  ,L_busgroupcd
  ,l_piu_Flag
  ,l_Deal_Has_CTO_Config_Fl
 ,l_only_bu_exists_on_deal
 ,l_LeadBusUnit-- New parameter added by Lakshmi for CR:180261- To consider Lead Bus Unit while deriving Default MC Charge.
 ,l_tenantid----Added for SMO Changes
 ,l_source_asset_id  --Added for US-9408 --> Encore Retirement
  ,l_default_mc_charge
) ;

dbms_output.PUT_LINE('Default MC Charge Derived is: '||l_default_mc_charge);

out_mc_charge :=l_default_mc_charge;

--Get the value mc charge if there is bm code for value deal
IF l_value_split_default_bm IS NOT NULL THEN
BEGIN
    GET_DEFAULT_MC_CODE (
       l_engagement_model
      ,l_countrycd
      ,l_region
      ,l_value_split_default_bm
      ,l_TotalDealValue_USD/1000
      ,out_cust_segment
      ,l_rebate_type
      ,L_busgroupcd
      ,l_piu_Flag
      ,l_Deal_Has_CTO_Config_Fl
      ,l_only_bu_exists_on_deal
      ,l_LeadBusUnit -- New parameter added by Lakshmi for CR:180261- To consider Lead Bus Unit while deriving Default MC Charge.
      ,l_tenantid ---Added for SMO changes
      , l_source_asset_id  --Added for US-9408 --> Encore Retirement
      ,l_default_value_mc_charge
    ) ;

END;
END IF;

--Get the volume mc charge if there is bm code for volume deal
IF l_volume_split_default_bm IS NOT NULL THEN
BEGIN
    GET_DEFAULT_MC_CODE (
       l_engagement_model
      ,l_countrycd
      ,l_region
      ,l_volume_split_default_bm
      ,l_TotalDealValue_USD/1000
      ,out_cust_segment
      ,l_rebate_type
      ,L_busgroupcd
      ,l_piu_Flag
      ,l_Deal_Has_CTO_Config_Fl
      ,l_only_bu_exists_on_deal
      ,l_LeadBusUnit -- New parameter added by Lakshmi for CR:180261- To consider Lead Bus Unit while deriving Default MC Charge.
      ,l_tenantid ---Added for SMO changes
      ,l_source_asset_id  --Added for US-9408 --> Encore Retirement
      ,l_default_volume_mc_charge
    ) ;
END;
END IF;


out_value_mc_charge := l_default_value_mc_charge;
out_volume_mc_charge := l_default_volume_mc_charge;

 --New logic to derive Default Routing Indicator:
 DBMS_OUTPUT.PUT_LINE('Value passed to Get_Default_RI are: ');
 DBMS_OUTPUT.PUT_LINE('l_engagement_model: '||l_engagement_model);
 DBMS_OUTPUT.PUT_LINE('l_region: '||l_region);
 DBMS_OUTPUT.PUT_LINE('l_countrycd: '||l_countrycd);
 DBMS_OUTPUT.PUT_LINE('out_default_bus_model_cd: '||out_default_bus_model_cd);
 DBMS_OUTPUT.PUT_LINE('out_cust_segment: '||out_cust_segment);
 DBMS_OUTPUT.PUT_LINE('l_value_split_default_bm: '||l_value_split_default_bm);

--PKGEDMSDEALCREATIONV2_R13_PT.GET_DEFAULT_ROUTING_INDICATOR (
GET_DEFAULT_ROUTING_INDICATOR (
   l_engagement_model
  ,l_region
  ,l_countrycd
  ,out_default_bus_model_cd
  ,out_cust_segment
  ,l_tenantid  ---Added for SMO Changes
  , out_routing_ind
 ) ;

DBMS_OUTPUT.PUT_LINE('***************** Value Routing Indicator Derivation***************************');
 --Get default routing indicator for value deal:
IF l_value_split_default_bm IS NOT NULL THEN
BEGIN
--  PKGEDMSDEALCREATIONV2_R13_PT.GET_DEFAULT_ROUTING_INDICATOR (
GET_DEFAULT_ROUTING_INDICATOR(
   l_engagement_model
  ,l_region
  ,l_countrycd
  , l_value_split_default_bm
  ,out_cust_segment
  ,l_tenantid ---Added for SMO Changes
  , out_value_routing_Ind
 ) ;
END;
DBMS_OUTPUT.PUT_LINE('***************** Value Routing Indicator Deried: '||out_value_routing_Ind);
END IF;
--Get default routing indicator for volume deal:
IF l_volume_split_default_bm IS NOT NULL THEN
BEGIN
  --PKGEDMSDEALCREATIONV2_R13_PT.GET_DEFAULT_ROUTING_INDICATOR (
  GET_DEFAULT_ROUTING_INDICATOR (
   l_engagement_model
  ,l_region
  ,l_countrycd
  ,  l_volume_split_default_bm
  ,out_cust_segment
  ,l_tenantid  ----Added for SMO changes
  ,  Out_Volume_Routing_Ind
 ) ;
END;
DBMS_OUTPUT.PUT_LINE('***************** Volume Routing Indicator Deried: '||Out_Volume_Routing_Ind);
END IF;

--Temporary change to create only direct deals when RTM = Direct
/* IF (UPPER(l_rtm)='DIRECT') THEN
out_default_bus_model_cd :='VD';
out_value_default_bm :='VD';
out_volume_default_bm :='VD';
END IF; */

/* select asap_indicator_cd INTO out_asap_indicator  from ASAP_INDICATOR where CNTRY_CD=l_countrycd and ACTIVE_FL='Y'
AND ROWNUM<2;
 */
-- out_asap_indicator := NULL;

  --SELECT COUNT(*) INTO temp FROM gt_max_pl WHERE assoc_pl_cd IS NULL;
--DBMS_OUTPUT.PUT_LINE('Count of Null assoc_pl_cd: 5 '||temp);

         IF l_split_deal_fl='Y' THEN
        split_value_volume_products (IN_deal_creation_guid);
        OPEN out_error_messages FOR SELECT NULL FROM DUAL;
    ELSE
        OPEN out_error_messages FOR SELECT NULL FROM DUAL;
            END IF;

BEGIN
    SELECT deal_default_duration_days INTO out_deal_default_duration_days FROM bus_model
    WHERE bus_model_cd= out_default_bus_model_cd
    AND country_cd=l_countrycd
    AND tenantid = out_deal_tenantid ---Added for SMO Changes
    AND active_fl='Y';
 EXCEPTION
  WHEN OTHERS THEN
    l_errors            := ' Deal end date could not be determined for the given bus model and country code'||sqlerrm;
    l_msg_type          :='ERROR';
END;

COMMIT;

COMMIT;
EXCEPTION
WHEN TEMP_TABLE_FAILURE THEN
    l_errors := 'Error occured while getting default values, line nr: '||DBMS_UTILITY.FORMAT_ERROR_BACKTRACE()||' Error message: '||sqlerrm;
    log_default_value_errors ( i_deal_creation_Guid, l_errors);

WHEN OTHERS THEN
l_errors := 'Error occured while getting default values, line nr: '||DBMS_UTILITY.FORMAT_ERROR_BACKTRACE()||' Error message: '||sqlerrm;
--Added the below for CR:255840 to send the error back to BMI (Error message: ORA-20003: An error was encountered while Converting Currency to US Currency")
l_msg_type := 'ERROR';
INSERTERROR_OUTPUT_MESSAGES ( NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, l_errors, l_msg_type, in_deal_creation_guid, NULL, NULL,l_errors);

log_default_value_errors ( i_deal_creation_Guid, l_errors);

END get_default_values_2;


END PKGEDMSDEALCREATIONV2_R14;

/